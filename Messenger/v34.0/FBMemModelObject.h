/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:15 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBModelObjectProtocol.h>
#import <Messenger/NSCoding.h>
#import <Messenger/NSCopying.h>

@class NSString;

@interface FBMemModelObject : NSObject <FBModelObjectProtocol, NSCoding, NSCopying> {

	unique_ptr<facebook::mobile::FBMemModel::detail::IVarArray, std::__1::default_delete<facebook::mobile::FBMemModel::detail::IVarArray> >* _ivars;
	unique_ptr<facebook::mobile::FBMemModel::detail::RecordAndSnapshot, std::__1::default_delete<facebook::mobile::FBMemModel::detail::RecordAndSnapshot> >* _ras;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)newFromRecord:(const shared_ptr<const facebook::mobile::graphstore::Record>*)arg1 source:(const shared_ptr<const facebook::mobile::graphstore::NodeSource>*)arg2 ;
+(Class)correspondingBuilderClass;
+(id)primaryKeyKeyPath;
+(id)graphQLTypeName;
+(const ClassMetadata*)classMetadata;
+(BOOL)resolveInstanceMethod:(SEL)arg1 ;
+(id)builder;
-(void)accept:(FBMemModelVisitor*)arg1 comingFromParentProperty:(FBMemModelPropertyHandle)arg2 atIndex:(int)arg3 graphQLResponseKey:(const char*)arg4 ;
-(id)initWithRecord:(const shared_ptr<const facebook::mobile::graphstore::Record>*)arg1 source:(const shared_ptr<const facebook::mobile::graphstore::NodeSource>*)arg2 cache:(MemModelObjectFieldCache*)arg3 ;
-(BOOL)isInstanceOfConcreteGraphQLType:(id)arg1 ;
-(BOOL)isInstanceOfInterfaceOrUnionGraphQLType:(id)arg1 ;
-(id)updateBuilder;
-(id)copyBuilder;
-(vector<const FBConsistentFieldDescription *, std::__1::allocator<const FBConsistentFieldDescription *> >*)getFieldsToUpdate:(id)arg1 queriedFieldSets:(const vector<const FBGraphQLField *, std::__1::allocator<const FBGraphQLField *> >*)arg2 consistencyConfig:(const FBConsistencyConfig*)arg3 updateReasons:(vector<FBMemModelUpdateReason, std::__1::allocator<FBMemModelUpdateReason> >Ref)arg4 ;
-(void)applyUpdate:(id)arg1 forDescription:(const FBConsistentFieldDescription*)arg2 ;
-(BOOL)isEqualToMemModelObject:(id)arg1 ;
-(BOOL)usingGraphStore;
-(IVarArray*)ivars;
-(RecordAndSnapshot*)ras;
-(id)initExperimentWithCoder:(id)arg1 ;
-(id)_copy;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(const shared_ptr<const facebook::mobile::graphstore::NodeSource>*)graph;
-(shared_ptr<const facebook::mobile::graphstore::Record>*)record;
-(void)accept:(FBMemModelVisitor*)arg1 ;
@end

