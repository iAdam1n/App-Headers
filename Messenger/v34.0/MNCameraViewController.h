/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:52 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIViewController.h>
#import <Messenger/FBCaptureManagerDelegate.h>
#import <Messenger/FBCameraViewDelegate.h>
#import <Messenger/MNCameraPreviewViewControllerDelegate.h>
#import <Messenger/MNPermissionsViewControllerDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <Messenger/FBClassProvidable.h>
#import <Messenger/FBExpanding.h>

@protocol MNModalPresentation, MNApplicationRootViewControllerGetting, MNCameraViewControllerDelegate;
@class FBCaptureManager, MNSoundController, NSTimer, FBUserSession, MNVideoAnalyticsLogger, MNVideoRecordEventListenerAnnouncer, MNSelfieCamLoadPerfLogger, MNSelfieCamLoadEventListenerAnnouncer, MNSelfieCamEnhancementsExperimentContext, MNSelfieCamPhotoEditingExperimentContext, AVURLAsset, UIImage, MNUserSettings, MNCameraPermissionsLogger, MNPermissionsViewController, MNPermissionsWrapperView, _MNCameraViewControllerPhotoCapture, _MNCameraViewControllerVideoCapture, MNCameraPreviewViewController, FBCameraRollWriter, FBCameraView, NSString;

@interface MNCameraViewController : UIViewController <FBCaptureManagerDelegate, FBCameraViewDelegate, MNCameraPreviewViewControllerDelegate, MNPermissionsViewControllerDelegate, UIAlertViewDelegate, FBClassProvidable, FBExpanding> {

	FBCaptureManager* _captureManager;
	id<MNModalPresentation> _navigationCoordinator;
	id<MNApplicationRootViewControllerGetting> _applicationHandler;
	MNSoundController* _soundController;
	NSTimer* _startRecordingTimer;
	BOOL _isObservingOrientationNotifications;
	FBUserSession* _userSession;
	BOOL _reachedMaxRecordingLimit;
	MNVideoAnalyticsLogger* _videoAnalyticsLogger;
	MNVideoRecordEventListenerAnnouncer* _videoRecordEventAnnouncer;
	MNSelfieCamLoadPerfLogger* _selfieCamLoadPerfLogger;
	MNSelfieCamLoadEventListenerAnnouncer* _selfieCamLoadEventAnnouncer;
	MNSelfieCamEnhancementsExperimentContext* _selfieCamExperimentContext;
	MNSelfieCamPhotoEditingExperimentContext* _selfieCamPhotoEditingExperimentContext;
	NSTimer* _videoTimer;
	AVURLAsset* _maxLengthVideoAsset;
	UIImage* _maxLengthVideoThumbnail;
	MNUserSettings* _userSettings;
	BOOL _sendIsWaitingOnAssetWrite;
	unsigned long long _appearanceState;
	MNCameraPermissionsLogger* _permissionsLogger;
	MNPermissionsViewController* _permissionsViewController;
	MNPermissionsWrapperView* _permissionsWrapperView;
	_MNCameraViewControllerPhotoCapture* _photoCapture;
	_MNCameraViewControllerVideoCapture* _videoCapture;
	MNCameraPreviewViewController* _previewViewController;
	FBCameraRollWriter* _cameraRollWriter;
	long long _permissionCheckStatus;
	long long _flashMode;
	long long _capturePosition;
	id<MNCameraViewControllerDelegate> _delegate;
	FBCameraView* _cameraView;

}

@property (assign,nonatomic) long long capturePosition;                                       //@synthesize capturePosition=_capturePosition - In the implementation block
@property (assign,nonatomic,__weak) id<MNCameraViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) FBCameraView * cameraView;                                       //@synthesize cameraView=_cameraView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)captureManagerPreviewDidLoad:(id)arg1 ;
-(void)captureManagerSessionDidStart:(id)arg1 ;
-(void)captureManager:(id)arg1 didChangeCapturePositionTo:(long long)arg2 ;
-(CGSize)captureManagerVideoInputSize:(id)arg1 ;
-(id)addFilterToPhoto:(id)arg1 ;
-(long long)capturePosition;
-(void)captureManager:(id)arg1 didCaptureImage:(id)arg2 metadata:(id)arg3 cameraPosition:(long long)arg4 ;
-(void)captureManagerDidStartCaptureVideo:(id)arg1 ;
-(void)_completeVideoCapture:(id)arg1 ;
-(void)captureManager:(id)arg1 didCaptureVideo:(id)arg2 thumbnail:(id)arg3 cameraPosition:(long long)arg4 ;
-(void)captureManagerDidFailToCaptureVideo:(id)arg1 ;
-(void)setCapturePosition:(long long)arg1 ;
-(void)cameraPreviewViewDidPressSendButton:(id)arg1 ;
-(void)cameraPreviewViewDidPressRetakeButton:(id)arg1 ;
-(void)setAllowTapToEnhance:(BOOL)arg1 ;
-(void)_handleOrientationDidChange:(id)arg1 ;
-(void)_updateViewForCurrentOrientation;
-(void)_reachedMaxVideoLength;
-(void)_transformPreviewLayerForStatusBarOrientation;
-(CGSize)_videoInputSizeInPoints;
-(void)_setupTorch:(long long)arg1 ;
-(void)cameraViewDidSelectSwitchCamera:(id)arg1 ;
-(void)cameraViewDidSelectCaptureImage:(id)arg1 ;
-(void)cameraViewDidStartRecording:(id)arg1 ;
-(void)cameraViewDidStopRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidCancelRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidPressCloseButton:(id)arg1 ;
-(void)cameraViewDidPressFullscreenButton:(id)arg1 ;
-(void)cameraView:(id)arg1 didTapAtPoint:(CGPoint)arg2 ;
-(void)cameraViewDidUpdateFlashMode:(long long)arg1 ;
-(void)setExpansionProgress:(double)arg1 ;
-(BOOL)shouldAllowInteractiveExpanding;
-(BOOL)_defaultToFullScreen;
-(BOOL)_shouldShowPreviewStep;
-(BOOL)_shouldAllowDrawAndTextPhotoEditing;
-(void)_updateStatusBarStyle;
-(void)permissionsViewControllerDidPressDismissButton:(id)arg1 ;
-(void)_initPermissionsViewControllerIfNecessary;
-(id)initWithSoundController:(id)arg1 captureManager:(id)arg2 userSettings:(id)arg3 videoAnalyticsLogger:(id)arg4 selfieCamLoadPerfLogger:(id)arg5 userSession:(id)arg6 navigationCoordinator:(id)arg7 applicationHandler:(id)arg8 ;
-(void)_selfieCamPhotoEditingExperimentLogExposure;
-(void)_startCaptureManagerSession;
-(void)setCameraViewUsesFullscreenLayout:(BOOL)arg1 ;
-(void)setCameraViewFullScreenTransitionProgress:(double)arg1 ;
-(void)_startObservingIfNeeded;
-(void)_selfieCamExperimentLogExposure;
-(void)_stopObservingIfNeeded;
-(void)_enterCaptureMode;
-(void)_showSaveToCameraRollAlertView;
-(void)_completeCapture;
-(void)_captureImage;
-(void)_updateCaptureInterfaceRotationAngle;
-(void)_previewVideoCapture;
-(void)_sendMaxLengthVideoToDelegate:(SCD_Struct_MN579)arg1 ;
-(BOOL)_shouldShowSelfieCamInstructions;
-(void)_initSelfieCamExperimentContextIfNecessary;
-(void)_previewPhotoCapture;
-(void)_completePhotoCapture:(id)arg1 ;
-(void)_updateSelfieCamInstructionsVisibility;
-(void)_loadPreviewLayerCameraOptions:(id)arg1 ;
-(void)_updatePreviewViewControllerIsFullScreen:(BOOL)arg1 ;
-(double)_calculateInterfaceRotationAngle;
-(BOOL)_isPermissionViewDismissible;
-(void)_initSelfieCamPhotoEditingExperimentContextIfNecessary;
-(void)setCameraPreviewViewButtonsHidden:(BOOL)arg1 ;
-(BOOL)isPermissionWrapperDeniedViewShowing;
-(CGSize)imageOverlaySize;
-(void)_stopRecording;
-(void)_startRecording;
-(void)setDelegate:(id<MNCameraViewControllerDelegate>)arg1 ;
-(id<MNCameraViewControllerDelegate>)delegate;
-(long long)preferredStatusBarStyle;
-(BOOL)shouldAutorotate;
-(void)reset;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2 ;
-(FBCameraView *)cameraView;
-(void)setCameraView:(FBCameraView *)arg1 ;
@end

