/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:26 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@class CKComponent, UIView;

@interface CKComponentController : NSObject {

	unsigned long long _state;
	BOOL _updatingComponent;
	BOOL _performedInitialMount;
	CKComponent* _previousComponent;
	vector<CKPendingComponentAnimation, std::__1::allocator<CKPendingComponentAnimation> >* _pendingAnimationsOnInitialMount;
	vector<CKAppliedComponentAnimation, std::__1::allocator<CKAppliedComponentAnimation> >* _appliedAnimationsOnInitialMount;
	vector<CKPendingComponentAnimation, std::__1::allocator<CKPendingComponentAnimation> >* _pendingAnimations;
	vector<CKAppliedComponentAnimation, std::__1::allocator<CKAppliedComponentAnimation> >* _appliedAnimations;
	CKComponent* _component;
	UIView* _view;

}

@property (nonatomic,__weak,readonly) CKComponent * component;              //@synthesize component=_component - In the implementation block
@property (nonatomic,readonly) UIView * view;                               //@synthesize view=_view - In the implementation block
-(void)componentTreeWillAppear;
-(void)componentTreeDidDisappear;
-(void)willUpdateComponent;
-(void)willMount;
-(void)willRemount;
-(void)didMount;
-(void)didRemount;
-(void)didUpdateComponent;
-(void)willUnmount;
-(void)_cleanupAppliedAnimations;
-(void)didUnmount;
-(void)componentWillRelinquishView;
-(void)_relinquishView;
-(void)componentDidAcquireView;
-(void)componentWillMount:(id)arg1 ;
-(void)componentDidMount:(id)arg1 ;
-(void)componentWillUnmount:(id)arg1 ;
-(void)componentDidUnmount:(id)arg1 ;
-(void)component:(id)arg1 willRelinquishView:(id)arg2 ;
-(void)component:(id)arg1 didAcquireView:(id)arg2 ;
-(UIView *)view;
-(id)nextResponder;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(id)targetForAction:(SEL)arg1 withSender:(id)arg2 ;
-(CKComponent *)component;
@end

