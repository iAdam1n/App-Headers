/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:39 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/FBVersionedFileConfigurationListening.h>
#import <Messenger/FBDiscardableStore.h>

@protocol FBMessagingStoreDatabaseLifetimeEventListening, OS_dispatch_queue;
@class FBVersionedFileInfo, FBUserSession, EGODatabase, NSDictionary, FBVersionedEGODatabaseFileConfigurer, FBVersionedFileHandler, NSString, FBMThreadNameFormatter, NSObject, FBAnalytics, UIApplication;

@interface FBMessagingStore : NSObject <FBVersionedFileConfigurationListening, FBDiscardableStore> {

	FBVersionedFileInfo* _fileInfo;
	FBUserSession* _userSession;
	EGODatabase* _db;
	NSDictionary* _dbStatements;
	id<FBMessagingStoreDatabaseLifetimeEventListening> _listener;
	FBVersionedEGODatabaseFileConfigurer* _databaseConfiguerer;
	FBVersionedFileHandler* _fileHandler;
	NSString* _currentUserId;
	FBMThreadNameFormatter* _legacyThreadNameFormatter;
	NSObject*<OS_dispatch_queue> _backgroundQueue;
	FBAnalytics* _analytics;
	UIApplication* _application;
	BOOL _shouldPersistLegacyThreadProperties;
	BOOL _shouldUseMessengerSharedDiskStore;
	BOOL _shouldSupportFileProtection;
	BOOL _shouldOwnSharedDiskStore;
	NSString* _appGroupIdenitfier;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)discardStore;
-(void)didFailToOpenFileWithError:(id)arg1 ;
-(void)didProvisionFileSchema;
-(void)didDiscardVersionedFile;
-(void)willDiscardVersionedContents;
-(void)_setupDiskStoreFileAndCurrentUserId;
-(void)_createDBStatements;
-(void)_executeBlockOnBackgroundQueue:(/*^block*/id)arg1 storeClosedBlock:(/*^block*/id)arg2 ;
-(id)_jobsToPersistMessagesOfThread:(id)arg1 ;
-(id)_queryCommandsForFullPersistForThread:(id)arg1 ;
-(id)_queryCommandsToPersistFetchedThreadKeys:(id)arg1 pinnedGroups:(id)arg2 appState:(id)arg3 ;
-(id)_persistOperationsForThreads:(id)arg1 fetchedThreadKeys:(id)arg2 oldestInboxThreadTimestamp:(unsigned long long)arg3 pinnedThreads:(id)arg4 pinnedGroups:(id)arg5 appState:(id)arg6 ;
-(void)_runPersistOperation:(id)arg1 withCompleteBlock:(/*^block*/id)arg2 ;
-(id)parameterListForFetchedThreadKeys:(id)arg1 ;
-(id)parameterListsForPinnedGroupInfos:(id)arg1 ;
-(id)parameterListForAppState:(id)arg1 ;
-(id)_pruneThreadsOperation;
-(id)_restoreThreadsOperation;
-(id)_loadThreadAndMessagesByThreadRestoreRequest:(id)arg1 ;
-(id)_loadMessagesFromRequest:(id)arg1 ;
-(id)initWithFileHandler:(id)arg1 storeDatabaseListener:(id)arg2 analytics:(id)arg3 session:(id)arg4 legacyThreadNameFormatter:(id)arg5 shouldUseMessengerSharedDiskStore:(BOOL)arg6 shouldOwnSharedDiskStore:(BOOL)arg7 supportFileProtection:(BOOL)arg8 shouldPersistLegacyThreadProperties:(BOOL)arg9 appGroupIdentifier:(id)arg10 application:(id)arg11 ;
-(id)analyticsStore;
-(void)DEPRECATED_persistThreads:(id)arg1 fetchedThreadKeys:(id)arg2 oldestInboxThreadTimestamp:(unsigned long long)arg3 pinnedThreads:(id)arg4 pinnedGroups:(id)arg5 appState:(id)arg6 completeBlock:(/*^block*/id)arg7 ;
-(void)performPartialAppBackgroundPersistWithFetchedThreadKeys:(id)arg1 pinnedGroups:(id)arg2 appState:(id)arg3 completeBlock:(/*^block*/id)arg4 ;
-(void)pruneThreads:(/*^block*/id)arg1 ;
-(void)restoreThreads:(/*^block*/id)arg1 ;
-(void)loadThreadsWithRestoreRequests:(id)arg1 completeBlock:(/*^block*/id)arg2 ;
-(void)loadMessagesForThreadStoreRequest:(id)arg1 completionBlock:(/*^block*/id)arg2 callbackQueue:(id)arg3 ;
-(void)deleteContentWithCompleteBlock:(/*^block*/id)arg1 ;
-(void)runIncrementalPersistenceJobs:(id)arg1 completeBlock:(/*^block*/id)arg2 ;
-(void)saveCustomState:(id)arg1 forBlobType:(unsigned long long)arg2 completionBlock:(/*^block*/id)arg3 callbackQueue:(id)arg4 ;
-(void)loadCustomStateForBlobType:(unsigned long long)arg1 completionBlock:(/*^block*/id)arg2 callbackQueue:(id)arg3 ;
-(id)_debugThreadIdStringFromResult:(id)arg1 ;
-(void)dealloc;
-(id)open;
-(void)_closeDB;
-(BOOL)isOpen;
-(id)storeIdentifier;
@end

