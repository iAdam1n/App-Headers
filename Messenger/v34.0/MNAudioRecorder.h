/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:38 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/MNAudioRecordingDelegate.h>
#import <Messenger/FBAudioSessionManagerClient.h>
#import <Messenger/FBSessionClassProvidable.h>

@protocol OS_dispatch_queue, MNAudioRecorderDelegate, MNAudioRecording;
@class NSObject, MNAudioRecordingDeleter, MNAudioRecorderFactory, NSTimer, NSString;

@interface MNAudioRecorder : NSObject <MNAudioRecordingDelegate, FBAudioSessionManagerClient, FBSessionClassProvidable> {

	NSObject*<OS_dispatch_queue> _queue;
	MNAudioRecordingDeleter* _deleter;
	MNAudioRecorderFactory* _recorderFactory;
	BOOL _stopScheduled;
	double _recordDuration;
	id<MNAudioRecorderDelegate> _delegate;
	id<MNAudioRecording> _recorder;
	NSTimer* _recordTimer;
	long long _status;

}

@property (nonatomic,readonly) float volume; 
@property (nonatomic,readonly) double recordDuration;                                  //@synthesize recordDuration=_recordDuration - In the implementation block
@property (assign,nonatomic) id<MNAudioRecorderDelegate> delegate;                     //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) id<MNAudioRecording> recorder;                            //@synthesize recorder=_recorder - In the implementation block
@property (nonatomic,retain) NSTimer * recordTimer;                                    //@synthesize recordTimer=_recordTimer - In the implementation block
@property (assign,nonatomic) BOOL stopScheduled;                                       //@synthesize stopScheduled=_stopScheduled - In the implementation block
@property (assign,nonatomic) long long status;                                         //@synthesize status=_status - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long audioDirection; 
@property (nonatomic,readonly) unsigned long long outputCoordinationMode; 
@property (nonatomic,readonly) unsigned long long outputOptions; 
@property (nonatomic,readonly) unsigned long long inputOptions; 
@property (nonatomic,readonly) unsigned long long clientPriority; 
-(id)initWithProviderMapData:(id)arg1 ;
-(unsigned long long)audioDirection;
-(unsigned long long)outputOptions;
-(unsigned long long)outputCoordinationMode;
-(void)finishInterruptionAndResume:(BOOL)arg1 ;
-(void)audioRecorderEncodeErrorDidOccur:(id)arg1 error:(id)arg2 ;
-(id)initWithRecordingDeleter:(id)arg1 userSession:(id)arg2 ;
-(void)_invalidateRecordTimer;
-(void)_doRecordWithPermission;
-(void)_onUserDeniedAudioPermission;
-(void)_stopRecordWithReason:(long long)arg1 ;
-(void)_releaseRecorderIfNeeded;
-(void)_beginRecording;
-(void)onTimerCallback:(id)arg1 ;
-(void)setRecordTimer:(NSTimer *)arg1 ;
-(void)cancelRecord;
-(void)startRecord;
-(void)stopRecord;
-(double)recordDuration;
-(NSTimer *)recordTimer;
-(BOOL)stopScheduled;
-(void)setStopScheduled:(BOOL)arg1 ;
-(BOOL)isRecording;
-(void)audioRecorderDidFinishRecording:(id)arg1 successfully:(BOOL)arg2 ;
-(void)beginInterruption;
-(void)dealloc;
-(void)setDelegate:(id<MNAudioRecorderDelegate>)arg1 ;
-(id<MNAudioRecorderDelegate>)delegate;
-(void)setRecorder:(id<MNAudioRecording>)arg1 ;
-(id<MNAudioRecording>)recorder;
-(void)_reset;
-(long long)status;
-(void)setStatus:(long long)arg1 ;
-(float)volume;
@end

