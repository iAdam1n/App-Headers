/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:39 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/FBGraphMessageSendListening.h>
#import <Messenger/MNMessageSenderExtensionDelegate.h>
#import <Messenger/MNMessageSendStateMachineSendRequester.h>
#import <Messenger/MNMessageSyncEventListening.h>

@protocol MNMessageSendMQTTAdapting, MNMessageSendAttachmentProgressListening, OS_dispatch_queue;
@class FBGraphMessageSendRequestRunner, FBMessageAttachmentPreparer, MNMQTTMessageBatchCreator, MNMessageSenderExtensionController, FBReachabilityAnnouncer, NSObject, NSMutableDictionary, NSString;

@interface MNMessageSendRequestCoordinator : NSObject <FBGraphMessageSendListening, MNMessageSenderExtensionDelegate, MNMessageSendStateMachineSendRequester, MNMessageSyncEventListening> {

	FBGraphMessageSendRequestRunner* _graphSendRequestRunner;
	FBMessageAttachmentPreparer* _messageAttachmentPreparer;
	id<MNMessageSendMQTTAdapting> _mqttSender;
	MNMQTTMessageBatchCreator* _mqttMessageBatchCreator;
	MNMessageSenderExtensionController* _extensionSender;
	FBReachabilityAnnouncer* _reachabilityAnnouncer;
	id<MNMessageSendAttachmentProgressListening> _attachmentProgressListener;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableDictionary* _stateMachinesByOfflineThreadingId;
	NSMutableDictionary* _graphSendRequestsByOfflineThreadingId;
	NSMutableDictionary* _attachmentPrepareOperationsByOfflineThreadingId;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)graphMessageSendRequestRunnerWillSendMessage:(id)arg1 ;
-(void)graphMessageSendRequestRunnerDidUpdateProgressForMessage:(id)arg1 didUpdateUploadProgress:(double)arg2 ;
-(void)graphMessageSendRequestRunnerDidSendMessage:(id)arg1 messageId:(id)arg2 ;
-(void)graphMessageSendRequestRunnerDidCancelSendingMessage:(id)arg1 ;
-(void)graphMessageSendRequestRunnerCouldNotSendMessage:(id)arg1 error:(id)arg2 ;
-(void)graphMessageSendRequestRunnerWillRetrySendingMessage:(id)arg1 ;
-(void)prepareAttachments:(id)arg1 forMessage:(id)arg2 ;
-(void)sendMessageViaExtension:(id)arg1 ;
-(void)sendMessageViaMQTT:(id)arg1 ;
-(void)sendMessageBatchViaMQTTBeginningWithMessage:(id)arg1 maxBatchSize:(unsigned long long)arg2 ;
-(void)sendMessageViaGraph:(id)arg1 ;
-(void)retryMessage:(id)arg1 ;
-(id)_sendingContextForMessage:(id)arg1 shouldTreatAsBatchHeadIfPossible:(BOOL)arg2 ;
-(id)_stateMachineFromMessage:(id)arg1 ;
-(void)_mqttMessageDidPublish:(id)arg1 ;
-(void)_mqttMessage:(id)arg1 didSucceedWithMessageId:(id)arg2 ;
-(void)_mqttMessage:(id)arg1 didFailWithError:(id)arg2 shouldTreatAsBatchHeadIfPossible:(BOOL)arg3 ;
-(void)_mqttMessageBatchDidPublish:(id)arg1 ;
-(void)_mqttMessageBatchDidFinish:(id)arg1 results:(id)arg2 ;
-(void)_message:(id)arg1 attachment:(id)arg2 preparationProgressDidChange:(double)arg3 ;
-(void)_messageAttachmentPreparationDidComplete:(id)arg1 ;
-(void)_messageAttachmentPreparationDidFail:(id)arg1 error:(id)arg2 ;
-(void)extension:(id)arg1 didSendMessage:(id)arg2 messageId:(id)arg3 ;
-(void)extension:(id)arg1 didFailToSendMessage:(id)arg2 error:(id)arg3 ;
-(void)messageDidSyncViaSyncProtocol:(id)arg1 messageId:(id)arg2 ;
-(void)messageDidSyncViaThreadFetch:(id)arg1 messageId:(id)arg2 ;
-(id)initWithGraphRequestRunner:(id)arg1 attachmentPreparer:(id)arg2 mqttSender:(id)arg3 mqttMessageBatchCreator:(id)arg4 extensionSender:(id)arg5 reachabilityAnnouncer:(id)arg6 attachmentProgressListener:(id)arg7 queue:(id)arg8 ;
-(void)prepareSendingMessageWithStateMachine:(id)arg1 ;
-(void)prepareSendingMessageWithOfflineThreadingId:(id)arg1 ;
-(void)beginSendingMessageWithOfflineThreadingId:(id)arg1 ;
-(void)finishSendingMessageWithOfflineThreadingId:(id)arg1 ;
-(void)cancelSendingMessageWithOfflineThreadingId:(id)arg1 ;
-(void)failSendingMessageWithOfflineThreadingId:(id)arg1 ;
-(void)cancelMessage:(id)arg1 ;
@end

