/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:46 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/FBSessionClassProvidable.h>
#import <Messenger/FBMConfigurable.h>
#import <Messenger/FBMThreadMarkRunning.h>

@protocol MNAuthenticationManager;
@class FBMQTTClientManager, FBMThreadParticipantFilter, FBMNetworkProtocolController, FBMDeliveryReceiptSendLogger, FBUserSession, FBMobileConfigFactory, FBMMQTTSendResponseListener, NSString;

@interface FBMMQTTSender : NSObject <FBSessionClassProvidable, FBMConfigurable, FBMThreadMarkRunning> {

	FBMQTTClientManager* _clientManager;
	FBMThreadParticipantFilter* _participantFilter;
	FBMNetworkProtocolController* _networkProtocolController;
	id<MNAuthenticationManager> _authManager;
	FBMDeliveryReceiptSendLogger* _deliveryReceiptSendLogger;
	FBUserSession* _session;
	FBMobileConfigFactory* _mobileConfigFactory;
	FBMMQTTSendResponseListener* _responseListener;
	BOOL _serverHasRejectedMessageBatchSend;

}

@property (nonatomic,retain) FBMQTTClientManager * clientManager;              //@synthesize clientManager=_clientManager - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)setClientManager:(FBMQTTClientManager *)arg1 ;
-(FBMQTTClientManager *)clientManager;
-(void)configureWithMQTTClientManager:(id)arg1 ;
-(id)initWithThreadParticipantFilter:(id)arg1 networkProtocolController:(id)arg2 authManager:(id)arg3 deliveryReceiptSendLogger:(id)arg4 session:(id)arg5 mobileConfigFactory:(id)arg6 queue:(id)arg7 ;
-(void)addMQTTPublisher:(long long)arg1 publisher:(id)arg2 message:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(long long)getTimeoutErrorCode:(BOOL)arg1 connectedErrorCode:(long long)arg2 reachableDisconnectedErrorCode:(long long)arg3 unreachableDisconnectedErrorCode:(long long)arg4 ;
-(void)sendMessageUsingThriftPayload:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(void)sendMessageUsingJsonPayload:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(double)_heuristicResponseTimeoutForMessageBatch:(id)arg1 ;
-(void)addMQTTPublisher:(long long)arg1 topic:(id)arg2 payload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(void)addMQTTPublisher:(long long)arg1 topic:(id)arg2 jsonPayload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(void)markThreadWithThreadKey:(id)arg1 action:(id)arg2 listener:(id)arg3 ;
-(BOOL)canSendMessageBatch;
-(id)getMQTTClientStatus;
-(void)sendMessage:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(void)sendMessageBatch:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(void)sendDeliveryReceipts:(id)arg1 source:(unsigned long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)sendTypingNotification:(id)arg1 state:(int)arg2 ;
-(void)sendWebRTCMessage:(id)arg1 fbTraceMeta:(id)arg2 messageId:(id)arg3 thriftData:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)sendWebRTCMessage:(id)arg1 fbTraceMeta:(id)arg2 messageId:(id)arg3 jsonData:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)sendChatEvent:(id)arg1 ;
-(BOOL)isConfigured;
-(BOOL)canSend;
@end

