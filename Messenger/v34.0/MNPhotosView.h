/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:41:00 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIView.h>
#import <Messenger/FBMPhotoViewDelegate.h>
#import <Messenger/MNPhotoViewNodeDelegate.h>
#import <Messenger/FBModalFullscreenControllerDelegate.h>
#import <Messenger/FBModalFullscreenControllerDataSource.h>
#import <Messenger/MNPhotoOverlayViewDelegate.h>

@protocol MNPhotosViewDelegate;
@class FBModalFullscreenController, UIView, MNPhotoOverlayView, UIImageView, NSMutableArray, _MNTwoDimensionArray, MNPhotoViewNode, FBMPhotoViewImageDownloadController, MNPhotoViewNodeReusePool, NSMutableDictionary, NSArray, MNPhotosViewMaskAttributes, NSString;

@interface MNPhotosView : UIView <FBMPhotoViewDelegate, MNPhotoViewNodeDelegate, FBModalFullscreenControllerDelegate, FBModalFullscreenControllerDataSource, MNPhotoOverlayViewDelegate> {

	FBModalFullscreenController* _modalFullscreenController;
	UIView* _touchBlockingUnderlayView;
	MNPhotoOverlayView* _photoOverlayView;
	UIImageView* _photosMaskingOverlayView;
	NSMutableArray* _photoViewNodes;
	_MNTwoDimensionArray* _photoViewNodesGrid;
	MNPhotoViewNode* _openedNode;
	FBMPhotoViewImageDownloadController* _photoViewImageDownloadController;
	MNPhotoViewNodeReusePool* _photoViewNodeReusePool;
	NSMutableDictionary* _photoViewModelsToNodes;
	BOOL _photosSending;
	BOOL _alignsToRight;
	NSArray* _photoViewModels;
	id<MNPhotosViewDelegate> _delegate;
	MNPhotosViewMaskAttributes* _photosViewMaskAttributes;

}

@property (nonatomic,copy,readonly) NSArray * photoViewModels;                                          //@synthesize photoViewModels=_photoViewModels - In the implementation block
@property (assign,nonatomic,__weak) id<MNPhotosViewDelegate> delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL photosSending;                                                        //@synthesize photosSending=_photosSending - In the implementation block
@property (nonatomic,copy,readonly) MNPhotosViewMaskAttributes * photosViewMaskAttributes;              //@synthesize photosViewMaskAttributes=_photosViewMaskAttributes - In the implementation block
@property (nonatomic,readonly) BOOL alignsToRight;                                                      //@synthesize alignsToRight=_alignsToRight - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(CGSize)sizeForPhotoViewModels:(id)arg1 maxWidth:(double)arg2 ;
+(CGSize)sizeForSinglePhotoViewModel:(id)arg1 maxWidth:(double)arg2 ;
-(id)analyticsModule;
-(id)analyticsExtras;
-(id)modalPresentationStackManager;
-(void)handleIntent:(id)arg1 ;
-(void)didSelectPhotoView:(id)arg1 ;
-(id)photoViewCloseView:(id)arg1 ;
-(CGRect)photoViewCloseFrame:(id)arg1 ;
-(CGRect)closeFrameForMaskOfPhotoView:(id)arg1 ;
-(id)modalPresentationView:(id)arg1 ;
-(NSArray *)photoViewModels;
-(void)attachmentNodeDidOpen:(id)arg1 ;
-(void)attachmentNodeMayClose:(id)arg1 ;
-(void)attachmentNodeMayOpen:(id)arg1 ;
-(void)attachmentNodeWillOpen:(id)arg1 animated:(BOOL)arg2 ;
-(void)attachmentNodeWillClose:(id)arg1 animated:(BOOL)arg2 ;
-(void)attachmentNodeDidClose:(id)arg1 ;
-(id)existingModalLayerForAttachmentNode:(id)arg1 ;
-(BOOL)attachmentNode:(id)arg1 shouldBeginGesture:(id)arg2 ;
-(id)modalFullscreenController:(id)arg1 nodeBeforeNode:(id)arg2 ;
-(id)modalFullscreenController:(id)arg1 nodeAfterNode:(id)arg2 ;
-(void)_updateVisiblePhotoViewNodes;
-(void)_updatePhotoViewNodeGrid;
-(void)_updatePhotoMasks;
-(void)_updatePhotosOverlay;
-(void)_addMaskViewForPhotoViewNodeIfNeeded:(id)arg1 ;
-(id)_dequeuePhotoViewNodeForModel:(id)arg1 ;
-(void)_setUpPhotoViewNode:(id)arg1 withPhotoViewModel:(id)arg2 ;
-(void)_tearDownPhotoViewNode:(id)arg1 ;
-(void)_recyclePhotoViewNode:(id)arg1 ;
-(unsigned long long)_supportedPhotoGesturesForClosedNode;
-(void)_layoutPhotoViewNode:(id)arg1 row:(unsigned long long)arg2 column:(unsigned long long)arg3 ;
-(CGRect)_frameForRow:(unsigned long long)arg1 column:(unsigned long long)arg2 ;
-(unsigned long long)_supportedPhotoGesturesForOpeningNode;
-(unsigned long long)_supportedPhotoGesturesForOpenNode;
-(void)_enableInterationsOnAllNodes;
-(unsigned long long)_supportedPhotoGesturesForClosingNode;
-(void)_disableInteractionsOnAllNodesExceptTappedNode:(id)arg1 ;
-(id)_photoViewNodeForModel:(id)arg1 ;
-(id)_relativeNodeForNode:(id)arg1 withOffset:(long long)arg2 ;
-(id)maskForPhotoNode:(id)arg1 ;
-(void)photoViewNode:(id)arg1 doubleTappedAtPoint:(CGPoint)arg2 ;
-(void)overlayView:(id)arg1 didTapContextualActionButton:(id)arg2 ;
-(id)initWithFrame:(CGRect)arg1 photoViewImageDownloadController:(id)arg2 photoViewNodeReusePool:(id)arg3 ;
-(void)setPhotoViewModels:(id)arg1 photosViewMaskAttributes:(id)arg2 alignsToRight:(BOOL)arg3 ;
-(void)setPhotosSending:(BOOL)arg1 ;
-(id)maskForPhotoViewNodeInPhotosView:(id)arg1 ;
-(CGRect)closeFrameForPhotoViewNode:(id)arg1 ;
-(void)openPhotoWithViewModel:(id)arg1 animated:(BOOL)arg2 ;
-(BOOL)photosSending;
-(MNPhotosViewMaskAttributes *)photosViewMaskAttributes;
-(BOOL)alignsToRight;
-(void)dealloc;
-(void)setDelegate:(id<MNPhotosViewDelegate>)arg1 ;
-(void)layoutSubviews;
-(id<MNPhotosViewDelegate>)delegate;
-(void)setHighlighted:(BOOL)arg1 ;
-(void)prepareForReuse;
@end

