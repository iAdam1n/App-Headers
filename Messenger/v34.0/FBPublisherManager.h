/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:44 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/FBActivePublicationsChangeListener.h>
#import <Messenger/FBPublicationCacheListener.h>
#import <Messenger/FBObjectCachingListener.h>
#import <Messenger/FBPublicationSubscriptionHandler.h>
#import <Messenger/FBComposerPublisherStatusListener.h>

@protocol FBPublisherProvider;
@class FBActivePublicationsChangeListenerAnnouncer, FBActivePublicationsTracker, FBPublishingStatusAnalyticsLogger, FBPublishingBackgroundTaskTracker, FBPublishingStatusBugReportLogger, FBObjectCachingListenerAnnouncer, FBObjectCachingBugReportLogger, FBPublishingStatusCrashReportLogger, FBComposerPublisherStatusListenerAnnouncer, FBPublishingIssueLogger, NSMutableDictionary, FBPublicationCache, FBUserSession, NSString;

@interface FBPublisherManager : NSObject <FBActivePublicationsChangeListener, FBPublicationCacheListener, FBObjectCachingListener, FBPublicationSubscriptionHandler, FBComposerPublisherStatusListener> {

	FBActivePublicationsChangeListenerAnnouncer* _activePublicationsAnnouncer;
	FBActivePublicationsTracker* _activePublicationsTracker;
	FBPublishingStatusAnalyticsLogger* _analyticsLogger;
	FBPublishingBackgroundTaskTracker* _backgroundTaskTracker;
	FBPublishingStatusBugReportLogger* _bugReportLogger;
	FBObjectCachingListenerAnnouncer* _cachingAnnouncer;
	FBObjectCachingBugReportLogger* _cachingBugReportLogger;
	FBPublishingStatusCrashReportLogger* _crashReportLogger;
	FBComposerPublisherStatusListenerAnnouncer* _externalAnnouncer;
	FBComposerPublisherStatusListenerAnnouncer* _internalAnnouncer;
	FBPublishingIssueLogger* _issueLogger;
	NSMutableDictionary* _publisherDataByPublicationIdentifier;
	id<FBPublisherProvider> _publisherProvider;
	FBPublicationCache* _publicationCache;
	NSMutableDictionary* _publishers;
	FBUserSession* _session;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)attemptedToLoadNonExistentStoredObject;
-(void)failedToLoadStoredObject;
-(void)failedToWriteObject:(id)arg1 ;
-(void)successfullyStoredObject:(id)arg1 ;
-(void)successfullyLoadedObject:(id)arg1 ;
-(void)addedPublicationWithPublisherData:(id)arg1 ;
-(void)removedPublicationWithPublisherData:(id)arg1 ;
-(void)updatedPublication:(id)arg1 ;
-(void)loadedPublicationsWithPublisherDatas:(id)arg1 ;
-(void)startedPublishingPublisherData:(id)arg1 ;
-(void)attemptedPublicationOfPublisherData:(id)arg1 ;
-(void)failedPublishingPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)failedPublishingAndWaitingForRetryPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)retriedPublishingPublisherData:(id)arg1 ;
-(void)pausedPublishingPublisherData:(id)arg1 ;
-(void)startedWaitingForConnectivityForPublicationOfPublisherData:(id)arg1 ;
-(void)scheduledPublicationOfPublisherData:(id)arg1 atDate:(id)arg2 ;
-(void)publicationProgressedWithProgress:(double)arg1 forPublisherData:(id)arg2 ;
-(void)startedUploadingItemOfType:(int)arg1 withThumbnailImage:(id)arg2 forPublisherData:(id)arg3 ;
-(void)canCancelPublishingOfPublisherData:(id)arg1 ;
-(void)cannotCancelPublishingOfPublisherData:(id)arg1 ;
-(void)startedServerProcessingForUploadedPublication:(id)arg1 ;
-(void)terminallyFailedPublishingPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)successfullyPublishedPublisherData:(id)arg1 withResponse:(id)arg2 ;
-(void)cancelledPublishingPublisherData:(id)arg1 ;
-(void)DO_NOT_USE_OR_YOU_WILL_BE_FIRED_schedulePublisherDataCacheUpdate;
-(void)_aboutToStopAllPublications;
-(id)_publisherForPublication:(id)arg1 mediaUploadItemManager:(id)arg2 logger:(id)arg3 ;
-(id)initWithPublisherProvider:(id)arg1 session:(id)arg2 exceptionHandler:(id)arg3 ;
-(BOOL)userHasPendingPosts;
-(void)restartPreviouslyUncompletedPublishers;
-(void)cancelPublicationWithPublicationIdentifier:(id)arg1 reason:(id)arg2 ;
-(void)pausePublicationWithPublicationIdentifier:(id)arg1 ;
-(void)retryPublicationWithPublicationIdentifier:(id)arg1 ;
-(void)publishPublication:(id)arg1 withUploadManager:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(void)invalidate;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
@end

