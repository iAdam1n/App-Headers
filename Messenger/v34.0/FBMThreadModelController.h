/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:46 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/FBMMailboxPreparingDelegate.h>
#import <Messenger/FBMMoreThreadsFetcherDelegate.h>
#import <Messenger/FBMThreadDeleterDelegate.h>
#import <Messenger/FBMBatchThreadsDeleterDelegate.h>
#import <Messenger/FBMFolderThreadsDeleterDelegate.h>
#import <Messenger/FBMThreadMuterDelegate.h>
#import <Messenger/FBMLeaveGroupThreadRequesterDelegate.h>
#import <Messenger/MNSyncProtocolCoordinatorListener.h>
#import <Messenger/FBMNetworkProtocolChangeListener.h>
#import <Messenger/FBMSPDeltaHandlerListener.h>
#import <Messenger/FBMThreadSetObserver.h>
#import <Messenger/FBClassProvidable.h>

@protocol FBMMailboxPreparing, FBProvider, MNSyncProtocolCoordinatorListener, FBMNetworkProtocolChangeListener, FBMSPDeltaHandlerListener, MNAuthenticationManager, FBMThreadModelControllerDelegate;
@class NSMutableArray, FBMThreadSet, FBMThreadPrefetchPolicyManager, FBMMailboxPreparerFactory, MNSimpleSingleThreadFetcher, FBMMoreThreadsFetcher, FBMDiskThreadDeleter, FBMMQTTManager, FBMSPDataStore, FBMSPCoordinator, FBMNetworkProtocolController, FBMSPDeltaHandlerListenerAnnouncer, FBMPullToRefreshPolicyManager, FBMThreadFetchStateClearer, FBMThreadMarkService, MNThreadUpdateService, FBUserSession, FBMLocalThreadMessagesQuerier, FBMobileConfigFactory, FBMessengerSyncEngineManager, NSString;

@interface FBMThreadModelController : NSObject <FBMMailboxPreparingDelegate, FBMMoreThreadsFetcherDelegate, FBMThreadDeleterDelegate, FBMBatchThreadsDeleterDelegate, FBMFolderThreadsDeleterDelegate, FBMThreadMuterDelegate, FBMLeaveGroupThreadRequesterDelegate, MNSyncProtocolCoordinatorListener, FBMNetworkProtocolChangeListener, FBMSPDeltaHandlerListener, FBMThreadSetObserver, FBClassProvidable> {

	NSMutableArray* _threads;
	FBMThreadSet* _threadSet;
	FBMThreadPrefetchPolicyManager* _prefetchPolicyManager;
	id<FBMMailboxPreparing> _mailboxPreparer;
	FBMMailboxPreparerFactory* _mailboxPreparerFactory;
	MNSimpleSingleThreadFetcher* _threadMessagesFetcher;
	id<FBProvider> _threadFetcherProvider;
	FBMMoreThreadsFetcher* _moreThreadsFetcher;
	id<FBProvider> _moreThreadsFetcherProvider;
	id<FBProvider> _threadDeleterProvider;
	id<FBProvider> _batchThreadsDeleterProvider;
	id<FBProvider> _folderThreadsDeleterProvider;
	FBMDiskThreadDeleter* _threadDiskDeleter;
	FBMMQTTManager* _mqttManager;
	FBMSPDataStore* _syncProtocolDataStore;
	NSMutableArray* _currentlyOperatingNetworkRequesters;
	BOOL _fetching;
	FBMSPCoordinator* _syncProtocolCoordinator;
	id<MNSyncProtocolCoordinatorListener> _coordinatorListenerDispatcher;
	FBMNetworkProtocolController* _networkProtocolController;
	id<FBMNetworkProtocolChangeListener> _networkProtocolChangeListenerDispatcher;
	FBMSPDeltaHandlerListenerAnnouncer* _deltaHandlerAnnouncer;
	id<FBMSPDeltaHandlerListener> _deltaHandlerListenerDispatcher;
	FBMPullToRefreshPolicyManager* _pullToRefreshPolicyManager;
	FBMThreadFetchStateClearer* _fetchStateClearer;
	id<FBProvider> _inboxSeenMarkerProvider;
	id<FBProvider> _leaveThreadRequesterProvider;
	id<FBProvider> _threadMuterProvider;
	FBMThreadMarkService* _threadMarkService;
	id<MNAuthenticationManager> _authenticationManager;
	MNThreadUpdateService* _threadUpdateService;
	unsigned long long _threadListType;
	BOOL _isConfigured;
	FBUserSession* _session;
	BOOL _didLoadAllThreads;
	id<FBMThreadModelControllerDelegate> _delegate;
	FBMLocalThreadMessagesQuerier* _threadMessagesQuerier;
	FBMobileConfigFactory* _mobileConfigFactory;
	FBMessengerSyncEngineManager* _syncEngineManager;

}

@property (getter=isFetching,nonatomic,readonly) BOOL fetching;                                  //@synthesize fetching=_fetching - In the implementation block
@property (nonatomic,readonly) BOOL didLoadAllThreads;                                           //@synthesize didLoadAllThreads=_didLoadAllThreads - In the implementation block
@property (assign,nonatomic,__weak) id<FBMThreadModelControllerDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) NSMutableArray * threads;                                           //@synthesize threads=_threads - In the implementation block
@property (nonatomic,retain) FBMLocalThreadMessagesQuerier * threadMessagesQuerier;              //@synthesize threadMessagesQuerier=_threadMessagesQuerier - In the implementation block
@property (nonatomic,retain) FBMobileConfigFactory * mobileConfigFactory;                        //@synthesize mobileConfigFactory=_mobileConfigFactory - In the implementation block
@property (nonatomic,retain) FBMessengerSyncEngineManager * syncEngineManager;                   //@synthesize syncEngineManager=_syncEngineManager - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)syncProtocolQueueCreationSucceeded;
-(void)syncProtocolQueueCreationFailedWithError:(id)arg1 ;
-(void)syncProtocolDeltaRequestSucceeded;
-(void)syncProtocolDeltaRequestFailedWithError:(id)arg1 ;
-(void)syncProtocolDeltasDidFinishProcessingWithAffectedThreadFbIds:(id)arg1 ;
-(void)didCancelFetchThreads;
-(void)setSyncEngineManager:(FBMessengerSyncEngineManager *)arg1 ;
-(FBMessengerSyncEngineManager *)syncEngineManager;
-(FBMobileConfigFactory *)mobileConfigFactory;
-(void)threadDeleter:(id)arg1 didDeleteThreadsWithThreadKeys:(id)arg2 failToDeleteThreadsWithThreadKeys:(id)arg3 ;
-(void)threadDeleter:(id)arg1 didFailtoDeleteThreadsWithThreadKeys:(id)arg2 WithError:(id)arg3 ;
-(void)folderThreadsDeleter:(id)arg1 didDeleteAllThreadsInThreadList:(unsigned long long)arg2 ;
-(void)folderThreadsDeleter:(id)arg1 couldNotDeleteAllThreadsInThreadList:(unsigned long long)arg2 withError:(id)arg3 ;
-(void)requester:(id)arg1 userId:(id)arg2 didLeaveGroupThreadWithFbId:(id)arg3 ;
-(void)requester:(id)arg1 userId:(id)arg2 couldNotLeaveGroupThreadWithFbId:(id)arg3 error:(id)arg4 ;
-(void)moreThreadsFetcher:(id)arg1 didFetchMoreThreads:(id)arg2 didLoadAllThreads:(BOOL)arg3 ;
-(void)moreThreadsFetcher:(id)arg1 couldNotFetchMoreThreadsWithError:(id)arg2 ;
-(void)didFetchThreads:(id)arg1 didLoadAllThreads:(BOOL)arg2 ;
-(void)threads:(id)arg1 couldNotFetchThreads:(id)arg2 ;
-(void)didFetchAdditionalInformation;
-(void)didFailToFetchAdditionalInformation;
-(void)threadDeleter:(id)arg1 didDeleteThreadSummary:(id)arg2 ;
-(void)threadDeleter:(id)arg1 couldNotDeleteThreadSummary:(id)arg2 withError:(id)arg3 ;
-(void)configureWithThreadListType:(unsigned long long)arg1 ;
-(NSMutableArray *)threads;
-(void)threadMuter:(id)arg1 didMuteThreadWithKey:(id)arg2 until:(long long)arg3 ;
-(void)threadMuter:(id)arg1 didFailToMuteThreadWithKey:(id)arg2 withError:(id)arg3 ;
-(void)setThreads:(NSMutableArray *)arg1 ;
-(id)initWithThreadSet:(id)arg1 threadDeleterProvider:(id)arg2 batchThreadsDeleterProvider:(id)arg3 folderThreadsDeleterProvider:(id)arg4 threadMessagesQuerier:(id)arg5 threadPrefetchPolicyMananger:(id)arg6 threadDiskDeleter:(id)arg7 mqttManager:(id)arg8 mobileConfigFactory:(id)arg9 moreThreadsFetcherProvider:(id)arg10 syncProtocolCoordinator:(id)arg11 networkProtocolController:(id)arg12 deltaHandlerAnnouncer:(id)arg13 pullToRefreshPolicyManager:(id)arg14 fetchStateClear:(id)arg15 syncEngineManager:(id)arg16 mailboxPreparerFactory:(id)arg17 inboxSeenMarkerProvider:(id)arg18 leaveThreadRequesterProvider:(id)arg19 threadMuterProvider:(id)arg20 threadFetcherProvider:(id)arg21 authenticationManager:(id)arg22 threadMarkService:(id)arg23 threadUpdateService:(id)arg24 syncProtocolDataStore:(id)arg25 session:(id)arg26 ;
-(void)detachPendingThreadOperations;
-(void)_onConnectionStatusChange:(id)arg1 ;
-(BOOL)_shouldFQLForFetchTriggerType:(unsigned long long)arg1 ;
-(void)_fqlRefreshThreadListWithOption:(unsigned long long)arg1 fetchTriggerType:(unsigned long long)arg2 ;
-(BOOL)_shouldRefreshSyncProtocolForFetchTriggerType:(unsigned long long)arg1 ;
-(void)_refreshSyncProtocolForFetchTriggerType:(unsigned long long)arg1 ;
-(void)_handleFetchedThread:(id)arg1 ;
-(void)_handleCouldNotFetchThreadWithFbId:(id)arg1 error:(id)arg2 ;
-(void)_didFinishRemoveThreadWithFbId:(id)arg1 withReason:(unsigned long long)arg2 ;
-(void)_removeCurrentlyOperatingNetworkRequester:(id)arg1 ;
-(void)reloadThreads;
-(void)_saveCurrentlyOperatingNetworkRequester:(id)arg1 ;
-(void)_markThread:(id)arg1 action:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_processMarkRequestComplete:(unsigned long long)arg1 error:(id)arg2 thread:(id)arg3 action:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(BOOL)_isRefetchOnConnectedNotificationOn;
-(void)fetchThreads:(BOOL)arg1 option:(unsigned long long)arg2 fetchTriggerType:(unsigned long long)arg3 ;
-(void)_notifyDeltaRequestFinished;
-(void)fetchMoreThreads:(BOOL)arg1 ;
-(BOOL)isLoadingMore;
-(void)cancelFetchThreads;
-(void)markInboxSeen;
-(void)fetchThreadWithFbId:(id)arg1 ;
-(void)forcePrefetchOnNextFetch;
-(void)removeThreadFromLocalCache:(id)arg1 ;
-(void)deleteThread:(id)arg1 ;
-(void)deleteThreads:(id)arg1 ;
-(void)deleteAllThreadsInThreadList:(unsigned long long)arg1 ;
-(void)archiveThread:(id)arg1 ;
-(void)unarchiveThread:(id)arg1 ;
-(void)flagThreadAsImportant:(id)arg1 ;
-(void)unflagThreadAsImportant:(id)arg1 ;
-(void)unreadThread:(id)arg1 ;
-(void)readThread:(id)arg1 ;
-(void)muteThread:(id)arg1 withOption:(long long)arg2 ;
-(void)leaveThread:(id)arg1 ;
-(void)markAsSpamThread:(id)arg1 ;
-(void)markAsNotSpamThread:(id)arg1 ;
-(unsigned long long)indexOfThread:(id)arg1 ;
-(id)threadForIndex:(unsigned long long)arg1 ;
-(id)threadWithFbId:(id)arg1 ;
-(BOOL)isConnectedToMQTT;
-(BOOL)canViewerLeaveThread:(id)arg1 ;
-(BOOL)didLoadAllThreads;
-(FBMLocalThreadMessagesQuerier *)threadMessagesQuerier;
-(void)setThreadMessagesQuerier:(FBMLocalThreadMessagesQuerier *)arg1 ;
-(void)_startObservers;
-(void)_stopObservers;
-(void)networkProtocolDidChange:(unsigned long long)arg1 ;
-(void)setMobileConfigFactory:(FBMobileConfigFactory *)arg1 ;
-(id)threadWithThreadKey:(id)arg1 ;
-(void)threadSet:(id)arg1 didAddThread:(id)arg2 ;
-(void)threadSet:(id)arg1 didReplaceThreadWithThread:(id)arg2 ;
-(void)threadSet:(id)arg1 didEvictThread:(id)arg2 forReason:(unsigned long long)arg3 ;
-(void)threadSetWillClearAllThreads:(id)arg1 ;
-(void)dealloc;
-(void)setDelegate:(id<FBMThreadModelControllerDelegate>)arg1 ;
-(id<FBMThreadModelControllerDelegate>)delegate;
-(BOOL)isFetching;
-(unsigned long long)threadCount;
@end

