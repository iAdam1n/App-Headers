/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:49 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <Messenger/FBPaymentsPeerToPeerFetchControllerListener.h>
#import <Messenger/FBPaymentsPeerToPeerTransferCoordinatorListener.h>
#import <Messenger/FBPaymentsPeerToPeerPaymentMethodsCoordinatorListener.h>
#import <Messenger/MNConnectionStatusPluginServiceListener.h>
#import <Messenger/FBPaymentsPeerToPeerCardFlowControllerDelegate.h>

@protocol FBQueriedMessengerPaymentFieldsProtocol, FBPaymentsPeerToPeerPaymentMethodsCoordinator, MNPaymentsTransferReceiptExtraInfoView, MNNavigationPluginService, MNConnectionStatusPluginService, MNPaymentsTransferReceiptExtraInfoViewFactory;
@class NSString, FBPaymentsPeerToPeerTransferStatusModelForTransferReceipt, FBMUser, FBMemCreditCard, FBUserSession, FBPaymentsPeerToPeerFetchController, FBPaymentsPeerToPeerContactsService, FBPaymentsPeerToPeerTransferCoordinator, FBPaymentsPeerToPeerPaymentPinController, FBPaymentsPeerToPeerPasscodeWorkflowController, FBPaymentsPeerToPeerViewerInfoController, FBPaymentsPeerToPeerTransferStatusModelContainer, MNPaymentsTransferReceiptHeaderView, MNPaymentsTransferReceiptHeaderViewModel, FBPaymentsPeerToPeerTransferReceiptBodyView, FBPaymentsPeerToPeerTransferReceiptBodyViewModel, MNPaymentsTransferReceiptPaymentIdView, MNPaymentsTransferReceiptPaymentIdViewModel, UIView, MNPaymentsTransferReceiptView, UILongPressGestureRecognizer, FBPaymentsPeerToPeerNavigationCoordinator, FBPaymentsPeerToPeerRiskVerificationController, FBPaymentsPeerToPeerTouchIDController, FBPaymentsPeerToPeerCardFlowController, MNPaymentsFlowSessionController, MNPaymentsExtensibleFlowMap, FBGraphQLService;

@interface FBPaymentsPeerToPeerTransferReceiptViewController : UIViewController <FBPaymentsPeerToPeerFetchControllerListener, FBPaymentsPeerToPeerTransferCoordinatorListener, FBPaymentsPeerToPeerPaymentMethodsCoordinatorListener, MNConnectionStatusPluginServiceListener, FBPaymentsPeerToPeerCardFlowControllerDelegate> {

	NSString* _currentUserFBID;
	NSString* _transferFBID;
	id<FBQueriedMessengerPaymentFieldsProtocol> _baseTransfer;
	FBPaymentsPeerToPeerTransferStatusModelForTransferReceipt* _statusModel;
	FBMUser* _senderOrReceiver;
	FBMemCreditCard* _paymentMethod;
	FBUserSession* _session;
	id _downloadHandle;
	FBPaymentsPeerToPeerFetchController* _fetchController;
	FBPaymentsPeerToPeerContactsService* _contactsService;
	FBPaymentsPeerToPeerTransferCoordinator* _transferCoordinator;
	id<FBPaymentsPeerToPeerPaymentMethodsCoordinator> _paymentMethodsCoordinator;
	FBPaymentsPeerToPeerPaymentPinController* _paymentPinController;
	FBPaymentsPeerToPeerPasscodeWorkflowController* _passcodeWorkflowController;
	FBPaymentsPeerToPeerViewerInfoController* _viewerInfoController;
	FBPaymentsPeerToPeerTransferStatusModelContainer* _transferStatusModelContainer;
	MNPaymentsTransferReceiptHeaderView* _headerView;
	MNPaymentsTransferReceiptHeaderViewModel* _headerViewModel;
	FBPaymentsPeerToPeerTransferReceiptBodyView* _bodyView;
	FBPaymentsPeerToPeerTransferReceiptBodyViewModel* _bodyViewModel;
	MNPaymentsTransferReceiptPaymentIdView* _paymentIdView;
	MNPaymentsTransferReceiptPaymentIdViewModel* _paymentIdViewModel;
	id _extraInfoViewModel;
	UIView*<MNPaymentsTransferReceiptExtraInfoView> _extraInfoView;
	MNPaymentsTransferReceiptView* _receiptView;
	UILongPressGestureRecognizer* _paymentIDTextViewLongPressGestureRecognizer;
	FBPaymentsPeerToPeerNavigationCoordinator* _navigationCoordinator;
	FBPaymentsPeerToPeerRiskVerificationController* _riskVerificationController;
	FBPaymentsPeerToPeerTouchIDController* _touchIDController;
	FBPaymentsPeerToPeerCardFlowController* _cardFlowController;
	MNPaymentsFlowSessionController* _flowSessionController;
	MNPaymentsExtensibleFlowMap* _extensibleFlowMap;
	id<MNNavigationPluginService> _navigationService;
	id<MNConnectionStatusPluginService> _connectionStatusService;
	id<MNPaymentsTransferReceiptExtraInfoViewFactory> _extraInfoViewFactory;
	FBGraphQLService* _graphQLService;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)analyticsModule;
-(void)connectionStatusPluginServiceDidChangeConnectionStatus:(id)arg1 ;
-(void)_didTapActionButton:(id)arg1 ;
-(void)fetchController:(id)arg1 didFetch:(id)arg2 query:(id)arg3 dataTypes:(unsigned long long)arg4 response:(id)arg5 date:(id)arg6 ;
-(void)fetchController:(id)arg1 didFailToFetch:(id)arg2 query:(id)arg3 dataTypes:(unsigned long long)arg4 error:(id)arg5 ;
-(void)didUpdateTransfer:(id)arg1 ;
-(void)_didLongPressPaymentIDTextView:(id)arg1 ;
-(void)_didTapHelpButton:(id)arg1 ;
-(void)_didTapReceiptLinkButton:(id)arg1 ;
-(void)_performDone:(id)arg1 ;
-(void)_syncViewModelsToView;
-(void)_prepareDataAndUpdateUI;
-(void)_copyTransferFBID:(id)arg1 ;
-(void)_fetchTransferStatus;
-(void)_handleConfirmInfoAction;
-(void)_handleGoToSettingsAction;
-(void)_performDeclinePaymentTransferGraphRequest;
-(void)_handleDeclinePaymentAction;
-(id)_getStyleIdentifer:(id)arg1 ;
-(void)_postAddingPaymentMethod;
-(void)_prepareViewsForPayment:(id)arg1 ;
-(void)_processBaseTransferData:(id)arg1 ;
-(void)_updateContactUI:(id)arg1 ;
-(void)_updatePaymentMethodUIWithPaymentMethod:(id)arg1 ;
-(void)_fetchContactForTransfer:(id)arg1 ;
-(void)_fetchPaymentMethodForTransfer:(id)arg1 ;
-(void)_presentWithHeaderViewModel:(id)arg1 bodyViewModel:(id)arg2 extraInfoViewModel:(id)arg3 paymentIdViewModel:(id)arg4 ;
-(void)_showCreatePINNuxIfNeeded;
-(void)_handleDownloadedResponse:(id)arg1 withError:(id)arg2 ;
-(void)paymentMethodsCoordinatorDidUpdate:(id)arg1 oldPresetPaymentMethod:(id)arg2 newPresetPaymentMethod:(id)arg3 isOptimistic:(BOOL)arg4 ;
-(void)paymentMethodsCoordinatorDidUpdate:(id)arg1 isOptimistic:(BOOL)arg2 ;
-(void)peerToPeerCardFlowController:(id)arg1 didCancelCardFlowWithError:(id)arg2 forAnalyticsUUID:(id)arg3 ;
-(void)peerToPeerCardFlowController:(id)arg1 didAddCard:(id)arg2 didVerifyPaymentMethod:(id)arg3 forAnalyticsUUID:(id)arg4 ;
-(void)peerToPeerCardFlowController:(id)arg1 willVerifyCSCforPaymentMethod:(id)arg2 forAnalyticsUUID:(id)arg3 ;
-(id)initWithSession:(id)arg1 transferFBID:(id)arg2 transferCoordinator:(id)arg3 navigationCoordinator:(id)arg4 paymentMethodCoordinator:(id)arg5 paymentPinController:(id)arg6 passcodeWorkflowController:(id)arg7 fetchController:(id)arg8 contactsService:(id)arg9 navigationService:(id)arg10 connectionStatusService:(id)arg11 viewerInfoController:(id)arg12 riskVerificationController:(id)arg13 touchIDController:(id)arg14 transferStatusModelContainer:(id)arg15 cardFlowController:(id)arg16 flowSessionController:(id)arg17 extensibleFlowMap:(id)arg18 graphQLService:(id)arg19 ;
-(void)dealloc;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(void)viewWillLayoutSubviews;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
@end

