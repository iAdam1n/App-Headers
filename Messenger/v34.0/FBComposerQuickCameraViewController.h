/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:34 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIViewController.h>
#import <Messenger/FBCaptureManagerDelegate.h>
#import <Messenger/FBCameraViewDelegate.h>
#import <Messenger/FBAssetsLibraryListener.h>
#import <Messenger/FBExpanding.h>
#import <Messenger/FBMediaTraitsUpdateListener.h>

@protocol FBComposerQuickCameraViewControllerDelegate;
@class FBCaptureManager, AVCaptureDevice, FBMediaPickerDataSourceManager, FBUserSession, SPAccessPhotoPermissionPromptView, FBCameraRollWriter, NSTimer, AVURLAsset, FBQuickCamPerfExperimentContext, FBComposerQuickCamTraits, FBAssetsLibrary, FBCameraView, NSString;

@interface FBComposerQuickCameraViewController : UIViewController <FBCaptureManagerDelegate, FBCameraViewDelegate, FBAssetsLibraryListener, FBExpanding, FBMediaTraitsUpdateListener> {

	BOOL _cameraControlsHidden;
	FBCaptureManager* _captureManager;
	AVCaptureDevice* _rearCamera_DO_NOT_ACCESS_DIRECTLY;
	FBMediaPickerDataSourceManager* _mediaPickerDataSourceManager;
	FBUserSession* _userSession;
	unsigned long long _maxPhotosSelectable;
	BOOL _needToAddLatestPhoto;
	BOOL _needToAddLatestVideo;
	BOOL _reachedMaxRecordingLimit;
	unsigned long long _fullscreenMode;
	SPAccessPhotoPermissionPromptView* _cameraPermissionPromptView;
	SPAccessPhotoPermissionPromptView* _cameraRollPermissionPromptView;
	FBCameraRollWriter* _cameraRollWriter;
	NSTimer* _startRecordingTimer;
	NSTimer* _videoTimer;
	AVURLAsset* _maxLengthVideo;
	long long _flashMode;
	FBQuickCamPerfExperimentContext* _perfExperimentContext;
	BOOL _loadPreviewWhenSessionCompleted;
	BOOL _startSessionAfterCreatingView;
	BOOL _isObservingOrientationNotifications;
	FBComposerQuickCamTraits* _traits;
	FBAssetsLibrary* _assetsLibrary;
	BOOL _maxLengthVideoCaptured;
	BOOL _cameraViewDidStopRecording;
	BOOL _videoCaptureEnabled;
	id<FBComposerQuickCameraViewControllerDelegate> _delegate;
	FBCameraView* _cameraView;

}

@property (assign,nonatomic,__weak) id<FBComposerQuickCameraViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL videoCaptureEnabled;                                                     //@synthesize videoCaptureEnabled=_videoCaptureEnabled - In the implementation block
@property (nonatomic,retain) FBCameraView * cameraView;                                                    //@synthesize cameraView=_cameraView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)captureManagerPreviewDidLoad:(id)arg1 ;
-(void)captureManagerSessionDidStart:(id)arg1 ;
-(void)captureManager:(id)arg1 didChangeCapturePositionTo:(long long)arg2 ;
-(CGSize)captureManagerVideoInputSize:(id)arg1 ;
-(id)addFilterToPhoto:(id)arg1 ;
-(void)captureManager:(id)arg1 didCaptureImage:(id)arg2 metadata:(id)arg3 cameraPosition:(long long)arg4 ;
-(void)captureManagerDidStartCaptureVideo:(id)arg1 ;
-(void)captureManager:(id)arg1 didCaptureVideo:(id)arg2 thumbnail:(id)arg3 cameraPosition:(long long)arg4 ;
-(void)captureManagerDidFailToCaptureVideo:(id)arg1 ;
-(id)rearCamera;
-(void)setCapturePosition:(long long)arg1 ;
-(void)assetsLibraryDidLoadAssets;
-(void)_handleOrientationDidChange:(id)arg1 ;
-(void)_updateViewForCurrentOrientation;
-(void)_registerPhotoForFaceRecIfEligible:(id)arg1 firstPhotoIndex:(unsigned long long)arg2 ;
-(void)_stopPerfLoggingWithStatus:(id)arg1 ;
-(id)_getPreparerForFacerecRequest:(unsigned long long)arg1 ;
-(void)_didTapPermissionViewCloseButton;
-(void)_cameraPermissionViewDidTapLinkToSettings:(id)arg1 ;
-(id)_createCameraPermissionView;
-(id)_createCameraRollPermissionView;
-(id)_createCameraView;
-(void)_presentAlertWithTitle:(id)arg1 message:(id)arg2 ;
-(void)_startPerfLoggingForMediaCaptureType:(id)arg1 ;
-(void)_reachedMaxVideoLength;
-(void)_stopRecordingAndAddVideo:(BOOL)arg1 ;
-(void)_captureImageAndAddImage:(BOOL)arg1 ;
-(void)_transformPreviewLayerForStatusBarOrientation;
-(void)_toggleFirstPhotoIfNeeded;
-(void)_saveMaxLengthVideo;
-(CGSize)_videoInputSizeInPoints;
-(void)_setupTorch:(long long)arg1 ;
-(void)cameraViewDidSelectSwitchCamera:(id)arg1 ;
-(void)cameraViewDidSelectCaptureImage:(id)arg1 ;
-(void)cameraViewDidStartRecording:(id)arg1 ;
-(void)cameraViewDidStopRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidCancelRecording:(id)arg1 duration:(double)arg2 ;
-(void)cameraViewDidPressCloseButton:(id)arg1 ;
-(void)cameraViewDidFlash:(id)arg1 ;
-(void)cameraViewDidPressFullscreenButton:(id)arg1 ;
-(void)cameraView:(id)arg1 didTapAtPoint:(CGPoint)arg2 ;
-(void)cameraViewDidUpdateFlashMode:(long long)arg1 ;
-(void)setExpansionProgress:(double)arg1 ;
-(BOOL)shouldAllowInteractiveExpanding;
-(void)didUpdateMediaTraits:(id)arg1 ;
-(id)initWithCaptureManager:(id)arg1 mediaPickerDataSourceManager:(id)arg2 userSession:(id)arg3 fullscreenMode:(unsigned long long)arg4 defaultDevicePosition:(long long)arg5 maxPhotosSelectable:(unsigned long long)arg6 traits:(id)arg7 ;
-(void)setCameraControlsToHidden:(BOOL)arg1 ;
-(void)setVideoCaptureEnabled:(BOOL)arg1 ;
-(BOOL)videoCaptureEnabled;
-(void)_startRecording;
-(BOOL)isFullscreen;
-(void)dealloc;
-(void)setDelegate:(id<FBComposerQuickCameraViewControllerDelegate>)arg1 ;
-(id<FBComposerQuickCameraViewControllerDelegate>)delegate;
-(unsigned long long)supportedInterfaceOrientations;
-(void)_updateView;
-(void)loadView;
-(long long)preferredInterfaceOrientationForPresentation;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(FBCameraView *)cameraView;
-(void)setCameraView:(FBCameraView *)arg1 ;
@end

