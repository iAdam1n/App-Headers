/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:13 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBServiceTransactionTokenDelegate.h>
#import <Messenger/FBNetworkerRequestDelegate.h>

@protocol FBNetworkDispatch, OS_dispatch_queue;
@class NSObject, FBQueuePerformer, NSString;

@interface FBService : NSObject <FBServiceTransactionTokenDelegate, FBNetworkerRequestDelegate> {

	id<FBNetworkDispatch> _networker;
	NSObject*<OS_dispatch_queue> _queue;
	FBQueuePerformer* _queuePerformer;
	unordered_map<FBServiceNetworkerRequest *, FBServiceInternalState *, FB::HashFunctor<NSObject *>, FB::EqualFunctor<NSObject *>, std::__1::allocator<std::__1::pair<FBServiceNetworkerRequest *const, FBServiceInternalState *> > >* _requestToStateMap;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)networkerRequest:(id)arg1 didSucceed:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didFail:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didCancelWithStatus:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didReceiveResponseWithStatus:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didUpdateDownloadProgress:(double)arg2 complete:(BOOL)arg3 ;
-(void)networkerRequest:(id)arg1 didUpdateUploadProgress:(double)arg2 complete:(BOOL)arg3 ;
-(id)initWithNetworker:(id)arg1 queue:(id)arg2 ;
-(void)dispatchToQueue:(id)arg1 withAutoreleasePool:(BOOL)arg2 block:(/*^block*/id)arg3 ;
-(id)_stateForRequest:(id)arg1 erase:(BOOL)arg2 ;
-(id)errorWithType:(unsigned long long)arg1 underlyingError:(id)arg2 ;
-(void)serviceShouldCancelRequest:(id)arg1 ;
-(void)serviceShouldChangePriorityForRequest:(id)arg1 newPriority:(long long)arg2 ;
-(id)initWithNetworker:(id)arg1 ;
-(id)sendRequest:(id)arg1 callbackQueue:(id)arg2 successCallback:(/*^block*/id)arg3 failureCallback:(/*^block*/id)arg4 progressCallback:(/*^block*/id)arg5 configurationCallback:(/*^block*/id)arg6 ;
@end

