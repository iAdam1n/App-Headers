/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:12 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/CLLocationManagerDelegate.h>

@class FBAnalytics, FBAnalyticsPerfLogger, CLLocationManager, NSSet, NSMutableArray, NSMutableSet, CLLocation, NSError, NSTimer, NSString;

@interface FBLocationManager : NSObject <CLLocationManagerDelegate> {

	FBAnalytics* _analytics;
	FBAnalyticsPerfLogger* _analyticsPerfLogger;
	CLLocationManager* _locationManager;
	NSSet* _subscriptions;
	NSMutableArray* _authorizationStatusBlocks;
	NSMutableSet* _subscribersNextInaccurateFix;
	CLLocation* _simulatedLocation;
	CLLocation* _lastLocationGood;
	CLLocation* _lastLocationAny;
	NSError* _lastError;
	NSTimer* _restartTimer;

}

@property (nonatomic,retain) CLLocation * lastLocationGood;                    //@synthesize lastLocationGood=_lastLocationGood - In the implementation block
@property (nonatomic,retain) CLLocation * lastLocationAny;                     //@synthesize lastLocationAny=_lastLocationAny - In the implementation block
@property (nonatomic,readonly) CLLocation * coreLocationLocation; 
@property (nonatomic,retain) NSError * lastError;                              //@synthesize lastError=_lastError - In the implementation block
@property (nonatomic,retain) NSTimer * restartTimer;                           //@synthesize restartTimer=_restartTimer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_authorizationStatusString:(int)arg1 ;
+(BOOL)isForceAlwaysOptionEnabled;
+(BOOL)hasLocationServices;
+(BOOL)hasLocationServicesAlways;
+(BOOL)isLocationAuthorizationNotDetermined;
+(BOOL)isLocation:(id)arg1 equalToLocation:(id)arg2 ;
+(void)setForceAlwaysOptionEnabled:(BOOL)arg1 ;
+(id)sharedLocationManager;
-(id)initWithAnalytics:(id)arg1 analyticsPerfLogger:(id)arg2 ;
-(void)onApplicationWillResignActive:(id)arg1 ;
-(void)onApplicationDidBecomeActive:(id)arg1 ;
-(void)onApplicationDidEnterInBackground:(id)arg1 ;
-(void)_stopUpdatingLocationForReason:(id)arg1 ;
-(BOOL)_updateLocationManagerDesiredAccuracy;
-(unsigned long long)countSubscriptionsThatRequireLocation;
-(void)_startUpdatingLocationForReason:(id)arg1 ;
-(CLLocation *)lastLocationGood;
-(BOOL)_location:(id)arg1 withinHorizontalAccuracy:(double)arg2 andTime:(double)arg3 ;
-(void)setLastLocationGood:(CLLocation *)arg1 ;
-(void)_startAccurateFixTimeoutTimerForSubscription:(id)arg1 ;
-(id)registerBlock:(/*^block*/id)arg1 desiredAccuracy:(double)arg2 isLocationListener:(BOOL)arg3 callPath:(id)arg4 ;
-(void)_cancelAccurateFixTimeoutTimer:(id)arg1 ;
-(void)setRestartTimer:(NSTimer *)arg1 ;
-(void)_suspendLocationService:(id)arg1 ;
-(void)_restartLocationManagerAfterDelay:(double)arg1 ;
-(void)setLastLocationAny:(CLLocation *)arg1 ;
-(void)_sendObserversLocation:(id)arg1 forSubscriptions:(id)arg2 ;
-(void)_sendObserversError:(id)arg1 ;
-(void)_restartLocationManager;
-(void)_fireAccurateFixTimeoutTimer:(id)arg1 ;
-(CLLocation *)lastLocationAny;
-(unsigned long long)_findSupportedLocationAuthorization;
-(void)simulateLocation:(id)arg1 ;
-(void)stopSimulatingLocation;
-(id)registerBlockForAuthorizationStatusChange:(/*^block*/id)arg1 ;
-(id)registerBlock:(/*^block*/id)arg1 desiredAccuracy:(double)arg2 callPath:(id)arg3 ;
-(id)addLocationListener:(/*^block*/id)arg1 callPath:(id)arg2 ;
-(void)unregisterSubscription:(id)arg1 ;
-(void)unregisterAuthStatusBlock:(id)arg1 ;
-(BOOL)registeredBlock:(id)arg1 ;
-(CLLocation *)coreLocationLocation;
-(NSTimer *)restartTimer;
-(void)dealloc;
-(id)init;
-(NSError *)lastError;
-(void)setLastError:(NSError *)arg1 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(void)locationManager:(id)arg1 didFailWithError:(id)arg2 ;
-(void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2 ;
@end

