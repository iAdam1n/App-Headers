/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:38 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/MNRichMediaUploadListener.h>

@protocol OS_dispatch_queue, MNRichMediaUploadJobFactory, FBNetworkDispatch;
@class NSObject, FBQueuePerformer, NSMutableDictionary, NSMutableArray, NSString;

@interface MNRichMediaUploadHandler : NSObject <MNRichMediaUploadListener> {

	NSObject*<OS_dispatch_queue> _queue;
	FBQueuePerformer* _queuePerformer;
	id<MNRichMediaUploadJobFactory> _uploadJobFactory;
	id<FBNetworkDispatch> _networkDispatcher;
	NSMutableDictionary* _uploads;
	NSMutableArray* _pendingTokens;
	NSString* _currentUploadToken;
	NSMutableArray* _resumableTokens;
	long long _resumableUploadsMemoryUsageInBytes;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)uploadDidSucceed:(id)arg1 withContentFBID:(id)arg2 metrics:(id)arg3 ;
-(void)uploadDidFail:(id)arg1 withFailureReason:(unsigned long long)arg2 isResumable:(BOOL)arg3 metrics:(id)arg4 ;
-(void)uploadWasCancelled:(id)arg1 metrics:(id)arg2 ;
-(void)uploadHasProgressed:(id)arg1 withProgressInformation:(MNRichMediaUploadJobProgressInformation)arg2 ;
-(void)_deleteUploadForToken:(id)arg1 ;
-(id)_popPendingUpload;
-(void)_insertPendingUpload:(id)arg1 ;
-(void)_initiateUploadIfPossible;
-(void)_removePendingUploadByToken:(id)arg1 ;
-(BOOL)uploadIsResumable:(id)arg1 ;
-(void)_uploadHasFinishedForever:(id)arg1 ;
-(void)_uploadHasFinishedResumably:(id)arg1 ;
-(void)_insertResumableUpload:(id)arg1 ;
-(id)initWithUploadJobFactory:(id)arg1 userSession:(id)arg2 queue:(id)arg3 ;
-(id)startUploadJobWithContent:(id)arg1 config:(id)arg2 listener:(id)arg3 ;
-(void)cancelUploadByToken:(id)arg1 ;
-(void)resumeUploadingForToken:(id)arg1 listener:(id)arg2 ;
-(MNRichMediaUploadJobMetadata)uploadMetadataForToken:(id)arg1 ;
@end

