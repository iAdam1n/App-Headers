/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:10 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/NSURLConnectionDelegate.h>
#import <Messenger/NSURLConnectionDataDelegate.h>
#import <Messenger/FBURLProtocolUploadDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source;
@class FBHttpRequestInternalState, FBHttpExecutor, FBHttpExecutorListenerAnnouncer, NSOperationQueue, NSObject, NSURLRequest, NSHTTPURLResponse, NSURLConnection, FBURLRequestPriorityHandle, FBURLRequestProtocolIdentificationHandle, FBMobileTraceRemoteTokenPtr, NSString;

@interface FBHttpAttempt : NSObject <NSURLConnectionDelegate, NSURLConnectionDataDelegate, FBURLProtocolUploadDelegate> {

	FBHttpRequestInternalState* _requestState;
	FBHttpExecutor* _executor;
	FBHttpExecutorListenerAnnouncer* _announcer;
	NSOperationQueue* _connectionQueue;
	NSObject*<OS_dispatch_queue> _requestDelegateCallbackQueue;
	NSObject*<OS_dispatch_queue> _networkerCallbackQueue;
	NSObject*<OS_dispatch_queue> _announcementQueue;
	NSObject*<OS_dispatch_source> _timeoutIntervalTimer;
	long long _priority;
	double _timeoutInterval;
	BOOL _disableCustomProtocols;
	NSURLRequest* _urlRequest;
	NSHTTPURLResponse* _urlResponse;
	NSURLConnection* _connection;
	FBURLRequestPriorityHandle* _priorityHandle;
	FBURLRequestProtocolIdentificationHandle* _protocolIdentificationHandle;
	FBMobileTraceRemoteTokenPtr* _remoteToken;
	int _fbtraceDataReceivedTraceCount;
	unsigned long long _lastUploadProgressBytes;
	double _requestAddTime;
	double _requestBeginTime;
	double _requestEndTime;
	double _responseBeginTime;
	double _responseEndTime;
	double _requestFlushBeginTime;
	unsigned long long _bytesDownUncompressed;
	unsigned long long _expectedBytesDownUncompressed;
	unsigned long long _bytesUp;
	unsigned long long _expectedBytesUp;
	NSString* _protocolEngineUsed;
	double _roundtripLatency;
	double _downloadBandwidth;
	double _uploadBandwidth;
	unsigned long long _operatingConnectionType;
	BOOL _cleanedUp;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)operationQueueForConnectionDelegate;
-(id)_statusSnapshot;
-(void)_setCustomPropertiesOn:(id)arg1 ;
-(void)_resetTimeoutIntervalTimer;
-(void)URLProtocol:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4 ;
-(id)initWithRequest:(id)arg1 executor:(id)arg2 networkerCallbackQueue:(id)arg3 requestState:(id)arg4 announcer:(id)arg5 announcementQueue:(id)arg6 idleTimeout:(double)arg7 disableCustomProtocols:(BOOL)arg8 initialDownloadBandwidth:(double)arg9 initialUploadBandwidth:(double)arg10 initialLatency:(double)arg11 operatingConnectionType:(unsigned long long)arg12 ;
-(void)changePriorityTo:(long long)arg1 ;
-(void)cancel;
-(id)init;
-(BOOL)_cleanup;
-(void)start;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)_failWithError:(id)arg1 ;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4 ;
-(id)connection:(id)arg1 willCacheResponse:(id)arg2 ;
-(BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2 ;
@end

