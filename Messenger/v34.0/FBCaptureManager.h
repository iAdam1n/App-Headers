/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:40:26 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/E282ADAB-AF96-4184-9890-B5E58B4BDDD0/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/AVCaptureVideoDataOutputSampleBufferDelegate.h>
#import <Messenger/AVCaptureAudioDataOutputSampleBufferDelegate.h>
#import <Messenger/FBAudioSessionManagerClient.h>
#import <Messenger/FBSessionClassProvidable.h>

@protocol OS_dispatch_queue, FBCaptureManagerDelegate;
@class AVCaptureVideoPreviewLayer, FBVideoRecorder, AVCaptureSession, FBCaptureManagerListenerAnnouncer, NSObject, NSString, AVCaptureDevice, AVCaptureDeviceInput, AVCaptureVideoDataOutput, AVCaptureStillImageOutput, AVCaptureAudioDataOutput;

@interface FBCaptureManager : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, FBAudioSessionManagerClient, FBSessionClassProvidable> {

	AVCaptureVideoPreviewLayer* _previewLayer;
	FBVideoRecorder* _videoRecorder;
	AVCaptureSession* _captureSession;
	AVCaptureSession* _audioSession;
	BOOL _didStopSession;
	double _bitRate;
	FBCaptureManagerListenerAnnouncer* _announcer;
	NSObject*<OS_dispatch_queue> _sessionQueue;
	NSObject*<OS_dispatch_queue> _audioBufferQueue;
	NSObject*<OS_dispatch_queue> _videoBufferQueue;
	BOOL _isVideoEnabled;
	BOOL _isAudioEnabled;
	id<FBCaptureManagerDelegate> _delegate;
	long long _capturePosition;
	NSString* _sessionPreset;
	AVCaptureDevice* _rearCamera;
	/*^block*/id _previewLayerCompletionBlock;
	AVCaptureDeviceInput* _videoDeviceInput;
	AVCaptureVideoDataOutput* _videoDataOutput;
	AVCaptureStillImageOutput* _stillImageOutput;
	AVCaptureDeviceInput* _audioDeviceInput;
	AVCaptureAudioDataOutput* _audioDataOutput;
	unsigned long long _state;

}

@property (nonatomic,readonly) AVCaptureVideoPreviewLayer * previewLayer; 
@property (assign,nonatomic,__weak) id<FBCaptureManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (getter=isRunning,nonatomic,readonly) BOOL running; 
@property (assign,nonatomic) BOOL isVideoEnabled;                                       //@synthesize isVideoEnabled=_isVideoEnabled - In the implementation block
@property (assign,nonatomic) BOOL isAudioEnabled;                                       //@synthesize isAudioEnabled=_isAudioEnabled - In the implementation block
@property (assign,nonatomic) long long capturePosition;                                 //@synthesize capturePosition=_capturePosition - In the implementation block
@property (nonatomic,copy) NSString * sessionPreset;                                    //@synthesize sessionPreset=_sessionPreset - In the implementation block
@property (assign,nonatomic) AVCaptureDevice * rearCamera;                              //@synthesize rearCamera=_rearCamera - In the implementation block
@property (nonatomic,copy) id previewLayerCompletionBlock;                              //@synthesize previewLayerCompletionBlock=_previewLayerCompletionBlock - In the implementation block
@property (nonatomic,retain) AVCaptureDeviceInput * videoDeviceInput;                   //@synthesize videoDeviceInput=_videoDeviceInput - In the implementation block
@property (nonatomic,retain) AVCaptureVideoDataOutput * videoDataOutput;                //@synthesize videoDataOutput=_videoDataOutput - In the implementation block
@property (nonatomic,retain) AVCaptureStillImageOutput * stillImageOutput;              //@synthesize stillImageOutput=_stillImageOutput - In the implementation block
@property (nonatomic,retain) AVCaptureDeviceInput * audioDeviceInput;                   //@synthesize audioDeviceInput=_audioDeviceInput - In the implementation block
@property (nonatomic,retain) AVCaptureAudioDataOutput * audioDataOutput;                //@synthesize audioDataOutput=_audioDataOutput - In the implementation block
@property (assign,nonatomic) unsigned long long state;                                  //@synthesize state=_state - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long audioDirection; 
@property (nonatomic,readonly) unsigned long long outputCoordinationMode; 
@property (nonatomic,readonly) unsigned long long outputOptions; 
@property (nonatomic,readonly) unsigned long long inputOptions; 
@property (nonatomic,readonly) unsigned long long clientPriority; 
+(id)videoDeviceInputPreferringPosition:(long long)arg1 ;
+(id)deviceWithMediaType:(id)arg1 preferringPosition:(long long)arg2 ;
+(void)setFlashMode:(long long)arg1 forDevice:(id)arg2 ;
+(void)setTorchMode:(long long)arg1 forDevice:(id)arg2 ;
-(id)initWithProviderMapData:(id)arg1 ;
-(unsigned long long)audioDirection;
-(unsigned long long)outputOptions;
-(unsigned long long)outputCoordinationMode;
-(void)finishInterruptionAndResume:(BOOL)arg1 ;
-(void)highPriorityClientBecameActive;
-(id)_createPreviewLayerIfNeeded;
-(void)_configureCaptureSessionWithMainThreadCompletion:(/*^block*/id)arg1 ;
-(void)_configureAndStartCaptureSession;
-(void)_configureCaptureSessionCommon;
-(void)_configureCaptureSessionForStillImage;
-(void)_configureCaptureSessionForVideo;
-(void)_updateConnectionMirrorSettings;
-(AVCaptureVideoDataOutput *)videoDataOutput;
-(AVCaptureDeviceInput *)videoDeviceInput;
-(void)_setVideoOrientationForCaptureConnection:(id)arg1 ;
-(void)subsribeNSNotificationEventsForAudioRecoding;
-(void)_configureAndStartAudioSession;
-(void)_ensureAudioSession;
-(AVCaptureDeviceInput *)audioDeviceInput;
-(AVCaptureAudioDataOutput *)audioDataOutput;
-(void)_startRunningAudioSession;
-(void)_stopAVCaptureSession:(id)arg1 ;
-(void)setVideoDeviceInput:(AVCaptureDeviceInput *)arg1 ;
-(void)captureImageWithOverlayView:(id)arg1 ;
-(void)captureImageWithOverlayView:(id)arg1 overlayRotationAngle:(double)arg2 ;
-(void)_completeStillImageCapturingWithSampleBuffer:(opaqueCMSampleBufferRef)arg1 error:(id)arg2 inputSize:(CGSize)arg3 overlay:(id)arg4 rotationAngle:(double)arg5 ;
-(long long)capturePosition;
-(void)_performStartRecording;
-(void)_configureAudioSessionWithMainThreadCompletion:(/*^block*/id)arg1 ;
-(BOOL)_ensureState:(unsigned long long)arg1 ;
-(void)_setUpCaptureConnectionForVideoRecording;
-(void)stopRecordingWithOverlay:(id)arg1 ;
-(void)_completeVideoCapture:(id)arg1 overlayLayer:(id)arg2 ;
-(void)_tearDownAudioConfiguration;
-(void)setPreviewLayerCompletionBlock:(id)arg1 ;
-(id)previewLayerCompletionBlock;
-(void)_completeVideoCapture:(id)arg1 ;
-(void)_finishVideoCaptureWithLoadedAsset:(id)arg1 ;
-(void)_handleVideoRecordFailed;
-(void)_suspendAudioRecording;
-(void)_resumeAudioRecording;
-(AVCaptureDevice *)rearCamera;
-(void)stopSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)setCapturePosition:(long long)arg1 ;
-(void)createPreviewLayerWithCompletion:(/*^block*/id)arg1 ;
-(void)addCaptureManagerListener:(id)arg1 ;
-(void)removeCaptureManagerListener:(id)arg1 ;
-(void)adjustCaptureSettingsAtScaledPoint:(CGPoint)arg1 ;
-(void)setRearCamera:(AVCaptureDevice *)arg1 ;
-(void)setVideoDataOutput:(AVCaptureVideoDataOutput *)arg1 ;
-(void)setAudioDeviceInput:(AVCaptureDeviceInput *)arg1 ;
-(void)setAudioDataOutput:(AVCaptureAudioDataOutput *)arg1 ;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(NSString *)sessionPreset;
-(void)setSessionPreset:(NSString *)arg1 ;
-(void)captureOutput:(id)arg1 didDropSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)beginInterruption;
-(void)dealloc;
-(void)setDelegate:(id<FBCaptureManagerDelegate>)arg1 ;
-(id<FBCaptureManagerDelegate>)delegate;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(BOOL)isRunning;
-(void)stopRecording;
-(AVCaptureVideoPreviewLayer *)previewLayer;
-(void)cancelRecording;
-(void)setStillImageOutput:(AVCaptureStillImageOutput *)arg1 ;
-(AVCaptureStillImageOutput *)stillImageOutput;
-(void)startRecording;
-(void)captureImage;
-(BOOL)isVideoEnabled;
-(BOOL)isAudioEnabled;
-(void)setIsVideoEnabled:(BOOL)arg1 ;
-(void)setIsAudioEnabled:(BOOL)arg1 ;
-(void)setBitRate:(double)arg1 ;
-(void)startSession;
@end

