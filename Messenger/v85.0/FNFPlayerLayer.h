/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <QuartzCore/CAEAGLLayer.h>
#import <Messenger/FNFDecompressionSessionDelegate.h>
#import <Messenger/FNFPlayerDisplayEngine.h>
#import <Messenger/FNFAVPlayerLayer.h>

@protocol FNFPlayerRenderer, FNFDecompressionSession, OS_dispatch_queue, FNFPlayerDisplayEngineDelegate;
@class NSString, NSError, EAGLContext, CADisplayLink, NSObject, FNFRenderingThread;

@interface FNFPlayerLayer : CAEAGLLayer <FNFDecompressionSessionDelegate, FNFPlayerDisplayEngine, FNFAVPlayerLayer> {

	id<FNFPlayerRenderer> _renderer;
	id<FNFPlayerRenderer> _detachedRenderer;
	id<FNFPlayerRenderer> _defaultRenderer;
	int _backingWidth;
	int _backingHeight;
	EAGLContext* _context;
	CVBufferRef _lumaTexture;
	CVBufferRef _chromaTexture;
	CVOpenGLESTextureCacheRef _videoTextureCache;
	unsigned _frameBufferHandle;
	unsigned _colorBufferHandle;
	const float* _preferredConversion;
	double _preferredRotation;
	CGAffineTransform _preferredTransform;
	CADisplayLink* _displayLink;
	NSString* _videoGravity;
	unsigned long long _framesLoop;
	BOOL _shouldRenderWhilePlaybackPaused;
	BOOL _needsToSetupGLState;
	BOOL _layoutChanged;
	BOOL _glInitialized;
	CGSize _presentationRect;
	CGSize _layerSize;
	BOOL _isReadyForDisplay;
	BOOL _supportOpenGLTextureRg;
	unsigned long long _framesDecompressed;
	_CVBuffer* _buffers[60];
	SCD_Struct_FB21 _bufferTimes[60];
	long long _bufferIndexes[60];
	unsigned long long _decompressionSessionIndexStart;
	unsigned long long _framesEnqueued;
	id<FNFDecompressionSession> _decompressionSession;
	/*^block*/id _dataBlock;
	NSObject*<OS_dispatch_queue> _dataQueue;
	BOOL _requestingData;
	NSError* _layerError;
	OpaqueCMTimebaseRef _controlTimeBase;
	unsigned long long _framesRead;
	BOOL _offMainThreadRendering;
	FNFRenderingThread* _renderingThread;
	BOOL _optimizeMemory;
	id<FNFPlayerDisplayEngineDelegate> _playerLayerDelegate;

}

@property (assign,nonatomic,__weak) id<FNFPlayerDisplayEngineDelegate> playerLayerDelegate;              //@synthesize playerLayerDelegate=_playerLayerDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy) NSString * videoGravity; 
@property (retain) OpaqueCMTimebaseRef controlTimebase; 
@property (nonatomic,readonly) long long status; 
@property (nonatomic,readonly) NSError * error; 
@property (assign,nonatomic) CGAffineTransform preferredTransform; 
@property (nonatomic,retain) id<FNFAVPlayer> player; 
@property (getter=isReadyForDisplay,nonatomic,readonly) BOOL readyForDisplay; 
-(id)initWithConfigs:(SCD_Struct_FB244)arg1 ;
-(void)_displayLinkCallback:(id)arg1 ;
-(void)invalidateRenderer:(id)arg1 ;
-(void)setRenderingThreadPriority:(double)arg1 ;
-(void)yieldDecompressedBuffer:(CVBufferRef)arg1 presentationTimeStamp:(SCD_Struct_FB21)arg2 presentationDuration:(SCD_Struct_FB21)arg3 iFrame:(unsigned long long)arg4 ;
-(void)displayPixelBuffer:(CVBufferRef)arg1 ;
-(void)_drawFrame:(BOOL)arg1 ;
-(void)_requestData;
-(void)_cleanUpTextures;
-(void)_invalidateRenderer:(id)arg1 ;
-(void)_releaseTimeBase;
-(void)_updateReadyForDisplay:(BOOL)arg1 ;
-(void)_resetGLContext;
-(void)_flushBuffers:(unsigned long long)arg1 framesEnqueued:(unsigned long long)arg2 ;
-(void)_addBuffer:(CVBufferRef)arg1 presentationTimeStamp:(SCD_Struct_FB21)arg2 iFrameEnqueued:(unsigned long long)arg3 ;
-(void)display:(CVBufferRef)arg1 presentationTimeStamp:(SCD_Struct_FB21)arg2 presentationDuration:(SCD_Struct_FB21)arg3 iFrameEnqueued:(unsigned long long)arg4 ;
-(void)_handleError:(id)arg1 ifIFrameStillValid:(unsigned long long)arg2 ;
-(id<FNFPlayerDisplayEngineDelegate>)playerLayerDelegate;
-(void)_setPreferredTransform:(id)arg1 ;
-(void)handleDecompressionSessionError:(id)arg1 ;
-(void)handleDecompressionSessionError:(id)arg1 ifIFrameStillValid:(unsigned long long)arg2 ;
-(BOOL)flushIfError;
-(void)setPlayerLayerDelegate:(id<FNFPlayerDisplayEngineDelegate>)arg1 ;
-(void)dealloc;
-(void)invalidate;
-(void)flush;
-(void)resume;
-(void)layoutSublayers;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(long long)status;
-(void)setRenderer:(id)arg1 ;
-(void)setPreferredTransform:(CGAffineTransform)arg1 ;
-(void)setControlTimebase:(OpaqueCMTimebaseRef)arg1 ;
-(OpaqueCMTimebaseRef)controlTimebase;
-(void)stopRequestingMediaData;
-(void)enqueueSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)flushAndRemoveImage;
-(void)_handleError:(id)arg1 ;
-(NSString *)videoGravity;
-(CGAffineTransform)preferredTransform;
-(void)setPlayer:(id<FNFAVPlayer>)arg1 ;
-(NSError *)error;
-(id<FNFAVPlayer>)player;
-(void)_setRenderer:(id)arg1 ;
-(BOOL)isReadyForDisplay;
-(void)setVideoGravity:(NSString *)arg1 ;
-(void)_clearBuffers;
-(void)pauseDisplayLink;
-(void)pause:(int)arg1 ;
-(void)_setupGL;
-(void)_setupBuffers;
-(BOOL)isReadyForMoreMediaData;
-(void)requestMediaDataWhenReadyOnQueue:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)_destroyBuffers;
@end

