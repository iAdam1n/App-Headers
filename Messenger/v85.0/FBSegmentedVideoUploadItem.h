/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:23 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBChunkedVideoUploadItem.h>
#import <Messenger/FBMediaUploadListener.h>
#import <Messenger/FBAudioCopyrighValidatorDelegate.h>

@class FBSegmentedVideoUploadItemState, FBVideoUploadCache, FBVideoSegmentedTranscoder, FBUserSession, FBMediaSimpleUploadHandler, NSMutableDictionary, FBAudioCopyrightValidator, FBExperimentManager, NSString;

@interface FBSegmentedVideoUploadItem : FBChunkedVideoUploadItem <FBMediaUploadListener, FBAudioCopyrighValidatorDelegate> {

	int _maxNumberOfVideoSegments;
	int _maxVideoSegmentDurationInSeconds;
	FBSegmentedVideoUploadItemState* _uploadState;
	double _transcodingProgress;
	double _uploadProgress;
	BOOL _shouldRecoverState;
	FBVideoUploadCache* _stateCache;
	FBVideoSegmentedTranscoder* _transcoder;
	FBUserSession* _session;
	FBMediaSimpleUploadHandler* _uploadHandler;
	BOOL _useResumableUpload;
	NSMutableDictionary* _ruploadJobs;
	FBAudioCopyrightValidator* _audioCopyrightValidator;
	FBExperimentManager* _experimentManager;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)networkerRequest:(id)arg1 didSucceed:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didFail:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didCancelWithStatus:(id)arg2 ;
-(void)uploadDidSucceed:(id)arg1 withResponse:(id)arg2 metrics:(id)arg3 ;
-(void)uploadDidFail:(id)arg1 withFailureReason:(unsigned long long)arg2 isResumable:(BOOL)arg3 metrics:(id)arg4 ;
-(void)uploadWasCancelled:(id)arg1 metrics:(id)arg2 ;
-(void)uploadHasProgressed:(id)arg1 withProgressInformation:(FBMediaUploadJobProgressInformation)arg2 ;
-(int)mediaUploadItemType;
-(void)stateAwareStart;
-(BOOL)isUploadInProcess;
-(void)continueUploadRequest;
-(void)processMediaItemWithUploadSettings:(SCD_Struct_FB85)arg1 completion:(/*^block*/id)arg2 ;
-(void)cleanupWithCallback:(/*^block*/id)arg1 ;
-(NSRange)nextChunkRangeFromStartOffset:(unsigned long long)arg1 endOffset:(unsigned long long)arg2 ;
-(void)checkpointUploadState;
-(double)totalProgressForRequestProgress:(double)arg1 ;
-(id)apiParametersWithProcessedContext:(id)arg1 ;
-(BOOL)isNextUploadRequestReady;
-(BOOL)sendNextUploadRequest;
-(id)startTransferWithParameters:(id)arg1 ;
-(id)initWithVideoAttachment:(id)arg1 persistentKeyValueStore:(id)arg2 publisherData:(id)arg3 logger:(id)arg4 experimentManager:(id)arg5 networkDispatcher:(id)arg6 maxNumberOfVideoSegments:(int)arg7 maxVideoSegmentDurationInSeconds:(int)arg8 shouldUploadVideoWithoutPublishing:(BOOL)arg9 useServerSideSettings:(BOOL)arg10 shouldRecoverState:(BOOL)arg11 shouldForceUsingNativeEncoder:(BOOL)arg12 shouldForceRawFileUpload:(BOOL)arg13 stateCache:(id)arg14 userSession:(id)arg15 ;
-(BOOL)useNewTranscodeLibrary;
-(float)videoProcessProgressPercent;
-(void)_resetUploadRequestStateForAllPartitions;
-(void)exportRawVideoAndContinue;
-(void)encodeVideoAndContinueWithSettings:(SCD_Struct_FB85)arg1 ;
-(void)_restartMediaItemProcessingWithDefaultUploadSettings;
-(void)onExportSegmentComplete:(id)arg1 ;
-(void)reportTranscodingProgress;
-(void)onExportSuccess;
-(void)reportProcessError:(id)arg1 ;
-(void)exportRawCompositionVideoAndContinue:(id)arg1 ;
-(void)startValidatingAndFingerprinting;
-(void)_encodeUsingTranscoderWithProgressBlock:(/*^block*/id)arg1 segmentCompletionBlock:(/*^block*/id)arg2 completionBlock:(/*^block*/id)arg3 outputURL:(id)arg4 settings:(SCD_Struct_FB85)arg5 ;
-(id)_findNextUploadPartition;
-(BOOL)_continueUploadRequestViaRUpload:(id)arg1 ;
-(id)_fileDataForPartition:(id)arg1 range:(NSRange)arg2 ;
-(id)_maxRetryCountForRUploads;
-(BOOL)_allSegmentUploadCompleted;
-(NSRange)_makeChunkRange:(unsigned long long)arg1 endOffset:(unsigned long long)arg2 ;
-(void)populateNextChunkForSegment:(id)arg1 segment:(id)arg2 ;
-(id)_partitionForRUploadJobID:(id)arg1 ;
-(void)copyrightValidationDidFailForAssetURL:(id)arg1 error:(id)arg2 ;
-(void)copyrightValidationDidFindMatchForAssetURL:(id)arg1 withCopyrightResult:(id)arg2 ;
-(void)cancel;
-(void)_start;
-(void)start;
-(void)cleanup;
@end

