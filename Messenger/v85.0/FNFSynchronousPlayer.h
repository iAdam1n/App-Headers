/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FNFPlayerDisplayEngineDelegate.h>

@protocol FNFAssetForPlayer, FNFPlayerAudioEngine, FNFPlayerDisplayEngine, FNFClock, OS_dispatch_queue, FNFSynchronousPlayerDelegate;
@class NSObject, NSError;

@interface FNFSynchronousPlayer : NSObject <FNFPlayerDisplayEngineDelegate> {

	id<FNFAssetForPlayer> _playerAsset;
	id<FNFPlayerAudioEngine> _audioQueue;
	id<FNFPlayerDisplayEngine> _layer;
	id<FNFClock> _clock;
	NSObject*<OS_dispatch_queue> _runningQueue;
	FNFPlayerState _playerState;
	long long _status;
	NSError* _playerError;
	BOOL _muted;
	float _volume;
	float _volumeRampTime;
	id<FNFSynchronousPlayerDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<FNFSynchronousPlayerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSError * error; 
-(void)setVolume:(float)arg1 rampTime:(float)arg2 ;
-(SCD_Struct_FB21)lastStartingTime;
-(void)addTimeObserver:(id)arg1 ;
-(id)initWithDisplayEngine:(id)arg1 audioEngine:(id)arg2 clock:(id)arg3 runningQueue:(id)arg4 muted:(BOOL)arg5 ;
-(id)createPeriodicTimeObserverForInterval:(SCD_Struct_FB21)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)queueForLayerUpdates;
-(void)layerUpdatedWithError:(id)arg1 ;
-(BOOL)_readyToPlay;
-(void)_setupAudio;
-(id)_addStallTimer;
-(void)_resumePlayback;
-(id)_addPlaybackTimerForAsset;
-(id)_addDurationTimerForAsset;
-(void)_updateStatus:(long long)arg1 ;
-(void)_pause:(int)arg1 ;
-(void)_updateTimersOnPause;
-(void)_pausePlayback:(int)arg1 ;
-(void)_setupLayer;
-(void)_startVideo;
-(void)_manageStallState;
-(void)_syncVolume;
-(BOOL)_videoHasAudioTrack;
-(void)_adjustAudioFrameToCurrentPlaybackTime;
-(BOOL)_videoIsAudioActive;
-(void)_playbackTimeListenerForAsset:(SCD_Struct_FB21)arg1 ;
-(void)_playbackFinishedTimeForAsset:(SCD_Struct_FB21)arg1 ;
-(BOOL)_videoBufferLengthIsGreaterThan:(SCD_Struct_FB21)arg1 ;
-(BOOL)_audioBufferLengthIsGreaterThan:(SCD_Struct_FB21)arg1 ;
-(BOOL)_enqueuedTime:(SCD_Struct_FB21)arg1 isGreaterThanLength:(SCD_Struct_FB21)arg2 ;
-(void)_audioQueueErrorCallback:(id)arg1 ;
-(BOOL)_audioPutDataIntoBufferCallback:(AudioQueueBuffer*)arg1 timestamp:(AudioTimeStamp*)arg2 ;
-(void)_videoLayerEnqueueFrameCallback;
-(id)layer;
-(void)setDelegate:(id<FNFSynchronousPlayerDelegate>)arg1 ;
-(void)dealloc;
-(id)description;
-(id<FNFSynchronousPlayerDelegate>)delegate;
-(id)currentItem;
-(void)applicationDidBecomeActive;
-(void)applicationWillResignActive;
-(void)pause;
-(long long)status;
-(void)setRenderer:(id)arg1 ;
-(void)setRate:(float)arg1 ;
-(SCD_Struct_FB21)currentTime;
-(NSError *)error;
-(void)removeTimeObserver:(id)arg1 ;
-(void)replaceCurrentItemWithPlayerItem:(id)arg1 ;
-(float)rate;
-(void)play;
-(void)seekToTime:(SCD_Struct_FB21)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isMuted;
-(void)setMuted:(BOOL)arg1 ;
-(void)setVolume:(float)arg1 ;
-(float)volume;
@end

