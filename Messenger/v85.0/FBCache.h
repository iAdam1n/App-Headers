/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Messenger/Messenger-Structs.h>
@interface FBCache : NSObject {

	Cache<NSObject *, NSObject *, std::__1::hash<NSObject *>, std::__1::equal_to<NSObject *> >* _imp;
	mutex _impLock;
	BOOL _enabled;
	BOOL _shouldCompactOnMemoryWarning;
	BOOL _shouldRemoveAllObjectsWhenEnteringBackground;
	double _compactionFactorForMemoryWarning;

}

@property (nonatomic,readonly) unsigned long long maximumCost; 
@property (assign,nonatomic) double compactionFactor; 
@property (assign,nonatomic) BOOL shouldCompactOnMemoryWarning;                              //@synthesize shouldCompactOnMemoryWarning=_shouldCompactOnMemoryWarning - In the implementation block
@property (nonatomic,readonly) double compactionFactorForMemoryWarning;                      //@synthesize compactionFactorForMemoryWarning=_compactionFactorForMemoryWarning - In the implementation block
@property (assign,nonatomic) BOOL shouldRemoveAllObjectsWhenEnteringBackground;              //@synthesize shouldRemoveAllObjectsWhenEnteringBackground=_shouldRemoveAllObjectsWhenEnteringBackground - In the implementation block
+(void)setEnableAggressiveMemoryCompaction;
-(double)compactionFactor;
-(id)initWithMaximumCost:(unsigned long long)arg1 ;
-(id)initWithMaximumCost:(unsigned long long)arg1 cacheStrategy:(unsigned long long)arg2 options:(id)arg3 compactionFactorForMemoryWarning:(double)arg4 ;
-(void)setShouldCompactOnMemoryWarning:(BOOL)arg1 ;
-(void)setShouldRemoveAllObjectsWhenEnteringBackground:(BOOL)arg1 ;
-(id)initWithMaximumCost:(unsigned long long)arg1 cacheStrategy:(unsigned long long)arg2 ;
-(void)setCompactionFactor:(double)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 withCost:(unsigned long long)arg3 ;
-(unsigned long long)maximumCost;
-(id)initWithMaximumCost:(unsigned long long)arg1 cacheStrategy:(unsigned long long)arg2 options:(id)arg3 ;
-(BOOL)shouldCompactOnMemoryWarning;
-(void)compactOnMemoryWarning;
-(BOOL)shouldRemoveAllObjectsWhenEnteringBackground;
-(void)disableAndDrain;
-(void)compactWithFactor:(double)arg1 ;
-(vector<std::__1::pair<NSObject *const, NSObject *>, std::__1::allocator<std::__1::pair<NSObject *const, NSObject *> > >*)_cacheCopy;
-(unsigned long long)totalCost;
-(double)compactionFactorForMemoryWarning;
-(void)dealloc;
-(unsigned long long)count;
-(void)removeAllObjects;
-(id)description;
-(void)enumerateKeysAndObjectsUsingBlock:(/*^block*/id)arg1 ;
-(id)objectForKey:(id)arg1 ;
-(void)removeObjectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(id)allKeys;
-(id)allObjects;
-(void)enable;
-(void)removeObjectsForKeys:(id)arg1 ;
-(void)compact;
@end

