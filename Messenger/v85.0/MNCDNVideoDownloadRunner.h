/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:27 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNCDNAssetDownloadRunning.h>
#import <Messenger/FBNetworkerRequestDelegate.h>

@protocol OS_dispatch_queue, MNCDNVideoDownloadRunnerListening, MNCDNAssetDownloadRunnerRetrying;
@class NSObject, MNCDNVideoDownloadRequest, FBVideoNetworker, NSURL, NSMutableData, FNFAssetResourceLoader, FNFAssetResourceLoadingRequest, NSString;

@interface MNCDNVideoDownloadRunner : NSObject <MNCDNAssetDownloadRunning, FBNetworkerRequestDelegate> {

	BOOL _isRetrying;
	BOOL _didStartDownload;
	NSObject*<OS_dispatch_queue> _queue;
	unsigned long long _downloadId;
	id<MNCDNVideoDownloadRunnerListening> _downloadListener;
	id<MNCDNAssetDownloadRunnerRetrying> _retrier;
	MNCDNVideoDownloadRequest* _downloadRequest;
	FBVideoNetworker* _videoNetworker;
	NSURL* _videoUrl;
	NSMutableData* _result;
	FNFAssetResourceLoader* _resourceLoader;
	FNFAssetResourceLoadingRequest* _resourceLoaderRequest;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_downloadDidFailWithError:(id)arg1 ;
-(void)downloadAssetAtURL:(id)arg1 withDownloadId:(unsigned long long)arg2 withFulfillmentPolicy:(unsigned long long)arg3 withRetrier:(id)arg4 onQueue:(id)arg5 ;
-(void)initialURLResolutionDidFailWithError:(id)arg1 withDownloadId:(unsigned long long)arg2 ;
-(void)_dataCallback:(id)arg1 ;
-(void)_dataFinished:(id)arg1 withFulfillmentPolicy:(unsigned long long)arg2 ;
-(void)_didUpdateDownloadProgress:(double)arg1 complete:(BOOL)arg2 ;
-(void)_didFail:(id)arg1 withFulfillmentPolicy:(unsigned long long)arg2 ;
-(void)_didSucceed:(id)arg1 ;
-(void)_retryDownloadAssetAtContentURL:(id)arg1 withFulfillmentPolicy:(unsigned long long)arg2 ;
-(id)initWithVideoDownloadRequest:(id)arg1 downloadListener:(id)arg2 videoNetworker:(id)arg3 ;
-(id)_resourceLoaderRequest;
-(void)cancelDownload;
@end

