/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:18:21 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/6F5201FD-3D2F-4BE1-80E5-E1251C7564E3/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNTypingNotificationManagerDelegate.h>
#import <Messenger/MNMessagesModelControllerMessagesLoaderDelegate.h>
#import <Messenger/FBMMessageReceivedLegacyListening.h>
#import <Messenger/MNPushMessageReceivedListening.h>
#import <Messenger/MNMessageRefreshNetworkRunnerListening.h>
#import <Messenger/MNMessagesModelControllerThreadViewModelMonitorAdapterDelegate.h>
#import <Messenger/MNThreadViewModelConfigurable.h>
#import <Messenger/FBMMessageSendListening.h>
#import <Messenger/FBMThreadMessageSenderListening.h>
#import <Messenger/MNPendingThreadRequestListening.h>
#import <Messenger/MNAttributionAppSupplementaryInfoLoaderListener.h>
#import <Messenger/MNThreadContextManagerListener.h>
#import <Messenger/MNPageResponsivenessUpdaterListener.h>
#import <Messenger/MNWelcomeNuxUpdaterListener.h>
#import <Messenger/FBFriendChangedMonitorListener.h>
#import <Messenger/MNUserStoreExternalUserUpdateListening.h>

@protocol MNAuthenticationManager, MNMessageListFetchedMemoryStateAffirming, MNMessageRefreshNetworkRunnerListening, MNPendingThreadQuerying, FBFriendChangedMonitorListener, MNUserMonitoring, MNThreadViewModelUpdateMonitorListening, OS_dispatch_queue, FBClock, MNMessagesModelControllerDelegate;
@class FBMLocalThreadMessagesQuerier, MNTypingNotificationManager, MNMessagesModelMessageDeleteListenerAnnouncer, MNMessageVideoControllerMap, MNMessageRefreshNetworkRunnerListeningAnnouncer, MNThreadViewModelLoader, MNMessagesModelControllerMessagesLoader, FBMMessageReceiptUpdater, NSMutableArray, MNMessagesModelControllerViewModelLoadingListenerAnnouncer, FBMThreadMessageSender, MNThreadSummaryUpdateRunningService, FBMMessageReceivedLegacyListeningAnnouncer, MNPushMessageReceivedListeningAnnouncer, MNThreadViewModelUpdateMonitor, MNMessagesModelControllerThreadViewModelMonitorAdapter, MNThreadViewModelMonitorFilterer, NSObject, FBMobileConfigContextManager, MNMessagesViewModelSourceUpdater, MNThreadViewModel, MNAppMessage, NSString;

@interface MNMessagesModelController : NSObject <MNTypingNotificationManagerDelegate, MNMessagesModelControllerMessagesLoaderDelegate, FBMMessageReceivedLegacyListening, MNPushMessageReceivedListening, MNMessageRefreshNetworkRunnerListening, MNMessagesModelControllerThreadViewModelMonitorAdapterDelegate, MNThreadViewModelConfigurable, FBMMessageSendListening, FBMThreadMessageSenderListening, MNPendingThreadRequestListening, MNAttributionAppSupplementaryInfoLoaderListener, MNThreadContextManagerListener, MNPageResponsivenessUpdaterListener, MNWelcomeNuxUpdaterListener, FBFriendChangedMonitorListener, MNUserStoreExternalUserUpdateListening> {

	id<MNAuthenticationManager> _authManager;
	FBMLocalThreadMessagesQuerier* _threadMessagesQuerier;
	MNTypingNotificationManager* _typingManager;
	MNMessagesModelMessageDeleteListenerAnnouncer* _deleteAnnouncer;
	MNMessageVideoControllerMap* _videoControllerMap;
	id<MNMessageListFetchedMemoryStateAffirming> _messageListFetchedAffirmer;
	MNMessageRefreshNetworkRunnerListeningAnnouncer* _messageRefreshAnnouncer;
	id<MNMessageRefreshNetworkRunnerListening> _messageRefreshListenerDispatcher;
	MNThreadViewModelLoader* _threadModelLoader;
	unsigned long long _threadModelLoadRequestId;
	MNMessagesModelControllerMessagesLoader* _messagesLoader;
	FBMMessageReceiptUpdater* _messageReceiptUpdater;
	id<MNPendingThreadQuerying> _pendingThreadQuerier;
	NSMutableArray* _optimisticOutgoingAppMessages;
	MNMessagesModelControllerViewModelLoadingListenerAnnouncer* _threadViewModelLoadAnnouncer;
	FBMThreadMessageSender* _threadMessageSender;
	MNThreadSummaryUpdateRunningService* _threadSummaryUpdateService;
	FBMMessageReceivedLegacyListeningAnnouncer* _legacyMessageReceivedListeningAnnouncer;
	MNPushMessageReceivedListeningAnnouncer* _pushMessageReceivedListeningAnnouncer;
	id<FBFriendChangedMonitorListener> _friendChangedMonitorListenerDispatcher;
	id<MNUserMonitoring> _userMonitor;
	MNThreadViewModelUpdateMonitor* _threadViewModelUpdateMonitor;
	MNMessagesModelControllerThreadViewModelMonitorAdapter* _monitorAdapter;
	MNThreadViewModelMonitorFilterer* _monitorFilterer;
	id<MNThreadViewModelUpdateMonitorListening> _dispatchedMonitorListener;
	id<MNThreadViewModelUpdateMonitorListening> _dispatchedFiltererListener;
	NSObject*<OS_dispatch_queue> _filtererQueue;
	/*^block*/id _modelLoadedCompleteBlock;
	FBMobileConfigContextManager* _configManager;
	MNMessagesViewModelSourceUpdater* _messagesViewModelSourceUpdater;
	id<FBClock> _clock;
	BOOL _isThreadFetchPending;
	BOOL _requestsShouldBeForeground;
	BOOL _isCurrentlyPerformingNetworkFetch;
	id<MNMessagesModelControllerDelegate> _delegate;
	MNThreadViewModel* _threadViewModel;
	MNAppMessage* _latestSeenMessage;

}

@property (nonatomic,retain) MNThreadViewModel * threadViewModel;                                              //@synthesize threadViewModel=_threadViewModel - In the implementation block
@property (assign,nonatomic) BOOL requestsShouldBeForeground;                                                  //@synthesize requestsShouldBeForeground=_requestsShouldBeForeground - In the implementation block
@property (assign,nonatomic) BOOL isCurrentlyPerformingNetworkFetch;                                           //@synthesize isCurrentlyPerformingNetworkFetch=_isCurrentlyPerformingNetworkFetch - In the implementation block
@property (nonatomic,copy) MNAppMessage * latestSeenMessage;                                                   //@synthesize latestSeenMessage=_latestSeenMessage - In the implementation block
@property (assign,nonatomic,__weak) id<MNMessagesModelControllerDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) MNMessagesViewModelSourceUpdater * messagesViewModelSourceUpdater;              //@synthesize messagesViewModelSourceUpdater=_messagesViewModelSourceUpdater - In the implementation block
@property (assign,nonatomic) BOOL isThreadFetchPending;                                                        //@synthesize isThreadFetchPending=_isThreadFetchPending - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)threadMessageSenderDidCommitSendingOutgoingMessage:(id)arg1 toTarget:(id)arg2 ;
-(void)willCreateThreadForPendingThread:(id)arg1 ;
-(void)didCreateThreadWithKey:(id)arg1 forPendingThread:(id)arg2 ;
-(void)didFailToCreateThreadForPendingThread:(id)arg1 error:(id)arg2 ;
-(void)didCancelCreatingThreadForPendingThread:(id)arg1 ;
-(void)willRetryCreatingThreadForPendingThread:(id)arg1 ;
-(void)didScheduleSendingMessage:(id)arg1 toPendingThread:(id)arg2 ;
-(void)didCancelSendingMessage:(id)arg1 fromPendingThread:(id)arg2 ;
-(void)didReceiveAPNSMessage:(id)arg1 supportsPreview:(BOOL)arg2 userActionInfo:(id)arg3 preparedThreadSummary:(id)arg4 ;
-(void)didReceiveSyncMessage:(id)arg1 ;
-(void)didRestoreAPNSMessagesFromDiskWithAffectedThreadKeys:(id)arg1 ;
-(void)didEnqueueMessage:(id)arg1 ;
-(void)didPublishMessage:(id)arg1 ;
-(void)didSendMessage:(id)arg1 ;
-(void)didPutMessageBackInQueue:(id)arg1 ;
-(void)didCancelMessage:(id)arg1 ;
-(void)didFailMessage:(id)arg1 error:(id)arg2 ;
-(void)willRetryMessage:(id)arg1 ;
-(void)message:(id)arg1 didUpdateUploadProgress:(double)arg2 ;
-(MNThreadViewModel *)threadViewModel;
-(void)configureThreadViewModelDependenciesWith:(id)arg1 ;
-(void)tearDownThreadViewModelDependencies;
-(void)setThreadViewModel:(MNThreadViewModel *)arg1 ;
-(MNMessagesViewModelSourceUpdater *)messagesViewModelSourceUpdater;
-(void)foregroundNetworkRequests;
-(void)backgroundNetworkRequests;
-(void)deleteThread;
-(void)updateLatestSeenMessageWith:(id)arg1 ;
-(void)deleteMessage:(id)arg1 ;
-(void)deleteOutgoingMessageWithOfflineThreadingId:(id)arg1 ;
-(BOOL)hasAnyMessages;
-(BOOL)isCurrentlyPerformingNetworkFetch;
-(BOOL)hasOneMessage;
-(BOOL)canLoadMoreMessages;
-(BOOL)isCurrentlyPerformingFetch;
-(MNAppMessage *)latestSeenMessage;
-(void)fetchUnreadMessages:(long long)arg1 ;
-(void)reloadThreadViewModelWithNetworkIndicator:(BOOL)arg1 ;
-(BOOL)isThreadFetchPending;
-(void)setIsThreadFetchPending:(BOOL)arg1 ;
-(void)threadContextManagerDidUpdateThreadContextForThreadKey:(id)arg1 ;
-(id)initWithAuthenticationManager:(id)arg1 threadMessagesQuerier:(id)arg2 threadMessageSender:(id)arg3 typingManager:(id)arg4 threadSummaryUpdateService:(id)arg5 threadModelLoader:(id)arg6 videoControllerMap:(id)arg7 pendingThreadQuerier:(id)arg8 messageReceiptUpdater:(id)arg9 threadViewModelLoadAnnouncer:(id)arg10 legacyMessageReceivedAnnouncer:(id)arg11 pushMessageReceivedAnnouncer:(id)arg12 messageListFetchedAffirmer:(id)arg13 messageRefreshAnnouncer:(id)arg14 userMonitor:(id)arg15 threadViewModelUpdateMontior:(id)arg16 configManager:(id)arg17 clock:(id)arg18 ;
-(void)addMessagesModelMessageDeletionListener:(id)arg1 ;
-(void)didFinishNetworkFetchOfUsers:(id)arg1 ;
-(void)didInvalidateUsersWithIds:(id)arg1 ;
-(void)didInvalidateAllUsers;
-(void)didUpdateUsersWithIds:(id)arg1 ;
-(void)typingBecameActive;
-(void)typingBecameInactive;
-(void)_startObservations;
-(void)_stopObservations;
-(void)_clearCurrentRequest;
-(void)_setUpMonitor;
-(void)_updateReadStateFromTypingIfNecessary;
-(void)setLatestSeenMessage:(MNAppMessage *)arg1 ;
-(void)_threadImageDidChange:(id)arg1 ;
-(void)messageRefreshNetworkRunnerDidFetchMesssage:(id)arg1 ;
-(void)messageRefreshNetworkRunnerDidFailToFetchMessageWithId:(id)arg1 onThreadWithKey:(id)arg2 dueToError:(id)arg3 ;
-(BOOL)isLoadingMoreMessages;
-(BOOL)_shouldShowLoadingIndicator;
-(void)_updateLoadingIndicator:(long long)arg1 ;
-(void)_reloadThreadViewModelWithNetworkIndicator:(BOOL)arg1 withIncrementedMessageCount:(BOOL)arg2 ;
-(void)_reloadThreadViewModelWithNetworkIndicator:(BOOL)arg1 localThreadQuery:(id)arg2 messagesLoadingConfiguration:(id)arg3 ;
-(void)_handleViewModelLoaded:(id)arg1 ;
-(void)_handleViewModelProgress:(id)arg1 longOperationDidBegin:(BOOL)arg2 ;
-(void)_handleViewModelLoadFailure:(id)arg1 ;
-(void)_propagateThreadUpdateWith:(id)arg1 ;
-(void)_callViewModelLoadedCompleteBlockIfNecessary;
-(void)_updateMessagesViewModelSourceTypingState;
-(void)_didReceiveMessageWithThreadKey:(id)arg1 senderId:(id)arg2 isLocalSend:(BOOL)arg3 pushSource:(unsigned long long)arg4 ;
-(void)_updateTypingStateUponNewMessageFrom:(id)arg1 ;
-(void)_invalidateOptimisticOutgoingAppMessagesWithLoadedThreadViewModel:(id)arg1 ;
-(void)_markThreadReadIfNeeded;
-(void)_didReceiveResult:(id)arg1 deletingMessage:(id)arg2 ;
-(void)_didFinishSuccessfulllyDeletingMessage:(id)arg1 ;
-(void)unbindFromCurrentViewModelDueToDeleteWithPrompt:(BOOL)arg1 ;
-(id)_appMessageForOutgoingMessage:(id)arg1 ;
-(void)_addOptimisticOutgoingMessage:(id)arg1 ;
-(void)_reloadIfCurrentViewModelContainsUserWithinUserIds:(id)arg1 ;
-(id)_threadKeyToMonitorFor;
-(void)beginReloadThreadViewModelWithCompleteBlock:(/*^block*/id)arg1 shouldIncrementMessageCountToFetch:(BOOL)arg2 ;
-(BOOL)shouldAllowUpdateThroughForThreadKey:(id)arg1 ;
-(void)didLoadAttributionAppSupplementaryInfoWithThreadKey:(id)arg1 ;
-(void)pageResponsivenessUpdaterDidUpdateResponsivenessForPage:(id)arg1 ;
-(void)welcomeNuxUpdaterDidUpdateWelcomeNuxForUser:(id)arg1 ;
-(void)removeMessagesModelMessageDeletionListener:(id)arg1 ;
-(void)setIsCurrentlyPerformingNetworkFetch:(BOOL)arg1 ;
-(void)messagesLoader:(id)arg1 didLoadMoreMessagesWithThreadViewModelLoadResult:(id)arg2 ;
-(void)messagesLoader:(id)arg1 didLoadUnreadMessagesWithThreadViewModelLoadResult:(id)arg2 ;
-(void)messagesLoader:(id)arg1 didBeginLoadingMoreMessages:(BOOL)arg2 withPreliminaryResult:(id)arg3 ;
-(void)messagesLoader:(id)arg1 didFailLoadingMoreMessagesWithError:(id)arg2 ;
-(void)messagesLoader:(id)arg1 didFailLoadingUnreadMessagesWithError:(id)arg2 ;
-(BOOL)requestsShouldBeForeground;
-(void)setRequestsShouldBeForeground:(BOOL)arg1 ;
-(void)setDelegate:(id<MNMessagesModelControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<MNMessagesModelControllerDelegate>)delegate;
-(void)loadMoreMessages;
-(void)didReceiveMessage:(id)arg1 ;
@end

