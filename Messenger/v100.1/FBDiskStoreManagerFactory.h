/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:33 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBInvalidating.h>

@class NSString;

@interface FBDiskStoreManagerFactory : NSObject <FBInvalidating> {

	mutex _lock;
	unordered_map<std::__1::basic_string<char>, std::__1::shared_future<FBDiskStoreManagerWrapper>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_future<FBDiskStoreManagerWrapper> > > >* _managers;
	BOOL _invalidated;
	shared_ptr<facebook::mobile::xplat::compactdisk::StoreManagerFactory>* _storeManagerFactory;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isValid,nonatomic,readonly) BOOL valid; 
-(id)diskStoreManagerForManagerName:(id)arg1 ;
-(id)initWithStoreManagerFactory:(shared_ptr<facebook::mobile::xplat::compactdisk::StoreManagerFactory>*)arg1 ;
-(id)diskStoreManagerWithDiskCacheConfig:(id)arg1 ;
-(id)diskStoreManagerWithStore:(unsigned)arg1 ;
-(id)diskStoreManagerWithStoreName:(id)arg1 ;
-(id)diskStoreManagerWithStore:(unsigned)arg1 forGroupIdentifier:(id)arg2 ownerContext:(BOOL)arg3 ;
-(id)diskStoreManagerWithStoreName:(id)arg1 forGroupIdentifier:(id)arg2 ownerContext:(BOOL)arg3 ;
-(id)diskStoreManagerWithDiskCacheConfig:(id)arg1 forGroupIdentifier:(id)arg2 ownerContext:(BOOL)arg3 ;
-(id)diskStoreManagerForManagerName:(id)arg1 groupIdentifier:(id)arg2 ownerContext:(BOOL)arg3 ;
-(id)_diskStoreManagerForManagerName:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg1 groupIdentifier:(const basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)arg2 ownerContext:(BOOL)arg3 ;
-(void)invalidate;
-(BOOL)isValid;
-(id)identifiers;
@end

