/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:31 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBValueObject.h>
#import <libobjc.A.dylib/NSCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface FBMQTTExperiments : FBValueObject <NSCoding, NSCopying> {

	BOOL _useWhistle;
	BOOL _useWhistleDNSCache;
	BOOL _useWhistleSPDYStream;
	BOOL _whistleResetOnNetworkSwitch;
	BOOL _optionalCompression;
	BOOL _whistleNoBgTaskOnConnect;
	BOOL _enableConnectionMerge;
	BOOL _whistleUseWorkerThread;
	BOOL _useZeroProtocol;
	BOOL _enableFastSend;
	BOOL _startWithFastReconnect;
	BOOL _whistleUseProxy;
	BOOL _dedicatedMQTTThread;
	BOOL _enableWhistleRadioMonitor;

}

@property (nonatomic,readonly) BOOL useWhistle;                               //@synthesize useWhistle=_useWhistle - In the implementation block
@property (nonatomic,readonly) BOOL useWhistleDNSCache;                       //@synthesize useWhistleDNSCache=_useWhistleDNSCache - In the implementation block
@property (nonatomic,readonly) BOOL useWhistleSPDYStream;                     //@synthesize useWhistleSPDYStream=_useWhistleSPDYStream - In the implementation block
@property (nonatomic,readonly) BOOL whistleResetOnNetworkSwitch;              //@synthesize whistleResetOnNetworkSwitch=_whistleResetOnNetworkSwitch - In the implementation block
@property (nonatomic,readonly) BOOL optionalCompression;                      //@synthesize optionalCompression=_optionalCompression - In the implementation block
@property (nonatomic,readonly) BOOL whistleNoBgTaskOnConnect;                 //@synthesize whistleNoBgTaskOnConnect=_whistleNoBgTaskOnConnect - In the implementation block
@property (nonatomic,readonly) BOOL enableConnectionMerge;                    //@synthesize enableConnectionMerge=_enableConnectionMerge - In the implementation block
@property (nonatomic,readonly) BOOL whistleUseWorkerThread;                   //@synthesize whistleUseWorkerThread=_whistleUseWorkerThread - In the implementation block
@property (nonatomic,readonly) BOOL useZeroProtocol;                          //@synthesize useZeroProtocol=_useZeroProtocol - In the implementation block
@property (nonatomic,readonly) BOOL enableFastSend;                           //@synthesize enableFastSend=_enableFastSend - In the implementation block
@property (nonatomic,readonly) BOOL startWithFastReconnect;                   //@synthesize startWithFastReconnect=_startWithFastReconnect - In the implementation block
@property (nonatomic,readonly) BOOL whistleUseProxy;                          //@synthesize whistleUseProxy=_whistleUseProxy - In the implementation block
@property (nonatomic,readonly) BOOL dedicatedMQTTThread;                      //@synthesize dedicatedMQTTThread=_dedicatedMQTTThread - In the implementation block
@property (nonatomic,readonly) BOOL enableWhistleRadioMonitor;                //@synthesize enableWhistleRadioMonitor=_enableWhistleRadioMonitor - In the implementation block
-(id)initWithUseWhistle:(BOOL)arg1 useWhistleDNSCache:(BOOL)arg2 useWhistleSPDYStream:(BOOL)arg3 whistleResetOnNetworkSwitch:(BOOL)arg4 optionalCompression:(BOOL)arg5 whistleNoBgTaskOnConnect:(BOOL)arg6 enableConnectionMerge:(BOOL)arg7 whistleUseWorkerThread:(BOOL)arg8 useZeroProtocol:(BOOL)arg9 enableFastSend:(BOOL)arg10 startWithFastReconnect:(BOOL)arg11 whistleUseProxy:(BOOL)arg12 dedicatedMQTTThread:(BOOL)arg13 enableWhistleRadioMonitor:(BOOL)arg14 ;
-(BOOL)useWhistleSPDYStream;
-(BOOL)enableFastSend;
-(BOOL)useWhistle;
-(BOOL)useWhistleDNSCache;
-(BOOL)whistleResetOnNetworkSwitch;
-(BOOL)optionalCompression;
-(BOOL)whistleNoBgTaskOnConnect;
-(BOOL)enableConnectionMerge;
-(BOOL)whistleUseWorkerThread;
-(BOOL)useZeroProtocol;
-(BOOL)startWithFastReconnect;
-(BOOL)whistleUseProxy;
-(BOOL)dedicatedMQTTThread;
-(BOOL)enableWhistleRadioMonitor;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
@end

