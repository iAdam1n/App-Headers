/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:18 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIViewController.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <UIKit/UICollectionViewDelegateFlowLayout.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <Messenger/MNMediaTrayDataSourceDelegate.h>
#import <Messenger/MNMediaTrayViewPhotoCellDelegate.h>
#import <Messenger/MNMediaTrayViewDelegate.h>
#import <Messenger/MNHorizontalLineLayoutDelegate.h>

@protocol MNAlertControllerPresenting, MNMediaTrayDataSource, MNMediaTrayViewControllerDelegate;
@class MNMediaTrayView, MNMediaTraySelectedImageGenerator, MNMediaTrayVisibilityListeningAnnouncer, MNPermissionsViewController, MNLocalAssetAccessibilityLabelGenerator, FBAssetsLibrary, NSString, NSIndexPath, MNMediaTrayConfiguration, FBViewStateDebouncer, NSArray, NSDate, UIColor;

@interface MNMediaTrayViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UIScrollViewDelegate, MNMediaTrayDataSourceDelegate, MNMediaTrayViewPhotoCellDelegate, MNMediaTrayViewDelegate, MNHorizontalLineLayoutDelegate> {

	MNMediaTrayView* _mediaTrayView;
	BOOL _isVisible;
	BOOL _collectionViewNeedsReload;
	MNMediaTraySelectedImageGenerator* _selectedImageGenerator;
	MNMediaTrayVisibilityListeningAnnouncer* _visibilityAnnouncer;
	MNPermissionsViewController* _permissionsViewController;
	id<MNAlertControllerPresenting> _alertControllerPresenter;
	MNLocalAssetAccessibilityLabelGenerator* _assetAccessibilityLabelGenerator;
	FBAssetsLibrary* _assetsLibrary;
	NSString* _applicationName;
	NSIndexPath* _selectedIndexPath;
	MNMediaTrayConfiguration* _config;
	FBViewStateDebouncer* _debouncer;
	NSArray* _assetIds;
	id<MNMediaTrayDataSource> _mediaTrayDataSource;
	NSDate* _startLoadingTime;
	BOOL _hasLoggedInitialLoadingInterval;
	id<MNMediaTrayViewControllerDelegate> _delegate;
	NSArray* _selectedAssetsIndexPaths;
	UIColor* _tintColor;

}

@property (assign,nonatomic,__weak) id<MNMediaTrayViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy,readonly) NSArray * selectedAssetsIndexPaths;                          //@synthesize selectedAssetsIndexPaths=_selectedAssetsIndexPaths - In the implementation block
@property (nonatomic,retain) UIColor * tintColor;                                                //@synthesize tintColor=_tintColor - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)scrollToBeginningAnimated:(BOOL)arg1 ;
-(void)loadSelectedAssetsWithCompletion:(/*^block*/id)arg1 ;
-(void)_initPermissionsViewControllerIfNecessary;
-(id)initWithMediaTrayDataSource:(id)arg1 mediaAccessibilityLabelGenerator:(id)arg2 applicationName:(id)arg3 mediaTrayConfiguration:(id)arg4 alertControllerPresenter:(id)arg5 ;
-(void)mediaTrayViewPhotoCellDidSelectSend:(id)arg1 ;
-(void)mediaTrayViewPhotoCellDidSelectEdit:(id)arg1 ;
-(BOOL)mediaTrayViewPhotoCellShouldShowCheckMark:(id)arg1 ;
-(id)_cellReuseIdentifierPhoto;
-(id)_cellReuseIdentifierVideo;
-(void)_permissionGranted;
-(void)_permissionDenied;
-(void)_reloadCollectionViewIfNeeded;
-(void)_startVideoPlaybackForVisibleCells;
-(void)_stopVideoPlaybackForVisibleCells;
-(void)_didSelectTrimVideoAtIndex:(long long)arg1 ;
-(void)_deselectItemAtIndexPath:(id)arg1 ;
-(void)_setNeedsReloadCollectionView;
-(void)_enumerateVisibleVideoCellsUsingBlock:(/*^block*/id)arg1 ;
-(void)_nudgeCellAtIndexPathIntoViewIfNeeded:(id)arg1 ;
-(BOOL)_canReloadCollectionView;
-(void)_updateActionViewVisibility;
-(long long)_numMediaItemsToShow;
-(BOOL)_shouldShowPhotoPickerButton;
-(BOOL)_isVideoCellAtIndex:(long long)arg1 ;
-(void)_requestThumbnailForCell:(id)arg1 atIndex:(long long)arg2 ;
-(void)_didLoadStaticThumbnail:(id)arg1 forCell:(id)arg2 ;
-(void)_didLoadAnimatedThumbnail:(id)arg1 forCell:(id)arg2 ;
-(void)_generateBlurredThumbnailForCellIfNeeded:(id)arg1 ;
-(double)_sanitizedAspectRatioForCellAtIndexPath:(id)arg1 ;
-(void)_didSelectIndexPath:(id)arg1 ;
-(id)_durationForAssetAtIndex:(long long)arg1 ;
-(BOOL)_isPhotoCellAtIndex:(long long)arg1 ;
-(void)_didSelectEditPhotoAtIndex:(long long)arg1 ;
-(void)_didSelectVideoWithDayEditingAtIndex:(long long)arg1 ;
-(void)_showCouldNotEditPhotoError:(id)arg1 ;
-(id)_assetIdAtIndex:(long long)arg1 ;
-(void)_mediaTrayDidSelectEditFBVideoAsset:(id)arg1 urlAsset:(id)arg2 thumbnail:(id)arg3 identifier:(id)arg4 ;
-(void)_showAlertWithTitle:(id)arg1 message:(id)arg2 ;
-(void)mediaTrayDataSourceDidUpdate:(id)arg1 ;
-(void)mediaTrayViewDidSelectPhotoPicker:(id)arg1 ;
-(void)setMediaTrayDataSource:(id)arg1 ;
-(BOOL)_isVideoTooLongAtIndex:(long long)arg1 ;
-(void)_showCouldNotSendPhotoError:(id)arg1 ;
-(NSArray *)selectedAssetsIndexPaths;
-(void)setDelegate:(id<MNMediaTrayViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(id<MNMediaTrayViewControllerDelegate>)delegate;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInCollectionView:(id)arg1 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)loadView;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3 ;
-(void)viewDidLoad;
-(void)_reloadCollectionView;
-(void)deselectAllAssets;
-(void)_dismissAlertController;
@end

