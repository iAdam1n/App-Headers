/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:20 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/FBExpandableMediaBlockController.h>
#import <Messenger/FBNativeArticleVideoScrubberDelegate.h>
#import <Messenger/POPAnimationDelegate.h>
#import <Messenger/FBVideoNodeDelegate.h>
#import <Messenger/FBAudioSessionManagerClient.h>

@protocol FBVideoEntityProtocol, FBVideoPlaybackLoggingDataProvider;
@class NSTimer, FBUserSession, FBRichStoryBlockDisplayContext, FBInteractiveMediaNodeController, FBVideoNode, FBNativeArticleVideoScrubber, FBNativeArticleVideoPlayPauseButton, FBNativeArticleAudioMuteAnnotationNode, NSString;

@interface FBExpandableVideoBlockController : FBExpandableMediaBlockController <FBNativeArticleVideoScrubberDelegate, POPAnimationDelegate, FBVideoNodeDelegate, FBAudioSessionManagerClient> {

	BOOL _shouldOverrideMuteSwitch;
	NSTimer* _annotationFadeTimer;
	BOOL _annotationsVisible;
	BOOL _autoplayEnabled;
	BOOL _controlsEnabled;
	long long _loopingStyle;
	BOOL _fadeAudio;
	id<FBVideoEntityProtocol> _videoEntity;
	id<FBVideoPlaybackLoggingDataProvider> _loggingProvider;
	BOOL _hd;
	BOOL _shouldDisplayPlayPauseButton;
	BOOL _shouldDisplayVideoScrubber;
	FBUserSession* _session;
	FBRichStoryBlockDisplayContext* _displayContext;
	FBInteractiveMediaNodeController* _interactiveMediaNodeController;
	FBVideoNode* _videoNode;
	BOOL _shouldResumePlayingAfterScrubbing;
	BOOL _shouldFadeOutAnnotationsAfterResumeFromStall;
	BOOL _shouldAutoplayOnInteractiveFocus;
	BOOL _shouldPlayOnExpansion;
	BOOL _playbackStalled;
	unsigned char _userInitiatedPlaybackState;
	BOOL _muteInlineVideos;
	FBNativeArticleVideoScrubber* _videoScrubber;
	FBNativeArticleVideoPlayPauseButton* _playPauseButton;
	FBNativeArticleAudioMuteAnnotationNode* _audioMuteAnnotationNode;

}

@property (nonatomic,retain) FBNativeArticleVideoScrubber * videoScrubber;                                  //@synthesize videoScrubber=_videoScrubber - In the implementation block
@property (nonatomic,retain) FBNativeArticleVideoPlayPauseButton * playPauseButton;                         //@synthesize playPauseButton=_playPauseButton - In the implementation block
@property (nonatomic,retain) FBNativeArticleAudioMuteAnnotationNode * audioMuteAnnotationNode;              //@synthesize audioMuteAnnotationNode=_audioMuteAnnotationNode - In the implementation block
@property (assign,nonatomic) unsigned char userInitiatedPlaybackState;                                      //@synthesize userInitiatedPlaybackState=_userInitiatedPlaybackState - In the implementation block
@property (assign,nonatomic) BOOL muteInlineVideos;                                                         //@synthesize muteInlineVideos=_muteInlineVideos - In the implementation block
@property (nonatomic,readonly) FBVideoNode * videoNode;                                                     //@synthesize videoNode=_videoNode - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long audioDirection; 
@property (nonatomic,readonly) unsigned long long outputCoordinationMode; 
@property (nonatomic,readonly) unsigned long long outputOptions; 
@property (nonatomic,readonly) unsigned long long inputOptions; 
@property (nonatomic,readonly) unsigned long long clientPriority; 
@property (nonatomic,readonly) unsigned long long audioSessionMode; 
+(BOOL)blockControllerCanRenderStoryBlock:(id)arg1 presentationAttributes:(id)arg2 ;
+(id)blockControllerForStoryBlock:(id)arg1 presentationAttributes:(id)arg2 session:(id)arg3 displayContext:(id)arg4 ;
+(id)layoutForStoryBlock:(id)arg1 constrainingSize:(CGSize)arg2 presentationAttributes:(id)arg3 displayContext:(id)arg4 ;
+(BOOL)_shouldEnableAutoplayVideoForPresentationAttributes:(id)arg1 ;
+(long long)_loopingStyleFromPresentationAttributes:(id)arg1 ;
+(id)landscapeAnnotationsFromAnnotations:(id)arg1 ;
+(id)blockControllerClassesForAnnotationRegistry;
+(CGSize)mediaSizeForBlock:(id)arg1 presentationAttributes:(id)arg2 ;
+(BOOL)_shouldEnableVideoControlsForPresentationAttributes:(id)arg1 ;
+(id)annotationDictionaryForExpandableBlock:(id)arg1 presentationAttributes:(id)arg2 displayContext:(id)arg3 ;
+(id)richStoryVideoEntityForStoryBlock:(id)arg1 presentationAttributes:(id)arg2 ;
-(double)_fadeDuration;
-(void)finishInterruptionAndResume:(BOOL)arg1 ;
-(unsigned long long)outputCoordinationMode;
-(unsigned long long)outputOptions;
-(id)renderableForOverlayAnnotation:(id)arg1 withKey:(id)arg2 annotationController:(id)arg3 ;
-(void)didReceiveFocusWithInteraction:(unsigned long long)arg1 ;
-(void)didLoseFocusWithInteraction:(unsigned long long)arg1 ;
-(void)didGainInteractiveFocus;
-(void)didLoseInteractiveFocus;
-(void)didEnterPreloadViewport;
-(id)expandedOnlyAnnotations;
-(void)willExpandWithAnimationConfiguration:(SCD_Struct_FB70)arg1 ;
-(void)willCollapseWithAnimationConfiguration:(SCD_Struct_FB70)arg1 ;
-(id)collapsedOnlyAnnotations;
-(id)initWithStoryBlock:(id)arg1 presentationAttributes:(id)arg2 session:(id)arg3 displayContext:(id)arg4 ;
-(BOOL)blockCanRespondToGestureInDirection:(long long)arg1 withTouches:(id)arg2 ;
-(void)_didTapPlayPauseButton:(id)arg1 ;
-(void)setShouldOverrideMuteSwitch:(BOOL)arg1 ;
-(void)videoScrubberDidBeginScrubbing:(id)arg1 ;
-(void)videoScrubberDidFinishScrubbing:(id)arg1 ;
-(void)videoScrubber:(id)arg1 didScrubToPlaybackTime:(double)arg2 ;
-(void)videoNodeDidDisplayPreviewImage:(id)arg1 ;
-(void)videoNode:(id)arg1 didUpdatePlaybackTime:(double)arg2 ;
-(void)videoNode:(id)arg1 didUpdateLoadedDuration:(double)arg2 ;
-(void)videoNodeDidPlayToEnd:(id)arg1 ;
-(void)videoNode:(id)arg1 didUpdateStallState:(BOOL)arg2 ;
-(void)videoNode:(id)arg1 didUpdatePausedState:(BOOL)arg2 ;
-(void)videoNode:(id)arg1 willUpdateVolume:(double)arg2 ;
-(void)videoNodeDidStartPlayback:(id)arg1 ;
-(void)orientationState:(id)arg1 didFinishRotationToOrientation:(long long)arg2 fromOrientation:(long long)arg3 ;
-(void)orientationState:(id)arg1 willBeginRotationToOrientation:(long long)arg2 fromOrientation:(long long)arg3 animationConfig:(SCD_Struct_FB70)arg4 ;
-(void)orientationState:(id)arg1 didUpdateRotationToOrientation:(long long)arg2 fromOrientation:(long long)arg3 progress:(double)arg4 ;
-(BOOL)orientationState:(id)arg1 shouldUpdateStatusBarToInterfaceOrientation:(long long)arg2 ;
-(BOOL)pinnable;
-(CGSize)mediaSize;
-(BOOL)aspectFitTogglingEnabled;
-(void)interactiveMediaController:(id)arg1 willAnimateToKeyFrame:(id)arg2 interactionMode:(long long)arg3 previousInteractionMode:(long long)arg4 withAnimation:(SCD_Struct_FB70)arg5 ;
-(void)interactiveMediaControllerWasTapped:(id)arg1 ;
-(id)interactiveMediaNodeController;
-(void)_didTouchDownOnPlayPauseButton:(id)arg1 ;
-(void)_startAnnotationFadeTimer;
-(void)_didTouchInsideAudioMuteAnnotationNode:(id)arg1 ;
-(void)_setAnnotationsVisible:(BOOL)arg1 withAnimationConfiguration:(SCD_Struct_FB70)arg2 ;
-(id)_videoNodeForVideoEntity:(id)arg1 presentationAttributes:(id)arg2 ;
-(FBNativeArticleAudioMuteAnnotationNode *)audioMuteAnnotationNode;
-(BOOL)_isAudioCurrentlyOnForVideoVolume:(double)arg1 ;
-(BOOL)shouldMuteInlineVideos;
-(void)_stopAnnotationFadeTimer;
-(void)setUserInitiatedPlaybackState:(unsigned char)arg1 ;
-(void)_showLoadingIndicatorWithAnimationConfiguration:(SCD_Struct_FB70)arg1 ;
-(SCD_Struct_FB70)_fadeAnimationConfiguration;
-(void)_didFadeOutAudio;
-(void)_updatePlayPauseButtonState;
-(BOOL)_isExpandedEnoughToAcceptTouches;
-(void)_annotationFadeTimerDidFire:(id)arg1 ;
-(unsigned char)userInitiatedPlaybackState;
-(void)_hideLoadingIndicatorWithAnimationConfiguration:(SCD_Struct_FB70)arg1 ;
-(void)setVideoScrubber:(FBNativeArticleVideoScrubber *)arg1 ;
-(void)setAudioMuteAnnotationNode:(FBNativeArticleAudioMuteAnnotationNode *)arg1 ;
-(BOOL)muteInlineVideos;
-(id)initWithBlock:(id)arg1 presentationAttributes:(id)arg2 session:(id)arg3 displayContext:(id)arg4 reachabilityAnnouncer:(id)arg5 videoLoggingDataProvider:(id)arg6 ;
-(void)setMuteInlineVideos:(BOOL)arg1 ;
-(BOOL)autoplayEnabled;
-(BOOL)shouldAlwaysMuteInlineVideos;
-(void)cleanup;
-(void)beginInterruption;
-(id)allAnnotations;
-(FBNativeArticleVideoScrubber *)videoScrubber;
-(FBVideoNode *)videoNode;
-(void)stopPlayback;
-(void)startPlayback;
-(FBNativeArticleVideoPlayPauseButton *)playPauseButton;
-(void)setPlayPauseButton:(FBNativeArticleVideoPlayPauseButton *)arg1 ;
@end

