/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:19 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBViewerContextClassProvidable.h>
#import <Messenger/FBMConfigurable.h>

@protocol FBMQTTChannelCoordinating, MNAuthenticationManager;
@class FBMDeliveryReceiptSendLogger, FBUserSession, FBMobileConfigContextManager, FBMQTTSendResponseListener, NSString;

@interface FBMMQTTSender : NSObject <FBViewerContextClassProvidable, FBMConfigurable> {

	id<FBMQTTChannelCoordinating> _mqttChannelCoordinator;
	id<MNAuthenticationManager> _authManager;
	FBMDeliveryReceiptSendLogger* _deliveryReceiptSendLogger;
	FBUserSession* _session;
	FBMobileConfigContextManager* _configManager;
	FBMQTTSendResponseListener* _responseListener;
	BOOL _serverHasRejectedMessageBatchSend;

}

@property (assign) BOOL serverHasRejectedMessageBatchSend;              //@synthesize serverHasRejectedMessageBatchSend=_serverHasRejectedMessageBatchSend - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(void)sendChatEvent:(id)arg1 ;
-(void)sendThreadPresenceNotification:(id)arg1 state:(int)arg2 ;
-(void)sendTypingNotification:(id)arg1 state:(int)arg2 ;
-(id)initWithAuthManager:(id)arg1 deliveryReceiptSendLogger:(id)arg2 session:(id)arg3 configManager:(id)arg4 queue:(id)arg5 ;
-(void)addMQTTPublisher:(long long)arg1 publisher:(id)arg2 message:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(long long)getTimeoutErrorCode:(BOOL)arg1 connectedErrorCode:(long long)arg2 reachableDisconnectedErrorCode:(long long)arg3 unreachableDisconnectedErrorCode:(long long)arg4 ;
-(BOOL)serverHasRejectedMessageBatchSend;
-(void)configureWithMQTTChannelCoordinator:(id)arg1 ;
-(void)sendMessageUsingThriftPayload:(id)arg1 preparedAttachment:(id)arg2 publishCallback:(/*^block*/id)arg3 finishCallback:(/*^block*/id)arg4 ;
-(double)_heuristicResponseTimeoutForMessageBatch:(id)arg1 ;
-(void)setServerHasRejectedMessageBatchSend:(BOOL)arg1 ;
-(void)addMQTTPublisher:(long long)arg1 topic:(id)arg2 payload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(double)_responseTimeForMessageSend;
-(id)_constructThreadPresencePayload:(id)arg1 ;
-(void)addMQTTPublisher:(long long)arg1 topic:(id)arg2 jsonPayload:(id)arg3 messageKey:(id)arg4 publishCallback:(/*^block*/id)arg5 failureCallback:(/*^block*/id)arg6 publishTimeout:(double)arg7 waitIntervalForConnect:(double)arg8 ;
-(BOOL)canSendMessageBatch;
-(id)getMQTTClientStatus;
-(void)sendMessage:(id)arg1 preparedAttachment:(id)arg2 publishCallback:(/*^block*/id)arg3 finishCallback:(/*^block*/id)arg4 ;
-(void)sendMessageBatch:(id)arg1 publishCallback:(/*^block*/id)arg2 finishCallback:(/*^block*/id)arg3 ;
-(void)sendDeliveryReceipts:(id)arg1 source:(unsigned long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)sendWebRTCMessage:(id)arg1 messageId:(id)arg2 thriftData:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)sendRTCMultiwayMessage:(id)arg1 conferenceName:(id)arg2 transactionId:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)sendWebRTCMessage:(id)arg1 messageId:(id)arg2 jsonData:(id)arg3 callback:(/*^block*/id)arg4 ;
-(void)sendJsonMessage:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)sendThriftMarkThreadMessage:(id)arg1 callback:(/*^block*/id)arg2 ;
-(BOOL)canSend;
-(BOOL)isConfigured;
@end

