/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:18 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNAbstractComposerTrayExtension.h>
#import <Messenger/FBReachabilityListener.h>
#import <Messenger/MNEmojiTrayViewControllerDelegate.h>
#import <Messenger/MNLikePressing.h>
#import <Messenger/FBClassProvidable.h>
#import <Messenger/MNComposerPrimaryExtension.h>

@protocol FBProvider, MNModalPresentation, MNActionNuxPresenter, MNComposerTooltipPresenting, MNComposerEmojiExtensionDelegate;
@class MNEmojiTrayViewController, MNLikePressingListenerAnnouncer, MNEmojiNuxViewController, MNEmojiOmnistore, MNComposerConfiguration, NSString, UIColor;

@interface MNComposerEmojiExtension : MNAbstractComposerTrayExtension <FBReachabilityListener, MNEmojiTrayViewControllerDelegate, MNLikePressing, FBClassProvidable, MNComposerPrimaryExtension> {

	id<FBProvider> _emojiTrayViewControllerProvider;
	MNEmojiTrayViewController* _emojiTrayViewController;
	MNLikePressingListenerAnnouncer* _hawtEmojiPressingAnnouncer;
	BOOL _needsPresentingNux;
	MNEmojiNuxViewController* _emojiNuxViewController;
	MNEmojiOmnistore* _emojiOmnistore;
	id<MNModalPresentation> _modalPresenter;
	MNComposerConfiguration* _composerConfiguration;
	id<MNActionNuxPresenter> _actionNuxPresenter;
	id<MNComposerTooltipPresenting> _tooltipPresenter;
	id<MNComposerEmojiExtensionDelegate> _emojiExtensionDelegate;

}

@property (assign,nonatomic,__weak) id<MNComposerEmojiExtensionDelegate> emojiExtensionDelegate;              //@synthesize emojiExtensionDelegate=_emojiExtensionDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionDelegate> delegate; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionEditDelegate> editDelegate; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionSendDelegate> sendDelegate; 
@property (nonatomic,copy,readonly) NSString * placeholderText; 
@property (nonatomic,copy,readonly) NSString * searchPlaceholderText; 
@property (nonatomic,retain) UIColor * tintColor; 
@property (nonatomic,retain) id<MNActionNuxPresenter> actionNuxPresenter;                                     //@synthesize actionNuxPresenter=_actionNuxPresenter - In the implementation block
@property (nonatomic,readonly) BOOL autoFocusSearchBar; 
@property (nonatomic,copy,readonly) id longPressGestureHandler; 
@property (nonatomic,readonly) UIView*<MNComposerActionButton> primaryActionButton; 
@property (nonatomic,readonly) long long primaryExtensionType; 
@property (nonatomic,retain) id<MNComposerTooltipPresenting> tooltipPresenter;                                //@synthesize tooltipPresenter=_tooltipPresenter - In the implementation block
-(id)initWithProviderMapData:(id)arg1 ;
-(id)_composerIcon;
-(id)extensionModule;
-(BOOL)isInSegmentedControl;
-(void)didSelect:(BOOL)arg1 ;
-(long long)inputSource;
-(void)didUpdateComposingContext:(BOOL)arg1 ;
-(id)viewControllerForPresentation;
-(void)_onReachabilityStateChangedToState:(unsigned long long)arg1 ;
-(void)reachabilityStateChangedTo:(unsigned long long)arg1 from:(unsigned long long)arg2 ;
-(long long)primaryExtensionType;
-(UIView*<MNComposerActionButton>)primaryActionButton;
-(void)didPresentMoreDrawer;
-(id<MNActionNuxPresenter>)actionNuxPresenter;
-(void)setActionNuxPresenter:(id<MNActionNuxPresenter>)arg1 ;
-(BOOL)autoFocusSearchBar;
-(id)longPressGestureHandler;
-(id<MNComposerTooltipPresenting>)tooltipPresenter;
-(void)setTooltipPresenter:(id<MNComposerTooltipPresenting>)arg1 ;
-(id<MNComposerEmojiExtensionDelegate>)emojiExtensionDelegate;
-(void)_initEmojiTrayViewControllerIfNeeded;
-(void)_presentEmojiNuxViewControllerIfPossible;
-(void)_presentEmojiNuxViewController;
-(void)_dismissEmojiNuxViewController:(BOOL)arg1 ;
-(void)_didPresentEmojiNuxViewController;
-(void)_didDismissEmojiNuxViewController:(BOOL)arg1 ;
-(void)emojiTrayViewControllerDidLoadView:(id)arg1 ;
-(void)emojiTrayViewController:(id)arg1 didSelectEmoji:(id)arg2 ;
-(void)emojiTrayViewControllerDidSelectBackspace:(id)arg1 ;
-(void)emojiTrayViewControllerDidSelectText:(id)arg1 ;
-(BOOL)emojiTrayViewControllerToggleTextEnabled:(id)arg1 ;
-(void)emojiTrayViewController:(id)arg1 didBeginLongPressingEmoji:(id)arg2 ;
-(void)emojiTrayViewControllerDidCancelLongPressingEmoji:(id)arg1 ;
-(void)emojiTrayViewController:(id)arg1 didEndLongPressingEmoji:(id)arg2 deepPress:(BOOL)arg3 ;
-(id)likeSourceName;
-(void)addLikePressingListener:(id)arg1 ;
-(void)setEmojiExtensionDelegate:(id<MNComposerEmojiExtensionDelegate>)arg1 ;
-(id)extensionIdentifier;
-(long long)category;
-(id)tabBarItem;
@end

