/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:19 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/TBase.h>
#import <libobjc.A.dylib/NSCoding.h>

@class NSString, NSMutableArray;

@interface FBWebrtcMediaDescription : NSObject <TBase, NSCoding> {

	int __mediaType;
	int __port;
	int __protocol;
	NSString* __mediaIceUserFrag;
	NSString* __mediaIcePassword;
	NSMutableArray* __mediaIceOptions;
	NSString* __mediaSslFingerprintHash;
	NSString* __mediaSslFingerprintDigest;
	NSMutableArray* __extmaps;
	int __sendRecvMode;
	BOOL __hasRtcpMux;
	NSMutableArray* __cryptoParams;
	NSMutableArray* __codecs;
	int __maxPTime;
	int __pTime;
	NSMutableArray* __ssrcObjects;
	NSMutableArray* __candidates;
	BOOL __conferenceMode;
	BOOL __mediaType_isset;
	BOOL __port_isset;
	BOOL __protocol_isset;
	BOOL __mediaIceUserFrag_isset;
	BOOL __mediaIcePassword_isset;
	BOOL __mediaIceOptions_isset;
	BOOL __mediaSslFingerprintHash_isset;
	BOOL __mediaSslFingerprintDigest_isset;
	BOOL __extmaps_isset;
	BOOL __sendRecvMode_isset;
	BOOL __hasRtcpMux_isset;
	BOOL __cryptoParams_isset;
	BOOL __codecs_isset;
	BOOL __maxPTime_isset;
	BOOL __pTime_isset;
	BOOL __ssrcObjects_isset;
	BOOL __candidates_isset;
	BOOL __conferenceMode_isset;

}

@property (assign,setter=setMediaType:,getter=mediaType,nonatomic) int mediaType; 
@property (assign,setter=setPort:,getter=port,nonatomic) int port; 
@property (assign,setter=setProtocol:,getter=protocol,nonatomic) int protocol; 
@property (setter=setMediaIceUserFrag:,getter=mediaIceUserFrag,nonatomic,retain) NSString * mediaIceUserFrag; 
@property (setter=setMediaIcePassword:,getter=mediaIcePassword,nonatomic,retain) NSString * mediaIcePassword; 
@property (setter=setMediaIceOptions:,getter=mediaIceOptions,nonatomic,retain) NSMutableArray * mediaIceOptions; 
@property (setter=setMediaSslFingerprintHash:,getter=mediaSslFingerprintHash,nonatomic,retain) NSString * mediaSslFingerprintHash; 
@property (setter=setMediaSslFingerprintDigest:,getter=mediaSslFingerprintDigest,nonatomic,retain) NSString * mediaSslFingerprintDigest; 
@property (setter=setExtmaps:,getter=extmaps,nonatomic,retain) NSMutableArray * extmaps; 
@property (assign,setter=setSendRecvMode:,getter=sendRecvMode,nonatomic) int sendRecvMode; 
@property (assign,setter=setHasRtcpMux:,getter=hasRtcpMux,nonatomic) BOOL hasRtcpMux; 
@property (setter=setCryptoParams:,getter=cryptoParams,nonatomic,retain) NSMutableArray * cryptoParams; 
@property (setter=setCodecs:,getter=codecs,nonatomic,retain) NSMutableArray * codecs; 
@property (assign,setter=setMaxPTime:,getter=maxPTime,nonatomic) int maxPTime; 
@property (assign,setter=setPTime:,getter=pTime,nonatomic) int pTime; 
@property (setter=setSsrcObjects:,getter=ssrcObjects,nonatomic,retain) NSMutableArray * ssrcObjects; 
@property (setter=setCandidates:,getter=candidates,nonatomic,retain) NSMutableArray * candidates; 
@property (assign,setter=setConferenceMode:,getter=conferenceMode,nonatomic) BOOL conferenceMode; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)read:(id)arg1 ;
-(BOOL)portIsSet;
-(void)unsetPort;
-(void)setMediaIceUserFrag:(NSString *)arg1 ;
-(void)setMediaIcePassword:(NSString *)arg1 ;
-(void)setMediaIceOptions:(NSMutableArray *)arg1 ;
-(void)setMediaSslFingerprintHash:(NSString *)arg1 ;
-(void)setMediaSslFingerprintDigest:(NSString *)arg1 ;
-(void)setExtmaps:(NSMutableArray *)arg1 ;
-(void)setSendRecvMode:(int)arg1 ;
-(void)setHasRtcpMux:(BOOL)arg1 ;
-(void)setCryptoParams:(NSMutableArray *)arg1 ;
-(void)setMaxPTime:(int)arg1 ;
-(void)setPTime:(int)arg1 ;
-(void)setSsrcObjects:(NSMutableArray *)arg1 ;
-(void)setConferenceMode:(BOOL)arg1 ;
-(id)initWithMediaType:(int)arg1 port:(int)arg2 protocol:(int)arg3 mediaIceUserFrag:(id)arg4 mediaIcePassword:(id)arg5 mediaIceOptions:(id)arg6 mediaSslFingerprintHash:(id)arg7 mediaSslFingerprintDigest:(id)arg8 extmaps:(id)arg9 sendRecvMode:(int)arg10 hasRtcpMux:(BOOL)arg11 cryptoParams:(id)arg12 codecs:(id)arg13 maxPTime:(int)arg14 pTime:(int)arg15 ssrcObjects:(id)arg16 candidates:(id)arg17 conferenceMode:(BOOL)arg18 ;
-(BOOL)mediaTypeIsSet;
-(void)unsetMediaType;
-(BOOL)protocolIsSet;
-(void)unsetProtocol;
-(NSString *)mediaIceUserFrag;
-(BOOL)mediaIceUserFragIsSet;
-(void)unsetMediaIceUserFrag;
-(NSString *)mediaIcePassword;
-(BOOL)mediaIcePasswordIsSet;
-(void)unsetMediaIcePassword;
-(NSMutableArray *)mediaIceOptions;
-(BOOL)mediaIceOptionsIsSet;
-(void)unsetMediaIceOptions;
-(NSString *)mediaSslFingerprintHash;
-(BOOL)mediaSslFingerprintHashIsSet;
-(void)unsetMediaSslFingerprintHash;
-(NSString *)mediaSslFingerprintDigest;
-(BOOL)mediaSslFingerprintDigestIsSet;
-(void)unsetMediaSslFingerprintDigest;
-(NSMutableArray *)extmaps;
-(BOOL)extmapsIsSet;
-(void)unsetExtmaps;
-(int)sendRecvMode;
-(BOOL)sendRecvModeIsSet;
-(void)unsetSendRecvMode;
-(BOOL)hasRtcpMux;
-(BOOL)hasRtcpMuxIsSet;
-(void)unsetHasRtcpMux;
-(NSMutableArray *)cryptoParams;
-(BOOL)cryptoParamsIsSet;
-(void)unsetCryptoParams;
-(BOOL)codecsIsSet;
-(void)unsetCodecs;
-(int)maxPTime;
-(BOOL)maxPTimeIsSet;
-(void)unsetMaxPTime;
-(int)pTime;
-(BOOL)pTimeIsSet;
-(void)unsetPTime;
-(NSMutableArray *)ssrcObjects;
-(BOOL)ssrcObjectsIsSet;
-(void)unsetSsrcObjects;
-(BOOL)candidatesIsSet;
-(void)unsetCandidates;
-(BOOL)conferenceMode;
-(BOOL)conferenceModeIsSet;
-(void)unsetConferenceMode;
-(void)setProtocol:(int)arg1 ;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(NSMutableArray *)candidates;
-(void)setCandidates:(NSMutableArray *)arg1 ;
-(void)validate;
-(int)port;
-(int)protocol;
-(void)setCodecs:(NSMutableArray *)arg1 ;
-(NSMutableArray *)codecs;
-(int)mediaType;
-(void)setMediaType:(int)arg1 ;
-(void)write:(id)arg1 ;
-(void)setPort:(int)arg1 ;
@end

