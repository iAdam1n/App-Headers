/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:17 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <Messenger/MNAbstractComposerTrayExtension.h>
#import <Messenger/MNCameraViewControllerDelegate.h>
#import <Messenger/MNComposerLongPressVideoControllerDelegate.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <UIKit/UIImagePickerControllerDelegate.h>
#import <Messenger/MNComposerPrimaryExtension.h>

@protocol FBProvider, MNModalPresentation, FBWebRTCHandler, MNActionNuxPresenter, MNComposerTooltipPresenting;
@class MNAppleMediaPickerController, MNCameraViewController, ZRTariffedUxSentry, FBUserSession, MNUserSettings, MNImageRequester, MNImageUploadCandidateStore, FBLazyCreator, MNComposerCameraExtensionListenerAnnouncer, MNComposerCameraExtensionLogger, MNComposerExtensionInitiator, MNComposerLongPressVideoController, NSString, UIColor;

@interface MNComposerCameraExtension : MNAbstractComposerTrayExtension <MNCameraViewControllerDelegate, MNComposerLongPressVideoControllerDelegate, UINavigationControllerDelegate, UIImagePickerControllerDelegate, MNComposerPrimaryExtension> {

	id<FBProvider> _cameraViewControllerProvider;
	MNAppleMediaPickerController* _mediaPickerController;
	MNCameraViewController* _cameraViewController;
	ZRTariffedUxSentry* _zeroRatingSentry;
	FBUserSession* _userSession;
	MNUserSettings* _userSettings;
	id<MNModalPresentation> _navigationCoordinator;
	MNImageRequester* _imageRequester;
	MNImageUploadCandidateStore* _imageUploadCandidateStore;
	FBLazyCreator* _composerIconCreator;
	id _sendingContextToken;
	MNComposerCameraExtensionListenerAnnouncer* _cameraExtensionEventAnnouncer;
	MNComposerCameraExtensionLogger* _cameraExtensionLogger;
	MNComposerExtensionInitiator* _initiator;
	id<FBWebRTCHandler> _webRTCHandler;
	MNComposerLongPressVideoController* _longPressVideoController;
	id<MNActionNuxPresenter> _actionNuxPresenter;
	id<MNComposerTooltipPresenting> _tooltipPresenter;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionDelegate> delegate; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionEditDelegate> editDelegate; 
@property (assign,nonatomic,__weak) id<MNComposerExtensionSendDelegate> sendDelegate; 
@property (nonatomic,copy,readonly) NSString * placeholderText; 
@property (nonatomic,copy,readonly) NSString * searchPlaceholderText; 
@property (nonatomic,retain) UIColor * tintColor; 
@property (nonatomic,retain) id<MNActionNuxPresenter> actionNuxPresenter;                          //@synthesize actionNuxPresenter=_actionNuxPresenter - In the implementation block
@property (nonatomic,readonly) BOOL autoFocusSearchBar; 
@property (nonatomic,copy,readonly) id longPressGestureHandler; 
@property (nonatomic,readonly) UIView*<MNComposerActionButton> primaryActionButton; 
@property (nonatomic,readonly) long long primaryExtensionType; 
@property (nonatomic,retain) id<MNComposerTooltipPresenting> tooltipPresenter;                     //@synthesize tooltipPresenter=_tooltipPresenter - In the implementation block
-(void)_initMediaPickerViewControllerIfNeeded;
-(id)_composerIcon;
-(void)setUpWithInitiator:(id)arg1 ;
-(void)applyOptions:(id)arg1 ;
-(id)extensionModule;
-(void)didSelect:(BOOL)arg1 ;
-(BOOL)shouldPresent:(BOOL)arg1 ;
-(void)didUpdateComposingContext:(BOOL)arg1 ;
-(id)viewControllerForPresentation;
-(id)initWithCameraViewControllerProvider:(id)arg1 userSession:(id)arg2 userSettings:(id)arg3 navigationCoordinator:(id)arg4 imageUploadCandidateStore:(id)arg5 imageRequester:(id)arg6 composerIconProvider:(id)arg7 webRTCHandler:(id)arg8 longPressVideoControllerProvider:(id)arg9 ;
-(long long)primaryExtensionType;
-(UIView*<MNComposerActionButton>)primaryActionButton;
-(void)composerLongPressVideoControllerWillStartRecording:(id)arg1 ;
-(void)composerLongPressVideoController:(id)arg1 didFinishWithAttachment:(id)arg2 ;
-(void)composerLongPressVideoControllerDidCancelRecording:(id)arg1 ;
-(void)composerLongPressVideoControllerDidReachRecordingLimit:(id)arg1 ;
-(void)composerLongPressVideoController:(id)arg1 showBannerText:(id)arg2 ;
-(void)composerLongPressVideoControllerHideBannerText:(id)arg1 ;
-(void)didPresentMoreDrawer;
-(id<MNActionNuxPresenter>)actionNuxPresenter;
-(void)setActionNuxPresenter:(id<MNActionNuxPresenter>)arg1 ;
-(BOOL)autoFocusSearchBar;
-(id)longPressGestureHandler;
-(id<MNComposerTooltipPresenting>)tooltipPresenter;
-(void)setTooltipPresenter:(id<MNComposerTooltipPresenting>)arg1 ;
-(void)_commitSendingWithAttachment:(id)arg1 ;
-(void)addCameraExtensionEventListener:(id)arg1 ;
-(void)removeCameraExtensionEventListener:(id)arg1 ;
-(void)_restoreStickyCamera;
-(id)_viewControllerForModalPresentation;
-(void)_initCameraViewControllerIfNeeded;
-(void)_dismissCameraViewController;
-(void)_didCancelSending;
-(void)_saveCurrentCamera;
-(id)_stickyCameraDeviceIDFromSettings;
-(void)_dismissModalImagePicker;
-(void)cameraViewControllerDidBeginCapture:(id)arg1 ;
-(void)cameraViewController:(id)arg1 didCaptureImage:(id)arg2 ;
-(void)cameraViewController:(id)arg1 didCaptureVideo:(id)arg2 ;
-(void)cameraViewController:(id)arg1 didSelectSendImage:(id)arg2 metadata:(id)arg3 ;
-(void)cameraViewController:(id)arg1 didSelectSendVideo:(id)arg2 thumbnail:(id)arg3 size:(CGSize)arg4 metadata:(id)arg5 ;
-(void)cameraViewControllerDidCancelCapture:(id)arg1 ;
-(void)cameraViewControllerDidPressCloseButton:(id)arg1 ;
-(void)cameraViewControllerDidPressDismissButtonInPermissionView:(id)arg1 ;
-(void)cameraViewControllerDidPressCollapseButton:(id)arg1 ;
-(void)cameraViewControllerDidPressExpandButton:(id)arg1 ;
-(void)cameraViewControllerDidSelectExit:(id)arg1 ;
-(void)cameraViewControllerDidRotateToLandscape:(id)arg1 ;
-(void)cameraViewControllerDidChangeCaptureDevice:(id)arg1 ;
-(void)cameraViewControllerWillAppear:(id)arg1 ;
-(id)extensionIdentifier;
-(void)dealloc;
-(long long)category;
-(id)tabBarItem;
-(void)imagePickerControllerDidCancel:(id)arg1 ;
-(void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2 ;
-(void)tearDown;
@end

