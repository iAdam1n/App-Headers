/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:17 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/Messenger-Structs.h>
#import <UIKit/UIViewController.h>
#import <Messenger/FBWebRTCCallActionViewDelegate.h>
#import <Messenger/FBWebRTCStarRatingViewDelegate.h>
#import <UIKit/UIActionSheetDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <Messenger/FBWebRTCEngineListener.h>
#import <Messenger/FBWebRTCInCallEventListener.h>
#import <Messenger/FBWebRTCGameEventListener.h>
#import <Messenger/FBWebRTCSnakeViewDelegate.h>
#import <Messenger/FBWebRTCViewDelegate.h>
#import <Messenger/FBWebRTCRemoteVideoRenderStatusListener.h>
#import <Messenger/FBWebRTCRosterDelegate.h>
#import <Messenger/FBWebRTCCallAgainViewDelegate.h>
#import <Messenger/RTCVideoCaptureSessionListener.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <Messenger/FBWebRTCVideoFilterControllerDelegate.h>
#import <Messenger/FBWebRTCSettingsPopoverControllingDelegate.h>
#import <Messenger/FBWebRTCVoicemailHandlerListener.h>
#import <Messenger/FBWebRTTCVideoSnapshotOverlayViewControllerDelegate.h>
#import <Messenger/FBWebRTCGroupMultiViewManagerDelegate.h>
#import <Messenger/FBWebRTCGroupCallRingingManagerListener.h>
#import <Messenger/FBClassProvidable.h>

@protocol NSCopying, MNAvatarImageDecorating, MNAuthenticationManager, FBMProfileURLUtils, FBProvider, MNPresenceSubscribing, FBWebRTCSettingsPopoverControlling, FBWebRTCViewControllerDelegate;
@class FBWebRTCView, FBWebRTCEngine, FBWebRTCCallModel, FBMThreadSummary, FBMGroupThreadProperties, MNProfileImageViewController, MNThreadImageManager, MNCDNProfileImageDownloader, FBImageDownloader, MNGroupThreadImageURLGenerator, MNUserSettings, FBWebRTCNetworkAvailability, FBUserSession, FBMobileConfigContextManager, FBSimpleNetworkerRequest, FBExperimentManager, FBWebRTCVideoExpressionExperimentContext, FBWebRTCCallButtonImageProvider, RTCVideoCaptureSession, FBWebRTCDeviceCameras, FBWebRTCRosterDataSource, MNThreadParticipantNameFormatter, MNUserStore, MNThreadStore, FBNuxCoordinator, MNTooltipOverlayController, NSTimer, ZRApplicationState, FBWebRTCViewControllerConfiguration, FBWebRTCActivityViewController, FBWebRTCVideoSnapshotOverlayViewController, FBWebRTCConferenceParticipantInfo, MNTooltip, FBWebRTCGroupMultiViewManager, NSString, FBWebRTCVideoFilterController, FBWebRTCVoicemailHandler, FBWebRTCGroupCallRingingManager, UIActionSheet, UIAlertView, FBWebRTCStarRating;

@interface FBWebRTCViewController : UIViewController <FBWebRTCCallActionViewDelegate, FBWebRTCStarRatingViewDelegate, UIActionSheetDelegate, UIAlertViewDelegate, FBWebRTCEngineListener, FBWebRTCInCallEventListener, FBWebRTCGameEventListener, FBWebRTCSnakeViewDelegate, FBWebRTCViewDelegate, FBWebRTCRemoteVideoRenderStatusListener, FBWebRTCRosterDelegate, FBWebRTCCallAgainViewDelegate, RTCVideoCaptureSessionListener, UICollectionViewDelegate, FBWebRTCVideoFilterControllerDelegate, FBWebRTCSettingsPopoverControllingDelegate, FBWebRTCVoicemailHandlerListener, FBWebRTTCVideoSnapshotOverlayViewControllerDelegate, FBWebRTCGroupMultiViewManagerDelegate, FBWebRTCGroupCallRingingManagerListener, FBClassProvidable> {

	FBWebRTCView* _webRTCView;
	FBWebRTCEngine* _engine;
	FBWebRTCCallModel* _currentCall;
	FBMThreadSummary* _threadSummary;
	FBMGroupThreadProperties* _groupThreadProperties;
	MNProfileImageViewController* _profileImageViewController;
	MNThreadImageManager* _threadImageManager;
	MNCDNProfileImageDownloader* _profileImageDownloader;
	FBImageDownloader* _imageDownloader;
	MNGroupThreadImageURLGenerator* _groupThreadImageURLGenerator;
	id<NSCopying> _currentAudioSpeakerImageRequest;
	MNUserSettings* _userSettings;
	FBWebRTCNetworkAvailability* _networkAvailability;
	FBWebRTCLogWrapper* _webrtcLogger;
	FBUserSession* _userSession;
	FBMobileConfigContextManager* _configManager;
	FBSimpleNetworkerRequest* _coverPhotoURLRequest;
	FBExperimentManager* _experimentManager;
	FBWebRTCVideoExpressionExperimentContext* _videoExpressionExperimentContext;
	FBWebRTCCallButtonImageProvider* _callButtonImageProvider;
	id<MNAvatarImageDecorating> _avatarDecorator;
	RTCVideoCaptureSession* _videoCaptureSession;
	FBWebRTCDeviceCameras* _supportedCameras;
	FBWebRTCRosterDataSource* _audioRosterController;
	FBWebRTCRosterDataSource* _videoRosterController;
	id<MNAuthenticationManager> _authManager;
	MNThreadParticipantNameFormatter* _nameFormatter;
	MNUserStore* _userStore;
	MNThreadStore* _threadStore;
	id<FBMProfileURLUtils> _profileURLUtils;
	FBNuxCoordinator* _nuxCoordinator;
	MNTooltipOverlayController* _tooltipController;
	int _backButtonTooltipShownCount;
	int _filterButtonTooltipShownCount;
	int _snapshotButtonTooltipShownCount;
	unsigned long long _swapSelfPeerTooltipShownCount;
	unsigned long long _swapBackTooltipShownCount;
	BOOL _usedBackButton;
	BOOL _usedFilterButton;
	BOOL _userHungUpCall;
	BOOL _connectionStatusHasConnected;
	BOOL _callTimerActive;
	BOOL _isInfoViewHidden;
	NSTimer* _callTimer;
	NSTimer* _endCallTimer;
	NSTimer* _surveyTimer;
	BOOL _endCallPresenterRecommendsStarRating;
	double _lastPressTime;
	ZRApplicationState* _zeroRatingState;
	BOOL _refreshOrientationInProgress;
	BOOL _lockOrientationToPortraitOnly;
	FBWebRTCViewControllerConfiguration* _configuration;
	FBWebRTCActivityViewController* _activityViewController;
	id<FBProvider> _snapshotOverlayViewControllerProvider;
	FBWebRTCVideoSnapshotOverlayViewController* _snapshotOverlayViewController;
	id<MNPresenceSubscribing> _presenceSubscriptionService;
	FBWebRTCConferenceParticipantInfo* _loudestParticipant;
	id<FBProvider> _settingsPopoverControllerProvider;
	id<FBWebRTCSettingsPopoverControlling> _settingsPopoverController;
	BOOL _filterUsable;
	BOOL _loadExpressionUXOnAppear;
	BOOL _showRosterOnAppear;
	BOOL _showSwitchLayoutWhenVideo;
	MNTooltip* _swapViewsTooltip;
	MNTooltip* _snapshotTooltip;
	FBWebRTCGroupMultiViewManager* _groupMultiViewController;
	unsigned long long _viewState;
	BOOL _callUIActive;
	BOOL _canMinimizeToVideoChatHead;
	BOOL _callInitialized;
	BOOL _statusBarHiddenOverride;
	id<FBWebRTCViewControllerDelegate> _delegate;
	NSString* _mainCallStatus;
	NSString* _miniCallStatus;
	FBWebRTCVideoFilterController* _filterController;
	FBWebRTCVoicemailHandler* _voicemailHandler;
	FBWebRTCGroupCallRingingManager* _groupCallRingingManager;
	UIActionSheet* _actionSheet;
	UIAlertView* _alertView;
	UIAlertView* _endCallAlertView;
	FBWebRTCStarRating* _starRating;

}

@property (assign,getter=isCallInitialized,nonatomic) BOOL callInitialized;                                 //@synthesize callInitialized=_callInitialized - In the implementation block
@property (nonatomic,retain) UIActionSheet * actionSheet;                                                   //@synthesize actionSheet=_actionSheet - In the implementation block
@property (nonatomic,retain) UIAlertView * alertView;                                                       //@synthesize alertView=_alertView - In the implementation block
@property (nonatomic,retain) UIAlertView * endCallAlertView;                                                //@synthesize endCallAlertView=_endCallAlertView - In the implementation block
@property (nonatomic,retain) FBWebRTCStarRating * starRating;                                               //@synthesize starRating=_starRating - In the implementation block
@property (assign,nonatomic) BOOL statusBarHiddenOverride;                                                  //@synthesize statusBarHiddenOverride=_statusBarHiddenOverride - In the implementation block
@property (assign,nonatomic,__weak) id<FBWebRTCViewControllerDelegate> delegate;                            //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy,readonly) NSString * mainCallStatus;                                              //@synthesize mainCallStatus=_mainCallStatus - In the implementation block
@property (nonatomic,copy,readonly) NSString * miniCallStatus;                                              //@synthesize miniCallStatus=_miniCallStatus - In the implementation block
@property (nonatomic,readonly) FBWebRTCVideoFilterController * filterController;                            //@synthesize filterController=_filterController - In the implementation block
@property (assign,getter=isCallUIActive,nonatomic) BOOL callUIActive;                                       //@synthesize callUIActive=_callUIActive - In the implementation block
@property (assign,nonatomic) BOOL canMinimizeToVideoChatHead;                                               //@synthesize canMinimizeToVideoChatHead=_canMinimizeToVideoChatHead - In the implementation block
@property (nonatomic,retain) FBWebRTCVoicemailHandler * voicemailHandler;                                   //@synthesize voicemailHandler=_voicemailHandler - In the implementation block
@property (assign,nonatomic,__weak) FBWebRTCGroupCallRingingManager * groupCallRingingManager;              //@synthesize groupCallRingingManager=_groupCallRingingManager - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithProviderMapData:(id)arg1 ;
-(id)analyticsModule;
-(void)setActionSheet:(UIActionSheet *)arg1 ;
-(UIActionSheet *)actionSheet;
-(BOOL)isCallUIActive;
-(void)callStarted:(id)arg1 ;
-(void)callChangedFromState:(id)arg1 toState:(id)arg2 ;
-(void)callConnectionStatusChangedFromConnectionStatus:(id)arg1 toConnectionStatus:(id)arg2 forCall:(id)arg3 ;
-(void)callEnded:(id)arg1 reason:(unsigned long long)arg2 subreason:(id)arg3 remoteEnded:(BOOL)arg4 callSummary:(id)arg5 ;
-(void)callAbortedWithFailedDeviceRequest:(unsigned long long)arg1 ;
-(void)callTransitionAborted:(id)arg1 withFailedDeviceRequest:(unsigned long long)arg2 ;
-(void)callUpdatedParticipantsFromState:(id)arg1 toState:(id)arg2 ;
-(void)callUpdatedLoudestParticipant:(id)arg1 ;
-(void)callUpdatedPeerUsersInfoFromState:(id)arg1 toState:(id)arg2 ;
-(void)callAgainViewDidSelectCallAgainButton:(id)arg1 ;
-(void)starRatingView:(id)arg1 ratingDidChange:(long long)arg2 ;
-(void)starRatingViewDidPressSubmit:(id)arg1 ;
-(void)starRatingViewDidPressDismiss:(id)arg1 ;
-(void)presentPostCallUIWithPresenter:(id)arg1 ;
-(void)abortAll;
-(void)setVoicemailHandler:(FBWebRTCVoicemailHandler *)arg1 ;
-(void)setGroupCallRingingManager:(FBWebRTCGroupCallRingingManager *)arg1 ;
-(void)configureWithEngine:(id)arg1 webrtcLogger:(FBWebRTCLogWrapper*)arg2 captureSession:(id)arg3 ;
-(void)setCanMinimizeToVideoChatHead:(BOOL)arg1 ;
-(BOOL)canMinimizeToVideoChatHead;
-(FBWebRTCVideoFilterController *)filterController;
-(NSString *)miniCallStatus;
-(void)enableExpressionUX;
-(void)_logAction:(id)arg1 forFunnel:(id)arg2 withTag:(id)arg3 ;
-(void)showRoster:(BOOL)arg1 ;
-(void)dismissCallView;
-(void)rtcVideoCaptureSessionStarted;
-(void)rtcVideoCaptureSessionEnded;
-(void)rtcVideoCaptureSessionInterruptionBegan;
-(void)rtcVideoCaptureSessionInterruptionEnded;
-(void)rtcVideoCaptureSessionCameraInterruptionBegan;
-(void)rtcVideoCaptureSessionCameraInterruptionEnded;
-(void)ringingManagerDidStart:(id)arg1 ;
-(void)ringingManagerDidFinish:(id)arg1 ;
-(void)ringingManager:(id)arg1 didUpdateCountdown:(int)arg2 ;
-(BOOL)_isInForeground;
-(void)voicemailHandlerDidStartRecording;
-(void)voicemailHandlerDidUpdateRecordingElapsedTime:(float)arg1 ;
-(void)voicemailHandlerDidHitTimeLimit;
-(void)voicemailHandlerDidFinishRecording;
-(void)_hideTooltipAnimated:(BOOL)arg1 ;
-(void)_updateStatusMessageWithCallTime;
-(void)remoteVideoRenderStatusChanged:(id)arg1 ;
-(void)callUpdatedInputAudioLevel:(unsigned long long)arg1 outputAudioLevel:(unsigned long long)arg2 forCall:(id)arg3 ;
-(void)callUpdatedActiveAudioLevels:(id)arg1 forCall:(id)arg2 ;
-(void)callReceivedData:(id)arg1 topic:(id)arg2 forCall:(id)arg3 ;
-(FBWebRTCVoicemailHandler *)voicemailHandler;
-(FBWebRTCGroupCallRingingManager *)groupCallRingingManager;
-(void)rosterRequestedMuteForUserId:(id)arg1 ;
-(void)rosterRequestedRingForUserId:(id)arg1 ;
-(void)filterControllerDidBecomeUsable:(id)arg1 ;
-(void)filterController:(id)arg1 filterDidStartDownloadFilterAtIndexPath:(id)arg2 ;
-(void)filterController:(id)arg1 logStopApplyingFilter:(id)arg2 filterName:(id)arg3 afterDuration:(double)arg4 ;
-(void)filterController:(id)arg1 logStartApplyingFilter:(id)arg2 filterName:(id)arg3 ;
-(void)filterController:(id)arg1 filterDidBecomeUsableAtIndexPath:(id)arg2 ;
-(void)filterController:(id)arg1 filterDidBecomeUnusableAtIndexPath:(id)arg2 ;
-(void)_cleanUpEndCall;
-(void)_enableFilterEntryPointIfNeeded;
-(void)_infoViewMultipleTapGesture:(id)arg1 ;
-(void)setCallUIActive:(BOOL)arg1 ;
-(void)_initializeFromCurrentCall;
-(void)_updateOutgoingVideoOrientation;
-(void)_updateSelfViewProperties;
-(void)groupMultiViewManager:(id)arg1 updateCallActionControlsBottomInset:(double)arg2 ;
-(void)_dismissPendingAlerts;
-(void)_finalizeCall;
-(void)_showFilterButtonTooltipIfNeeded;
-(void)setEndCallAlertView:(UIAlertView *)arg1 ;
-(void)_cleanUpSettingsPopover;
-(void)_dismissCallViewAnimated:(BOOL)arg1 callEndAction:(int)arg2 ;
-(void)_enableLocalVideo;
-(void)_switchViewLayoutToState:(unsigned long long)arg1 ;
-(void)_timeoutStarRating;
-(void)_dismissCallViewAnimated:(BOOL)arg1 shouldOpenVoice:(BOOL)arg2 shouldOpenMessage:(BOOL)arg3 ;
-(void)_disableLocalVideo;
-(void)_logCallAction:(id)arg1 extra:(id)arg2 ;
-(void)_hideCall;
-(void)callActionViewDidPressFilterButton:(id)arg1 ;
-(void)_endCallImmediately;
-(BOOL)_shouldIgnorePress;
-(void)_resetIgnorePressInterval;
-(void)_toggleVideo:(BOOL)arg1 ;
-(void)_updateStatusMessage;
-(id)_settingsMenuPopoverController;
-(void)_showCallSurvey;
-(void)_forceOrientationRefreshWithCompletion:(/*^block*/id)arg1 ;
-(long long)_currentVideoCaptureOrientation;
-(void)_updateSwitchLayoutVisiblity;
-(void)_showBackButtonTooltipIfNeeded;
-(void)_showSnapshotButtonTooltipIfNeeded;
-(void)_updateTooltipPosition;
-(void)_viewUserProfile:(id)arg1 ;
-(void)_navigateToUserThread:(id)arg1 ;
-(void)_showSwapBackTooltipIfNeeded;
-(BOOL)isCallInitialized;
-(void)_setGroupPicture:(id)arg1 groupFbId:(id)arg2 ;
-(void)_setUserPictures:(id)arg1 ;
-(void)_updateToCurrentCallState;
-(void)_updateViewFromCurrentCall;
-(void)_updateGroupRingStatusFromManager;
-(void)_onConnectedCall;
-(void)setCallInitialized:(BOOL)arg1 ;
-(void)_updateConnectionStatusFromStatus:(id)arg1 toStatus:(id)arg2 ;
-(BOOL)_isVideoButtonSelectedForCallState:(unsigned long long)arg1 ;
-(void)_timeoutRedial;
-(void)_timeoutEndCall;
-(void)_setMainCallStatus:(id)arg1 miniStatus:(id)arg2 ;
-(id)participantsString;
-(void)_updateStatusMessageForIncomingConferenceCallForVideo:(BOOL)arg1 ;
-(void)updateMultiwayParticipantStrings;
-(void)_stopCallTimerIfNeeded;
-(void)_startCallTimerIfNeeded;
-(void)_prepareAudioViewForActiveSpeaker:(id)arg1 ;
-(void)_updateLoudestParticipantUser:(id)arg1 ;
-(void)_showSwapSelfAndPeerTooltipIfNeeded;
-(BOOL)_isOrientationRequirementDifferentBetweenCallStates:(unsigned long long)arg1 andCallState:(unsigned long long)arg2 ;
-(void)_showEndCallWithPresenter:(id)arg1 ;
-(void)_updateLoudestParticipant:(id)arg1 ;
-(CGPoint)_backButtonTooltipPosition;
-(CGPoint)_filterButtonTooltipPosition;
-(CGPoint)_snapshotButtonTooltipPosition;
-(CGPoint)_selfViewTooltipPosition;
-(void)callActionViewDidPressDisabledVideo:(id)arg1 ;
-(void)callActionViewDidPressSwitchCamera:(id)arg1 ;
-(void)callActionViewDidPressEndCall:(id)arg1 ;
-(void)callActionViewDidPressAcceptCall:(id)arg1 ;
-(void)callActionViewDidPressDeclineCall:(id)arg1 ;
-(void)callActionViewDidPressMute:(id)arg1 shouldMute:(BOOL)arg2 ;
-(void)callActionViewDidPressVideoCall:(id)arg1 shouldEnable:(BOOL)arg2 ;
-(void)callActionViewDidPressHideCall:(id)arg1 ;
-(void)callActionViewDidPressRedial:(id)arg1 ;
-(void)callActionViewDidPressCancel:(id)arg1 ;
-(void)callActionViewDidPressVoiceClip:(id)arg1 ;
-(void)callActionViewDidPressDone:(id)arg1 ;
-(void)callActionViewDidPressAcceptVideo:(id)arg1 ;
-(void)callActionViewDidPressDeclineVideo:(id)arg1 ;
-(void)callActionViewDidPressBeginVoicemail:(id)arg1 ;
-(void)callActionViewDidPressShowRosterButton:(id)arg1 shouldShow:(BOOL)arg2 ;
-(void)callActionViewDidPressSettings:(id)arg1 ;
-(void)callActionViewToggleSpeakerMode:(id)arg1 ;
-(void)callActionViewDidPressTakeSnapshot:(id)arg1 ;
-(void)callActionViewDidPressAudioclipButton:(id)arg1 ;
-(void)callActionViewDidPressSwitchLayout:(id)arg1 ;
-(void)callActionViewDidPressRingUsers:(id)arg1 ;
-(void)callActionViewDidPressVideoExpressionUX:(id)arg1 ;
-(void)callUpdateGame:(id)arg1 forCall:(id)arg2 ;
-(void)snakeView:(id)arg1 didReceivedPlayerInput:(unsigned long long)arg2 ;
-(BOOL)shouldForceSelfViewHidden:(id)arg1 ;
-(void)viewStateDidChange:(id)arg1 ;
-(void)rtcViewWillHideActionButtons:(id)arg1 ;
-(void)rtcViewDidHideActionButtons:(id)arg1 ;
-(void)rtcViewWillShowActionButtons:(id)arg1 ;
-(void)rtcViewDidShowActionButtons:(id)arg1 ;
-(void)rtcViewDidLayoutActionButtons:(id)arg1 ;
-(void)rtcViewDidTapActiveUserOverlay:(id)arg1 ;
-(void)rtcViewDidSwipeToMinimize:(id)arg1 ;
-(void)rtcViewDidSwapSelfViewForPeerView:(id)arg1 ;
-(void)rtcViewDidDoubleTapSwitchCamera:(id)arg1 ;
-(void)settingsPopoverDidSelectCameraWithID:(id)arg1 ;
-(void)videoSnapshotViewController:(id)arg1 setAnalyticsValue:(id)arg2 forKey:(id)arg3 ;
-(void)groupMultiViewManagerToggleCallActionControlsVisibility:(id)arg1 ;
-(void)groupMultiViewManager:(id)arg1 didUpdateToLayout:(unsigned long long)arg2 ;
-(void)groupMultiViewManager:(id)arg1 didUpdateNumberOfParticipants:(long long)arg2 selfViewCount:(long long)arg3 ;
-(void)_doEndCall:(unsigned long long)arg1 ;
-(void)setStatusBarHiddenOverride:(BOOL)arg1 ;
-(void)lockOrientationToPortraitWithRefreshIfNecessaryWithCompletion:(/*^block*/id)arg1 ;
-(double)_systemStatusBarHeight;
-(CGPoint)_speakerButtonTooltipPosition;
-(void)_resetCameraToDefault;
-(BOOL)isGroupMultiViewManagerViewLoaded;
-(NSString *)mainCallStatus;
-(UIAlertView *)endCallAlertView;
-(BOOL)statusBarHiddenOverride;
-(void)setDelegate:(id<FBWebRTCViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<FBWebRTCViewControllerDelegate>)delegate;
-(BOOL)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(long long)preferredStatusBarStyle;
-(BOOL)prefersStatusBarHidden;
-(unsigned long long)supportedInterfaceOrientations;
-(BOOL)shouldAutorotate;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(long long)arg1 ;
-(void)setStarRating:(FBWebRTCStarRating *)arg1 ;
-(FBWebRTCStarRating *)starRating;
-(void)_setStatus:(id)arg1 ;
-(UIAlertView *)alertView;
-(void)setAlertView:(UIAlertView *)arg1 ;
-(void)unlockOrientation;
@end

