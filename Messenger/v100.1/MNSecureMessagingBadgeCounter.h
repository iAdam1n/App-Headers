/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:22 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNSecureMessagingBadgeCounting.h>
#import <Messenger/MNSecureMessagingIncomingMessageListener.h>
#import <Messenger/MNSecureThreadSubscribing.h>
#import <Messenger/MNSecureMessagingStoreListener.h>

@protocol MNSecureMessagingBadgeCounterListening, OS_dispatch_queue;
@class MNBadgeCountSourceAdapter, MNSecureMessagingStore, MNBadgeCountUpdateService, NSObject, FBDelayer, NSString, NSSet;

@interface MNSecureMessagingBadgeCounter : NSObject <MNSecureMessagingBadgeCounting, MNSecureMessagingIncomingMessageListener, MNSecureThreadSubscribing, MNSecureMessagingStoreListener> {

	MNBadgeCountSourceAdapter* _badgeCountAdapter;
	MNSecureMessagingStore* _secureMessagingStore;
	MNBadgeCountUpdateService* _badgeCountUpdateService;
	id<MNSecureMessagingBadgeCounterListening> _listener;
	NSObject*<OS_dispatch_queue> _queue;
	FBDelayer* _delayer;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSSet * unreadThreadKeys; 
-(NSSet *)unreadThreadKeys;
-(void)didUpdateSecureThread:(id)arg1 ;
-(void)didDeleteSecureThread:(id)arg1 ;
-(void)didUpdateAllSecureThreads;
-(void)secureMessagingStoreDidFailToOpenWithError:(id)arg1 ;
-(void)secureMessagingStoreDidOpen;
-(void)didReceiveNewMessageForThreadWithKey:(id)arg1 timestamp:(unsigned long long)arg2 didProcess:(BOOL)arg3 ;
-(id)initWithBadgeCountUpdateService:(id)arg1 secureMessagingStore:(id)arg2 listener:(id)arg3 queue:(id)arg4 ;
-(void)_updateBadgeCountWithUnreadThreadKey:(id)arg1 timestamp:(unsigned long long)arg2 didProcess:(BOOL)arg3 ;
-(void)_recomputeUnreadThreadsWithStoreOpen;
-(void)_updateStateWithNewThreadKeyInfo:(id)arg1 ;
@end

