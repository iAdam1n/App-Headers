/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:34 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/MNBatchedViewModelIndividualKeysToSubscribeUpdating.h>
#import <Messenger/MNViewModelSubscriptionCoordinating.h>

@protocol MNViewModelSubscriptionCoordinating, MNBatchedViewModelIndividualKeysDataSource, MNBatchedViewModelLoading, MNViewModelUpdateBackfeeding, OS_dispatch_queue;
@class NSString, MNViewModelSubscriptionAttributes, MNViewModelCache, NSObject, MNBatchedViewModelSubscriptionStore;

@interface MNBatchedViewModelSubscriptionCoordinator : NSObject <MNBatchedViewModelIndividualKeysToSubscribeUpdating, MNViewModelSubscriptionCoordinating> {

	NSString* _kind;
	MNViewModelSubscriptionAttributes* _attributes;
	id<MNViewModelSubscriptionCoordinating> _coordinator;
	id<MNBatchedViewModelIndividualKeysDataSource> _keysDataSource;
	id<MNBatchedViewModelLoading> _loader;
	id<MNViewModelUpdateBackfeeding> _backfeeder;
	MNViewModelCache* _cache;
	NSObject*<OS_dispatch_queue> _queue;
	MNBatchedViewModelSubscriptionStore* _store;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelSubscription:(id)arg1 ;
-(void)updateIndividualKeysToSubscribeForViewModelElementKey:(id)arg1 ;
-(void)_startSubscriptionsForIndividualKeys:(id)arg1 batchedKey:(id)arg2 ;
-(void)_cancelSubscriptionsForSubscribedIndividualKeysWithBatchedKey:(id)arg1 ;
-(void)_startSubscriptionsForNewIndividualKeys:(id)arg1 batchedKey:(id)arg2 ;
-(void)_cancelSubscriptionsForOldIndividualKeys:(id)arg1 batchedKey:(id)arg2 ;
-(void)_handleSubscriptionUpdate:(id)arg1 forIndividualKey:(id)arg2 batchedKey:(id)arg3 ;
-(void)_loadBatchedViewModelForKeyIfNecessary:(id)arg1 ;
-(void)_handleNewIndividualViewModel:(id)arg1 forIndividualKey:(id)arg2 batchedKey:(id)arg3 ;
-(void)_handleError:(id)arg1 forIndividualKey:(id)arg2 batchedKey:(id)arg3 ;
-(void)_handleLongOperationStatus:(unsigned long long)arg1 forIndividualKey:(id)arg2 batchedKey:(id)arg3 ;
-(BOOL)_areAllSubscribedIndividualElementsPresentForBatchedViewModelElementKey:(id)arg1 ;
-(void)_handleLoadedBatchedViewModel:(id)arg1 forKey:(id)arg2 ;
-(id)initWithKind:(id)arg1 importance:(long long)arg2 coordinator:(id)arg3 keysDataSource:(id)arg4 loader:(id)arg5 backfeeder:(id)arg6 cache:(id)arg7 queue:(id)arg8 ;
-(void)_notifySubscribersWithSubscriptionIds:(id)arg1 ofViewModelElement:(id)arg2 fromCache:(BOOL)arg3 ;
-(void)startSubscription:(id)arg1 forSubscriptionId:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_notifySubscribersWithSubscriptionIds:(id)arg1 ofError:(id)arg2 ;
-(void)_notifySubscriberWithSubscriptionIds:(id)arg1 ofLongOperationStatus:(unsigned long long)arg2 ;
-(id)_subscriptionIdToSubscriptionMap:(id)arg1 ;
-(id)_subscriptionsForSubscriptionIds:(id)arg1 ;
-(void)cancelAllSubscriptions;
-(NSString *)description;
-(id)attributes;
-(id)kind;
-(id)queue;
@end

