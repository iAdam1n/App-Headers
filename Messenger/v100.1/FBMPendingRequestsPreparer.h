/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:29:19 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/85513C16-EFBE-4673-84DA-B31CD22289F8/Messenger.app/Messenger
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Messenger/FBMThreadListFetcherDelegate.h>
#import <Messenger/FBClassProvidable.h>
#import <Messenger/FBMMailboxPreparing.h>

@protocol FBMMailboxPreparingDelegate;
@class FBMThreadListFetcher, MNThreadListMetadataFetcher, MNPendingRequestsStore, NSString;

@interface FBMPendingRequestsPreparer : NSObject <FBMThreadListFetcherDelegate, FBClassProvidable, FBMMailboxPreparing> {

	FBMThreadListFetcher* _threadListFetcher;
	MNThreadListMetadataFetcher* _filteredThreadsMetaDataFetcher;
	id<FBMMailboxPreparingDelegate> _delegate;
	long long _threadListType;
	MNPendingRequestsStore* _pendingRequestsStore;
	unsigned long long _currentState;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) unsigned long long currentState;              //@synthesize currentState=_currentState - In the implementation block
-(id)initWithProviderMapData:(id)arg1 ;
-(void)_couldNotFetchThreadListMetaDataWithError:(id)arg1 ;
-(void)configureAndPrepareThreadListWithDelegate:(id)arg1 ;
-(id)initWithThreadListFetcher:(id)arg1 filteredThreadsMetaDataFetcher:(id)arg2 pendingRequestsStore:(id)arg3 ;
-(void)_fetchAdditionalInformation;
-(void)_didFetchUnreadRequestNumber:(unsigned long long)arg1 totalNumber:(unsigned long long)arg2 mailboxSnippet:(id)arg3 ;
-(void)_didFinishMerging;
-(void)threadListFetcherDidCancelFetch:(id)arg1 ;
-(void)threadListFetcherDidFailToFetch:(id)arg1 error:(id)arg2 ;
-(void)threadListFetcherDidFinishFetch:(id)arg1 didLoadAllThreads:(BOOL)arg2 ;
-(void)cancel;
-(unsigned long long)currentState;
-(BOOL)isFetching;
@end

