/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:50 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/NSCopying.h>
#import <Twitter/NSMutableCopying.h>

@protocol TNLRequestRetryPolicyProvider;
@class NSString, NSURLCredentialStorage, NSURLCache, NSHTTPCookieStorage;

@interface TNLRequestConfiguration : NSObject <NSCopying, NSMutableCopying> {

	id<TNLRequestRetryPolicyProvider> _retryPolicyProvider;
	NSString* _sharedContainerIdentifier;
	NSURLCredentialStorage* _URLCredentialStorage;
	NSURLCache* _URLCache;
	NSHTTPCookieStorage* _cookieStorage;
	SCD_Struct_TN52 _ivars;

}

@property (nonatomic,readonly) long long executionMode; 
@property (nonatomic,readonly) long long redirectPolicy; 
@property (nonatomic,readonly) long long responseDataConsumptionMode; 
@property (nonatomic,readonly) long long protocolOptions; 
@property (nonatomic,readonly) BOOL contributeToExecutingNetworkConnectionsCount; 
@property (nonatomic,readonly) BOOL skipHostSanitization; 
@property (nonatomic,readonly) id<TNLRequestRetryPolicyProvider> retryPolicyProvider;              //@synthesize retryPolicyProvider=_retryPolicyProvider - In the implementation block
@property (nonatomic,readonly) double idleTimeout; 
@property (nonatomic,readonly) double attemptTimeout; 
@property (nonatomic,readonly) double operationTimeout; 
@property (nonatomic,readonly) double deferrableInterval; 
@property (nonatomic,readonly) unsigned long long cachePolicy; 
@property (nonatomic,readonly) unsigned long long networkServiceType; 
@property (nonatomic,readonly) unsigned long long cookieAcceptPolicy; 
@property (nonatomic,readonly) BOOL shouldSetCookies; 
@property (nonatomic,readonly) BOOL allowsCellularAccess; 
@property (getter=isDiscretionary,nonatomic,readonly) BOOL discretionary; 
@property (nonatomic,copy,readonly) NSString * sharedContainerIdentifier;                          //@synthesize sharedContainerIdentifier=_sharedContainerIdentifier - In the implementation block
@property (nonatomic,readonly) BOOL shouldLaunchAppForBackgroundEvents; 
@property (nonatomic,readonly) NSURLCredentialStorage * URLCredentialStorage;                      //@synthesize URLCredentialStorage=_URLCredentialStorage - In the implementation block
@property (nonatomic,readonly) NSURLCache * URLCache;                                              //@synthesize URLCache=_URLCache - In the implementation block
@property (nonatomic,readonly) NSHTTPCookieStorage * cookieStorage;                                //@synthesize cookieStorage=_cookieStorage - In the implementation block
+(id)parseConfigurationFromIdentifier:(id)arg1 ;
+(id)configurationFromParameters:(id)arg1 executionMode:(long long)arg2 version:(id)arg3 ;
+(id)configurationWithExpectedAnatomy:(long long)arg1 ;
+(id)configurationWithSessionConfiguration:(id)arg1 ;
+(id)sessionConfigurationWithConfiguration:(id)arg1 ;
+(id)defaultConfiguration;
-(void)applySettingsToSessionConfiguration:(id)arg1 ;
-(id)generateCanonicalSessionConfigurationWithExecutionMode:(long long)arg1 ;
-(id)generateCanonicalSessionConfigurationWithExecutionMode:(long long)arg1 identifier:(id)arg2 ;
-(id)generateCanonicalSessionConfigurationWithExecutionMode:(long long)arg1 identifier:(id)arg2 canonicalURLCache:(id)arg3 canonicalURLCredentialStorage:(id)arg4 canonicalCookieStorage:(id)arg5 ;
-(id)generateCanonicalSessionConfiguration;
-(id)generateCanonicalSessionConfigurationForBackgroundModeWithIdentifier:(id)arg1 ;
-(long long)executionMode;
-(id<TNLRequestRetryPolicyProvider>)retryPolicyProvider;
-(long long)protocolOptions;
-(double)idleTimeout;
-(long long)redirectPolicy;
-(long long)responseDataConsumptionMode;
-(id)initWithIdleTimeout:(double)arg1 attemptTimeout:(double)arg2 operationTimeout:(double)arg3 ;
-(id)initWithSessionConfiguration:(id)arg1 ;
-(BOOL)contributeToExecutingNetworkConnectionsCount;
-(BOOL)skipHostSanitization;
-(double)attemptTimeout;
-(double)deferrableInterval;
-(BOOL)shouldLaunchAppForBackgroundEvents;
-(NSHTTPCookieStorage *)cookieStorage;
-(NSURLCredentialStorage *)URLCredentialStorage;
-(NSString *)sharedContainerIdentifier;
-(unsigned long long)cookieAcceptPolicy;
-(BOOL)isDiscretionary;
-(unsigned long long)networkServiceType;
-(double)operationTimeout;
-(NSURLCache *)URLCache;
-(id)init;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(id)mutableCopyWithZone:(NSZone*)arg1 ;
-(BOOL)allowsCellularAccess;
-(unsigned long long)cachePolicy;
-(id)initWithConfiguration:(id)arg1 ;
-(BOOL)shouldSetCookies;
@end

