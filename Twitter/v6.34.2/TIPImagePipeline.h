/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:48 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol TIPImageAdditionalCache, TIPImagePipelineObserver;
@class NSString, NSOperationQueue, TNLRequestConfiguration, TIPImageRenderedCache, TIPImageMemoryCache, TIPImageDiskCache, TIPImageDownloader;

@interface TIPImagePipeline : NSObject {

	NSString* _imagePipelinePath;
	NSOperationQueue* _operationQueue;
	id<TIPImageAdditionalCache> _additionalCache;
	id<TIPImagePipelineObserver> _observer;
	TNLRequestConfiguration* _networkRequestConfiguration;
	NSString* _identifier;
	TIPImageRenderedCache* _renderedCache;
	TIPImageMemoryCache* _memoryCache;
	TIPImageDiskCache* _diskCache;
	TIPImageDownloader* _downloader;

}

@property (assign) unsigned long long maxMemoryCacheSize; 
@property (assign) unsigned long long maxDiskCacheSize; 
@property (assign) long long maxConcurrentOperations; 
@property (retain) id<TIPImageAdditionalCache> additionalCache;                      //@synthesize additionalCache=_additionalCache - In the implementation block
@property (retain) id<TIPImagePipelineObserver> observer;                            //@synthesize observer=_observer - In the implementation block
@property (copy) TNLRequestConfiguration * networkRequestConfiguration;              //@synthesize networkRequestConfiguration=_networkRequestConfiguration - In the implementation block
@property (nonatomic,readonly) NSString * identifier;                                //@synthesize identifier=_identifier - In the implementation block
@property (nonatomic,readonly) TIPImageRenderedCache * renderedCache;                //@synthesize renderedCache=_renderedCache - In the implementation block
@property (nonatomic,readonly) TIPImageMemoryCache * memoryCache;                    //@synthesize memoryCache=_memoryCache - In the implementation block
@property (nonatomic,readonly) TIPImageDiskCache * diskCache;                        //@synthesize diskCache=_diskCache - In the implementation block
@property (nonatomic,readonly) TIPImageDownloader * downloader;                      //@synthesize downloader=_downloader - In the implementation block
+(void)private_splitMemoryCacheSize:(unsigned long long)arg1 intoRenderedCacheSize:(out unsigned long long*)arg2 andFullImageCacheSize:(out unsigned long long*)arg3 ;
-(void)inspect:(/*^block*/id)arg1 ;
-(id)fetchImageWithRequest:(id)arg1 context:(id)arg2 delegate:(id)arg3 ;
-(id)fetchImageWithRequest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setMaxDiskCacheSize:(unsigned long long)arg1 ;
-(void)setMaxMemoryCacheSize:(unsigned long long)arg1 ;
-(void)setMaxConcurrentOperations:(long long)arg1 ;
-(id)operationWithRequest:(id)arg1 context:(id)arg2 delegate:(id)arg3 ;
-(void)fetchImageWithOperation:(id)arg1 ;
-(void)setAdditionalCache:(id<TIPImageAdditionalCache>)arg1 ;
-(id)initWithIdentifier:(id)arg1 maxMemoryCacheSize:(unsigned long long)arg2 maxDiskCacheSize:(unsigned long long)arg3 maxConcurrentOperations:(long long)arg4 ;
-(void)storeImageWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clearImageWithIdentifier:(id)arg1 ;
-(TIPImageMemoryCache *)memoryCache;
-(TIPImageDiskCache *)diskCache;
-(TNLRequestConfiguration *)networkRequestConfiguration;
-(id<TIPImageAdditionalCache>)additionalCache;
-(void)postCompletedEntry:(id)arg1 manual:(BOOL)arg2 ;
-(TIPImageRenderedCache *)renderedCache;
-(void)private_enqueueOperation:(id)arg1 ;
-(id)operationWithRequest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)clearMemoryCache;
-(void)clearDiskCache;
-(unsigned long long)maxMemoryCacheSize;
-(unsigned long long)maxDiskCacheSize;
-(long long)maxConcurrentOperations;
-(void)setNetworkRequestConfiguration:(TNLRequestConfiguration *)arg1 ;
-(void)dealloc;
-(id)init;
-(NSString *)identifier;
-(id<TIPImagePipelineObserver>)observer;
-(void)setObserver:(id<TIPImagePipelineObserver>)arg1 ;
-(id)initWithIdentifier:(id)arg1 ;
-(TIPImageDownloader *)downloader;
@end

