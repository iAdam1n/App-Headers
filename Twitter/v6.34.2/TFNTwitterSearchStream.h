/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:41 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNTwitterStream.h>
#import <Twitter/TFNTwitterGenericTimelineStream.h>

@class NSString, NSArray, TFNTwitterSearchQuery, TFNTwitterSearchActivity, TFNTimer, NSMutableDictionary, NSMutableArray;

@interface TFNTwitterSearchStream : TFNTwitterStream <TFNTwitterGenericTimelineStream> {

	NSString* _cursor;
	BOOL _isAtEnd;
	BOOL _firstLoad;
	BOOL _isEmpty;
	BOOL _needsSerialization;
	BOOL _isPendingRefresh;
	BOOL _hasEventGalleryResults;
	BOOL _shouldPoll;
	BOOL _shouldUseAdaptivePollingInterval;
	BOOL _isLoadingTop;
	BOOL _isLoadingBottom;
	NSArray* _streamObjects;
	double _pollingInterval;
	NSString* _qualityQuery;
	TFNTwitterSearchQuery* _searchQuery;
	id _pinnedStreamObject;
	TFNTwitterSearchActivity* _activity;
	NSString* _searchTakeOverType;
	NSString* _eventPageType;
	NSString* _eventID;
	double _adaptiveRefreshInterval;
	TFNTimer* _pollingTimer;
	NSMutableDictionary* _statusesByUnifiedID;
	NSMutableDictionary* _clustersByID;
	NSMutableArray* _streamEvents;

}

@property (nonatomic,copy,readonly) NSString * qualityQuery;                         //@synthesize qualityQuery=_qualityQuery - In the implementation block
@property (nonatomic,retain) TFNTwitterSearchQuery * searchQuery;                    //@synthesize searchQuery=_searchQuery - In the implementation block
@property (nonatomic,retain) id pinnedStreamObject;                                  //@synthesize pinnedStreamObject=_pinnedStreamObject - In the implementation block
@property (nonatomic,retain) TFNTwitterSearchActivity * activity;                    //@synthesize activity=_activity - In the implementation block
@property (nonatomic,readonly) BOOL hasClusterResults; 
@property (assign,nonatomic) BOOL hasEventGalleryResults;                            //@synthesize hasEventGalleryResults=_hasEventGalleryResults - In the implementation block
@property (nonatomic,retain) NSString * searchTakeOverType;                          //@synthesize searchTakeOverType=_searchTakeOverType - In the implementation block
@property (nonatomic,retain) NSString * eventPageType;                               //@synthesize eventPageType=_eventPageType - In the implementation block
@property (nonatomic,retain) NSString * eventID;                                     //@synthesize eventID=_eventID - In the implementation block
@property (assign,nonatomic) BOOL shouldPoll;                                        //@synthesize shouldPoll=_shouldPoll - In the implementation block
@property (assign,nonatomic) BOOL shouldUseAdaptivePollingInterval;                  //@synthesize shouldUseAdaptivePollingInterval=_shouldUseAdaptivePollingInterval - In the implementation block
@property (nonatomic,readonly) double adaptiveRefreshInterval;                       //@synthesize adaptiveRefreshInterval=_adaptiveRefreshInterval - In the implementation block
@property (nonatomic,retain) TFNTimer * pollingTimer;                                //@synthesize pollingTimer=_pollingTimer - In the implementation block
@property (nonatomic,retain) NSArray * streamObjects;                                //@synthesize streamObjects=_streamObjects - In the implementation block
@property (assign,nonatomic) BOOL isLoadingTop;                                      //@synthesize isLoadingTop=_isLoadingTop - In the implementation block
@property (assign,nonatomic) BOOL isLoadingBottom;                                   //@synthesize isLoadingBottom=_isLoadingBottom - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * statusesByUnifiedID;              //@synthesize statusesByUnifiedID=_statusesByUnifiedID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * clustersByID;                     //@synthesize clustersByID=_clustersByID - In the implementation block
@property (nonatomic,retain) NSMutableArray * streamEvents;                          //@synthesize streamEvents=_streamEvents - In the implementation block
@property (assign,nonatomic) BOOL needsSerialization;                                //@synthesize needsSerialization=_needsSerialization - In the implementation block
@property (assign,nonatomic) BOOL isPendingRefresh;                                  //@synthesize isPendingRefresh=_isPendingRefresh - In the implementation block
+(id)t1_searchStreamWithAccount:(id)arg1 query:(id)arg2 ;
-(void)setSearchQuery:(TFNTwitterSearchQuery *)arg1 ;
-(BOOL)loadBottomWithSource:(long long)arg1 ;
-(NSMutableArray *)streamEvents;
-(BOOL)isLoadingTop;
-(NSArray *)streamObjects;
-(void)loadNewerWithSource:(long long)arg1 ;
-(void)setShouldUseAdaptivePollingInterval:(BOOL)arg1 ;
-(void)setPollingInterval:(double)arg1 ;
-(void)setHasEventGalleryResults:(BOOL)arg1 ;
-(BOOL)loadTopWithSource:(long long)arg1 ;
-(void)removeStreamObject:(id)arg1 ;
-(BOOL)isLoadingBottom;
-(id)initWithQualityQuery:(id)arg1 ;
-(TFNTimer *)pollingTimer;
-(void)setPollingTimer:(TFNTimer *)arg1 ;
-(void)setIsPendingRefresh:(BOOL)arg1 ;
-(void)setStreamObjects:(NSArray *)arg1 ;
-(void)setShouldPoll:(BOOL)arg1 ;
-(BOOL)hasClusterResults;
-(void)_didReportStatusAsSpam:(id)arg1 ;
-(void)_didDeleteStatus:(id)arg1 ;
-(void)setNeedsSerialization:(BOOL)arg1 ;
-(id)itemsToBeSerialized;
-(BOOL)needsSerialization;
-(BOOL)isPendingRefresh;
-(id)serializationDictionaryValue;
-(BOOL)canLoadGap;
-(id)mainTextForError:(id)arg1 ;
-(id)emptyStreamMessage;
-(void)setIsLoadingTop:(BOOL)arg1 ;
-(void)setIsLoadingBottom:(BOOL)arg1 ;
-(BOOL)canRetryForError:(id)arg1 ;
-(id)_dummyLoadingStatus;
-(id)_errorStatus:(id)arg1 top:(BOOL)arg2 ;
-(id)pinnedStreamObject;
-(void)setPinnedStreamObject:(id)arg1 ;
-(BOOL)hasEventGalleryResults;
-(BOOL)shouldPoll;
-(id)copyStreamObjects:(id)arg1 ;
-(double)adaptiveRefreshInterval;
-(BOOL)shouldUseAdaptivePollingInterval;
-(void)_processStatusGalleryModule:(id)arg1 isMedia:(BOOL)arg2 isSummary:(BOOL)arg3 allowClustering:(BOOL)arg4 allowClusterMerging:(BOOL)arg5 processedObjects:(id)arg6 ;
-(id)_eventForJSONDictionary:(id)arg1 ;
-(id)_getTakeOver;
-(NSString *)eventPageType;
-(NSMutableDictionary *)statusesByUnifiedID;
-(void)_processStatusModule:(id)arg1 isNews:(BOOL)arg2 processedObjects:(id)arg3 ;
-(void)_processUserModuleDictionary:(id)arg1 processedObjects:(id)arg2 processedUsers:(id)arg3 ;
-(BOOL)_processUserGalleryDictionary:(id)arg1 allowClustering:(BOOL)arg2 allowClusterMerging:(BOOL)arg3 processedObjects:(id)arg4 processedUsers:(id)arg5 ;
-(void)_processSuggestionsModuleDictionary:(id)arg1 processedObjects:(id)arg2 ;
-(void)_processEventModule:(id)arg1 processedObjects:(id)arg2 ;
-(void)_processEventModuleUpdate:(id)arg1 ;
-(void)_processSummaryModule:(id)arg1 processedObjects:(id)arg2 ;
-(void)_updateStreamObjectsWithObjects:(id)arg1 top:(BOOL)arg2 ;
-(void)pollingTimerDidFire;
-(unsigned long long)_handleJSONResponse:(id)arg1 top:(BOOL)arg2 ;
-(void)startPollingIfNecessary;
-(void)_handleLoadingError:(id)arg1 top:(BOOL)arg2 ;
-(void)_postStreamUpdateNotification:(long long)arg1 count:(unsigned long long)arg2 source:(long long)arg3 error:(id)arg4 ;
-(void)_load:(long long)arg1 prevCursor:(id)arg2 nextCursor:(id)arg3 responseBlock:(/*^block*/id)arg4 ;
-(NSString *)qualityQuery;
-(NSString *)searchTakeOverType;
-(void)setSearchTakeOverType:(NSString *)arg1 ;
-(void)setEventPageType:(NSString *)arg1 ;
-(void)setStatusesByUnifiedID:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)clustersByID;
-(void)setClustersByID:(NSMutableDictionary *)arg1 ;
-(void)setStreamEvents:(NSMutableArray *)arg1 ;
-(void)setEventID:(NSString *)arg1 ;
-(NSString *)eventID;
-(void)dealloc;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)isEmpty;
-(BOOL)isAtEnd;
-(TFNTwitterSearchActivity *)activity;
-(id)displayName;
-(void)setActivity:(TFNTwitterSearchActivity *)arg1 ;
-(void)stopPolling;
-(void)startPolling;
-(TFNTwitterSearchQuery *)searchQuery;
-(double)pollingInterval;
@end

