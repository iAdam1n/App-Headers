/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:42 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TFNLegacyDockableViewGestureHandler.h>
#import <Twitter/TFNCanvasViewGestureHandlerProtocol.h>

@protocol TFNCanvasViewGestureHandlerDelegate;
@class UIViewController, TFNCanvasView, TFNCanvasElementContainerView, NSString;

@interface TFNLegacyCanvasViewGestureHandler : TFNLegacyDockableViewGestureHandler <TFNCanvasViewGestureHandlerProtocol> {

	UIViewController* _presentingViewController;
	id<TFNCanvasViewGestureHandlerDelegate> _canvasViewGestureHandlerDelegate;
	TFNCanvasView* _canvasView;
	TFNCanvasElementContainerView* _elementContainerView;

}

@property (assign,nonatomic,__weak) UIViewController * presentingViewController;                                           //@synthesize presentingViewController=_presentingViewController - In the implementation block
@property (assign,nonatomic,__weak) id<TFNCanvasViewGestureHandlerDelegate> canvasViewGestureHandlerDelegate;              //@synthesize canvasViewGestureHandlerDelegate=_canvasViewGestureHandlerDelegate - In the implementation block
@property (nonatomic,readonly) TFNCanvasView * canvasView;                                                                 //@synthesize canvasView=_canvasView - In the implementation block
@property (nonatomic,readonly) TFNCanvasElementContainerView * elementContainerView;                                       //@synthesize elementContainerView=_elementContainerView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long dockState; 
-(TFNCanvasView *)canvasView;
-(void)_setViewsControlsEnabled:(BOOL)arg1 ;
-(id)initWithDelegate:(id)arg1 canvasView:(id)arg2 ;
-(void)presentWithElementView:(id)arg1 targetSize:(CGSize)arg2 fromViewController:(id)arg3 previewView:(id)arg4 animated:(BOOL)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)dockDockableViewWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)fullscreenDockableViewWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)dismissWithGestureVelocity:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)restoreToDockWithGestureVelocity:(CGPoint)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)restoreToFullscreenWithGestureVelocity:(CGPoint)arg1 bounce:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)handleDockPanWithRecognizer:(id)arg1 translation:(CGPoint)arg2 velocity:(CGPoint)arg3 ;
-(void)handleFullscreenPanWithRecognizer:(id)arg1 translation:(CGPoint)arg2 velocity:(CGPoint)arg3 ;
-(void)_setViewsToFullscreenFrames;
-(TFNCanvasElementContainerView *)elementContainerView;
-(id<TFNCanvasViewGestureHandlerDelegate>)canvasViewGestureHandlerDelegate;
-(void)_setViewsToDismissFrames;
-(void)_progressPanToExitFullsceen;
-(void)setCanvasViewGestureHandlerDelegate:(id<TFNCanvasViewGestureHandlerDelegate>)arg1 ;
-(void)dealloc;
-(UIViewController *)presentingViewController;
-(void)setPresentingViewController:(UIViewController *)arg1 ;
@end

