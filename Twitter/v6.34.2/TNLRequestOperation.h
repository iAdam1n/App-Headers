/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:50 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Foundation/NSOperation.h>
#import <Twitter/TNLConnectionOperationDelegate.h>

@protocol OS_dispatch_queue, TNLRequestDelegate, OS_dispatch_source, TNLRequest;
@class NSObject, NSMutableArray, NSError, TNLRequestOperationQueue, TNLRequestConfiguration, TNLResponseMetrics, NSString, TNLConnectionOperation, TNLResponse;

@interface TNLRequestOperation : NSOperation <TNLConnectionOperationDelegate> {

	NSObject*<OS_dispatch_queue> _backgroundQueue;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_queue> _retryPolicyQueue;
	NSObject*<OS_dispatch_queue> _completionQueue;
	long long _priority;
	long long _queuePriority;
	long long _qosPriority;
	NSMutableArray* _callbackTagStack;
	unsigned long long _mach_callbackTagTime;
	NSError* _cachedCancel;
	id<TNLRequestDelegate> _strongDelegate;
	unsigned long long _backgroundTaskIdentifier;
	NSObject*<OS_dispatch_source> _retryTimerSource;
	NSObject*<OS_dispatch_source> _operationTimeoutTimerSource;
	NSObject*<OS_dispatch_source> _idleTimerSource;
	struct {
		unsigned didEnqueue : 1;
		unsigned didStart : 1;
		unsigned didPrep : 1;
		unsigned didTimeout : 1;
		unsigned inRetryCheck : 1;
		unsigned silentStart : 1;
		unsigned didCompleteFinishedCallback : 1;
	}  _flags;
	float _downloadProgress;
	float _uploadProgress;
	long long _operationId;
	TNLRequestOperationQueue* _requestOperationQueue;
	TNLRequestConfiguration* _requestConfiguration;
	id<TNLRequestDelegate> _requestDelegate;
	id<TNLRequest> _originalRequest;
	id<TNLRequest> _hydratedRequest;
	Class _responseClass;
	long long _state;
	id _context;
	TNLResponseMetrics* _metrics;
	NSString* _cachedDelegateClassName;
	TNLConnectionOperation* _connectionOperation;
	NSError* _errorOverride;
	TNLResponse* _internalResponse;

}

@property (nonatomic,readonly) long long operationId;                                       //@synthesize operationId=_operationId - In the implementation block
@property (nonatomic,retain) TNLRequestOperationQueue * requestOperationQueue;              //@synthesize requestOperationQueue=_requestOperationQueue - In the implementation block
@property (nonatomic,readonly) TNLRequestConfiguration * requestConfiguration;              //@synthesize requestConfiguration=_requestConfiguration - In the implementation block
@property (nonatomic,__weak,readonly) id<TNLRequestDelegate> requestDelegate;               //@synthesize requestDelegate=_requestDelegate - In the implementation block
@property (nonatomic,readonly) id<TNLRequest> originalRequest;                              //@synthesize originalRequest=_originalRequest - In the implementation block
@property (nonatomic,retain) id<TNLRequest> hydratedRequest;                                //@synthesize hydratedRequest=_hydratedRequest - In the implementation block
@property (readonly) Class responseClass;                                                   //@synthesize responseClass=_responseClass - In the implementation block
@property (readonly) TNLResponse * response; 
@property (readonly) NSError * error; 
@property (nonatomic,readonly) long long state;                                             //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) unsigned long long attemptCount; 
@property (nonatomic,readonly) unsigned long long retryCount; 
@property (nonatomic,readonly) unsigned long long redirectCount; 
@property (assign,nonatomic) float downloadProgress;                                        //@synthesize downloadProgress=_downloadProgress - In the implementation block
@property (assign,nonatomic) float uploadProgress;                                          //@synthesize uploadProgress=_uploadProgress - In the implementation block
@property (nonatomic,retain) id context;                                                    //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) long long priority; 
@property (nonatomic,readonly) TNLResponseMetrics * metrics;                                //@synthesize metrics=_metrics - In the implementation block
@property (nonatomic,readonly) id<TNLRequestDelegate> internalDelegate; 
@property (copy) NSString * cachedDelegateClassName;                                        //@synthesize cachedDelegateClassName=_cachedDelegateClassName - In the implementation block
@property (retain) TNLConnectionOperation * connectionOperation;                            //@synthesize connectionOperation=_connectionOperation - In the implementation block
@property (retain) NSError * errorOverride;                                                 //@synthesize errorOverride=_errorOverride - In the implementation block
@property (retain) TNLResponse * internalResponse;                                          //@synthesize internalResponse=_internalResponse - In the implementation block
@property (readonly) long long executionMode; 
@property (readonly) long long responseSource; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)operationWithRequest:(id)arg1 configuration:(id)arg2 completion:(/*^block*/id)arg3 ;
+(id)operationWithRequest:(id)arg1 configuration:(id)arg2 delegate:(id)arg3 ;
+(id)operationWithRequest:(id)arg1 responseClass:(Class)arg2 configuration:(id)arg3 completion:(/*^block*/id)arg4 ;
+(id)operationWithURL:(id)arg1 configuration:(id)arg2 delegate:(id)arg3 ;
+(id)operationWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)operationWithRequest:(id)arg1 priority:(long long)arg2 completion:(/*^block*/id)arg3 ;
+(id)operationWithURL:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)operationWithRequest:(id)arg1 responseClass:(Class)arg2 configuration:(id)arg3 delegate:(id)arg4 ;
-(void)updateTag:(id)arg1 ;
-(void)clearTag:(id)arg1 ;
-(void)background_start;
-(void)background_cleanupAfterComplete;
-(BOOL)background_hasFailedOrFinished;
-(void)background_finalizeWithResponseInfo:(id)arg1 responseError:(id)arg2 metaData:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)background_transitionToState:(long long)arg1 ;
-(void)background_fail:(id)arg1 ;
-(BOOL)background_isStateFinished;
-(BOOL)background_isStateCancelled;
-(BOOL)background_isStateActive;
-(void)background_prepareToStart;
-(void)background_startOperationTimeoutTimer:(double)arg1 ;
-(void)background_startBackgroundTask;
-(BOOL)background_hasFailed;
-(void)background_discardConnection;
-(void)background_connect;
-(void)background_validateHydratedRequest:(/*^block*/id)arg1 ;
-(void)background_hydrateRequest:(/*^block*/id)arg1 ;
-(void)background_validateOriginalRequest:(/*^block*/id)arg1 ;
-(void)background_invalidateRetryTimer;
-(void)background_invalidateOperationTimeoutTimer;
-(void)background_endBackgroundTask;
-(void)background_attemptRetryDuringTransitionFromState:(long long)arg1 toState:(long long)arg2 withResponse:(id)arg3 ;
-(void)background_updateMetricsFromState:(long long)arg1 toState:(long long)arg2 response:(id)arg3 ;
-(id)private_logContextStringForState:(long long)arg1 ;
-(void)background_completeWithResponse:(id)arg1 ;
-(void)internal_finalizeCompletion;
-(void)background_startRetryTimer:(double)arg1 withOldResponse:(id)arg2 ;
-(void)background_completeTransitionFromState:(long long)arg1 toState:(long long)arg2 withResponse:(id)arg3 ;
-(id)background_buildResponseWithResponseInfo:(id)arg1 responseError:(id)arg2 metaData:(id)arg3 ;
-(void)background_retryTimerDidFireWithOldResponse:(id)arg1 ;
-(void)background_retryWithOldResponse:(id)arg1 ;
-(void)background_operationTimeoutTimerDidFire;
-(void)background_idleTimerFired;
-(void)background_startIdleTimer;
-(void)background_stopIdleTimer;
-(void)background_startIdleTimerIfNecessary;
-(unsigned long long)attemptCount;
-(void)cancelWithSource:(id)arg1 ;
-(float)uploadProgress;
-(long long)responseSource;
-(long long)executionMode;
-(id)currentURLRequest;
-(id<TNLRequest>)hydratedRequest;
-(void)waitUntilFinishedWithoutBlockingRunLoop;
-(TNLRequestConfiguration *)requestConfiguration;
-(unsigned long long)redirectCount;
-(id)initWithRequest:(id)arg1 responseClass:(Class)arg2 configuration:(id)arg3 delegate:(id)arg4 ;
-(void)setRequestOperationQueue:(TNLRequestOperationQueue *)arg1 ;
-(NSString *)cachedDelegateClassName;
-(NSError *)errorOverride;
-(TNLConnectionOperation *)connectionOperation;
-(TNLResponse *)internalResponse;
-(void)background_connectionOperation:(id)arg1 willPerformRedirectFromRequest:(id)arg2 withHTTPResponse:(id)arg3 toRequest:(id)arg4 redirectPolicy:(long long)arg5 completion:(/*^block*/id)arg6 ;
-(TNLRequestOperationQueue *)requestOperationQueue;
-(void)setUploadProgress:(float)arg1 ;
-(void)cancelWithSource:(id)arg1 underlyingError:(id)arg2 ;
-(void)setCachedDelegateClassName:(NSString *)arg1 ;
-(void)connectionOperation:(id)arg1 didTransitionToState:(long long)arg2 ;
-(void)connectionOperation:(id)arg1 finalizeWithResponseInfo:(id)arg2 responseError:(id)arg3 metaData:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)connectionOperation:(id)arg1 didUpdateUploadProgress:(float)arg2 ;
-(void)connectionOperation:(id)arg1 didUpdateDownloadProgress:(float)arg2 ;
-(void)connectionOperation:(id)arg1 appendReceivedData:(id)arg2 ;
-(void)connectionOperation:(id)arg1 didStartBackgroundTaskWithTaskIdentifier:(unsigned long long)arg2 configIdentifier:(id)arg3 sharedContainerIdentifier:(id)arg4 ;
-(void)connectionOperation:(id)arg1 receivedAuthChallenge:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)connectionOperation:(id)arg1 willPerformRedirectFromRequest:(id)arg2 withHTTPResponse:(id)arg3 toRequest:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)connectionOperation:(id)arg1 redirectedFrom:(id)arg2 withHTTPResponse:(id)arg3 to:(id)arg4 metaData:(id)arg5 ;
-(void)connectionOperation:(id)arg1 sanitizedHostFrom:(id)arg2 to:(id)arg3 ;
-(void)connectionOperation:(id)arg1 didReceiveURLResponse:(id)arg2 ;
-(void)enqueueToOperationQueue:(id)arg1 ;
-(void)setState:(long long)arg1 async:(BOOL)arg2 ;
-(void)setHydratedRequest:(id<TNLRequest>)arg1 ;
-(id)hydratedURLRequest;
-(id<TNLRequestDelegate>)requestDelegate;
-(void)setConnectionOperation:(TNLConnectionOperation *)arg1 ;
-(void)setErrorOverride:(NSError *)arg1 ;
-(void)setInternalResponse:(TNLResponse *)arg1 ;
-(BOOL)isAsynchronous;
-(id)URLResponse;
-(void)cancel;
-(void)dealloc;
-(id)init;
-(long long)state;
-(id)context;
-(void)setContext:(id)arg1 ;
-(BOOL)isCancelled;
-(TNLResponseMetrics *)metrics;
-(void)start;
-(TNLResponse *)response;
-(void)setPriority:(long long)arg1 ;
-(long long)priority;
-(BOOL)isFinished;
-(BOOL)isExecuting;
-(long long)qualityOfService;
-(long long)queuePriority;
-(BOOL)isConcurrent;
-(NSError *)error;
-(unsigned long long)retryCount;
-(void)waitUntilFinished;
-(Class)responseClass;
-(id<TNLRequest>)originalRequest;
-(id<TNLRequestDelegate>)internalDelegate;
-(long long)operationId;
-(float)downloadProgress;
-(void)setDownloadProgress:(float)arg1 ;
@end

