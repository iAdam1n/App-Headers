/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:48 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Twitter/TIPLRUManifestDelegate.h>
#import <Twitter/TIPInspectableCache.h>

@protocol OS_dispatch_queue;
@class NSObject, TIPLRUManifest, NSString;

@interface TIPImageDiskCache : NSObject <TIPLRUManifestDelegate, TIPInspectableCache> {

	NSObject*<OS_dispatch_queue> _backgroundQueue;
	NSObject*<OS_dispatch_queue> _cacheSizeAccessQueue;
	NSObject*<OS_dispatch_queue> _manifestQueue;
	unsigned long long _totalSize;
	TIPLRUManifest* _manifest;
	struct {
		unsigned manifestIsLoading : 1;
	}  _flags;
	unsigned long long _cacheSize;
	NSString* _cachePath;

}

@property (nonatomic,readonly) NSString * cachePath;                //@synthesize cachePath=_cachePath - In the implementation block
@property (assign) unsigned long long cacheSize;                    //@synthesize cacheSize=_cacheSize - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)manifest_populateManifest:(id)arg1 ;
-(void)manifest_populateEntries:(id)arg1 falseEntryPaths:(id)arg2 fromEntryPaths:(id)arg3 cachePath:(id)arg4 totalSize:(out unsigned long long*)arg5 ;
-(void)manifest_sortEntries:(id)arg1 ;
-(void)manifest_populateLRUWithEntries:(id)arg1 totalSize:(unsigned long long)arg2 ;
-(id)background_imageEntryForUnsafeIdentifier:(id)arg1 options:(long long)arg2 ;
-(void)background_updateImageEntry:(id)arg1 forciblyReplaceExisting:(BOOL)arg2 safeIdentifier:(id)arg3 ;
-(id)background_syncAccessManifest;
-(void)background_clearAllImages;
-(void)background_pruneWithMaxCacheSize:(unsigned long long)arg1 ;
-(BOOL)background_touchImageWithSafeIdentifier:(id)arg1 forced:(BOOL)arg2 ;
-(void)background_finalizeTemporaryFile:(id)arg1 withContext:(id)arg2 ;
-(void)background_inspect:(/*^block*/id)arg1 ;
-(id)background_imageEntryDirectlyFromDiskWithUnsafeIdentifier:(id)arg1 options:(long long)arg2 ;
-(id)background_imageEntryFromManifestWithUnsafeIdentifier:(id)arg1 options:(long long)arg2 ;
-(void)background_populateCompleteImageForEntry:(id)arg1 ;
-(void)background_populatePartialImageForEntry:(id)arg1 ;
-(void)background_populateTemporaryFileForEntry:(id)arg1 ;
-(void)background_ensureCacheDirectoryExists;
-(void)background_touchEntry:(id)arg1 forced:(BOOL)arg2 partial:(BOOL)arg3 ;
-(void)clearImageWithIdentifier:(id)arg1 ;
-(void)clearAllImages;
-(void)manifest:(id)arg1 didEvictEntry:(id)arg2 ;
-(void)inspect:(/*^block*/id)arg1 ;
-(void)touchImageWithIdentifier:(id)arg1 orSaveImageEntry:(id)arg2 ;
-(id)openTemporaryFileForImageIdentifier:(id)arg1 ;
-(id)imageEntryForIdentifier:(id)arg1 options:(long long)arg2 ;
-(void)updateImageEntry:(id)arg1 forciblyReplaceExisting:(BOOL)arg2 ;
-(id)initWithCacheSize:(unsigned long long)arg1 path:(id)arg2 ;
-(id)filePathForSafeIdentifier:(id)arg1 ;
-(void)finalizeTemporaryFile:(id)arg1 withContext:(id)arg2 ;
-(void)clearTemporaryFilePath:(id)arg1 ;
-(void)prune;
-(NSString *)cachePath;
-(void)setCacheSize:(unsigned long long)arg1 ;
-(unsigned long long)cacheSize;
@end

