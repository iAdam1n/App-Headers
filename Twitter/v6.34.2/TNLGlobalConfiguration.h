/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:50 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol TNLHostSanitizer, TNLHTTPHeaderProvider, OS_dispatch_queue, SPDYLogger;
@class NSObject, TNLCocoaSPDYConfiguration;

@interface TNLGlobalConfiguration : NSObject {

	BOOL _shouldForceCrashOnCloggedCallback;
	id<TNLHostSanitizer> _hostSanitizer;
	id<TNLHTTPHeaderProvider> _headerProvider;
	NSObject*<OS_dispatch_queue> _configurationQueue;
	id<SPDYLogger> _cocoaSPDYLogger;

}

@property (copy) TNLCocoaSPDYConfiguration * cocoaSPDYConfiguration; 
@property (retain) id<TNLCocoaSPDYTLSTrustEvaluator> cocoaSPDYTLSTrustEvaluator; 
@property (__weak) id<TNLCocoaSPDYLogDelegate> cocoaSPDYLogDelegate; 
@property (assign) long long cocoaSPDYLogLevel; 
@property (retain) id<TNLHostSanitizer> hostSanitizer;                                        //@synthesize hostSanitizer=_hostSanitizer - In the implementation block
@property (retain) id<TNLHTTPHeaderProvider> headerProvider;                                  //@synthesize headerProvider=_headerProvider - In the implementation block
@property (assign) BOOL shouldForceCrashOnCloggedCallback;                                    //@synthesize shouldForceCrashOnCloggedCallback=_shouldForceCrashOnCloggedCallback - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> configurationQueue;               //@synthesize configurationQueue=_configurationQueue - In the implementation block
@property (nonatomic,readonly) id<SPDYLogger> cocoaSPDYLogger;                                //@synthesize cocoaSPDYLogger=_cocoaSPDYLogger - In the implementation block
+(id)sharedInstance;
+(id)version;
-(void)setCocoaSPDYLogDelegate:(id<TNLCocoaSPDYLogDelegate>)arg1 ;
-(void)setCocoaSPDYConfiguration:(TNLCocoaSPDYConfiguration *)arg1 ;
-(void)setCocoaSPDYTLSTrustEvaluator:(id<TNLCocoaSPDYTLSTrustEvaluator>)arg1 ;
-(void)unregisterAllCocoaSPDYOrigins;
-(void)unregisterAllCocoaSPDYAliases;
-(void)registerCocoaSPDYOrigin:(id)arg1 ;
-(void)unregisterCocoaSPDYOrigin:(id)arg1 ;
-(void)registerCocoaSPDYAlias:(id)arg1 forOrigin:(id)arg2 ;
-(void)unregisterCocoaSPDYAlias:(id)arg1 ;
-(TNLCocoaSPDYConfiguration *)cocoaSPDYConfiguration;
-(id<TNLCocoaSPDYTLSTrustEvaluator>)cocoaSPDYTLSTrustEvaluator;
-(id<TNLCocoaSPDYLogDelegate>)cocoaSPDYLogDelegate;
-(void)setCocoaSPDYLogLevel:(long long)arg1 ;
-(long long)cocoaSPDYLogLevel;
-(void)addNetworkObserver:(id)arg1 ;
-(void)setHostSanitizer:(id<TNLHostSanitizer>)arg1 ;
-(BOOL)shouldForceCrashOnCloggedCallback;
-(id<TNLHostSanitizer>)hostSanitizer;
-(id<TNLHTTPHeaderProvider>)headerProvider;
-(void)setHeaderProvider:(id<TNLHTTPHeaderProvider>)arg1 ;
-(void)setShouldForceCrashOnCloggedCallback:(BOOL)arg1 ;
-(id<SPDYLogger>)cocoaSPDYLogger;
-(id)init;
-(NSObject*<OS_dispatch_queue>)configurationQueue;
-(void)removeNetworkObserver:(id)arg1 ;
@end

