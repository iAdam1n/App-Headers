/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 11:30:50 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/16C752D5-8F70-4E83-B0AB-94FF56CA8C26/Twitter.app/Twitter
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Twitter/Twitter-Structs.h>
#import <Foundation/NSOperation.h>
#import <Twitter/NSURLSessionDataDelegate.h>
#import <Twitter/NSURLSessionDownloadDelegate.h>
#import <Twitter/SPDYURLSessionDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_source, TNLConnectionOperationDelegate, TNLHostSanitizer, TNLHTTPHeaderProvider, TNLRequest, SPDYProtocolContext;
@class NSObject, NSURLSession, NSURLSessionDataTask, NSURLSessionDownloadTask, NSURLSessionUploadTask, TNLRequestOperationQueue, TNLRequestConfiguration, TNLResponseInfo, TNLResponse, TNLRequestOperation, NSError, NSData, NSHTTPURLResponse, NSMutableData, TNLTemporaryFile, NSURLSessionTask, NSURLRequest, NSString;

@interface TNLConnectionOperation : NSOperation <NSURLSessionDataDelegate, NSURLSessionDownloadDelegate, SPDYURLSessionDelegate> {

	NSObject*<OS_dispatch_queue> _backgroundQueue;
	NSURLSession* _URLSession;
	NSURLSessionDataTask* _dataTask;
	NSURLSessionDownloadTask* _downloadTask;
	NSURLSessionUploadTask* _uploadTask;
	unsigned long long _startMachTime;
	unsigned long long _endMachTime;
	unsigned long long _completeMachTime;
	unsigned long long _responseBodyStartMachTime;
	unsigned long long _responseBodyEndMachTime;
	NSObject*<OS_dispatch_source> _idleTimer;
	SCD_Struct_T18 _flags;
	TNLRequestOperationQueue* _requestOperationQueue;
	long long _executionMode;
	long long _requestPriority;
	TNLRequestConfiguration* _requestConfiguration;
	TNLResponseInfo* _responseInfo;
	TNLResponse* _finalResponse;
	TNLRequestOperation*<TNLConnectionOperationDelegate> _requestOperation;
	NSError* _error;
	long long _state;
	NSData* _resumeData;
	NSHTTPURLResponse* _cancelledRedirectResponse;
	Class _responseClass;
	id<TNLHostSanitizer> _hostSanitizer;
	id<TNLHTTPHeaderProvider> _headerProvider;
	id<TNLRequest> _originalRequest;
	NSMutableData* _storedData;
	TNLTemporaryFile* _tempFile;
	id<SPDYProtocolContext> _contextForCocoaSPDY;

}

@property (nonatomic,readonly) TNLRequestOperationQueue * requestOperationQueue;                                          //@synthesize requestOperationQueue=_requestOperationQueue - In the implementation block
@property (nonatomic,readonly) NSURLSessionTask * URLSessionTask; 
@property (assign,nonatomic) long long executionMode;                                                                     //@synthesize executionMode=_executionMode - In the implementation block
@property (assign,nonatomic) long long requestPriority;                                                                   //@synthesize requestPriority=_requestPriority - In the implementation block
@property (nonatomic,readonly) TNLRequestConfiguration * requestConfiguration;                                            //@synthesize requestConfiguration=_requestConfiguration - In the implementation block
@property (nonatomic,retain) TNLResponseInfo * responseInfo;                                                              //@synthesize responseInfo=_responseInfo - In the implementation block
@property (nonatomic,readonly) long long responseSource; 
@property (nonatomic,readonly) TNLResponse * finalResponse;                                                               //@synthesize finalResponse=_finalResponse - In the implementation block
@property (nonatomic,__weak,readonly) TNLRequestOperation*<TNLConnectionOperationDelegate> requestOperation;              //@synthesize requestOperation=_requestOperation - In the implementation block
@property (nonatomic,readonly) NSURLRequest * originalURLRequest; 
@property (nonatomic,readonly) NSURLRequest * currentURLRequest; 
@property (nonatomic,readonly) NSHTTPURLResponse * URLResponse; 
@property (nonatomic,retain) NSError * error;                                                                             //@synthesize error=_error - In the implementation block
@property (assign,nonatomic) long long state;                                                                             //@synthesize state=_state - In the implementation block
@property (getter=isComplete,nonatomic,readonly) BOOL complete; 
@property (getter=isFinalizing,nonatomic,readonly) BOOL finalizing; 
@property (nonatomic,readonly) BOOL shouldCancel; 
@property (nonatomic,retain) NSData * resumeData;                                                                         //@synthesize resumeData=_resumeData - In the implementation block
@property (nonatomic,retain) NSHTTPURLResponse * cancelledRedirectResponse;                                               //@synthesize cancelledRedirectResponse=_cancelledRedirectResponse - In the implementation block
@property (nonatomic,retain) Class responseClass;                                                                         //@synthesize responseClass=_responseClass - In the implementation block
@property (nonatomic,retain) id<TNLHostSanitizer> hostSanitizer;                                                          //@synthesize hostSanitizer=_hostSanitizer - In the implementation block
@property (nonatomic,retain) id<TNLHTTPHeaderProvider> headerProvider;                                                    //@synthesize headerProvider=_headerProvider - In the implementation block
@property (nonatomic,retain) id<TNLRequest> originalRequest;                                                              //@synthesize originalRequest=_originalRequest - In the implementation block
@property (nonatomic,retain) NSMutableData * storedData;                                                                  //@synthesize storedData=_storedData - In the implementation block
@property (nonatomic,retain) TNLTemporaryFile * tempFile;                                                                 //@synthesize tempFile=_tempFile - In the implementation block
@property (nonatomic,readonly) BOOL usingCocoaSPDY; 
@property (nonatomic,readonly) BOOL currentRequestHasBody; 
@property (nonatomic,retain) id<SPDYProtocolContext> contextForCocoaSPDY;                                                 //@synthesize contextForCocoaSPDY=_contextForCocoaSPDY - In the implementation block
@property (assign,getter=isObservingURLSessionTask,nonatomic) BOOL observingURLSessionTask; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)background_transitionToState:(long long)arg1 ;
-(void)background_fail:(id)arg1 ;
-(void)background_idleTimerFired;
-(void)background_startIdleTimer;
-(void)background_stopIdleTimer;
-(void)background_updatePriorities;
-(void)background_cancel;
-(BOOL)background_shouldCancel:(long long)arg1 ;
-(id)background_metaData;
-(void)background_validateConfiguration;
-(void)background_applyGlobalHeadersToRequest:(id)arg1 ;
-(void)background_didStartBackgroundTask;
-(void)background_startIdleTimerWithDeferral:(double)arg1 ;
-(void)background_restartIdleTimer;
-(void)background_createTaskWithURLRequest:(id)arg1 complete:(/*^block*/id)arg2 ;
-(void)background_URLSession:(id)arg1 task:(id)arg2 didReceiveResponse:(id)arg3 ;
-(void)background_handleAuthChallenge:(id)arg1 completion:(/*^block*/id)arg2 ;
-(float)background_uploadProgress;
-(void)background_updateUploadProgress:(float)arg1 ;
-(void)background_complete;
-(id)background_appendReceivedData:(id)arg1 ;
-(float)background_downloadProgress;
-(void)background_updateDownloadProgress:(float)arg1 ;
-(void)background_URLSession:(id)arg1 downloadTask:(id)arg2 didUpdateTotalBytesReceived:(long long)arg3 totalBytesExpectedToReceive:(long long)arg4 ;
-(void)background_buildResponseInfo;
-(void)background_finalize:(long long)arg1 ;
-(void)background_finalizeWithResponseCompletion:(/*^block*/id)arg1 ;
-(void)background_buildInternalResponse;
-(void)background_updateTimestampsForState:(long long)arg1 ;
-(id)background_populateURLSessionTaskWithRequest:(id)arg1 error:(out id*)arg2 ;
-(void)setHostSanitizer:(id<TNLHostSanitizer>)arg1 ;
-(TNLRequestOperation*<TNLConnectionOperationDelegate>)requestOperation;
-(long long)responseSource;
-(void)setExecutionMode:(long long)arg1 ;
-(long long)executionMode;
-(NSURLRequest *)currentURLRequest;
-(TNLTemporaryFile *)tempFile;
-(void)setTempFile:(TNLTemporaryFile *)arg1 ;
-(TNLRequestConfiguration *)requestConfiguration;
-(NSURLRequest *)originalURLRequest;
-(void)priorityDidChangeForRequestOperation:(id)arg1 ;
-(TNLRequestOperationQueue *)requestOperationQueue;
-(void)cancelWithSource:(id)arg1 underlyingError:(id)arg2 ;
-(void)enqueueToOperationQueueIfNeeded:(id)arg1 ;
-(void)dissassociateRequestOperation:(id)arg1 ;
-(void)getMetaData:(/*^block*/id)arg1 ;
-(id<TNLHostSanitizer>)hostSanitizer;
-(id<TNLHTTPHeaderProvider>)headerProvider;
-(void)setHeaderProvider:(id<TNLHTTPHeaderProvider>)arg1 ;
-(void)setObservingURLSessionTask:(BOOL)arg1 ;
-(NSURLSessionTask *)URLSessionTask;
-(BOOL)isFinalizing;
-(BOOL)usingCocoaSPDY;
-(void)setContextForCocoaSPDY:(id<SPDYProtocolContext>)arg1 ;
-(void)background_willPerformHTTPRedirectionFromRequest:(id)arg1 withResponse:(id)arg2 originalRequest:(id)arg3 suggestedRequest:(id)arg4 chosenRequest:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)background_handleRedirectFromRequest:(id)arg1 withResponse:(id)arg2 toRequest:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didStartLoadingRequest:(id)arg3 withContext:(id)arg4 ;
-(id)initWithRequestOperation:(id)arg1 ;
-(BOOL)currentRequestHasBody;
-(BOOL)isObservingURLSessionTask;
-(id)synthesizeRequestOperation;
-(void)setResponseInfo:(TNLResponseInfo *)arg1 ;
-(TNLResponse *)finalResponse;
-(void)setResumeData:(NSData *)arg1 ;
-(NSHTTPURLResponse *)cancelledRedirectResponse;
-(void)setCancelledRedirectResponse:(NSHTTPURLResponse *)arg1 ;
-(NSMutableData *)storedData;
-(void)setStoredData:(NSMutableData *)arg1 ;
-(id<SPDYProtocolContext>)contextForCocoaSPDY;
-(void)setOriginalRequest:(id<TNLRequest>)arg1 ;
-(void)setRequestPriority:(long long)arg1 ;
-(long long)requestPriority;
-(NSData *)resumeData;
-(BOOL)isAsynchronous;
-(id)URLSession;
-(void)setURLSession:(id)arg1 ;
-(NSHTTPURLResponse *)URLResponse;
-(BOOL)isComplete;
-(void)dealloc;
-(id)init;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(BOOL)isCancelled;
-(void)start;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)isFinished;
-(BOOL)isExecuting;
-(BOOL)isConcurrent;
-(NSError *)error;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(/*^block*/id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1 ;
-(Class)responseClass;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setResponseClass:(Class)arg1 ;
-(id<TNLRequest>)originalRequest;
-(TNLResponseInfo *)responseInfo;
-(BOOL)shouldCancel;
-(void)setError:(NSError *)arg1 ;
@end

