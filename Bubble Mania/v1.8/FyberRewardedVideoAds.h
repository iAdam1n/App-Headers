/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:58:14 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/0CF72264-5488-4FD5-B700-EF786D177983/BubbleMania.app/BubbleMania
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BubbleMania/RewardedVideoAdsProtocol.h>
#import <BubbleMania/SPBrandEngageClientDelegate.h>

@protocol RewardedVideoAdsDelegate;
@class NSMutableArray, RewardedVideoAdsRewardManager, SPBrandEngageClient, NSArray, NSString;

@interface FyberRewardedVideoAds : NSObject <RewardedVideoAdsProtocol, SPBrandEngageClientDelegate> {

	BOOL _wasSoundMuted;
	BOOL _isRequestPending;
	BOOL _isRequestValid;
	BOOL _isPlayPending;
	NSMutableArray* seenVideoAdsTimestamps;
	long long bucketId;
	id<RewardedVideoAdsDelegate> delegate;
	RewardedVideoAdsRewardManager* rewardManager;
	SPBrandEngageClient* _brandEngageClient;
	long long _lastRequestTime;

}

@property (nonatomic,retain) SPBrandEngageClient * brandEngageClient;                    //@synthesize brandEngageClient=_brandEngageClient - In the implementation block
@property (assign,nonatomic) BOOL wasSoundMuted;                                         //@synthesize wasSoundMuted=_wasSoundMuted - In the implementation block
@property (assign,nonatomic) BOOL isRequestPending;                                      //@synthesize isRequestPending=_isRequestPending - In the implementation block
@property (assign,nonatomic) long long lastRequestTime;                                  //@synthesize lastRequestTime=_lastRequestTime - In the implementation block
@property (assign,nonatomic) BOOL isRequestValid;                                        //@synthesize isRequestValid=_isRequestValid - In the implementation block
@property (assign,nonatomic) BOOL isPlayPending;                                         //@synthesize isPlayPending=_isPlayPending - In the implementation block
@property (nonatomic,readonly) NSArray * limiter; 
@property (nonatomic,readonly) long long maxInterval; 
@property (nonatomic,retain) id<RewardedVideoAdsDelegate> delegate; 
@property (assign,nonatomic) long long bucketId; 
@property (nonatomic,retain) NSMutableArray * seenVideoAdsTimestamps; 
@property (nonatomic,retain) RewardedVideoAdsRewardManager * rewardManager; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)instance;
-(void)setRewardManager:(RewardedVideoAdsRewardManager *)arg1 ;
-(RewardedVideoAdsRewardManager *)rewardManager;
-(void)setup:(id)arg1 ;
-(BOOL)isVideoAvailableForPlacement:(long long)arg1 ;
-(long long)bucketId;
-(void)setBucketId:(long long)arg1 ;
-(void)setSeenVideoAdsTimestamps:(NSMutableArray *)arg1 ;
-(NSMutableArray *)seenVideoAdsTimestamps;
-(SPBrandEngageClient *)brandEngageClient;
-(void)setBrandEngageClient:(SPBrandEngageClient *)arg1 ;
-(void)requestVideo;
-(NSArray *)limiter;
-(long long)secondsUntilNextVideo;
-(BOOL)isVideoAvailableByCap;
-(BOOL)isVideoAvailable;
-(BOOL)isRequestPending;
-(void)setIsRequestPending:(BOOL)arg1 ;
-(void)setLastRequestTime:(long long)arg1 ;
-(void)requestTimeout;
-(void)processRequest:(BOOL)arg1 ;
-(void)setIsRequestValid:(BOOL)arg1 ;
-(BOOL)isPlayPending;
-(BOOL)isRequestValid;
-(void)startPlayVideo;
-(void)setIsPlayPending:(BOOL)arg1 ;
-(long long)lastRequestTime;
-(void)playVideo;
-(void)setWasSoundMuted:(BOOL)arg1 ;
-(void)playTimeout;
-(void)stopPlayVideo;
-(BOOL)wasSoundMuted;
-(void)showVideoDialog;
-(void)showVideoDialogWithMessage:(id)arg1 ;
-(void)didShowVideoDialog;
-(void)playVideoWithDelegate:(id)arg1 ;
-(void)showVideoDialogWithDelegate:(id)arg1 ;
-(void)showVideoDialogWithMessage:(id)arg1 delegate:(id)arg2 ;
-(void)brandEngageClient:(id)arg1 didReceiveOffers:(BOOL)arg2 ;
-(void)brandEngageClient:(id)arg1 didChangeStatus:(long long)arg2 ;
-(void)setDelegate:(id<RewardedVideoAdsDelegate>)arg1 ;
-(void)dealloc;
-(id<RewardedVideoAdsDelegate>)delegate;
-(BOOL)isSupported;
-(BOOL)canPlayVideo;
-(long long)maxInterval;
@end

