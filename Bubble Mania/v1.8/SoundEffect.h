/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:58:13 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/0CF72264-5488-4FD5-B700-EF786D177983/BubbleMania.app/BubbleMania
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <BubbleMania/BubbleMania-Structs.h>
@class NSOperationQueue, NSString, NSMutableDictionary;

@interface SoundEffect : NSObject {

	NSOperationQueue* queue;
	dispatch_queue_sRef playQueue;
	BOOL isPlaying;
	BOOL looping;
	unsigned _soundID;
	float soundFXMinimumGap;
	NSString* filePath;
	NSMutableDictionary* soundEffects;
	NSMutableDictionary* reloadPath;
	NSMutableDictionary* soundLastPlayed;

}

@property (nonatomic,retain) NSString * filePath; 
@property (assign,nonatomic) unsigned _soundID;                                  //@synthesize soundID=_soundID - In the implementation block
@property (assign,nonatomic) BOOL isPlaying; 
@property (assign,nonatomic) BOOL looping; 
@property (nonatomic,retain) NSMutableDictionary * soundEffects; 
@property (nonatomic,retain) NSMutableDictionary * reloadPath; 
@property (nonatomic,retain) NSMutableDictionary * soundLastPlayed; 
@property (assign,nonatomic) float soundFXMinimumGap; 
+(void)vibrate;
+(void)play:(id)arg1 loop:(BOOL)arg2 ;
+(void)preload:(id)arg1 ;
+(void)stopAndRewind:(id)arg1 ;
+(void)playForAction:(id)arg1 ;
+(void)play:(id)arg1 package:(id)arg2 ;
+(void)play:(id)arg1 loop:(BOOL)arg2 package:(id)arg3 ;
+(void)playForAction:(id)arg1 package:(id)arg2 ;
+(void)play:(id)arg1 numberOfLoops:(int)arg2 package:(id)arg3 ;
+(BOOL)play:(id)arg1 ignoreIfPlayedInSeconds:(double)arg2 package:(id)arg3 ;
+(BOOL)play:(id)arg1 ignoreIfPlayedInSeconds:(double)arg2 forcePlay:(BOOL)arg3 package:(id)arg4 ;
+(BOOL)play:(id)arg1 ignoreIfPlayedInSeconds:(double)arg2 ;
+(BOOL)play:(id)arg1 ignoreIfPlayedInSeconds:(double)arg2 forcePlay:(BOOL)arg3 ;
+(void)play:(id)arg1 numberOfLoops:(int)arg2 ;
+(void)stopLooping:(id)arg1 ;
+(float)getSoundFXMinimumGap;
+(void)playSoundEffectWithKey:(id)arg1 ;
+(void)clearCache;
+(void)stop:(id)arg1 ;
+(void)shutdown;
+(id)instance;
+(void)play:(id)arg1 ;
-(void)downloadComplete:(id)arg1 ;
-(void)setReloadPath:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)reloadPath;
-(BOOL)looping;
-(void)doClearCache;
-(void)destroyQueue;
-(void)setSoundEffects:(NSMutableDictionary *)arg1 ;
-(void)setSoundLastPlayed:(NSMutableDictionary *)arg1 ;
-(void)setSoundFXMinimumGap:(float)arg1 ;
-(float)soundFXMinimumGap;
-(NSMutableDictionary *)soundEffects;
-(NSMutableDictionary *)soundLastPlayed;
-(void)loadFile:(id)arg1 toPlay:(BOOL)arg2 numberOfLoops:(int)arg3 package:(id)arg4 ;
-(void)loadFile:(id)arg1 toPlay:(BOOL)arg2 numberOfLoops:(int)arg3 ;
-(void)reload:(id)arg1 path:(id)arg2 toPlay:(BOOL)arg3 numberOfLoops:(int)arg4 package:(id)arg5 ;
-(unsigned)_soundID;
-(void)set_soundID:(unsigned)arg1 ;
-(void)dealloc;
-(id)init;
-(void)setFilePath:(NSString *)arg1 ;
-(NSString *)filePath;
-(void)setIsPlaying:(BOOL)arg1 ;
-(void)setLooping:(BOOL)arg1 ;
-(BOOL)isPlaying;
@end

