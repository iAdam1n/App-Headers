/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:58:13 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/0CF72264-5488-4FD5-B700-EF786D177983/BubbleMania.app/BubbleMania
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BubbleMania/PostGameDataUpdateDelegate.h>

@protocol QuestManagerAssistantProtocol;
@class NSObject, NSMutableDictionary, NSMutableSet, NSArray, NSDictionary, Quest;

@interface QuestManagerBase : NSObject <PostGameDataUpdateDelegate> {

	NSObject*<QuestManagerAssistantProtocol> _assistant;
	NSMutableDictionary* questProgressMap;
	BOOL blockNotifications;
	BOOL inGameDataDidUpdate;
	BOOL startedInCurrentGameDataUpdate;
	BOOL willRefreshTasks;
	NSMutableSet* currentQuests;
	NSMutableSet* completedQuests;
	NSArray* hiddenQuestIds;
	NSDictionary* queuedNotification;
	NSMutableDictionary* lastTouchedTimeByQuestId;
	Quest* activeGuidedQuest;
	NSArray* installedBinaries;

}

@property (nonatomic,retain) Quest * activeGuidedQuest; 
@property (assign,nonatomic) BOOL blockNotifications; 
@property (assign,nonatomic) BOOL inGameDataDidUpdate; 
@property (assign,nonatomic) BOOL startedInCurrentGameDataUpdate; 
@property (nonatomic,retain) NSMutableSet * currentQuests; 
@property (nonatomic,retain) NSMutableSet * completedQuests; 
@property (nonatomic,retain) NSArray * hiddenQuestIds; 
@property (nonatomic,retain) NSMutableDictionary * questProgressMap; 
@property (nonatomic,retain) NSObject*<QuestManagerAssistantProtocol> assistant;              //@synthesize assistant=_assistant - In the implementation block
@property (nonatomic,retain) NSDictionary * queuedNotification; 
@property (nonatomic,retain) NSMutableDictionary * lastTouchedTimeByQuestId; 
@property (nonatomic,retain) NSArray * installedBinaries; 
@property (assign,nonatomic) BOOL willRefreshTasks; 
+(id)keyForCompletedQuests;
+(id)keyForUnstartedQuests;
+(id)keyForProgressedQuestTasks;
+(id)keyForExpiredQuests;
+(id)keyForHiddenQuests;
+(id)keyForStartedQuests;
+(id)instance;
-(NSArray *)installedBinaries;
-(void)installAssistant:(id)arg1 ;
-(void)didReceiveInstalledBinaryList:(id)arg1 ;
-(void)setInstalledBinaries:(NSArray *)arg1 ;
-(NSMutableSet *)currentQuests;
-(void)setBlockNotifications:(BOOL)arg1 ;
-(void)refreshTasks;
-(void)gameDataDidUpdate:(id)arg1 ;
-(void)setStartedInCurrentGameDataUpdate:(BOOL)arg1 ;
-(void)startQuest:(id)arg1 sendChangeEvent:(BOOL)arg2 ;
-(id)currentCrossPromotionQuestForAppId:(int)arg1 ;
-(id)incompleteTasksForType:(int)arg1 ;
-(NSArray *)hiddenQuestIds;
-(void)setHiddenQuestIds:(NSArray *)arg1 ;
-(void)levelUp;
-(void)setQuestProgressMap:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)questProgressMap;
-(int)lastTouchedTimeForQuest:(id)arg1 ;
-(BOOL)isQuestStarted:(id)arg1 ;
-(BOOL)isCompletedQuest:(id)arg1 ;
-(int)startTimeForQuest:(id)arg1 ;
-(id)currentQuestsWithCustomType:(int)arg1 ;
-(id)completedQuestsWithCustomType:(int)arg1 ;
-(void)updateCompletedQuestGameCenterAchievements;
-(void)setLastTouchedTimeByQuestId:(NSMutableDictionary *)arg1 ;
-(BOOL)inGameDataDidUpdate;
-(BOOL)startedInCurrentGameDataUpdate;
-(void)setWillRefreshTasks:(BOOL)arg1 ;
-(void)setCompletedQuests:(NSMutableSet *)arg1 ;
-(NSMutableSet *)completedQuests;
-(void)updateCurrentQuests;
-(BOOL)maxLevelRequirementMet:(id)arg1 ;
-(int)getUserRating;
-(void)setCurrentQuests:(NSMutableSet *)arg1 ;
-(BOOL)isTutorialMode;
-(id)potentialNewQuests;
-(BOOL)shouldAddPotentialNewQuest:(id)arg1 tutorialMode:(BOOL)arg2 ;
-(BOOL)shouldAddRootQuest:(id)arg1 tutorialMode:(BOOL)arg2 ;
-(void)postNotificationWithUnstartedQuests:(id)arg1 ;
-(void)postNotificationWithHiddenQuests:(id)arg1 ;
-(BOOL)isCompleteTask:(id)arg1 ;
-(void)updateUserHaveXp;
-(void)updateUserHaveCash;
-(void)updateInstalledBinaries;
-(void)checkForCurrentQuestCompletion;
-(void)touchQuest:(id)arg1 ;
-(void)sendChangeEventForTask:(id)arg1 withValue:(long long)arg2 ;
-(void)handleQuestTaskCompletion:(id)arg1 ;
-(void)forceCompleteQuest:(id)arg1 ;
-(void)tryToCompleteQuest:(id)arg1 ;
-(void)updateGameCenterAchievementForQuest:(id)arg1 forceComplete:(BOOL)arg2 suppressBanner:(BOOL)arg3 ;
-(BOOL)setProgress:(long long)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 sendQuestTaskEvent:(int)arg4 forceCompleteQuest:(BOOL)arg5 ;
-(BOOL)setProgress:(long long)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 sendQuestTaskEvent:(int)arg4 ;
-(BOOL)setProgress:(long long)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 ;
-(BOOL)isSkippedTask:(id)arg1 ;
-(int)targetForTask:(id)arg1 ;
-(long long)progressForTask:(id)arg1 ;
-(BOOL)canCompleteQuest:(id)arg1 ;
-(void)delayedQuestCompletion:(id)arg1 ;
-(void)awardUserForCompletingQuest:(id)arg1 ;
-(void)postNotificationWithCompletedQuests:(id)arg1 ;
-(Quest *)activeGuidedQuest;
-(void)setActiveGuidedQuest:(Quest *)arg1 ;
-(BOOL)setProgress:(long long)arg1 forTask:(id)arg2 ;
-(BOOL)buyQuestReward:(id)arg1 ;
-(void)postNotificationWithExpiredQuests:(id)arg1 ;
-(NSMutableDictionary *)lastTouchedTimeByQuestId;
-(void)setInGameDataDidUpdate:(BOOL)arg1 ;
-(int)skipCostForTask:(id)arg1 ;
-(BOOL)canSkipTask:(id)arg1 ;
-(void)postNotificationWithProgressedQuestTasks:(id)arg1 ;
-(void)updateGameCenterAchievementForQuest:(id)arg1 ;
-(BOOL)taskHasTimer:(id)arg1 ;
-(int)requiredTimeToCompleteTask:(id)arg1 ;
-(int)taskMaturityTime:(id)arg1 ;
-(BOOL)isFertilized:(id)arg1 ;
-(BOOL)isValidTask:(id)arg1 ;
-(BOOL)canFertilizeTask:(id)arg1 ;
-(long long)fertilizeCostForTask:(id)arg1 ;
-(void)fertilizeTask:(id)arg1 ;
-(void)postNotificationHelperForName:(id)arg1 withArray:(id)arg2 ;
-(void)setQueuedNotification:(NSDictionary *)arg1 ;
-(void)startQuest:(id)arg1 startTime:(int)arg2 sendChangeEvent:(BOOL)arg3 ;
-(void)startTask:(id)arg1 ;
-(void)postNotificationWithStartedQuests:(id)arg1 ;
-(BOOL)willRefreshTasks;
-(void)updateDailyBonusCount;
-(void)startGainPlusInventoryTask:(id)arg1 ;
-(id)allTasksForType:(int)arg1 ;
-(NSObject*<QuestManagerAssistantProtocol>)assistant;
-(id)startedQuestsWithCustomType:(int)arg1 ;
-(id)trackingForTask:(id)arg1 ;
-(void)setTracking:(id)arg1 forTask:(id)arg2 ;
-(void)refreshStats;
-(BOOL)incrementProgress:(long long)arg1 forTask:(id)arg2 ;
-(void)completeExpiredQuest:(id)arg1 buyReward:(BOOL)arg2 ;
-(void)skipTask:(id)arg1 ;
-(BOOL)canFertilizeQuest:(id)arg1 ;
-(void)fertilizeQuest:(id)arg1 ;
-(void)tutorialEnded;
-(void)getInstalledBinaryList;
-(void)tryToCompleteQuestsOfType:(int)arg1 ;
-(void)watchRewardedVideoAds:(int)arg1 ;
-(void)enabledPushNotification;
-(BOOL)blockNotifications;
-(NSDictionary *)queuedNotification;
-(void)dealloc;
-(id)init;
-(void)addObserver:(id)arg1 ;
-(void)removeObserver:(id)arg1 ;
-(void)start;
-(void)clear;
-(void)setAssistant:(NSObject*<QuestManagerAssistantProtocol>)arg1 ;
@end

