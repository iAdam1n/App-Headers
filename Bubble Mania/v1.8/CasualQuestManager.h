/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:58:13 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/0CF72264-5488-4FD5-B700-EF786D177983/BubbleMania.app/BubbleMania
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BubbleMania/QuestManagerBase.h>

@class NSMutableSet, NSMutableDictionary;

@interface CasualQuestManager : QuestManagerBase {

	NSMutableSet* currentEligibleQuestIds;
	NSMutableDictionary* currentTaskMap;

}

@property (nonatomic,retain) NSMutableSet * currentEligibleQuestIds; 
@property (nonatomic,retain) NSMutableDictionary * currentTaskMap; 
-(void)setCurrentEligibleQuestIds:(NSMutableSet *)arg1 ;
-(NSMutableSet *)currentEligibleQuestIds;
-(void)gainItem:(id)arg1 ;
-(id)incompleteQuestWithName:(id)arg1 ;
-(void)finishLevelWithName:(id)arg1 withBubbles:(id)arg2 ;
-(void)finishLevelWithName:(id)arg1 withLessThanExact:(int)arg2 withQuestType:(int)arg3 ;
-(void)finishLevelWithName:(id)arg1 withTouchValues:(id)arg2 ;
-(void)completePuzzleWithRating:(long long)arg1 name:(id)arg2 ;
-(void)refreshTasks;
-(void)gameDataDidUpdate:(id)arg1 ;
-(void)completeMoveWithScore:(int)arg1 name:(id)arg2 ;
-(void)reachChain:(int)arg1 name:(id)arg2 ;
-(void)reachDropChain:(int)arg1 name:(id)arg2 ;
-(BOOL)setProgress:(long long)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 sendQuestTaskEvent:(int)arg4 ;
-(void)awardUserForCompletingQuest:(id)arg1 ;
-(int)progressForCriteria:(id)arg1 ;
-(int)targetForCriteria:(id)arg1 ;
-(BOOL)isLockedPromoQuest:(id)arg1 ;
-(void)updateTaskMapWithQuest:(id)arg1 ;
-(void)updateHavePuzzleRating:(int)arg1 ;
-(void)updateGameSpecificProgress;
-(BOOL)incrementProgress:(int)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 sendQuestTaskEvent:(int)arg4 forceCompleteQuest:(BOOL)arg5 ;
-(BOOL)incrementProgress:(int)arg1 forTask:(id)arg2 startQuestIfNeeded:(BOOL)arg3 sendQuestTaskEvent:(int)arg4 ;
-(id)incrementTasksOfType:(int)arg1 withItem:(id)arg2 value:(int)arg3 startQuestIfNeeded:(BOOL)arg4 sendQuestTaskEvent:(int)arg5 ;
-(id)incrementTasksOfType:(int)arg1 withName:(id)arg2 rating:(long long)arg3 value:(int)arg4 startQuestIfNeeded:(BOOL)arg5 sendQuestTaskEvent:(int)arg6 ;
-(id)incrementTasksOfType:(int)arg1 withName:(id)arg2 exact:(int)arg3 value:(int)arg4 startQuestIfNeeded:(BOOL)arg5 sendQuestTaskEvent:(int)arg6 ;
-(id)incrementTasksOfType:(int)arg1 withName:(id)arg2 lessThanExact:(int)arg3 value:(int)arg4 startQuestIfNeeded:(BOOL)arg5 sendQuestTaskEvent:(int)arg6 ;
-(id)incrementTasksOfType:(int)arg1 withName:(id)arg2 exactValues:(id)arg3 lessThan:(BOOL)arg4 value:(int)arg5 startQuestIfNeeded:(BOOL)arg6 sendQuestTaskEvent:(int)arg7 ;
-(NSMutableDictionary *)currentTaskMap;
-(void)setCurrentTaskMap:(NSMutableDictionary *)arg1 ;
-(id)incrementTasksOfType:(int)arg1 withName:(id)arg2 exactIfFound:(int)arg3 value:(int)arg4 startQuestIfNeeded:(BOOL)arg5 sendQuestTaskEvent:(int)arg6 ;
-(id)incrementOtherwiseResetTasksOfType:(int)arg1 withName:(id)arg2 exactIfFound:(int)arg3 value:(int)arg4 startQuestIfNeeded:(BOOL)arg5 sendQuestTaskEvent:(int)arg6 ;
-(id)resetTasksOfType:(int)arg1 startQuestIfNeeded:(BOOL)arg2 sendQuestTaskEvent:(int)arg3 ;
-(void)playPuzzleWithName:(id)arg1 ;
-(void)addToCurrentTaskMap:(id)arg1 ;
-(id)currentIncompleteTasksForType:(int)arg1 ;
-(void)clearTaskMap;
-(void)dealloc;
@end

