/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:58:13 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/0CF72264-5488-4FD5-B700-EF786D177983/BubbleMania.app/BubbleMania
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BubbleMania/HTTPQueueDelegate.h>
#import <BubbleMania/ManifestDelegate.h>

@class Manifest, NSMutableDictionary, NSTimer, NSMutableSet, NSMutableArray;

@interface DownloadManager : NSObject <HTTPQueueDelegate, ManifestDelegate> {

	BOOL _doNotStartPendingDownloads;
	Manifest* _masterManifest;
	Manifest* _clientManifest;
	NSMutableDictionary* _downloadsInProgress;
	NSMutableDictionary* _badDownloads;
	NSMutableDictionary* _retryDownloads;
	NSTimer* _retryTimer;
	NSMutableDictionary* _urlToFilenameMap;
	NSMutableDictionary* _cachedBundlePaths;
	NSMutableSet* _downloadControlDelegates;
	NSMutableArray* _pendingDatabaseDownloads;

}

@property (assign,nonatomic) BOOL doNotStartPendingDownloads;                        //@synthesize doNotStartPendingDownloads=_doNotStartPendingDownloads - In the implementation block
@property (nonatomic,retain) Manifest * masterManifest;                              //@synthesize masterManifest=_masterManifest - In the implementation block
@property (nonatomic,retain) Manifest * clientManifest;                              //@synthesize clientManifest=_clientManifest - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * downloadsInProgress;              //@synthesize downloadsInProgress=_downloadsInProgress - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * badDownloads;                     //@synthesize badDownloads=_badDownloads - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * retryDownloads;                   //@synthesize retryDownloads=_retryDownloads - In the implementation block
@property (nonatomic,retain) NSTimer * retryTimer;                                   //@synthesize retryTimer=_retryTimer - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * urlToFilenameMap;                 //@synthesize urlToFilenameMap=_urlToFilenameMap - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * cachedBundlePaths;                //@synthesize cachedBundlePaths=_cachedBundlePaths - In the implementation block
@property (nonatomic,retain) NSMutableSet * downloadControlDelegates;                //@synthesize downloadControlDelegates=_downloadControlDelegates - In the implementation block
@property (nonatomic,retain) NSMutableArray * pendingDatabaseDownloads;              //@synthesize pendingDatabaseDownloads=_pendingDatabaseDownloads - In the implementation block
+(id)pathForFullUrl:(id)arg1 forS8iConverter:(BOOL)arg2 ;
+(id)defaultSoundUrlWithFileName:(id)arg1 ;
+(id)savedFileDirectory:(id)arg1 ;
+(id)cacheDirectoryMap;
+(void)createCacheDirectoryIfNeeded:(id)arg1 ;
+(id)defaultSoundUrlWithFileName:(id)arg1 package:(id)arg2 ;
+(void)preCreateCacheDirectories;
+(id)filenameFromUrl:(id)arg1 ;
+(id)tempStorageFilePath:(id)arg1 ;
+(id)instance;
-(void)resumeDownloads;
-(void)connection:(id)arg1 getResponse:(id)arg2 ;
-(void)connection:(id)arg1 updateDownloadProgress:(id)arg2 ;
-(void)writeDataOperationComplete:(id)arg1 ;
-(void)writeDataOperationFailed:(id)arg1 ;
-(void)archiveZipMetaData:(id)arg1 download:(id)arg2 ;
-(void)unzipFileOperationComplete:(id)arg1 ;
-(void)unzipFileOperationFailed:(id)arg1 ;
-(void)addDownloadControlDelegate:(id)arg1 ;
-(void)removeDownloadControlDelegate:(id)arg1 ;
-(void)setDoNotStartPendingDownloads:(BOOL)arg1 ;
-(void)loadFile:(id)arg1 delegate:(id)arg2 delegateData:(id)arg3 package:(id)arg4 priority:(int)arg5 ;
-(void)loadMasterManifestFromUrl:(id)arg1 ;
-(void)startPendingDownloads;
-(void)populateBundledFiles;
-(BOOL)isFileCached:(id)arg1 ;
-(void)loadFile:(id)arg1 delegate:(id)arg2 ;
-(void)reportBadFile:(id)arg1 ;
-(BOOL)isDownloadStarted:(id)arg1 ;
-(void)loadFile:(id)arg1 delegate:(id)arg2 delegateData:(id)arg3 package:(id)arg4 ;
-(id)bundlePathForFile:(id)arg1 ;
-(id)getCachedFile:(id)arg1 ;
-(void)setDownloadsInProgress:(NSMutableDictionary *)arg1 ;
-(void)setBadDownloads:(NSMutableDictionary *)arg1 ;
-(void)setRetryDownloads:(NSMutableDictionary *)arg1 ;
-(void)setUrlToFilenameMap:(NSMutableDictionary *)arg1 ;
-(void)setDownloadControlDelegates:(NSMutableSet *)arg1 ;
-(void)setPendingDatabaseDownloads:(NSMutableArray *)arg1 ;
-(void)setClientManifest:(Manifest *)arg1 ;
-(void)setMasterManifest:(Manifest *)arg1 ;
-(void)checkForLanguageChange;
-(NSMutableSet *)downloadControlDelegates;
-(void)loadFile:(id)arg1 delegate:(id)arg2 delegateData:(id)arg3 ;
-(id)unverifiedFile:(id)arg1 ;
-(void)notifyDelegatesDownloadCompleted:(id)arg1 ;
-(BOOL)isFileBundled:(id)arg1 ;
-(BOOL)addToSavedFiles:(id)arg1 fileUrl:(id)arg2 updateDownload:(id)arg3 ;
-(void)notifyDelegatesOfDownloadError:(id)arg1 reason:(id)arg2 ;
-(BOOL)doNotStartPendingDownloads;
-(void)scheduledRetryDownload;
-(NSMutableDictionary *)retryDownloads;
-(Manifest *)clientManifest;
-(BOOL)verifyFileManifestMD5:(id)arg1 ;
-(void)loadPendingDownloads;
-(NSMutableArray *)pendingDatabaseDownloads;
-(void)loadFileFromArray:(id)arg1 ;
-(BOOL)addToSavedFiles:(id)arg1 fileUrl:(id)arg2 updateDownload:(id)arg3 unZip:(BOOL)arg4 ;
-(BOOL)addToSavedFiles:(id)arg1 fileUrl:(id)arg2 updateDownload:(id)arg3 unZip:(BOOL)arg4 checkMd5:(BOOL)arg5 ;
-(BOOL)addToSavedFiles:(id)arg1 fileUrl:(id)arg2 updateDownload:(id)arg3 unZip:(BOOL)arg4 checkMd5:(BOOL)arg5 checkCacheFirst:(BOOL)arg6 ;
-(id)existingFileInCache:(id)arg1 fileUrl:(id)arg2 ;
-(id)existingFileInBundle:(id)arg1 fileUrl:(id)arg2 ;
-(id)unarchiveZipMetaData:(id)arg1 package:(id)arg2 ;
-(id)metadataFilePath;
-(void)archiveZipMetaData:(id)arg1 download:(id)arg2 package:(id)arg3 ;
-(id)zipMetaDataPath:(id)arg1 package:(id)arg2 ;
-(NSMutableDictionary *)downloadsInProgress;
-(void)completeDownload:(id)arg1 ;
-(void)startUnzip:(id)arg1 ;
-(id)md5WithFilePath:(id)arg1 ;
-(void)queue:(id)arg1 willSendRequest:(id)arg2 ;
-(void)manifestReady:(id)arg1 ;
-(void)removeAllDownloadControlDelegates;
-(float)getDownloadPercentage:(id)arg1 ;
-(BOOL)isBadDownload:(id)arg1 ;
-(void)removeDelegate:(id)arg1 delegateData:(id)arg2 ;
-(void)addCachedFile:(id)arg1 fileInfo:(id)arg2 ;
-(void)deleteCachedFile:(id)arg1 ;
-(void)corruptCache;
-(void)wipeCache;
-(id)savedFileData:(id)arg1 location:(id)arg2 filePath:(id)arg3 ;
-(id)unarchiveZipMetaData:(id)arg1 ;
-(id)verifyFileMD5:(id)arg1 fileName:(id)arg2 ;
-(void)removeFileAtPathPermanently:(id)arg1 ;
-(BOOL)isFilePermanentlyRemoved:(id)arg1 ;
-(Manifest *)masterManifest;
-(NSMutableDictionary *)badDownloads;
-(NSMutableDictionary *)urlToFilenameMap;
-(NSMutableDictionary *)cachedBundlePaths;
-(void)setCachedBundlePaths:(NSMutableDictionary *)arg1 ;
-(void)dealloc;
-(id)init;
-(void)startDownload:(id)arg1 ;
-(void)retryDownload;
-(id)cachePath;
-(NSTimer *)retryTimer;
-(void)setRetryTimer:(NSTimer *)arg1 ;
@end

