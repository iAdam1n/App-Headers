/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AlienBlue/AlienBlue-Structs.h>
#import <AlienBlue/TAGDataLayerPersistentStore.h>

@class NSString, NSOperationQueue;

@interface TAGDataLayerPersistentStoreImpl : NSObject <TAGDataLayerPersistentStore> {

	NSString* _databaseName;
	unsigned long long _maxNumStoredItems;
	NSOperationQueue* _operationQueue;
	sqlite3Ref _database;
	sqlite3_stmtRef _insertAnEntryStmt;
	sqlite3_stmtRef _queryNumberEntriesStmt;
	sqlite3_stmtRef _queryAllEntriesStmt;
	sqlite3_stmtRef _queryEntryIdsStmt;
	sqlite3_stmtRef _deleteOlderThanStmt;

}

@property (readonly) NSString * databaseName;                           //@synthesize databaseName=_databaseName - In the implementation block
@property (assign) unsigned long long maxNumStoredItems;                //@synthesize maxNumStoredItems=_maxNumStoredItems - In the implementation block
@property (readonly) NSOperationQueue * operationQueue;                 //@synthesize operationQueue=_operationQueue - In the implementation block
@property (assign) sqlite3Ref database;                                 //@synthesize database=_database - In the implementation block
@property (assign) sqlite3_stmtRef insertAnEntryStmt;                   //@synthesize insertAnEntryStmt=_insertAnEntryStmt - In the implementation block
@property (assign) sqlite3_stmtRef queryNumberEntriesStmt;              //@synthesize queryNumberEntriesStmt=_queryNumberEntriesStmt - In the implementation block
@property (assign) sqlite3_stmtRef queryAllEntriesStmt;                 //@synthesize queryAllEntriesStmt=_queryAllEntriesStmt - In the implementation block
@property (assign) sqlite3_stmtRef queryEntryIdsStmt;                   //@synthesize queryEntryIdsStmt=_queryEntryIdsStmt - In the implementation block
@property (assign) sqlite3_stmtRef deleteOlderThanStmt;                 //@synthesize deleteOlderThanStmt=_deleteOlderThanStmt - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(double)currentTimeInMilliseconds;
-(void)saveKeyValues:(id)arg1 lifetimeInMillis:(unsigned long long)arg2 ;
-(void)loadSaved:(id)arg1 ;
-(void)clearKeysWithPrefix:(id)arg1 ;
-(id)initWithDatabaseName:(id)arg1 maxNumStoredItems:(unsigned)arg2 operationQueue:(id)arg3 ;
-(id)serializeValues:(id)arg1 ;
-(void)saveSingleThreaded:(id)arg1 lifetimeInMillis:(unsigned long long)arg2 ;
-(id)loadSingleThreaded;
-(void)clearKeysWithPrefixSingleThreaded:(id)arg1 ;
-(BOOL)openDatabaseAndInitStatements;
-(void)deleteEntriesOlderThan:(unsigned long long)arg1 ;
-(id)loadSerialized;
-(id)unserializeValues:(id)arg1 ;
-(void)makeRoomForEntries:(unsigned long long)arg1 ;
-(void)writeEntriesToDatabase:(id)arg1 expireTime:(unsigned long long)arg2 ;
-(sqlite3_stmtRef)prepareSql:(id)arg1 description:(id)arg2 ;
-(id)unserialize:(id)arg1 ;
-(id)serialize:(id)arg1 ;
-(sqlite3_stmtRef)queryAllEntriesStmt;
-(sqlite3_stmtRef)insertAnEntryStmt;
-(unsigned long long)numStoredEntries;
-(unsigned long long)maxNumStoredItems;
-(id)peekEntryIds:(unsigned long long)arg1 ;
-(void)deleteEntries:(id)arg1 ;
-(id)questionMarks:(unsigned long long)arg1 ;
-(sqlite3_stmtRef)queryEntryIdsStmt;
-(sqlite3_stmtRef)queryNumberEntriesStmt;
-(sqlite3_stmtRef)deleteOlderThanStmt;
-(BOOL)tablePresent:(id)arg1 ;
-(void)setQueryNumberEntriesStmt:(sqlite3_stmtRef)arg1 ;
-(void)setDeleteOlderThanStmt:(sqlite3_stmtRef)arg1 ;
-(void)setInsertAnEntryStmt:(sqlite3_stmtRef)arg1 ;
-(void)setQueryEntryIdsStmt:(sqlite3_stmtRef)arg1 ;
-(void)setQueryAllEntriesStmt:(sqlite3_stmtRef)arg1 ;
-(void)setMaxNumStoredItems:(unsigned long long)arg1 ;
-(void)dealloc;
-(id)init;
-(NSOperationQueue *)operationQueue;
-(void)closeDatabase;
-(sqlite3Ref)database;
-(void)setDatabase:(sqlite3Ref)arg1 ;
-(NSString *)databaseName;
@end

