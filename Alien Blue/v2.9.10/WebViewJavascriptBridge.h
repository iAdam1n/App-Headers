/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIWebViewDelegate.h>

@protocol UIWebViewDelegate;
@class NSMutableArray, NSMutableDictionary, UIWebView, NSString;

@interface WebViewJavascriptBridge : NSObject <UIWebViewDelegate> {

	NSMutableArray* _startupMessageQueue;
	NSMutableDictionary* _responseCallbacks;
	NSMutableDictionary* _messageHandlers;
	long long _uniqueId;
	UIWebView* _webView;
	id<UIWebViewDelegate> _webViewDelegate;
	/*^block*/id _messageHandler;

}

@property (nonatomic,retain) NSMutableArray * startupMessageQueue;                 //@synthesize startupMessageQueue=_startupMessageQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * responseCallbacks;              //@synthesize responseCallbacks=_responseCallbacks - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * messageHandlers;                //@synthesize messageHandlers=_messageHandlers - In the implementation block
@property (assign) long long uniqueId;                                             //@synthesize uniqueId=_uniqueId - In the implementation block
@property (nonatomic,retain) UIWebView * webView;                                  //@synthesize webView=_webView - In the implementation block
@property (nonatomic,retain) id<UIWebViewDelegate> webViewDelegate;                //@synthesize webViewDelegate=_webViewDelegate - In the implementation block
@property (nonatomic,copy) id messageHandler;                                      //@synthesize messageHandler=_messageHandler - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)bridgeForWebView:(id)arg1 handler:(/*^block*/id)arg2 ;
+(id)bridgeForWebView:(id)arg1 webViewDelegate:(id)arg2 handler:(/*^block*/id)arg3 ;
+(void)enableLogging;
-(NSMutableDictionary *)responseCallbacks;
-(void)setWebViewDelegate:(id<UIWebViewDelegate>)arg1 ;
-(void)callHandler:(id)arg1 data:(id)arg2 ;
-(void)callHandler:(id)arg1 data:(id)arg2 responseCallback:(/*^block*/id)arg3 ;
-(void)registerHandler:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)send:(id)arg1 responseCallback:(/*^block*/id)arg2 ;
-(void)_sendData:(id)arg1 responseCallback:(/*^block*/id)arg2 handlerName:(id)arg3 ;
-(void)setStartupMessageQueue:(NSMutableArray *)arg1 ;
-(void)setResponseCallbacks:(NSMutableDictionary *)arg1 ;
-(void)_queueMessage:(id)arg1 ;
-(NSMutableArray *)startupMessageQueue;
-(id)_serializeMessage:(id)arg1 ;
-(void)_log:(id)arg1 json:(id)arg2 ;
-(id)_deserializeMessageJSON:(id)arg1 ;
-(id<UIWebViewDelegate>)webViewDelegate;
-(void)_flushMessageQueue;
-(void)callHandler:(id)arg1 ;
-(void)reset;
-(UIWebView *)webView;
-(void)setWebView:(UIWebView *)arg1 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(long long)uniqueId;
-(void)setMessageHandlers:(NSMutableDictionary *)arg1 ;
-(void)_dispatchMessage:(id)arg1 ;
-(void)send:(id)arg1 ;
-(id)messageHandler;
-(void)setMessageHandler:(id)arg1 ;
-(void)setUniqueId:(long long)arg1 ;
-(NSMutableDictionary *)messageHandlers;
@end

