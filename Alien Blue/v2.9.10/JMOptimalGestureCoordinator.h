/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:46 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AlienBlue/AlienBlue-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol JMOptimalGestureCoordinatorDelegate;
@class NSObject, UIView, NSString;

@interface JMOptimalGestureCoordinator : NSObject <UIGestureRecognizerDelegate> {

	BOOL _needToAvoidOverlappingTallImage;
	BOOL _isPanningOptimalBar;
	BOOL _panGestureShouldSwitchBetweenOptimalAndStandard;
	NSObject*<JMOptimalGestureCoordinatorDelegate> _controller;
	double _scrollOffsetForConcurrentPanGestureScrollView;
	CGPoint _barShowHidePanGestureStartLocation;
	CGPoint _barShowHideOptimalBarStartOrigin;

}

@property (__weak) NSObject*<JMOptimalGestureCoordinatorDelegate> controller;              //@synthesize controller=_controller - In the implementation block
@property (readonly) UIView * optimalBarView; 
@property (readonly) UIView * contentView; 
@property (readonly) BOOL shouldShowOptimalBarWhileLoading; 
@property (readonly) BOOL shouldAutoHideOptimalBarAfterLoading; 
@property (readonly) BOOL shouldMoveDownWhenOptimalBarIsVisible; 
@property (assign) BOOL needToAvoidOverlappingTallImage;                                   //@synthesize needToAvoidOverlappingTallImage=_needToAvoidOverlappingTallImage - In the implementation block
@property (assign) BOOL isPanningOptimalBar;                                               //@synthesize isPanningOptimalBar=_isPanningOptimalBar - In the implementation block
@property (assign) CGPoint barShowHidePanGestureStartLocation;                             //@synthesize barShowHidePanGestureStartLocation=_barShowHidePanGestureStartLocation - In the implementation block
@property (assign) CGPoint barShowHideOptimalBarStartOrigin;                               //@synthesize barShowHideOptimalBarStartOrigin=_barShowHideOptimalBarStartOrigin - In the implementation block
@property (assign) double scrollOffsetForConcurrentPanGestureScrollView;                   //@synthesize scrollOffsetForConcurrentPanGestureScrollView=_scrollOffsetForConcurrentPanGestureScrollView - In the implementation block
@property (assign) BOOL panGestureShouldSwitchBetweenOptimalAndStandard;                   //@synthesize panGestureShouldSwitchBetweenOptimalAndStandard=_panGestureShouldSwitchBetweenOptimalAndStandard - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)attachListenersToController:(id)arg1 ;
-(void)didPan:(id)arg1 ;
-(void)attachListeners;
-(void)controllerViewDidLoad;
-(void)controllerOptimisationDidSucceed;
-(void)controllerOptimisationDidFail;
-(void)standardBrowserDidStartLoading;
-(void)standardBrowserDidFinishLoading;
-(BOOL)shouldShowOptimalBarWhileLoading;
-(UIView *)optimalBarView;
-(void)positionOptimalBarToVerticalOffset:(double)arg1 ;
-(BOOL)shouldMoveDownWhenOptimalBarIsVisible;
-(void)setNeedToAvoidOverlappingTallImage:(BOOL)arg1 ;
-(void)autoHideToolbarIfNecessary;
-(void)showOptimalBar;
-(BOOL)needToAvoidOverlappingTallImage;
-(BOOL)shouldAutoHideOptimalBarAfterLoading;
-(void)hideOptimalBar;
-(void)setIsPanningOptimalBar:(BOOL)arg1 ;
-(void)setPanGestureShouldSwitchBetweenOptimalAndStandard:(BOOL)arg1 ;
-(void)setBarShowHidePanGestureStartLocation:(CGPoint)arg1 ;
-(void)setBarShowHideOptimalBarStartOrigin:(CGPoint)arg1 ;
-(void)setScrollOffsetForConcurrentPanGestureScrollView:(double)arg1 ;
-(CGPoint)barShowHidePanGestureStartLocation;
-(double)scrollOffsetForConcurrentPanGestureScrollView;
-(CGPoint)barShowHideOptimalBarStartOrigin;
-(void)snapOptimalBarToEdges;
-(BOOL)allowPullToSwitch;
-(BOOL)isPanningOptimalBar;
-(void)setOptimalBarHidden:(BOOL)arg1 animated:(BOOL)arg2 ;
-(BOOL)panGestureShouldSwitchBetweenOptimalAndStandard;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(UIView *)contentView;
-(NSObject*<JMOptimalGestureCoordinatorDelegate>)controller;
-(void)setController:(NSObject*<JMOptimalGestureCoordinatorDelegate>)arg1 ;
@end

