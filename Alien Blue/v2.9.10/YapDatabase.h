/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue, OS_dispatch_source;
#import <AlienBlue/AlienBlue-Structs.h>
@class YapDatabaseOptions, NSMutableArray, NSObject, YapDatabaseConnectionDefaults, NSDictionary, NSArray, YapDatabaseConnection, NSString;

@interface YapDatabase : NSObject {

	YapDatabaseOptions* options;
	NSMutableArray* changesets;
	unsigned long long snapshot;
	NSObject*<OS_dispatch_queue> internalQueue;
	NSObject*<OS_dispatch_queue> checkpointQueue;
	YapDatabaseConnectionDefaults* connectionDefaults;
	NSDictionary* registeredExtensions;
	NSDictionary* registeredMemoryTables;
	NSArray* extensionsOrder;
	NSDictionary* extensionDependencies;
	YapDatabaseConnection* registrationConnection;
	unsigned long long maxConnectionPoolCount;
	double connectionPoolLifetime;
	NSObject*<OS_dispatch_source> connectionPoolTimer;
	NSMutableArray* connectionPoolValues;
	NSMutableArray* connectionPoolDates;
	sqlite3Ref db;
	void* IsOnSnapshotQueueKey;
	void* IsOnWriteQueueKey;
	NSObject*<OS_dispatch_queue> snapshotQueue;
	NSObject*<OS_dispatch_queue> writeQueue;
	NSMutableArray* connectionStates;
	NSArray* previouslyRegisteredExtensionNames;
	/*^block*/id objectSerializer;
	/*^block*/id objectDeserializer;
	/*^block*/id metadataSerializer;
	/*^block*/id metadataDeserializer;
	/*^block*/id objectSanitizer;
	/*^block*/id metadataSanitizer;
	NSString* databasePath;

}

@property (nonatomic,readonly) NSString * databasePath; 
@property (nonatomic,readonly) id objectSerializer; 
@property (nonatomic,readonly) id objectDeserializer; 
@property (nonatomic,readonly) id metadataSerializer; 
@property (nonatomic,readonly) id metadataDeserializer; 
@property (nonatomic,readonly) id objectSanitizer; 
@property (nonatomic,readonly) id metadataSanitizer; 
@property (nonatomic,copy,readonly) YapDatabaseOptions * options; 
@property (readonly) unsigned long long snapshot; 
@property (assign) BOOL defaultObjectCacheEnabled; 
@property (assign) unsigned long long defaultObjectCacheLimit; 
@property (assign) BOOL defaultMetadataCacheEnabled; 
@property (assign) unsigned long long defaultMetadataCacheLimit; 
@property (assign) long long defaultObjectPolicy; 
@property (assign) long long defaultMetadataPolicy; 
@property (assign) unsigned long long defaultAutoFlushMemoryFlags; 
@property (assign) unsigned long long maxConnectionPoolCount; 
@property (assign) double connectionPoolLifetime; 
+(/*^block*/id)defaultSerializer;
+(/*^block*/id)defaultDeserializer;
+(/*^block*/id)propertyListSerializer;
+(/*^block*/id)propertyListDeserializer;
+(/*^block*/id)timestampSerializer;
+(/*^block*/id)timestampDeserializer;
+(id)sqliteVersionUsing:(sqlite3Ref)arg1 ;
+(int)pragma:(id)arg1 using:(sqlite3Ref)arg2 ;
+(id)pragmaValueForAutoVacuum:(int)arg1 ;
+(id)pragmaValueForSynchronous:(int)arg1 ;
+(BOOL)tableExists:(id)arg1 using:(sqlite3Ref)arg2 ;
+(id)columnNamesForTable:(id)arg1 using:(sqlite3Ref)arg2 ;
+(id)columnNamesAndAffinityForTable:(id)arg1 using:(sqlite3Ref)arg2 ;
-(id)initWithPath:(id)arg1 objectSerializer:(/*^block*/id)arg2 objectDeserializer:(/*^block*/id)arg3 metadataSerializer:(/*^block*/id)arg4 metadataDeserializer:(/*^block*/id)arg5 objectSanitizer:(/*^block*/id)arg6 metadataSanitizer:(/*^block*/id)arg7 options:(id)arg8 ;
-(BOOL)configureDatabase:(BOOL)arg1 ;
-(BOOL)createTables;
-(void)upgradeTable;
-(BOOL)set_user_version:(int)arg1 ;
-(BOOL)get_user_version:(int*)arg1 ;
-(void)writeSnapshot;
-(void)fetchPreviouslyRegisteredExtensionNames;
-(BOOL)_registerExtension:(id)arg1 withName:(id)arg2 ;
-(void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 completionQueue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)_unregisterExtensionWithName:(id)arg1 ;
-(void)asyncUnregisterExtensionWithName:(id)arg1 completionQueue:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(id)registeredExtensions;
-(id)registrationConnection;
-(BOOL)registerExtension:(id)arg1 withName:(id)arg2 ;
-(void)unregisterExtensionWithName:(id)arg1 ;
-(void)asyncUnregisterExtensionWithName:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)resetConnectionPoolTimer;
-(void)handleConnectionPoolTimerFire;
-(id)initWithPath:(id)arg1 serializer:(/*^block*/id)arg2 deserializer:(/*^block*/id)arg3 ;
-(id)initWithPath:(id)arg1 serializer:(/*^block*/id)arg2 deserializer:(/*^block*/id)arg3 options:(id)arg4 ;
-(id)initWithPath:(id)arg1 serializer:(/*^block*/id)arg2 deserializer:(/*^block*/id)arg3 sanitizer:(/*^block*/id)arg4 ;
-(id)initWithPath:(id)arg1 objectSerializer:(/*^block*/id)arg2 objectDeserializer:(/*^block*/id)arg3 metadataSerializer:(/*^block*/id)arg4 metadataDeserializer:(/*^block*/id)arg5 ;
-(id)initWithPath:(id)arg1 objectSerializer:(/*^block*/id)arg2 objectDeserializer:(/*^block*/id)arg3 metadataSerializer:(/*^block*/id)arg4 metadataDeserializer:(/*^block*/id)arg5 objectSanitizer:(/*^block*/id)arg6 metadataSanitizer:(/*^block*/id)arg7 ;
-(BOOL)upgradeTable_1_2;
-(BOOL)upgradeTable_2_3;
-(id)connectionDefaults;
-(BOOL)defaultObjectCacheEnabled;
-(void)setDefaultObjectCacheEnabled:(BOOL)arg1 ;
-(unsigned long long)defaultObjectCacheLimit;
-(void)setDefaultObjectCacheLimit:(unsigned long long)arg1 ;
-(BOOL)defaultMetadataCacheEnabled;
-(void)setDefaultMetadataCacheEnabled:(BOOL)arg1 ;
-(unsigned long long)defaultMetadataCacheLimit;
-(void)setDefaultMetadataCacheLimit:(unsigned long long)arg1 ;
-(long long)defaultObjectPolicy;
-(void)setDefaultObjectPolicy:(long long)arg1 ;
-(long long)defaultMetadataPolicy;
-(void)setDefaultMetadataPolicy:(long long)arg1 ;
-(unsigned long long)defaultAutoFlushMemoryFlags;
-(void)setDefaultAutoFlushMemoryFlags:(unsigned long long)arg1 ;
-(void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)asyncRegisterExtension:(id)arg1 withName:(id)arg2 completionBlock:(/*^block*/id)arg3 completionQueue:(id)arg4 ;
-(void)asyncUnregisterExtensionWithName:(id)arg1 completionBlock:(/*^block*/id)arg2 completionQueue:(id)arg3 ;
-(void)unregisterExtension:(id)arg1 ;
-(void)asyncUnregisterExtension:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)asyncUnregisterExtension:(id)arg1 completionBlock:(/*^block*/id)arg2 completionQueue:(id)arg3 ;
-(id)registeredExtension:(id)arg1 ;
-(id)extensionsOrder;
-(id)extensionDependencies;
-(unsigned long long)maxConnectionPoolCount;
-(void)setMaxConnectionPoolCount:(unsigned long long)arg1 ;
-(double)connectionPoolLifetime;
-(void)setConnectionPoolLifetime:(double)arg1 ;
-(BOOL)connectionPoolEnqueue:(sqlite3Ref)arg1 ;
-(sqlite3Ref)connectionPoolDequeue;
-(id)registeredMemoryTables;
-(void)notePendingChanges:(id)arg1 fromConnection:(id)arg2 ;
-(id)pendingAndCommittedChangesSince:(unsigned long long)arg1 until:(unsigned long long)arg2 ;
-(void)noteCommittedChanges:(id)arg1 fromConnection:(id)arg2 ;
-(void)asyncCheckpoint:(unsigned long long)arg1 ;
-(id)objectSerializer;
-(id)objectDeserializer;
-(id)metadataSerializer;
-(id)metadataDeserializer;
-(id)objectSanitizer;
-(id)metadataSanitizer;
-(id)newConnection;
-(void)dealloc;
-(unsigned long long)snapshot;
-(void)commitTransaction;
-(id)initWithPath:(id)arg1 ;
-(YapDatabaseOptions *)options;
-(BOOL)openDatabase;
-(NSString *)databasePath;
-(void)beginTransaction;
-(void)prepare;
-(void)removeConnection:(id)arg1 ;
-(void)addConnection:(id)arg1 ;
@end

