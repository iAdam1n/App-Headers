/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AlienBlue/YapDatabaseExtensionTransaction.h>

@class YapDatabaseRelationshipConnection, YapDatabaseReadTransaction;

@interface YapDatabaseRelationshipTransaction : YapDatabaseExtensionTransaction {

	YapDatabaseRelationshipConnection* relationshipConnection;
	YapDatabaseReadTransaction* databaseTransaction;
	BOOL isFlushing;

}
-(BOOL)createTables;
-(id)registeredName;
-(BOOL)createIfNeeded;
-(id)extensionConnection;
-(id)databaseTransaction;
-(BOOL)flushPendingChangesToMainDatabaseTable;
-(void)handleInsertObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4 ;
-(void)handleUpdateObject:(id)arg1 forCollectionKey:(id)arg2 withMetadata:(id)arg3 rowid:(long long)arg4 ;
-(void)handleReplaceObject:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3 ;
-(void)handleReplaceMetadata:(id)arg1 forCollectionKey:(id)arg2 withRowid:(long long)arg3 ;
-(void)handleTouchObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2 ;
-(void)handleTouchMetadataForCollectionKey:(id)arg1 withRowid:(long long)arg2 ;
-(void)handleRemoveObjectForCollectionKey:(id)arg1 withRowid:(long long)arg2 ;
-(void)handleRemoveObjectsForKeys:(id)arg1 inCollection:(id)arg2 withRowids:(id)arg3 ;
-(void)handleRemoveAllObjectsInAllCollections;
-(BOOL)dropTable;
-(id)initWithRelationshipConnection:(id)arg1 databaseTransaction:(id)arg2 ;
-(BOOL)populateTables;
-(void)removeAllProtocolEdges;
-(id)findChangesMatchingName:(id)arg1 ;
-(id)findChangesMatchingName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 ;
-(id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 ;
-(id)findChangesMatchingName:(id)arg1 destinationFilePath:(id)arg2 ;
-(id)rowidNumberForDeletedKey:(id)arg1 inCollection:(id)arg2 ;
-(void)enumerateExistingEdgesWithSource:(long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)insertEdge:(id)arg1 ;
-(void)updateEdge:(id)arg1 ;
-(void)deleteEdge:(id)arg1 ;
-(void)preprocessProtocolEdges:(id)arg1 forInsertedSource:(id)arg2 ;
-(void)preprocessProtocolEdges:(id)arg1 forUpdatedSource:(id)arg2 ;
-(void)preprocessManualEdges:(id)arg1 ;
-(long long)edgeCountWithDestinationFilePath:(id)arg1 name:(id)arg2 excludingSource:(long long)arg3 ;
-(long long)edgeCountWithDestination:(long long)arg1 name:(id)arg2 excludingSource:(long long)arg3 ;
-(long long)edgeCountWithSource:(long long)arg1 name:(id)arg2 excludingDestination:(long long)arg3 ;
-(void)enumerateExistingEdgesWithDestination:(long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)deleteEdgesWithSourceOrDestination:(long long)arg1 ;
-(void)removeAllEdges;
-(void)enumerateEdgesWithName:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)enumerateEdgesWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 destinationKey:(id)arg5 collection:(id)arg6 rowid:(long long)arg7 ;
-(void)enumerateEdgesWithName:(id)arg1 destinationFilePath:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(id)findChangesMatchingName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 rowid:(long long)arg4 destinationFilePath:(id)arg5 ;
-(unsigned long long)edgeCountWithName:(id)arg1 ;
-(unsigned long long)edgeCountWithName:(id)arg1 destinationKey:(id)arg2 collection:(id)arg3 ;
-(unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 ;
-(void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 usingBlock:(/*^block*/id)arg6 ;
-(unsigned long long)edgeCountWithName:(id)arg1 destinationFilePath:(id)arg2 ;
-(void)enumerateEdgesWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4 usingBlock:(/*^block*/id)arg5 ;
-(id)findManualEdgeMatching:(id)arg1 ;
-(void)removeEdge:(id)arg1 withProcessing:(long long)arg2 ;
-(id)sourceNodeForEdge:(id)arg1 ;
-(id)destinationNodeForEdge:(id)arg1 ;
-(unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 ;
-(unsigned long long)edgeCountWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationFilePath:(id)arg4 ;
-(void)addEdge:(id)arg1 ;
-(void)removeEdgeWithName:(id)arg1 sourceKey:(id)arg2 collection:(id)arg3 destinationKey:(id)arg4 collection:(id)arg5 withProcessing:(long long)arg6 ;
-(void)flush;
-(void)commitTransaction;
-(id)tableName;
-(void)rollbackTransaction;
-(BOOL)prepareIfNeeded;
@end

