/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TAGResourceStorage;
@class NSString, TAGManager, TAGPSupplementedResource, TAGNetworkLoadCallback, TAGDiskLoadCallback, TAGResourceLoaderScheduler, TAGRuntime, NSMutableDictionary;

@interface TAGContainer : NSObject {

	NSString* _ctfeServerAddress;
	BOOL _diskLoadFinished;
	int _resourceFormatVersion;
	NSString* _containerId;
	double _lastRefreshTime;
	id<TAGResourceStorage> _resourceStorage;
	TAGManager* _tagManager;
	NSString* _ctfeUrlPathAndQuery;
	unsigned long long _numTokens;
	TAGPSupplementedResource* _lastLoadedSupplementedResource;
	TAGNetworkLoadCallback* _networkLoadCallback;
	TAGDiskLoadCallback* _diskLoadCallback;
	TAGResourceLoaderScheduler* _networkLoadScheduler;
	TAGRuntime* _runtime;
	NSMutableDictionary* _functionCallTagHandlers;
	NSMutableDictionary* _functionCallMacroHandlers;
	NSString* _resourceVersion;
	double _lastRefreshMethodCalledTime;

}

@property (nonatomic,copy,readonly) NSString * containerId;                                //@synthesize containerId=_containerId - In the implementation block
@property (assign) double lastRefreshTime;                                                 //@synthesize lastRefreshTime=_lastRefreshTime - In the implementation block
@property (retain) id<TAGResourceStorage> resourceStorage;                                 //@synthesize resourceStorage=_resourceStorage - In the implementation block
@property (retain) TAGManager * tagManager;                                                //@synthesize tagManager=_tagManager - In the implementation block
@property (nonatomic,copy) NSString * ctfeServerAddress; 
@property (nonatomic,copy) NSString * ctfeUrlPathAndQuery;                                 //@synthesize ctfeUrlPathAndQuery=_ctfeUrlPathAndQuery - In the implementation block
@property (assign) unsigned long long numTokens;                                           //@synthesize numTokens=_numTokens - In the implementation block
@property (retain) TAGPSupplementedResource * lastLoadedSupplementedResource;              //@synthesize lastLoadedSupplementedResource=_lastLoadedSupplementedResource - In the implementation block
@property (retain) TAGNetworkLoadCallback * networkLoadCallback;                           //@synthesize networkLoadCallback=_networkLoadCallback - In the implementation block
@property (retain) TAGDiskLoadCallback * diskLoadCallback;                                 //@synthesize diskLoadCallback=_diskLoadCallback - In the implementation block
@property (retain) TAGResourceLoaderScheduler * networkLoadScheduler;                      //@synthesize networkLoadScheduler=_networkLoadScheduler - In the implementation block
@property (retain) TAGRuntime * runtime;                                                   //@synthesize runtime=_runtime - In the implementation block
@property (retain) NSMutableDictionary * functionCallTagHandlers;                          //@synthesize functionCallTagHandlers=_functionCallTagHandlers - In the implementation block
@property (retain) NSMutableDictionary * functionCallMacroHandlers;                        //@synthesize functionCallMacroHandlers=_functionCallMacroHandlers - In the implementation block
@property (assign) BOOL diskLoadFinished;                                                  //@synthesize diskLoadFinished=_diskLoadFinished - In the implementation block
@property (copy) NSString * resourceVersion;                                               //@synthesize resourceVersion=_resourceVersion - In the implementation block
@property (assign) int resourceFormatVersion;                                              //@synthesize resourceFormatVersion=_resourceFormatVersion - In the implementation block
@property (assign) double lastRefreshMethodCalledTime;                                     //@synthesize lastRefreshMethodCalledTime=_lastRefreshMethodCalledTime - In the implementation block
+(double)refreshPeriodOnSuccess;
+(double)refreshPeriodOnFailure;
+(double)minimumRefreshPeriod;
+(double)minimumRefreshPeriodInBurstMode;
+(int)maximumTokenCount;
-(double)currentTimeInMilliseconds;
-(id)functionCallTagHandlerForTag:(id)arg1 ;
-(id)functionCallMacroHandlerForMacro:(id)arg1 ;
-(void)setLastLoadedSupplementedResource:(TAGPSupplementedResource *)arg1 ;
-(TAGPSupplementedResource *)lastLoadedSupplementedResource;
-(void)setupEvaluatorsWithResource:(id)arg1 ;
-(void)setSupplementals:(id)arg1 ;
-(void)setLastRefreshTime:(double)arg1 ;
-(double)lastRefreshTime;
-(void)loadAfterDelay:(double)arg1 ;
-(NSString *)containerId;
-(void)saveResourceToDisk:(id)arg1 ;
-(void)createInitialContainer;
-(id)initWithId:(id)arg1 tagManager:(id)arg2 resourceStorage:(id)arg3 ;
-(TAGRuntime *)runtime;
-(BOOL)isDefaultContainerRefreshMode;
-(BOOL)useAvailableTokenWithCurrentTime:(double)arg1 ;
-(void)setLastRefreshMethodCalledTime:(double)arg1 ;
-(TAGResourceLoaderScheduler *)networkLoadScheduler;
-(void)setNetworkLoadScheduler:(TAGResourceLoaderScheduler *)arg1 ;
-(void)setResourceStorage:(id<TAGResourceStorage>)arg1 ;
-(TAGDiskLoadCallback *)diskLoadCallback;
-(void)setDiskLoadCallback:(TAGDiskLoadCallback *)arg1 ;
-(TAGNetworkLoadCallback *)networkLoadCallback;
-(void)setNetworkLoadCallback:(TAGNetworkLoadCallback *)arg1 ;
-(void)setRuntime:(TAGRuntime *)arg1 ;
-(TAGManager *)tagManager;
-(NSMutableDictionary *)functionCallTagHandlers;
-(NSMutableDictionary *)functionCallMacroHandlers;
-(void)evaluateTags:(id)arg1 ;
-(void)loadWithCallback:(id)arg1 resourceLoaderScheduler:(id)arg2 ;
-(void)setCtfeUrlPathAndQuery:(NSString *)arg1 ;
-(NSString *)ctfeServerAddress;
-(void)setCtfeServerAddress:(NSString *)arg1 ;
-(void)setupEvaluatorsWithExpandedResource:(id)arg1 ;
-(void)setResourceVersion:(NSString *)arg1 ;
-(double)lastRefreshMethodCalledTime;
-(unsigned long long)numTokens;
-(void)setNumTokens:(unsigned long long)arg1 ;
-(id)initWithId:(id)arg1 tagManager:(id)arg2 ;
-(BOOL)booleanForKey:(id)arg1 ;
-(void)registerFunctionCallTagHandler:(id)arg1 forTag:(id)arg2 ;
-(void)registerFunctionCallMacroHandler:(id)arg1 forMacro:(id)arg2 ;
-(void)loadWithCallback:(id)arg1 ;
-(void)setTagManager:(TAGManager *)arg1 ;
-(NSString *)ctfeUrlPathAndQuery;
-(void)setFunctionCallTagHandlers:(NSMutableDictionary *)arg1 ;
-(void)setFunctionCallMacroHandlers:(NSMutableDictionary *)arg1 ;
-(BOOL)diskLoadFinished;
-(void)setDiskLoadFinished:(BOOL)arg1 ;
-(NSString *)resourceVersion;
-(int)resourceFormatVersion;
-(void)setResourceFormatVersion:(int)arg1 ;
-(id)stringForKey:(id)arg1 ;
-(void)close;
-(BOOL)isDefault;
-(id<TAGResourceStorage>)resourceStorage;
-(void)refresh;
-(double)doubleForKey:(id)arg1 ;
-(long long)int64ForKey:(id)arg1 ;
@end

