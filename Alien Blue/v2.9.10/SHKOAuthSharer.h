/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:47 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AlienBlue/SHKSharer.h>

@protocol OASignatureProviding;
@class NSString, NSURL, OAConsumer, OAToken, NSDictionary;

@interface SHKOAuthSharer : SHKSharer {

	NSString* consumerKey;
	NSString* secretKey;
	NSURL* authorizeCallbackURL;
	NSURL* authorizeURL;
	NSURL* accessURL;
	NSURL* requestURL;
	OAConsumer* consumer;
	OAToken* requestToken;
	OAToken* accessToken;
	id<OASignatureProviding> signatureProvider;
	NSDictionary* authorizeResponseQueryVars;

}

@property (nonatomic,retain) NSString * consumerKey; 
@property (nonatomic,retain) NSString * secretKey; 
@property (nonatomic,retain) NSURL * authorizeCallbackURL; 
@property (nonatomic,retain) NSURL * authorizeURL; 
@property (nonatomic,retain) NSURL * accessURL; 
@property (nonatomic,retain) NSURL * requestURL; 
@property (retain) OAConsumer * consumer; 
@property (retain) OAToken * requestToken; 
@property (retain) OAToken * accessToken; 
@property (retain) id<OASignatureProviding> signatureProvider; 
@property (nonatomic,retain) NSDictionary * authorizeResponseQueryVars; 
+(void)deleteStoredAccessToken;
+(void)logout;
-(OAToken *)requestToken;
-(BOOL)isAuthorized;
-(void)promptAuthorization;
-(BOOL)restoreAccessToken;
-(void)tokenRequest;
-(void)tokenRequestModifyRequest:(id)arg1 ;
-(void)tokenRequestTicket:(id)arg1 didFinishWithData:(id)arg2 ;
-(void)tokenRequestTicket:(id)arg1 didFailWithError:(id)arg2 ;
-(void)setRequestToken:(OAToken *)arg1 ;
-(void)tokenAuthorize;
-(void)setAuthorizeResponseQueryVars:(NSDictionary *)arg1 ;
-(void)tokenAccess;
-(void)tokenAccess:(BOOL)arg1 ;
-(void)tokenAccessModifyRequest:(id)arg1 ;
-(void)tokenAccessTicket:(id)arg1 didFinishWithData:(id)arg2 ;
-(void)tokenAccessTicket:(id)arg1 didFailWithError:(id)arg2 ;
-(void)storeAccessToken;
-(NSURL *)authorizeURL;
-(void)tokenAuthorizeView:(id)arg1 didFinishWithSuccess:(BOOL)arg2 queryParams:(id)arg3 error:(id)arg4 ;
-(void)tokenAuthorizeCancelledView:(id)arg1 ;
-(NSString *)secretKey;
-(void)setSecretKey:(NSString *)arg1 ;
-(NSURL *)authorizeCallbackURL;
-(void)setAuthorizeCallbackURL:(NSURL *)arg1 ;
-(void)setAuthorizeURL:(NSURL *)arg1 ;
-(NSURL *)accessURL;
-(void)setAccessURL:(NSURL *)arg1 ;
-(NSDictionary *)authorizeResponseQueryVars;
-(void)dealloc;
-(void)setConsumer:(OAConsumer *)arg1 ;
-(OAConsumer *)consumer;
-(void)setAccessToken:(OAToken *)arg1 ;
-(NSString *)consumerKey;
-(void)setConsumerKey:(NSString *)arg1 ;
-(void)refreshToken;
-(id<OASignatureProviding>)signatureProvider;
-(void)setSignatureProvider:(id<OASignatureProviding>)arg1 ;
-(NSURL *)requestURL;
-(void)setRequestURL:(NSURL *)arg1 ;
-(OAToken *)accessToken;
@end

