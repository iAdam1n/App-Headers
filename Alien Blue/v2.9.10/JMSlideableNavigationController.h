/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:41:46 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/91D74E3C-0E85-4CEF-8E44-3072C9AFF7E4/AlienBlue.app/AlienBlue
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AlienBlue/AlienBlue-Structs.h>
#import <UIKit/UINavigationController.h>
#import <AlienBlue/JMSlideableNavigationAnimatorDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@class UIView, JMSlideableNavigationAnimatorView, JMAnimatedSlideIndicatorView, NSMutableArray, UIScrollView, UIViewController, NSString;

@interface JMSlideableNavigationController : UINavigationController <JMSlideableNavigationAnimatorDelegate, UIGestureRecognizerDelegate> {

	BOOL _shouldActivateBeyondBoundaryTrigger;
	BOOL _shouldMaintainExistingNavigationStackAfterPush;
	BOOL _statusBarWasVisibleWhenSlidingBegan;
	BOOL _affectedScrollViewHasCustomNavigationBar;
	BOOL _isDragging;
	double _panGestureStartX;
	JMSlideableNavigationAnimatorView* _animatorView;
	JMAnimatedSlideIndicatorView* _trainingView;
	NSMutableArray* _slidingNavigationStack;
	UIScrollView* _scrollViewAffectedByConcurrentPanGesture;
	CGPoint _initialScrollViewOffsetForConcurrentPanGesture;

}

@property (assign) BOOL shouldActivateBeyondBoundaryTrigger;                             //@synthesize shouldActivateBeyondBoundaryTrigger=_shouldActivateBeyondBoundaryTrigger - In the implementation block
@property (assign) double panGestureStartX;                                              //@synthesize panGestureStartX=_panGestureStartX - In the implementation block
@property (retain) JMSlideableNavigationAnimatorView * animatorView;                     //@synthesize animatorView=_animatorView - In the implementation block
@property (retain) JMAnimatedSlideIndicatorView * trainingView;                          //@synthesize trainingView=_trainingView - In the implementation block
@property (readonly) UIViewController * nextSlideableController; 
@property (readonly) UIViewController * previousSlideableController; 
@property (retain) NSMutableArray * slidingNavigationStack;                              //@synthesize slidingNavigationStack=_slidingNavigationStack - In the implementation block
@property (assign) BOOL shouldMaintainExistingNavigationStackAfterPush;                  //@synthesize shouldMaintainExistingNavigationStackAfterPush=_shouldMaintainExistingNavigationStackAfterPush - In the implementation block
@property (assign) BOOL statusBarWasVisibleWhenSlidingBegan;                             //@synthesize statusBarWasVisibleWhenSlidingBegan=_statusBarWasVisibleWhenSlidingBegan - In the implementation block
@property (__weak) UIScrollView * scrollViewAffectedByConcurrentPanGesture;              //@synthesize scrollViewAffectedByConcurrentPanGesture=_scrollViewAffectedByConcurrentPanGesture - In the implementation block
@property (assign) CGPoint initialScrollViewOffsetForConcurrentPanGesture;               //@synthesize initialScrollViewOffsetForConcurrentPanGesture=_initialScrollViewOffsetForConcurrentPanGesture - In the implementation block
@property (assign) BOOL affectedScrollViewHasCustomNavigationBar;                        //@synthesize affectedScrollViewHasCustomNavigationBar=_affectedScrollViewHasCustomNavigationBar - In the implementation block
@property (assign) BOOL isDragging;                                                      //@synthesize isDragging=_isDragging - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) UIView * view; 
+(BOOL)allowSwipeNavigation;
-(void)userDidNavigateBackWithoutSwiping;
-(BOOL)shouldActivateBeyondBoundaryTrigger;
-(void)userDidBeginSlidingController;
-(void)userDidFinishSlidingController;
-(void)animatorView:(id)arg1 decorateRightUnderlay:(id)arg2 forBoundaryOffset:(double)arg3 ;
-(void)didReleaseBeyondRightBoundaryTrigger;
-(void)didPan:(id)arg1 ;
-(id)imageRepresentingPreviousControllerForAnimatorView:(id)arg1 ;
-(id)imageRepresentingNextControllerForAnimatorView:(id)arg1 ;
-(id)imageRepresentingCurrentControllerForAnimatorView:(id)arg1 ;
-(void)animatorView:(id)arg1 decorateLeftUnderlay:(id)arg2 forBoundaryOffset:(double)arg3 ;
-(void)setSlidingNavigationStack:(NSMutableArray *)arg1 ;
-(NSMutableArray *)slidingNavigationStack;
-(UIScrollView *)scrollViewAffectedByConcurrentPanGesture;
-(void)setInitialScrollViewOffsetForConcurrentPanGesture:(CGPoint)arg1 ;
-(void)resetScrollOffsetForConcurrentPanGesture;
-(void)setScrollViewAffectedByConcurrentPanGesture:(UIScrollView *)arg1 ;
-(void)assignGestureRecognizers;
-(JMSlideableNavigationAnimatorView *)animatorView;
-(void)setAnimatorView:(JMSlideableNavigationAnimatorView *)arg1 ;
-(void)setStatusBarWasVisibleWhenSlidingBegan:(BOOL)arg1 ;
-(BOOL)shouldMaintainExistingNavigationStackAfterPush;
-(void)setShouldMaintainExistingNavigationStackAfterPush:(BOOL)arg1 ;
-(void)showTrainingScreenIfNecessary;
-(UIViewController *)previousSlideableController;
-(CGPoint)initialScrollViewOffsetForConcurrentPanGesture;
-(void)setPanGestureStartX:(double)arg1 ;
-(void)showAnimatorOverlay;
-(double)panGestureStartX;
-(UIViewController *)nextSlideableController;
-(void)setShouldActivateBeyondBoundaryTrigger:(BOOL)arg1 ;
-(void)handleControllerSwitchDueToSwipeDirection:(int)arg1 ;
-(void)removeAnimatorOverlay;
-(void)didReleaseBeyondLeftBoundaryTrigger;
-(void)setTrainingComplete;
-(JMAnimatedSlideIndicatorView *)trainingView;
-(void)dismissTrainingViewAnimated:(BOOL)arg1 ;
-(BOOL)trainingUserHasUtilizedSwipeBefore;
-(void)setTrainingView:(JMAnimatedSlideIndicatorView *)arg1 ;
-(void)userDidTapTrainingView;
-(void)didPress:(id)arg1 ;
-(BOOL)statusBarWasVisibleWhenSlidingBegan;
-(BOOL)affectedScrollViewHasCustomNavigationBar;
-(void)setAffectedScrollViewHasCustomNavigationBar:(BOOL)arg1 ;
-(BOOL)isDragging;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(id)popViewControllerAnimated:(BOOL)arg1 ;
-(void)loadView;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)pushViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)setViewControllers:(id)arg1 animated:(BOOL)arg2 ;
-(void)setIsDragging:(BOOL)arg1 ;
@end

