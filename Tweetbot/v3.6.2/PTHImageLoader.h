/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:06:47 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/ECBB6493-3CD3-4031-8AE5-B625F29152BF/Tweetbot.app/Tweetbot
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <Tweetbot/Tweetbot-Structs.h>
@class NSString, PTHNetworkLoader, NSMutableDictionary, NSMutableOrderedSet, NSMapTable, _PTHWORMData, NSNumber, NSObject;

@interface PTHImageLoader : NSObject {

	NSString* _directoryPath;
	PTHNetworkLoader* _networkLoader;
	NSMutableDictionary* _cacheDictionary;
	NSMutableOrderedSet* _cacheKeySet;
	NSMapTable* _cacheMapTable;
	NSMutableDictionary* _imageDictionaries;
	_PTHWORMData* _currentWORM;
	NSNumber* _currentWORMID;
	BOOL _dirty;
	NSMutableDictionary* _oldWORMs;
	NSObject*<OS_dispatch_queue> _imageLoaderQueue;
	BOOL _debugEnabled;
	unsigned long long _maxDiskSpace;
	unsigned long long _memoryCacheSize;
	unsigned long long _backgroundCacheSize;

}

@property (nonatomic,readonly) unsigned long long maxDiskSpace;                    //@synthesize maxDiskSpace=_maxDiskSpace - In the implementation block
@property (assign,nonatomic) unsigned long long memoryCacheSize;                   //@synthesize memoryCacheSize=_memoryCacheSize - In the implementation block
@property (assign,nonatomic) unsigned long long backgroundCacheSize;               //@synthesize backgroundCacheSize=_backgroundCacheSize - In the implementation block
@property (assign,getter=isDebugEnabled,nonatomic) BOOL debugEnabled;              //@synthesize debugEnabled=_debugEnabled - In the implementation block
+(void)initialize;
-(void)loadImageFromURL:(id)arg1 response:(/*^block*/id)arg2 ;
-(void)loadScaledImageFromURL:(id)arg1 size:(CGSize)arg2 maxScale:(double)arg3 mode:(unsigned long long)arg4 response:(/*^block*/id)arg5 ;
-(id)initWithCacheDirectory:(id)arg1 maxDiskSpace:(unsigned long long)arg2 ;
-(void)setMemoryCacheSize:(unsigned long long)arg1 ;
-(void)setBackgroundCacheSize:(unsigned long long)arg1 ;
-(void)saveIfNeeded;
-(void)setExpirationTimeInterval:(double)arg1 ;
-(unsigned long long)maxFileCount;
-(void)setMaxFileCount:(unsigned long long)arg1 ;
-(unsigned long long)maxDiskSpace;
-(id)infoPath;
-(void)_clearCacheForBackground;
-(void)_clearCacheForMemory;
-(id)keyForURL:(id)arg1 size:(CGSize)arg2 maxScale:(double)arg3 mode:(unsigned long long)arg4 ;
-(id)newImageForKey:(id)arg1 ;
-(id)keyForURL:(id)arg1 ;
-(void)loadImagePathFromURL:(id)arg1 fetchIfNeeded:(BOOL)arg2 progress:(/*^block*/id)arg3 response:(/*^block*/id)arg4 ;
-(void)storeImagePath:(id)arg1 forURL:(id)arg2 response:(/*^block*/id)arg3 ;
-(unsigned long long)memoryCacheSize;
-(unsigned long long)backgroundCacheSize;
-(void)dealloc;
-(void)_save;
-(void)setDebugEnabled:(BOOL)arg1 ;
-(double)expirationTimeInterval;
-(void)delete;
-(BOOL)setImage:(id)arg1 forKey:(id)arg2 ;
-(BOOL)isDebugEnabled;
@end

