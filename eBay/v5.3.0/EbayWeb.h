/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:54:33 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/EDDCC4DC-B551-47FD-8F2D-ADD28D2EEB77/eBay.app/eBay
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <eBay/eBay-Structs.h>
#import <eBay/KeyboardAdjustingViewController.h>
#import <eBay/EBUNavigationActionBarProtocol.h>
#import <UIKit/UIWebViewDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <libobjc.A.dylib/MFMailComposeViewControllerDelegate.h>

@class UIWebView, UIToolbar, UIBarButtonItem, ActivitySpinnerView, UIActivityIndicatorView, NSMutableArray, NSString, NSURL, NSMutableURLRequest, UIAlertView, EBNWebViewMonitor, EBULoadingToastView;

@interface EbayWeb : KeyboardAdjustingViewController <EBUNavigationActionBarProtocol, UIWebViewDelegate, UIAlertViewDelegate, MFMailComposeViewControllerDelegate> {

	UIWebView* webView;
	UIToolbar* toolbar;
	UIBarButtonItem* backButton;
	UIBarButtonItem* forwardButton;
	UIBarButtonItem* refreshButton;
	ActivitySpinnerView* activitySpinnerView;
	UIActivityIndicatorView* activityIndicator;
	BOOL countedLinkClickForThisLoad;
	NSMutableArray* backForwardStack;
	int currentBackForwardIndex;
	NSString* html;
	NSURL* urlToShow;
	NSString* viewTitle;
	NSMutableURLRequest* urlRequest;
	BOOL isLoaded;
	BOOL threadShouldQuit;
	BOOL shouldDisplayActivity;
	long long clickedButtonIndex;
	BOOL isModal;
	BOOL prefillSignInUserID;
	BOOL loadingSSO;
	BOOL hideOnError;
	BOOL closeButtonOnRight;
	BOOL _useSSO;
	BOOL _showToolbar;
	BOOL _disableCloseButton;
	BOOL _hideCloseButton;
	BOOL _fixedSizeOnRotate;
	BOOL _forceMobileFriendlySitesToMatchViewWidth;
	BOOL _showBackButton;
	BOOL _hideNavigationBar;
	BOOL _saveContentOffset;
	BOOL _dismissOnAppBackground;
	BOOL _tryToConvertUrlsToNativeLinks;
	BOOL _isLoading;
	BOOL _wasNavigationBarHidden;
	/*^block*/id completion;
	NSString* completionURLFragment;
	NSString* closeButtonAlternateTitle;
	NSString* _signIn;
	UIAlertView* _webViewAlert;
	EBNWebViewMonitor* _monitor;
	NSString* _ssoScope;
	unsigned long long _loadingIndicatorType;
	NSString* _confirmButtonTitle;
	NSString* _afterLoadJavaScript;
	long long _presentationStyle;
	unsigned long long _completionStatus;
	unsigned long long _afterSalesStatus;
	/*^block*/id _completionStatusChecker;
	NSString* _userID;
	EBULoadingToastView* _loadingOverlay;
	UIBarButtonItem* _printBtn;
	UIBarButtonItem* _closeButton;
	CGSize insetsForContentSize;

}

@property (assign) BOOL loadingSSO; 
@property (assign,nonatomic) BOOL isLoading;                                             //@synthesize isLoading=_isLoading - In the implementation block
@property (nonatomic,retain) EBULoadingToastView * loadingOverlay;                       //@synthesize loadingOverlay=_loadingOverlay - In the implementation block
@property (assign,nonatomic) BOOL wasNavigationBarHidden;                                //@synthesize wasNavigationBarHidden=_wasNavigationBarHidden - In the implementation block
@property (nonatomic,retain) UIBarButtonItem * printBtn;                                 //@synthesize printBtn=_printBtn - In the implementation block
@property (nonatomic,retain) UIBarButtonItem * closeButton;                              //@synthesize closeButton=_closeButton - In the implementation block
@property (nonatomic,retain) UIToolbar * toolbar; 
@property (nonatomic,retain) UIWebView * webView; 
@property (nonatomic,retain) NSURL * urlToShow; 
@property (nonatomic,retain) NSString * viewTitle; 
@property (nonatomic,retain) NSString * html; 
@property (nonatomic,retain) NSString * completionURLFragment; 
@property (nonatomic,retain) NSString * signIn;                                          //@synthesize signIn=_signIn - In the implementation block
@property (nonatomic,retain) UIAlertView * webViewAlert;                                 //@synthesize webViewAlert=_webViewAlert - In the implementation block
@property (readonly) EBNWebViewMonitor * monitor;                                        //@synthesize monitor=_monitor - In the implementation block
@property (nonatomic,retain) NSMutableURLRequest * urlRequest; 
@property (assign,nonatomic) BOOL isModal; 
@property (assign,nonatomic) CGSize insetsForContentSize; 
@property (assign) BOOL prefillSignInUserID; 
@property (assign) BOOL useSSO;                                                          //@synthesize useSSO=_useSSO - In the implementation block
@property (nonatomic,retain) NSString * ssoScope;                                        //@synthesize ssoScope=_ssoScope - In the implementation block
@property (assign) BOOL hideOnError; 
@property (assign,nonatomic) BOOL showToolbar;                                           //@synthesize showToolbar=_showToolbar - In the implementation block
@property (assign,nonatomic) BOOL disableCloseButton;                                    //@synthesize disableCloseButton=_disableCloseButton - In the implementation block
@property (assign,nonatomic) BOOL hideCloseButton;                                       //@synthesize hideCloseButton=_hideCloseButton - In the implementation block
@property (assign,nonatomic) BOOL fixedSizeOnRotate;                                     //@synthesize fixedSizeOnRotate=_fixedSizeOnRotate - In the implementation block
@property (assign,nonatomic) BOOL forceMobileFriendlySitesToMatchViewWidth;              //@synthesize forceMobileFriendlySitesToMatchViewWidth=_forceMobileFriendlySitesToMatchViewWidth - In the implementation block
@property (assign,nonatomic) unsigned long long loadingIndicatorType;                    //@synthesize loadingIndicatorType=_loadingIndicatorType - In the implementation block
@property (assign,nonatomic) BOOL closeButtonOnRight; 
@property (assign,nonatomic,__weak) NSString * closeButtonAlternateTitle; 
@property (nonatomic,retain) NSString * confirmButtonTitle;                              //@synthesize confirmButtonTitle=_confirmButtonTitle - In the implementation block
@property (nonatomic,readonly) long long clickedButtonIndex; 
@property (nonatomic,retain) NSString * afterLoadJavaScript;                             //@synthesize afterLoadJavaScript=_afterLoadJavaScript - In the implementation block
@property (assign,nonatomic) long long presentationStyle;                                //@synthesize presentationStyle=_presentationStyle - In the implementation block
@property (assign,nonatomic) BOOL showBackButton;                                        //@synthesize showBackButton=_showBackButton - In the implementation block
@property (assign,nonatomic) BOOL hideNavigationBar;                                     //@synthesize hideNavigationBar=_hideNavigationBar - In the implementation block
@property (assign) unsigned long long completionStatus;                                  //@synthesize completionStatus=_completionStatus - In the implementation block
@property (assign) unsigned long long afterSalesStatus;                                  //@synthesize afterSalesStatus=_afterSalesStatus - In the implementation block
@property (nonatomic,copy) id completionStatusChecker;                                   //@synthesize completionStatusChecker=_completionStatusChecker - In the implementation block
@property (copy) id completion; 
@property (assign,nonatomic) BOOL saveContentOffset;                                     //@synthesize saveContentOffset=_saveContentOffset - In the implementation block
@property (assign,nonatomic) BOOL dismissOnAppBackground;                                //@synthesize dismissOnAppBackground=_dismissOnAppBackground - In the implementation block
@property (nonatomic,readonly) NSString * userID;                                        //@synthesize userID=_userID - In the implementation block
@property (assign,nonatomic) BOOL tryToConvertUrlsToNativeLinks;                         //@synthesize tryToConvertUrlsToNativeLinks=_tryToConvertUrlsToNativeLinks - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)ebayWeb;
+(id)ebayWebDoneParam;
+(id)ebayWebStatusParam;
+(id)ebayWebStatusParamLegacy;
+(id)ebayWebStatusSuccessValue;
+(id)afterSalesStatusParam;
+(id)afterSalesStatusCancelRequestedValue;
+(id)afterSalesStatusCancelClosedForCommitment;
+(id)afterSalesStatusCancelClosedNoRefund;
+(id)afterSalesStatusCancelClosedUnknownRefund;
+(id)afterSalesStatusCancelClosedWithRefund;
+(id)afterSalesStatusCancelComplete;
+(id)afterSalesStatusCancelFailed;
+(id)afterSalesStatusCancelPending;
+(id)afterSalesStatusCancelRejected;
+(id)afterSalesStatusReturnClosedEscalated;
+(id)afterSalesStatusReturnClosedNoRefund;
+(id)afterSalesStatusReturnClosedWithRefund;
+(id)afterSalesStatusReturnDelivered;
+(id)afterSalesStatusReturnEscalated;
+(id)afterSalesStatusReturnEscalatedClosedNoRefund;
+(id)afterSalesStatusReturnEscalatedClosedWithRefund;
+(id)afterSalesStatusReturnEscalatedPendingBuyer;
+(id)afterSalesStatusReturnEscalatedPendingCS;
+(id)afterSalesStatusReturnEscalatedPendingSeller;
+(id)afterSalesStatusReturnOpen;
+(id)afterSalesStatusReturnRequestClosedNoRefund;
+(id)afterSalesStatusReturnRequestClosedWithRefund;
+(id)afterSalesStatusReturnRequestPending;
+(id)afterSalesStatusReturnRequestPendingApproval;
+(id)afterSalesStatusReturnRequestRejected;
+(id)afterSalesStatusReturnShipped;
+(id)afterSalesStatusTrackInquiryClosedNoRefund;
+(id)afterSalesStatusTrackInquiryClosedWithRefund;
+(id)afterSalesStatusTrackInquiryEscalatedClosedNoRefund;
+(id)afterSalesStatusTrackInquiryEscalatedClosedWithRefund;
+(id)afterSalesStatusTrackInquiryEscalatedPendingBuyer;
+(id)afterSalesStatusTrackInquiryEscalatedPendingCS;
+(id)afterSalesStatusTrackInquiryPendingBuyerResponse;
+(id)afterSalesStatusTrackInquiryPendingSellerResponse;
+(id)ebayWebStatusCancelValue;
+(id)ebayWebStatusErrorValue;
+(id)ebayWebStatusDoneValue;
+(id)ebayWebUserIDParam;
+(id)buildHTMLBodyWrapper:(id)arg1 ;
+(id)ebayWebDoneURL;
+(id)urlByAddingReturnURL:(id)arg1 ;
+(id)urlByReplacingRUPlaceholder:(id)arg1 ruPlaceholder:(id)arg2 clientTypePlaceholder:(id)arg3 ;
-(void)setCloseButtonAlternateTitle:(NSString *)arg1 ;
-(void)dismissThisView;
-(EBULoadingToastView *)loadingOverlay;
-(void)setLoadingOverlay:(EBULoadingToastView *)arg1 ;
-(void)setUrlToShow:(NSURL *)arg1 ;
-(void)setDismissOnAppBackground:(BOOL)arg1 ;
-(void)presentModal:(id)arg1 ;
-(void)showProgressView;
-(void)hideProgressView;
-(void)setUseSSO:(BOOL)arg1 ;
-(void)setCompletionURLFragment:(NSString *)arg1 ;
-(void)setLoadingIndicatorType:(unsigned long long)arg1 ;
-(void)setTryToConvertUrlsToNativeLinks:(BOOL)arg1 ;
-(void)loadWithSSO;
-(void)setForceMobileFriendlySitesToMatchViewWidth:(BOOL)arg1 ;
-(void)setDisableCloseButton:(BOOL)arg1 ;
-(void)setCloseButtonOnRight:(BOOL)arg1 ;
-(void)setInsetsForContentSize:(CGSize)arg1 ;
-(CGSize)insetContentSizeFromView:(id)arg1 ;
-(void)setAfterLoadJavaScript:(NSString *)arg1 ;
-(NSString *)ssoScope;
-(BOOL)shouldShowNavigationActionBar:(id)arg1 ;
-(void)setSaveContentOffset:(BOOL)arg1 ;
-(unsigned long long)afterSalesStatus;
-(void)setAfterSalesStatus:(unsigned long long)arg1 ;
-(void)setHideCloseButton:(BOOL)arg1 ;
-(void)setFixedSizeOnRotate:(BOOL)arg1 ;
-(void)setHideOnError:(BOOL)arg1 ;
-(void)loadPageFromURL:(id)arg1 ;
-(void)dismissThisViewFromCloseButton:(id)arg1 ;
-(void)setCompletionStatusChecker:(id)arg1 ;
-(void)webViewCleanup;
-(void)setPrefillSignInUserID:(BOOL)arg1 ;
-(void)setupWebView;
-(void)resetBackForwardStack;
-(void)doRefresh;
-(BOOL)loadingSSO;
-(BOOL)useSSO;
-(void)setLoadingSSO:(BOOL)arg1 ;
-(NSURL *)urlToShow;
-(void)handleSSOResp:(id)arg1 ;
-(void)setConfirmButtonTitle:(NSString *)arg1 ;
-(long long)clickedButtonIndex;
-(BOOL)saveContentOffset;
-(UIAlertView *)webViewAlert;
-(void)setWebViewAlert:(UIAlertView *)arg1 ;
-(unsigned long long)loadingIndicatorType;
-(void)layoutToolbar;
-(id)barButtonForImage:(id)arg1 andAction:(SEL)arg2 ;
-(void)updateToolbarForURL:(id)arg1 ;
-(void)printPage;
-(UIBarButtonItem *)printBtn;
-(void)setBackForwardState;
-(BOOL)hideNavigationBar;
-(void)setWasNavigationBarHidden:(BOOL)arg1 ;
-(void)setupNavButtons;
-(void)dismissIfModal;
-(BOOL)wasNavigationBarHidden;
-(BOOL)fixedSizeOnRotate;
-(NSString *)closeButtonAlternateTitle;
-(BOOL)showBackButton;
-(NSString *)confirmButtonTitle;
-(BOOL)closeButtonOnRight;
-(BOOL)hideCloseButton;
-(BOOL)disableCloseButton;
-(id)completionStatusChecker;
-(BOOL)tryToConvertUrlsToNativeLinks;
-(void)updateContentOffset;
-(BOOL)forceMobileFriendlySitesToMatchViewWidth;
-(NSString *)afterLoadJavaScript;
-(BOOL)hideOnError;
-(CGSize)insetsForContentSize;
-(NSString *)completionURLFragment;
-(BOOL)prefillSignInUserID;
-(NSString *)signIn;
-(void)setSignIn:(NSString *)arg1 ;
-(void)setShowBackButton:(BOOL)arg1 ;
-(void)setHideNavigationBar:(BOOL)arg1 ;
-(BOOL)dismissOnAppBackground;
-(void)setPrintBtn:(UIBarButtonItem *)arg1 ;
-(BOOL)showToolbar;
-(void)setShowToolbar:(BOOL)arg1 ;
-(void)setSsoScope:(NSString *)arg1 ;
-(void)dealloc;
-(id)init;
-(unsigned long long)supportedInterfaceOrientations;
-(void)didReceiveMemoryWarning;
-(BOOL)shouldAutorotate;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(long long)presentationStyle;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(BOOL)shouldAutorotateToInterfaceOrientation:(long long)arg1 ;
-(id)completion;
-(void)setCompletion:(id)arg1 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(UIToolbar *)toolbar;
-(void)setToolbar:(UIToolbar *)arg1 ;
-(UIWebView *)webView;
-(void)setWebView:(UIWebView *)arg1 ;
-(BOOL)isLoading;
-(void)goBack:(id)arg1 ;
-(void)goForward:(id)arg1 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(BOOL)accessibilityPerformEscape;
-(id)baseURL;
-(void)setIsLoading:(BOOL)arg1 ;
-(EBNWebViewMonitor *)monitor;
-(NSString *)html;
-(void)setHtml:(NSString *)arg1 ;
-(unsigned long long)completionStatus;
-(void)setCompletionStatus:(unsigned long long)arg1 ;
-(NSString *)viewTitle;
-(void)setViewTitle:(NSString *)arg1 ;
-(NSMutableURLRequest *)urlRequest;
-(void)setIsModal:(BOOL)arg1 ;
-(BOOL)isModal;
-(void)loadIfNeeded;
-(void)setUrlRequest:(NSMutableURLRequest *)arg1 ;
-(UIBarButtonItem *)closeButton;
-(void)setCloseButton:(UIBarButtonItem *)arg1 ;
-(void)setPresentationStyle:(long long)arg1 ;
-(NSString *)userID;
@end

