/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:54:31 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/EDDCC4DC-B551-47FD-8F2D-ADD28D2EEB77/eBay.app/eBay
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <eBay/eBay-Structs.h>
#import <eBay/SelectiveSeparatorCell.h>
#import <UIKit/UITextFieldDelegate.h>
#import <eBay/MetricsCompatibleCell.h>
#import <eBay/CompoundCellMetrics.h>

@class UILabel, ValueObserverWithUITarget, UIView, NSString;

@interface NameValueTableCell : SelectiveSeparatorCell <UITextFieldDelegate, MetricsCompatibleCell, CompoundCellMetrics> {

	UILabel* nameLabel;
	UILabel* valueLabel;
	BOOL pushLongValueOntoSeparateLine;
	BOOL didPushValueOntoSeparateLine;
	BOOL makeNameLabelTopAligned;
	BOOL adjustImageViewFrame;
	double valueLabelWidthLimit;
	BOOL transparentLabels;
	BOOL valueLabelWidthIsUnconstrained;
	UIEdgeInsets compoundCellEdgeInsets;
	ValueObserverWithUITarget* valueObjectObserver;
	BOOL _dynamicTextEnabled;
	BOOL _hasAttributedValue;
	UIView* _valueView;
	double _maximumHeight;
	double _forcedNameLabelWidth;
	double _nameLabelWidth;
	long long _nameLabelAlignment;
	long long _valueLabelAlignment;
	double _parentCellHasAccessoryWithWidth;

}

@property (assign,nonatomic) BOOL hasAttributedValue;                              //@synthesize hasAttributedValue=_hasAttributedValue - In the implementation block
@property (assign,nonatomic) BOOL dynamicTextEnabled;                              //@synthesize dynamicTextEnabled=_dynamicTextEnabled - In the implementation block
@property (nonatomic,retain) UIView * valueView;                                   //@synthesize valueView=_valueView - In the implementation block
@property (nonatomic,readonly) UILabel * nameLabel; 
@property (nonatomic,readonly) UILabel * valueLabel; 
@property (assign,nonatomic) double maximumHeight;                                 //@synthesize maximumHeight=_maximumHeight - In the implementation block
@property (assign,nonatomic) double forcedNameLabelWidth;                          //@synthesize forcedNameLabelWidth=_forcedNameLabelWidth - In the implementation block
@property (assign,nonatomic) double nameLabelWidth;                                //@synthesize nameLabelWidth=_nameLabelWidth - In the implementation block
@property (assign,nonatomic) BOOL pushLongValueOntoSeparateLine; 
@property (assign,nonatomic) long long nameLabelAlignment;                         //@synthesize nameLabelAlignment=_nameLabelAlignment - In the implementation block
@property (assign,nonatomic) long long valueLabelAlignment;                        //@synthesize valueLabelAlignment=_valueLabelAlignment - In the implementation block
@property (assign,nonatomic) BOOL makeNameLabelTopAligned; 
@property (assign,nonatomic) BOOL adjustImageViewFrame; 
@property (assign,nonatomic) double valueLabelWidthLimit; 
@property (assign,nonatomic) BOOL transparentLabels; 
@property (assign,nonatomic) BOOL valueLabelWidthIsUnconstrained; 
@property (assign,nonatomic) double parentCellHasAccessoryWithWidth;               //@synthesize parentCellHasAccessoryWithWidth=_parentCellHasAccessoryWithWidth - In the implementation block
@property (nonatomic,readonly) long long defaultNameLabelAlignment; 
@property (nonatomic,readonly) long long defaultValueLabelAlignment; 
@property (readonly) ValueObserverWithUITarget * valueObjectObserver; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) double leftOffset; 
@property (assign) UIEdgeInsets compoundCellEdgeInsets; 
+(id)emptyCell;
+(id)cellWithDictionary:(id)arg1 ;
+(id)cellWithDisplayObject:(id)arg1 ;
+(id)emptyCellValueIsCopyable:(BOOL)arg1 ;
-(double)optimalHeight;
-(void)setPushLongValueOntoSeparateLine:(BOOL)arg1 ;
-(void)setMakeNameLabelTopAligned:(BOOL)arg1 ;
-(void)setNameLabelAlignment:(long long)arg1 ;
-(void)setValueLabelAlignment:(long long)arg1 ;
-(void)setValueLabelWidthIsUnconstrained:(BOOL)arg1 ;
-(void)setNameLabelWidth:(double)arg1 ;
-(BOOL)dynamicTextEnabled;
-(void)setDynamicTextEnabled:(BOOL)arg1 ;
-(double)finalHeight;
-(double)nameLabelMinimumWidth;
-(id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 valueCellIsCopyable:(BOOL)arg3 ;
-(long long)defaultNameLabelAlignment;
-(long long)defaultValueLabelAlignment;
-(id)newNameLabel;
-(id)newValueLabel:(BOOL)arg1 ;
-(double)nameLabelWidth;
-(double)parentCellHasAccessoryWithWidth;
-(CGSize)unconstrainedValueLabelSize;
-(double)rightColumnWidth;
-(CGSize)valueLabelSize;
-(CGSize)nameLabelSize;
-(double)rightColumnOffset;
-(void)observeValueObject:(id)arg1 keyPath:(id)arg2 ;
-(UIEdgeInsets)compoundCellEdgeInsets;
-(void)setCompoundCellEdgeInsets:(UIEdgeInsets)arg1 ;
-(id)initEmptyWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 ;
-(CGSize)labelSize:(id)arg1 constrainedToWidth:(double)arg2 ;
-(double)valueLabelWidthLimit;
-(void)setValueLabelWidthLimit:(double)arg1 ;
-(BOOL)adjustImageViewFrame;
-(void)setAdjustImageViewFrame:(BOOL)arg1 ;
-(BOOL)pushLongValueOntoSeparateLine;
-(BOOL)makeNameLabelTopAligned;
-(BOOL)transparentLabels;
-(void)setTransparentLabels:(BOOL)arg1 ;
-(BOOL)valueLabelWidthIsUnconstrained;
-(ValueObserverWithUITarget *)valueObjectObserver;
-(double)forcedNameLabelWidth;
-(void)setForcedNameLabelWidth:(double)arg1 ;
-(long long)nameLabelAlignment;
-(long long)valueLabelAlignment;
-(BOOL)hasAttributedValue;
-(void)setHasAttributedValue:(BOOL)arg1 ;
-(void)setParentCellHasAccessoryWithWidth:(double)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 ;
-(NSString *)description;
-(void)setAccessoryType:(long long)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setValueView:(UIView *)arg1 ;
-(UIView *)valueView;
-(UILabel *)nameLabel;
-(UILabel *)valueLabel;
-(void)setMaximumHeight:(double)arg1 ;
-(double)maximumHeight;
-(id)valueText;
-(double)minimumHeight;
@end

