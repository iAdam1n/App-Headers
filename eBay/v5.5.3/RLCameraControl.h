/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 23, 2016 at 8:53:16 PM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/B79A6C91-6A31-4B98-98DF-DAB1E6185487/eBay.app/eBay
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <eBay/eBay-Structs.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>
#import <libobjc.A.dylib/AVCaptureMetadataOutputObjectsDelegate.h>

@protocol OS_dispatch_queue;
@class AVCaptureDevice, NSMutableSet, BarcodePickerController2, NSTimer, UIImage, NSObject, AVCaptureSession, AVCaptureDeviceInput, AVCaptureVideoDataOutput, AVCaptureStillImageOutput, AVCaptureVideoPreviewLayer, AVCaptureMetadataOutput, NSString;

@interface RLCameraControl : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate> {

	AVCaptureDevice* captureDevice;
	NSMutableSet* connectedPickers;
	BarcodePickerController2* activePicker;
	NSTimer* focusingTimer;
	NSTimer* sessionIdleTimer;
	int makeSnapshotOfNextFrame;
	UIImage* cameraSnapshot;
	NSObject*<OS_dispatch_queue> videoOutputQueue;
	BOOL isRunningAVSession;
	NSObject*<OS_dispatch_queue> metadataQueue;
	AVCaptureSession* avSession;
	AVCaptureDeviceInput* captureInput;
	AVCaptureVideoDataOutput* captureOutput;
	AVCaptureStillImageOutput* stillImageOutput;
	AVCaptureVideoPreviewLayer* previewLayer;
	AVCaptureMetadataOutput* barcodeOutput;
	BOOL hasAcquiredCameraLock;

}

@property (assign) BOOL exposureLock; 
@property (retain) UIImage * cameraSnapshot; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)initialize;
-(void)turnTorch:(BOOL)arg1 ;
-(void)startIdleTimer;
-(void)performInputDeviceSetup:(BOOL)arg1 ;
-(void)focusTimer:(id)arg1 ;
-(void)undoInputDeviceSetup;
-(BOOL)setActivePicker:(id)arg1 ;
-(BOOL)validateSession;
-(void)cancelIdleTimer;
-(void)timeToStopSession:(id)arg1 ;
-(id)initWithCaptureDevice:(id)arg1 forPicker:(id)arg2 ;
-(void)pickerWillBeDealloced:(id)arg1 ;
-(void)closeCameraConnection:(id)arg1 ;
-(BOOL)addPicker:(id)arg1 runSession:(BOOL)arg2 makeActive:(BOOL)arg3 ;
-(void)pauseScanning;
-(BOOL)canFocus;
-(void)requestCameraSnapshot:(BOOL)arg1 ;
-(void)setExposureLock:(BOOL)arg1 ;
-(BOOL)exposureLock;
-(BOOL)pickerIsActive:(id)arg1 ;
-(void)focusOnPoint:(CGPoint)arg1 ;
-(CGRect)cameraRect;
-(BOOL)canFocusOnPoint;
-(void)setCameraSnapshot:(UIImage *)arg1 ;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)isFocusing;
-(BOOL)isTorchOn;
-(BOOL)hasTorch;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3 ;
-(UIImage *)cameraSnapshot;
-(id)previewLayer;
@end

