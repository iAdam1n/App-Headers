/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:53:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/D5AA3D7F-F68B-43D8-8CC1-85DAFE886350/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/TGOverlayController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol TGPIPAblePlayerView;
@class UIView, TGEmbedPIPView, TGEmbedPIPWindow, UIPanGestureRecognizer, UIPinchGestureRecognizer, TGObserverProxy, NSString;

@interface TGEmbedPIPController : TGOverlayController <UIGestureRecognizerDelegate> {

	UIView*<TGPIPAblePlayerView> _playerView;
	long long _peerId;
	int _messageId;
	BOOL _embed;
	CGRect _initialPlayerFrame;
	CGSize _minimalPipSize;
	TGEmbedPIPView* _pipView;
	double _keyboardHeight;
	int _currentCorner;
	BOOL _hidden;
	BOOL _highVelocityOnGestureStart;
	CGSize _maxSize;
	TGEmbedPIPWindow* _window;
	BOOL _appearing;
	BOOL _closing;
	UIPanGestureRecognizer* _panGestureRecognizer;
	UIPinchGestureRecognizer* _pinchGestureRecognizer;
	TGObserverProxy* _keyboardWillChangeFrameProxy;
	TGObserverProxy* _didEnterBackgroundProxy;
	/*^block*/id _onTransitionBegin;

}

@property (nonatomic,copy) id onTransitionBegin;                    //@synthesize onTransitionBegin=_onTransitionBegin - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)dismissPictureInPicture;
+(id)activeNonPIPPlayerView;
+(void)resumePictureInPicturePlayback;
+(void)pausePictureInPicturePlayback;
+(void)_cancelSystemPIPWithCompletion:(/*^block*/id)arg1 ;
+(void)_systemPictureInPictureDidStart;
+(void)_systemPictureInPictureDidStop;
+(id)placeholderViews;
+(id)placeholderViewForPeerId:(long long)arg1 messageId:(int)arg2 ;
+(BOOL)isSystemPictureInPictureAvailable;
+(id)playerViews;
+(BOOL)hasPictureInPictureActive;
+(id)currentInstance;
+(void)startPictureInPictureWithPlayerView:(id)arg1 embed:(BOOL)arg2 peerId:(long long)arg3 messageId:(int)arg4 onTransitionBegin:(/*^block*/id)arg5 onTransitionFinished:(/*^block*/id)arg6 ;
+(BOOL)hasPictureInPictureActiveForPeerId:(long long)arg1 messageId:(int)arg2 playerView:(id*)arg3 ;
+(void)registerPlaceholderView:(id)arg1 ;
+(void)registerPlayerView:(id)arg1 ;
+(void)cancelPictureInPictureWithOffset:(CGPoint)arg1 ;
+(void)hide;
+(void)restore;
-(void)keyboardWillChangeFrame:(id)arg1 ;
-(id)sourcePlaceholderView;
-(void)layoutViewAtCorner:(int)arg1 hidden:(BOOL)arg2 ;
-(void)animateViewWithOptions:(unsigned long long)arg1 block:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(CGRect)_rectForViewAtCorner:(int)arg1 size:(CGSize)arg2 hidden:(BOOL)arg3 ;
-(id)onTransitionBegin;
-(void)setOnTransitionBegin:(id)arg1 ;
-(void)cancelWithOffset:(CGPoint)arg1 ;
-(int)targetCornerForLocation:(CGPoint)arg1 hide:(BOOL*)arg2 ;
-(int)targetCornerForVelocity:(CGPoint)arg1 hide:(BOOL*)arg2 ;
-(id)statusBarAppearanceSourceController;
-(id)autorotationSourceController;
-(id)initWithPlayerView:(id)arg1 embed:(BOOL)arg2 peerId:(long long)arg3 messageId:(int)arg4 corner:(int)arg5 ;
-(void)cancel;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(long long)preferredStatusBarStyle;
-(BOOL)prefersStatusBarHidden;
-(BOOL)shouldAutorotate;
-(void)loadView;
-(void)viewWillLayoutSubviews;
-(void)handlePan:(id)arg1 ;
-(void)handlePinch:(id)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)didEnterBackground:(id)arg1 ;
-(void)dismissController;
@end

