/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:53:39 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/D5AA3D7F-F68B-43D8-8CC1-85DAFE886350/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIWebViewDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>
#import <Telegram/TGPIPAblePlayerView.h>

@protocol OS_dispatch_semaphore, SDisposable;
@class TGWebPageMediaAttachment, TGMessageImageViewOverlayView, TGImageView, UIView, UILabel, UIWebView, WKWebView, NSObject, SQueue, SPipe, TGEmbedPlayerState, TGEmbedPlayerControls, NSString;

@interface TGEmbedPlayerView : UIView <UIWebViewDelegate, WKNavigationDelegate, TGPIPAblePlayerView> {

	TGWebPageMediaAttachment* _webPage;
	BOOL _ignoreNextPositionUpdate;
	TGMessageImageViewOverlayView* _overlayView;
	CGSize _embedSize;
	double _embedScale;
	TGImageView* _coverView;
	UIView* _dimView;
	UILabel* _errorLabel;
	UIWebView* _uiWebView;
	WKWebView* _wkWebView;
	UIView* _interactionView;
	CGSize _maxPlayerSize;
	BOOL _loading;
	NSObject*<OS_dispatch_semaphore> _sema;
	SQueue* _jsQueue;
	SPipe* _statePipe;
	BOOL _pausedManually;
	BOOL _shouldResumePIPPlayback;
	id<SDisposable> _currentAudioSession;
	BOOL _disallowPIP;
	BOOL _disableWatermarkAction;
	BOOL _inhibitFullscreenButton;
	BOOL _hasNoAboutInformation;
	/*^block*/id _requestPictureInPicture;
	TGEmbedPlayerState* _state;
	TGEmbedPlayerControls* _controlsView;
	UIView* _dimWrapperView;
	/*^block*/id _requestFullscreen;
	/*^block*/id _onMetadataLoaded;
	CGRect _initialFrame;

}

@property (nonatomic,readonly) TGEmbedPlayerState * state;                        //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) TGEmbedPlayerControls * controlsView;              //@synthesize controlsView=_controlsView - In the implementation block
@property (nonatomic,readonly) UIView * dimWrapperView;                           //@synthesize dimWrapperView=_dimWrapperView - In the implementation block
@property (assign,nonatomic) BOOL disableWatermarkAction;                         //@synthesize disableWatermarkAction=_disableWatermarkAction - In the implementation block
@property (assign,nonatomic) BOOL inhibitFullscreenButton;                        //@synthesize inhibitFullscreenButton=_inhibitFullscreenButton - In the implementation block
@property (assign,nonatomic) BOOL hasNoAboutInformation;                          //@synthesize hasNoAboutInformation=_hasNoAboutInformation - In the implementation block
@property (assign,nonatomic) BOOL disallowPIP;                                    //@synthesize disallowPIP=_disallowPIP - In the implementation block
@property (assign,nonatomic) CGRect initialFrame;                                 //@synthesize initialFrame=_initialFrame - In the implementation block
@property (nonatomic,copy) id requestFullscreen;                                  //@synthesize requestFullscreen=_requestFullscreen - In the implementation block
@property (nonatomic,copy) id onMetadataLoaded;                                   //@synthesize onMetadataLoaded=_onMetadataLoaded - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) id requestPictureInPicture;                            //@synthesize requestPictureInPicture=_requestPictureInPicture - In the implementation block
+(BOOL)_supportsWebPage:(id)arg1 ;
+(Class)playerViewClassForWebPage:(id)arg1 ;
-(void)switchToPictureInPicture;
-(void)seekToPosition:(double)arg1 ;
-(id)requestPictureInPicture;
-(BOOL)disallowPIP;
-(void)playVideo;
-(void)seekToFractPosition:(double)arg1 ;
-(id)stateSignal;
-(BOOL)supportsPIP;
-(void)_requestSystemPictureInPictureMode;
-(void)_prepareToEnterFullscreen;
-(void)_prepareToLeaveFullscreen;
-(void)resumePIPPlayback;
-(void)pausePIPPlayback;
-(void)beginLeavingFullscreen;
-(void)finishedLeavingFullscreen;
-(void)setRequestPictureInPicture:(id)arg1 ;
-(void)setDisallowPIP:(BOOL)arg1 ;
-(void)setupWKWebView;
-(void)setupUIWebView;
-(id)initWithWebPageAttachment:(id)arg1 thumbnailSignal:(id)arg2 ;
-(id)_embedURL;
-(int)_controlsType;
-(void)_evaluateJS:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setDimmed:(BOOL)arg1 animated:(BOOL)arg2 shouldDelay:(BOOL)arg3 ;
-(void)_onPageReady;
-(void)_notifyOfCallbackURL:(id)arg1 ;
-(id)_embedHTML;
-(id)_baseURL;
-(void)_setupUserScripts:(id)arg1 ;
-(BOOL)_scaleViewToMaxSize;
-(TGEmbedPlayerControls *)controlsView;
-(void)_watermarkAction;
-(void)setupWithEmbedSize:(CGSize)arg1 ;
-(void)_cleanWebView;
-(void)setLoadProgress:(double)arg1 duration:(double)arg2 ;
-(id)onMetadataLoaded;
-(BOOL)_useFakeLoadingProgress;
-(UIView *)dimWrapperView;
-(double)_compensationEdges;
-(id)initWithWebPageAttachment:(id)arg1 ;
-(void)setRequestFullscreen:(id)arg1 ;
-(void)setHasNoAboutInformation:(BOOL)arg1 ;
-(void)setOnMetadataLoaded:(id)arg1 ;
-(void)setDisableWatermarkAction:(BOOL)arg1 ;
-(void)setInhibitFullscreenButton:(BOOL)arg1 ;
-(void)onLockInPlace;
-(BOOL)hasNoAboutInformation;
-(BOOL)inhibitFullscreenButton;
-(void)_pictureInPicturePressed;
-(void)_enterFullscreen;
-(BOOL)disableWatermarkAction;
-(void)_onPanelAppearance;
-(BOOL)_applyViewportUserScript;
-(void)commonSetupWithWebView:(id)arg1 useURL:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)_openWebPage:(id)arg1 ;
-(id)requestFullscreen;
-(void)dealloc;
-(void)layoutSubviews;
-(TGEmbedPlayerState *)state;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)hideControls;
-(CGRect)initialFrame;
-(void)setInitialFrame:(CGRect)arg1 ;
-(void)_didBeginPlayback;
-(id)_webView;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)pauseVideo;
-(void)setDimmed:(BOOL)arg1 animated:(BOOL)arg2 ;
-(void)updateState:(id)arg1 ;
-(void)setCoverImage:(id)arg1 ;
-(void)pauseVideo:(BOOL)arg1 ;
@end

