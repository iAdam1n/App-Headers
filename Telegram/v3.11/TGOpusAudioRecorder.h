/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:53:38 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/D5AA3D7F-F68B-43D8-8CC1-85DAFE886350/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/ASWatcher.h>

@class TGDataItem, TGOggOpusWriter, NSMutableData, NSString, SMetaDisposable, ASHandle;

@interface TGOpusAudioRecorder : NSObject <ASWatcher> {

	TGDataItem* _tempFileItem;
	TGOggOpusWriter* _oggWriter;
	NSMutableData* _audioBuffer;
	NSString* _liveUploadPath;
	SMetaDisposable* _currentAudioSession;
	BOOL _recording;
	BOOL _waitForTone;
	double _waitForToneStart;
	BOOL _stopped;
	NSMutableData* _waveformSamples;
	short _waveformPeak;
	int _waveformPeakCount;
	short _micLevelPeak;
	int _micLevelPeakCount;
	int _recorderId;
	/*^block*/id _pauseRecording;
	/*^block*/id _micLevel;
	ASHandle* _actionHandle;

}

@property (nonatomic,retain) ASHandle * actionHandle;               //@synthesize actionHandle=_actionHandle - In the implementation block
@property (assign,nonatomic) int recorderId;                        //@synthesize recorderId=_recorderId - In the implementation block
@property (nonatomic,copy) id pauseRecording;                       //@synthesize pauseRecording=_pauseRecording - In the implementation block
@property (nonatomic,copy) id micLevel;                             //@synthesize micLevel=_micLevel - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)processingQueue;
-(ASHandle *)actionHandle;
-(void)setActionHandle:(ASHandle *)arg1 ;
-(id)initWithFileEncryption:(BOOL)arg1 ;
-(void)setPauseRecording:(id)arg1 ;
-(void)setMicLevel:(id)arg1 ;
-(void)_beginAudioSession:(BOOL)arg1 ;
-(void)prepareRecord:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(id)stopRecording:(double*)arg1 liveData:(id*)arg2 waveform:(id*)arg3 ;
-(id)micLevel;
-(void)_processBuffer:(const AudioBuffer*)arg1 ;
-(void)_endAudioSession;
-(void)loadToneBuffer;
-(void)processWaveformPreview:(const short*)arg1 count:(int)arg2 ;
-(int)recorderId;
-(void)setRecorderId:(int)arg1 ;
-(void)dealloc;
-(void)cleanup;
-(id)pauseRecording;
-(void)record;
-(double)currentDuration;
@end

