/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:53:38 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/D5AA3D7F-F68B-43D8-8CC1-85DAFE886350/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class GDCredentialManager, GDAPIToken, NSString, NSArray, NSObject;

@interface GDClientManager : NSObject {

	GDCredentialManager* _credentialManager;
	GDAPIToken* _defaultAPIToken;
	NSString* _persistenceIdentifier;
	NSArray* _clientCredentials;
	NSObject*<OS_dispatch_queue> _private_queue;

}

@property (nonatomic,copy) NSArray * clientCredentials;                                 //@synthesize clientCredentials=_clientCredentials - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> private_queue;              //@synthesize private_queue=_private_queue - In the implementation block
@property (nonatomic,retain) GDCredentialManager * credentialManager;                   //@synthesize credentialManager=_credentialManager - In the implementation block
@property (nonatomic,retain) GDAPIToken * defaultAPIToken;                              //@synthesize defaultAPIToken=_defaultAPIToken - In the implementation block
@property (nonatomic,retain) NSString * persistenceIdentifier;                          //@synthesize persistenceIdentifier=_persistenceIdentifier - In the implementation block
+(Class)apiTokenClass;
+(void)_setSharedManager:(id)arg1 ;
+(Class)clientClass;
+(void)initialize;
+(id)sharedManager;
+(void)setSharedManager:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)private_queue;
-(void)removeCredential:(id)arg1 ;
-(void)addCredential:(id)arg1 ;
-(id)allIndependentClients;
-(void)setDefaultAPIToken:(GDAPIToken *)arg1 ;
-(GDAPIToken *)defaultAPIToken;
-(void)linkUserID:(id)arg1 apiToken:(id)arg2 fromController:(id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 ;
-(void)linkFromController:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(void)setCredentialManager:(GDCredentialManager *)arg1 ;
-(GDCredentialManager *)credentialManager;
-(id)credentialForUserID:(id)arg1 ;
-(id)credentialForUserID:(id)arg1 apiToken:(id)arg2 ;
-(id)credentialMatchingPredicate:(id)arg1 ;
-(NSArray *)clientCredentials;
-(id)newClientForUserID:(id)arg1 ;
-(id)newClientForUserID:(id)arg1 apiToken:(id)arg2 ;
-(id)newClientForCredential:(id)arg1 ;
-(id)allIndependentCredentials;
-(void)linkUserID:(id)arg1 fromController:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(void)setDefaultKey:(id)arg1 secret:(id)arg2 ;
-(id)newClient;
-(void)setClientCredentials:(NSArray *)arg1 ;
-(NSString *)persistenceIdentifier;
-(BOOL)isLinked;
-(id)init;
-(BOOL)isValid;
-(id)credential;
-(void)setPersistenceIdentifier:(NSString *)arg1 ;
@end

