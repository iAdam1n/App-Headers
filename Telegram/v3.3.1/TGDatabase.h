//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ATQueue, FMDatabase, NSMutableDictionary, NSString, SBag, SMulticastSignalManager, SPipe, TGChannelList, TGNotificationPrivacyAccountSetting, TGSpotlightIndexData, TGTimer;

@interface TGDatabase : NSObject
{
    ATQueue *_fileDeletionQueue;
    ATQueue *_backgroundFileIndexingQueue;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__userByUid;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__contactsByPhoneId;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__phonebookContacts;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__mutedPeers;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__nextLocalMid;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__userLinks;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__cachedUnreadCount;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__unreadCountByConversation;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__minAutosaveMessageIdForConversations;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__containsConversation;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__remoteContactUids;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__peerCustomSettings;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__encryptedConversationIds;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__conversationEncryptionKeys;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__encryptedParticipantIds;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__encryptedConversationIsCreator;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__encryptedConversationAccessHash;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__messageLifetimeByPeerId;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__cachedConversations;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__conversationInputStates;
    struct unordered_map<int, TGUser *, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, TGUser *>>, false> _userByUid;
    struct map<int, TGContactBinding *, std::less<int>, std::allocator<std::pair<const int, TGContactBinding *>>> _contactsByPhoneId;
    map_5f2c8fba _phoneIdByUid;
    set_8fb532d1 _remoteContactUids;
    struct map<int, TGPhonebookContact *, std::less<int>, std::allocator<std::pair<const int, TGPhonebookContact *>>> _phonebookContacts;
    map_5f2c8fba _phoneIdToNativeId;
    map_af4b726e _mutedPeers;
    map_af4b726e _minAutosaveMessageIdForConversations;
    struct map<int, std::pair<int, int>, std::less<int>, std::allocator<std::pair<const int, std::pair<int, int>>>> _userLinks;
    map_af4b726e _unreadCountByConversation;
    set_1e05eb4d _containsConversation;
    int _cachedUnreadCount;
    struct map<long long, TGConversation *, std::less<long long>, std::allocator<std::pair<const long long, TGConversation *>>> _cachedConversations;
    struct map<long long, bool, std::less<long long>, std::allocator<std::pair<const long long, bool>>> _isConversationBroadcast;
    struct map<long long, TGPeerCustomSettings, std::less<long long>, std::allocator<std::pair<const long long, TGPeerCustomSettings>>> _peerCustomSettings;
    map_d98b03af _encryptedConversationIds;
    map_d98b03af _peerIdsForEncryptedConversationIds;
    struct map<long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>, std::less<long long>, std::allocator<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>> _conversationEncryptionKeys;
    map_af4b726e _encryptedParticipantIds;
    struct map<long long, bool, std::less<long long>, std::allocator<std::pair<const long long, bool>>> _encryptedConversationIsCreator;
    map_d98b03af _encryptedConversationAccessHash;
    map_af4b726e _messageLifetimeByPeerId;
    struct map<long long, NSDictionary *, std::less<long long>, std::allocator<std::pair<const long long, NSDictionary *>>> _conversationInputStates;
    struct map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>> _peerLayers;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__peerLayers;
    struct map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>> _lastReportedToPeerLayers;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__lastReportedToPeerLayers;
    NSString *_password;
    struct _opaque_pthread_mutex_t _TG_SYNCHRONIZED__ptsWatchers;
    SBag *_ptsWatchers;
    SMulticastSignalManager *_multicastManager;
    SPipe *_channelListPipe;
    TGChannelList *_storedChannelList;
    NSMutableDictionary *_existingChannelPipes;
    NSMutableDictionary *_channelPtsPipes;
    SPipe *_queuedDeleteChannelMessages;
    SPipe *_queuedReadChannelMessages;
    SPipe *_queuedLeaveChannels;
    NSMutableDictionary *_cachedChannelDataPipes;
    TGSpotlightIndexData *_spotlightIndexData;
    SPipe *_spotlightIndexPipe;
    id <SDisposable> _spotlightIndexDisposable;
    _Bool _contactListPreloaded;
    _Bool _deletionInProgress;
    int _schemaVersion;
    int _serviceLastCleanTimeKey;
    int _serviceLastMidKey;
    int _servicePtsKey;
    int _serviceContactListStateKey;
    int _serviceLatestSynchronizedMidKey;
    int _serviceLatestSynchronizedQtsKey;
    int _serviceEncryptedConversationCount;
    int _nextLocalMid;
    int _localUserId;
    int _userLinksVersion;
    CDUnknownBlockType _messageCleanupBlock;
    CDUnknownBlockType _cleanupEverythingBlock;
    double _timeDifferenceFromUTC;
    NSString *_databasePath;
    NSString *_indexDatabasePath;
    FMDatabase *_database;
    FMDatabase *_indexDatabase;
    FMDatabase *_filesDatabase;
    NSString *_serviceTableName;
    NSString *_usersTableName;
    NSString *_conversationListTableName;
    NSString *_broadcastConversationListTableName;
    NSString *_channelListTableName;
    NSString *_channelCachedDataTableName;
    NSString *_channelPendingMessagesTableName;
    NSString *_channelMessagesTableName;
    NSString *_channelMessageTagsTableName;
    NSString *_channelMessagesRandomIdTableName;
    NSString *_channelMessageHolesTableName;
    NSString *_channelMessageUnimportantHolesTableName;
    NSString *_channelMessageUnimportantGroupsTableName;
    NSString *_channelDeleteMessagesTableName;
    NSString *_channelLeaveTableName;
    NSString *_channelReadHistoryTableName;
    NSString *_channelHistoryPtsTableName;
    NSString *_messagesTableName;
    NSString *_conversationMediaTableName;
    NSString *_contactListTableName;
    NSString *_actionQueueTableName;
    NSString *_peerPropertiesTableName;
    NSString *_peerProfilePhotosTableName;
    NSString *_outgoingMessagesTableName;
    NSString *_futureActionsTableName;
    NSString *_peerHistoryHolesTableName;
    NSString *_assetsTableName;
    NSString *_videosTableName;
    NSString *_storedFilesTableName;
    NSString *_localFilesTableName;
    NSString *_serverAssetsTableName;
    NSString *_blockedUsersTableName;
    NSString *_userLinksTableName;
    NSString *_temporaryMessageIdsTableName;
    NSString *_randomIdsTableName;
    NSString *_selfDestructTableName;
    NSString *_encryptedConversationIdsTableName;
    NSString *_messageIndexTableName;
    NSString *_secretMediaAttributesTableName;
    NSString *_mediaCacheInvalidationTableName;
    NSString *_fileDeletionTableName;
    NSString *_secretPeerOutgoingTableName;
    NSString *_secretPeerOutgoingResendTableName;
    NSString *_secretPeerIncomingTableName;
    NSString *_secretPeerIncomingEncryptedTableName;
    NSString *_sharedMediaCacheTableName;
    NSString *_sharedMediaIndexBuiltTableName;
    NSString *_sharedMediaIndexDownloadedTableName;
    NSString *_botInfoTableName;
    TGNotificationPrivacyAccountSetting *_privacySettings;
    TGTimer *_selfDestructTimer;
    TGTimer *_mediaCleanupTimer;
    TGTimer *_deletionTickTimer;
    TGTimer *_updateMuteTimer;
    CDStruct_09df7c84 _cachedDatabaseState;
}

+ (id)instance;
+ (void)setLiveUnreadCountDispatchPath:(id)arg1;
+ (void)setLiveBroadcastMessagesDispatchPath:(id)arg1;
+ (void)setLiveMessagesDispatchPath:(id)arg1;
+ (void)setUpgradingBlock:(CDUnknownBlockType)arg1;
+ (void)setPasswordRequiredBlock:(CDUnknownBlockType)arg1;
+ (void)setDatabaseName:(id)arg1;
@property(nonatomic) _Bool deletionInProgress; // @synthesize deletionInProgress=_deletionInProgress;
@property(retain, nonatomic) TGTimer *updateMuteTimer; // @synthesize updateMuteTimer=_updateMuteTimer;
@property(retain, nonatomic) TGTimer *deletionTickTimer; // @synthesize deletionTickTimer=_deletionTickTimer;
@property(retain, nonatomic) TGTimer *mediaCleanupTimer; // @synthesize mediaCleanupTimer=_mediaCleanupTimer;
@property(retain, nonatomic) TGTimer *selfDestructTimer; // @synthesize selfDestructTimer=_selfDestructTimer;
@property(nonatomic) int userLinksVersion; // @synthesize userLinksVersion=_userLinksVersion;
@property(nonatomic) _Bool contactListPreloaded; // @synthesize contactListPreloaded=_contactListPreloaded;
@property(retain, nonatomic) TGNotificationPrivacyAccountSetting *privacySettings; // @synthesize privacySettings=_privacySettings;
@property(nonatomic) int localUserId; // @synthesize localUserId=_localUserId;
@property(nonatomic) int nextLocalMid; // @synthesize nextLocalMid=_nextLocalMid;
@property(nonatomic) int serviceEncryptedConversationCount; // @synthesize serviceEncryptedConversationCount=_serviceEncryptedConversationCount;
@property(nonatomic) int serviceLatestSynchronizedQtsKey; // @synthesize serviceLatestSynchronizedQtsKey=_serviceLatestSynchronizedQtsKey;
@property(nonatomic) int serviceLatestSynchronizedMidKey; // @synthesize serviceLatestSynchronizedMidKey=_serviceLatestSynchronizedMidKey;
@property(nonatomic) int serviceContactListStateKey; // @synthesize serviceContactListStateKey=_serviceContactListStateKey;
@property(nonatomic) int servicePtsKey; // @synthesize servicePtsKey=_servicePtsKey;
@property(nonatomic) int serviceLastMidKey; // @synthesize serviceLastMidKey=_serviceLastMidKey;
@property(nonatomic) int serviceLastCleanTimeKey; // @synthesize serviceLastCleanTimeKey=_serviceLastCleanTimeKey;
@property(retain, nonatomic) NSString *botInfoTableName; // @synthesize botInfoTableName=_botInfoTableName;
@property(retain, nonatomic) NSString *sharedMediaIndexDownloadedTableName; // @synthesize sharedMediaIndexDownloadedTableName=_sharedMediaIndexDownloadedTableName;
@property(retain, nonatomic) NSString *sharedMediaIndexBuiltTableName; // @synthesize sharedMediaIndexBuiltTableName=_sharedMediaIndexBuiltTableName;
@property(retain, nonatomic) NSString *sharedMediaCacheTableName; // @synthesize sharedMediaCacheTableName=_sharedMediaCacheTableName;
@property(retain, nonatomic) NSString *secretPeerIncomingEncryptedTableName; // @synthesize secretPeerIncomingEncryptedTableName=_secretPeerIncomingEncryptedTableName;
@property(retain, nonatomic) NSString *secretPeerIncomingTableName; // @synthesize secretPeerIncomingTableName=_secretPeerIncomingTableName;
@property(retain, nonatomic) NSString *secretPeerOutgoingResendTableName; // @synthesize secretPeerOutgoingResendTableName=_secretPeerOutgoingResendTableName;
@property(retain, nonatomic) NSString *secretPeerOutgoingTableName; // @synthesize secretPeerOutgoingTableName=_secretPeerOutgoingTableName;
@property(retain, nonatomic) NSString *fileDeletionTableName; // @synthesize fileDeletionTableName=_fileDeletionTableName;
@property(retain, nonatomic) NSString *mediaCacheInvalidationTableName; // @synthesize mediaCacheInvalidationTableName=_mediaCacheInvalidationTableName;
@property(retain, nonatomic) NSString *secretMediaAttributesTableName; // @synthesize secretMediaAttributesTableName=_secretMediaAttributesTableName;
@property(retain, nonatomic) NSString *messageIndexTableName; // @synthesize messageIndexTableName=_messageIndexTableName;
@property(retain, nonatomic) NSString *encryptedConversationIdsTableName; // @synthesize encryptedConversationIdsTableName=_encryptedConversationIdsTableName;
@property(retain, nonatomic) NSString *selfDestructTableName; // @synthesize selfDestructTableName=_selfDestructTableName;
@property(retain, nonatomic) NSString *randomIdsTableName; // @synthesize randomIdsTableName=_randomIdsTableName;
@property(retain, nonatomic) NSString *temporaryMessageIdsTableName; // @synthesize temporaryMessageIdsTableName=_temporaryMessageIdsTableName;
@property(retain, nonatomic) NSString *userLinksTableName; // @synthesize userLinksTableName=_userLinksTableName;
@property(retain, nonatomic) NSString *blockedUsersTableName; // @synthesize blockedUsersTableName=_blockedUsersTableName;
@property(retain, nonatomic) NSString *serverAssetsTableName; // @synthesize serverAssetsTableName=_serverAssetsTableName;
@property(retain, nonatomic) NSString *localFilesTableName; // @synthesize localFilesTableName=_localFilesTableName;
@property(retain, nonatomic) NSString *storedFilesTableName; // @synthesize storedFilesTableName=_storedFilesTableName;
@property(retain, nonatomic) NSString *videosTableName; // @synthesize videosTableName=_videosTableName;
@property(retain, nonatomic) NSString *assetsTableName; // @synthesize assetsTableName=_assetsTableName;
@property(retain, nonatomic) NSString *peerHistoryHolesTableName; // @synthesize peerHistoryHolesTableName=_peerHistoryHolesTableName;
@property(retain, nonatomic) NSString *futureActionsTableName; // @synthesize futureActionsTableName=_futureActionsTableName;
@property(retain, nonatomic) NSString *outgoingMessagesTableName; // @synthesize outgoingMessagesTableName=_outgoingMessagesTableName;
@property(retain, nonatomic) NSString *peerProfilePhotosTableName; // @synthesize peerProfilePhotosTableName=_peerProfilePhotosTableName;
@property(retain, nonatomic) NSString *peerPropertiesTableName; // @synthesize peerPropertiesTableName=_peerPropertiesTableName;
@property(retain, nonatomic) NSString *actionQueueTableName; // @synthesize actionQueueTableName=_actionQueueTableName;
@property(retain, nonatomic) NSString *contactListTableName; // @synthesize contactListTableName=_contactListTableName;
@property(retain, nonatomic) NSString *conversationMediaTableName; // @synthesize conversationMediaTableName=_conversationMediaTableName;
@property(retain, nonatomic) NSString *messagesTableName; // @synthesize messagesTableName=_messagesTableName;
@property(retain, nonatomic) NSString *channelHistoryPtsTableName; // @synthesize channelHistoryPtsTableName=_channelHistoryPtsTableName;
@property(retain, nonatomic) NSString *channelReadHistoryTableName; // @synthesize channelReadHistoryTableName=_channelReadHistoryTableName;
@property(retain, nonatomic) NSString *channelLeaveTableName; // @synthesize channelLeaveTableName=_channelLeaveTableName;
@property(retain, nonatomic) NSString *channelDeleteMessagesTableName; // @synthesize channelDeleteMessagesTableName=_channelDeleteMessagesTableName;
@property(retain, nonatomic) NSString *channelMessageUnimportantGroupsTableName; // @synthesize channelMessageUnimportantGroupsTableName=_channelMessageUnimportantGroupsTableName;
@property(retain, nonatomic) NSString *channelMessageUnimportantHolesTableName; // @synthesize channelMessageUnimportantHolesTableName=_channelMessageUnimportantHolesTableName;
@property(retain, nonatomic) NSString *channelMessageHolesTableName; // @synthesize channelMessageHolesTableName=_channelMessageHolesTableName;
@property(retain, nonatomic) NSString *channelMessagesRandomIdTableName; // @synthesize channelMessagesRandomIdTableName=_channelMessagesRandomIdTableName;
@property(retain, nonatomic) NSString *channelMessageTagsTableName; // @synthesize channelMessageTagsTableName=_channelMessageTagsTableName;
@property(retain, nonatomic) NSString *channelMessagesTableName; // @synthesize channelMessagesTableName=_channelMessagesTableName;
@property(retain, nonatomic) NSString *channelPendingMessagesTableName; // @synthesize channelPendingMessagesTableName=_channelPendingMessagesTableName;
@property(retain, nonatomic) NSString *channelCachedDataTableName; // @synthesize channelCachedDataTableName=_channelCachedDataTableName;
@property(retain, nonatomic) NSString *channelListTableName; // @synthesize channelListTableName=_channelListTableName;
@property(retain, nonatomic) NSString *broadcastConversationListTableName; // @synthesize broadcastConversationListTableName=_broadcastConversationListTableName;
@property(retain, nonatomic) NSString *conversationListTableName; // @synthesize conversationListTableName=_conversationListTableName;
@property(retain, nonatomic) NSString *usersTableName; // @synthesize usersTableName=_usersTableName;
@property(retain, nonatomic) NSString *serviceTableName; // @synthesize serviceTableName=_serviceTableName;
@property(nonatomic) int schemaVersion; // @synthesize schemaVersion=_schemaVersion;
@property(nonatomic) CDStruct_09df7c84 cachedDatabaseState; // @synthesize cachedDatabaseState=_cachedDatabaseState;
@property(retain, nonatomic) FMDatabase *filesDatabase; // @synthesize filesDatabase=_filesDatabase;
@property(retain, nonatomic) FMDatabase *indexDatabase; // @synthesize indexDatabase=_indexDatabase;
@property(retain, nonatomic) FMDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) NSString *indexDatabasePath; // @synthesize indexDatabasePath=_indexDatabasePath;
@property(retain, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(nonatomic) double timeDifferenceFromUTC; // @synthesize timeDifferenceFromUTC=_timeDifferenceFromUTC;
@property(copy, nonatomic) CDUnknownBlockType cleanupEverythingBlock; // @synthesize cleanupEverythingBlock=_cleanupEverythingBlock;
@property(copy, nonatomic) CDUnknownBlockType messageCleanupBlock; // @synthesize messageCleanupBlock=_messageCleanupBlock;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)evaluatedDiskCacheStats;
- (id)diskCacheStats:(id)arg1;
- (id)mergePeerData:(id)arg1 rhs:(id)arg2;
- (id)channelMediaIndex:(id)arg1;
- (id)advancedMediaIndex:(id)arg1;
- (id)genericMediaIndex:(id)arg1;
- (id)channelMediaWithMaxTagSortKey:(id)arg1 limit:(int)arg2 indexHolder:(id)arg3;
- (id)genericAdvancedMediaWithMaxMessageId:(int)arg1 limit:(int)arg2 indexHolder:(id)arg3;
- (id)genericMediaWithMaxMessageId:(int)arg1 limit:(int)arg2 indexHolder:(id)arg3;
- (void)processMessageMediaForIndex:(id)arg1 messageId:(int)arg2 peerId:(long long)arg3 dataByPeerId:(id)arg4 indexHolder:(id)arg5;
- (id)channelHistoryPtsForPeerId:(long long)arg1;
- (void)updateHistoryPtsForPeerId:(long long)arg1 pts:(int)arg2;
- (int)_channelHistoryPtsForPeerId:(long long)arg1;
- (id)deleteSpotlightPeerIds:(id)arg1;
- (id)updateSpotlightPeersSignal:(id)arg1 createIfNotExist:(_Bool)arg2;
- (void)updateSpotlightIndex;
- (id)clearSpotlightIndexSignal;
- (void)clearSpotlightIndex:(CDUnknownBlockType)arg1;
- (id)spotlightIndexDomain;
- (void)_dropChannels;
- (id)modifyChannel:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (id)modify:(CDUnknownBlockType)arg1;
- (id)_channelCachedDataSync:(long long)arg1;
- (id)channelCachedData:(long long)arg1;
- (void)updateChannelCachedData:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (id)enqueuedLeaveChannels;
- (void)confirmChannelLeaved:(id)arg1;
- (void)enqueueLeaveChannel:(long long)arg1;
- (id)enqueuedDeleteChannelMessages;
- (id)enqueuedReadChannelMessages;
- (void)confirmChannelHistoryRead:(id)arg1;
- (void)enqueueReadChannelHistory:(long long)arg1;
- (void)confirmChannelMessagesDeleted:(id)arg1;
- (void)enqueueDeleteChannelMessages:(long long)arg1 messageIds:(id)arg2;
- (id)channelList;
- (id)areChannelsSynchronized;
- (id)loadChannels:(id)arg1;
- (_Bool)_channelExists:(long long)arg1;
- (id)existingChannel:(long long)arg1;
- (void)channelEarlierMessage:(long long)arg1 messageId:(int)arg2 timestamp:(int)arg3 important:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)nextChannelIncomingMessageKey:(long long)arg1 messageId:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)closestChannelMessageKey:(long long)arg1 messageId:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)channelMessageExists:(long long)arg1 messageId:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)channelMessages:(long long)arg1 maxTransparentSortKey:(CDStruct_08fb5524)arg2 count:(unsigned long long)arg3 important:(_Bool)arg4 mode:(int)arg5 completion:(CDUnknownBlockType)arg6;
- (id)_channelList;
- (id)_loadChannelList;
- (id)_loadChannelUnimportantGroupsWithMinSortKey:(CDStruct_08fb5524)arg1 maxTransparentSortKey:(CDStruct_08fb5524)arg2 count:(unsigned long long)arg3;
- (void)_deleteMessageFromUnimportantMessageGroup:(long long)arg1 messageId:(int)arg2 removedMessages:(id)arg3 updatedMessages:(id)arg4;
- (void)_addChannelUnimportantMessageGroup:(long long)arg1 maxId:(int)arg2 maxTimestamp:(int)arg3 minId:(int)arg4 minTimestamp:(int)arg5 count:(int)arg6 filled:(_Bool)arg7 addedMessages:(id)arg8 removedMessages:(id)arg9 addedUnimportantHoles:(id)arg10 removedUnimportantHoles:(id)arg11 updatedMessages:(id)arg12;
- (id)_loadChannelHolesWithMinSortKey:(CDStruct_08fb5524)arg1 maxTransparentSortKey:(CDStruct_08fb5524)arg2 unimportant:(_Bool)arg3 count:(unsigned long long)arg4;
- (void)_removeChannelHole:(long long)arg1 hole:(id)arg2 unimportant:(_Bool)arg3 addedMessages:(id)arg4 removedMessages:(id)arg5;
- (void)_addChannelHole:(long long)arg1 hole:(id)arg2 unimportant:(_Bool)arg3 addedMessages:(id)arg4 removedMessages:(id)arg5;
- (id)_messageIdsFromGroups:(id)arg1;
- (id)_messagesFromGroups:(id)arg1 peerId:(long long)arg2;
- (id)_messageIdsFromHoles:(id)arg1;
- (id)_messagesFromHoles:(id)arg1 peerId:(long long)arg2;
- (id)_intersectingHoles:(long long)arg1 hole:(id)arg2 unimportant:(_Bool)arg3;
- (id)_holesTableName:(_Bool)arg1;
- (void)channelPts:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateChannelMessageSortKeyAndDispatch:(long long)arg1 previousSortKey:(CDStruct_08fb5524)arg2 updatedSortKey:(CDStruct_08fb5524)arg3 updatedMessage:(id)arg4;
- (void)addMessagesToChannelAndDispatch:(long long)arg1 messages:(id)arg2 deletedMessages:(id)arg3 holes:(id)arg4 pts:(int)arg5;
- (void)addTrailingHoleToChannelAndDispatch:(long long)arg1 messages:(id)arg2 pts:(int)arg3 importantUnreadCount:(int)arg4 unimportantUnreadCount:(int)arg5 maxReadId:(int)arg6;
- (void)addMessagesToChannel:(long long)arg1 messages:(id)arg2 deleteMessages:(id)arg3 unimportantGroups:(id)arg4 addedHoles:(id)arg5 removedHoles:(id)arg6 removedUnimportantHoles:(id)arg7 updatedMessageSortKeys:(id)arg8 returnGroups:(_Bool)arg9 keepUnreadCounters:(_Bool)arg10 changedMessages:(CDUnknownBlockType)arg11;
- (id)_loadChannelImportantMessagesWithMinSortKey:(CDStruct_08fb5524)arg1 maxSortKey:(CDStruct_08fb5524)arg2 count:(unsigned long long)arg3;
- (id)_loadChannelMessagesWithMinSortKey:(CDStruct_08fb5524)arg1 maxSortKey:(CDStruct_08fb5524)arg2 count:(unsigned long long)arg3;
- (id)_topChannelMessage:(long long)arg1 important:(_Bool)arg2;
- (CDStruct_08fb5524)_knownChannelEarlierRemoteMessageSortKey:(long long)arg1 important:(_Bool)arg2;
- (CDStruct_08fb5524)_knownChannelEarlierMessageSortKey:(long long)arg1 maxId:(int)arg2;
- (void)updateChannelRead:(long long)arg1 maxReadId:(int)arg2;
- (void)updateChannelReadState:(long long)arg1 maxReadId:(int)arg2 unreadImportantCount:(int)arg3 unreadUnimportantCount:(int)arg4;
- (void)updateChannelUsername:(long long)arg1 username:(id)arg2;
- (void)updateChannelAbout:(long long)arg1 about:(id)arg2;
- (void)updateChannelPostAsChannel:(long long)arg1 postAsChannel:(_Bool)arg2;
- (void)updateChannelDisplayExpanded:(long long)arg1 displayExpanded:(_Bool)arg2;
- (void)updateChannelDisplayVariant:(long long)arg1 displayVariant:(int)arg2;
- (void)initializeChannel:(id)arg1;
- (void)updateChannels:(id)arg1;
- (void)storeSynchronizedChannels:(id)arg1;
- (void)_updateChannelConversation:(long long)arg1;
- (void)_updateChannelConversationSortKeys:(long long)arg1 importantMessage:(id)arg2 unimportantMessage:(id)arg3 addImportantUnread:(int)arg4 addUnimportantUnread:(int)arg5;
- (id)_loadChannelMessage:(long long)arg1 messageId:(int)arg2;
- (id)_updateChannelConversation:(long long)arg1 conversation:(id)arg2;
- (id)_loadChannelsWithLowerBound:(CDStruct_8c593122)arg1 upperBound:(CDStruct_8c593122)arg2 count:(unsigned long long)arg3;
- (id)_loadChannelConversation:(long long)arg1;
- (void)storeBotReplyMarkupManuallyHidden:(id)arg1 forPeerId:(long long)arg2 manuallyHidden:(_Bool)arg3;
- (void)storeBotReplyMarkupActivated:(id)arg1 forPeerId:(long long)arg2;
- (void)storeBotReplyMarkup:(id)arg1 hideMarkupAuthorId:(int)arg2 forPeerId:(long long)arg3 messageId:(int)arg4;
- (void)filterBotReplyMarkups:(long long)arg1 allowedAuthorIds:(id)arg2;
- (id)botReplyMarkupForPeerId:(long long)arg1;
- (id)signalBotReplyMarkupForPeerId:(long long)arg1;
- (void)storeBotInfo:(id)arg1 forUserId:(int)arg2;
- (id)botInfoForUserId:(int)arg1;
- (void)clearCachedMedia;
- (void)setSharedMediaIndexDownloadedForPeerId:(long long)arg1 itemType:(int)arg2;
- (id)_cachedMediaMessageForId:(int)arg1;
- (void)cachedMediaForPeerId:(long long)arg1 itemType:(int)arg2 limit:(unsigned long long)arg3 important:(_Bool)arg4 completion:(CDUnknownBlockType)arg5 buildIndex:(_Bool)arg6 isCancelled:(CDUnknownBlockType)arg7;
- (void)_buildCacheForPeerId:(long long)arg1 isCancelled:(CDUnknownBlockType)arg2;
- (_Bool)_indexDownloadedForPeerId:(long long)arg1 itemType:(int)arg2;
- (_Bool)_cacheBuiltForPeerId:(long long)arg1;
- (void)cacheMediaForPeerId:(long long)arg1 messages:(id)arg2;
- (void)removeMediaFromCacheForPeerId:(long long)arg1;
- (void)removeMediaFromCacheForPeerId:(long long)arg1 messageIds:(id)arg2;
- (void)processAndScheduleMute;
- (void)deletePeerIncomingEncryptedActions:(long long)arg1 actionIds:(id)arg2;
- (void)deletePeerIncomingActions:(long long)arg1 actionIds:(id)arg2;
- (void)setCurrentPeerResendSeqIn:(long long)arg1 seqIn:(int)arg2;
- (_Bool)currentPeerResendSeqIn:(long long)arg1 seqIn:(int *)arg2;
- (void)applyPeerSeqIn:(long long)arg1 seqIn:(int)arg2;
- (int)currentPeerSentSeqOut:(long long)arg1;
- (void)confirmPeerSeqOut:(long long)arg1 seqOut:(int)arg2;
- (void)applyPeerSeqOut:(long long)arg1 seqOut:(int)arg2;
- (id)_dequeuePeerIncomingEncryptedActions:(long long)arg1;
- (void)dequeuePeerIncomingActions:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)enqueuePeerIncomingEncryptedActions:(long long)arg1 actions:(id)arg2;
- (void)enqueuePeerIncomingActions:(long long)arg1 actions:(id)arg2;
- (void)deletePeerOutgoingActions:(long long)arg1 actionIds:(id)arg2;
- (void)enqueuePeerOutgoingResendActions:(long long)arg1 fromSeq:(int)arg2 toSeq:(int)arg3 completion:(CDUnknownBlockType)arg4;
- (void)deletePeerOutgoingResendActions:(long long)arg1 actionIds:(id)arg2;
- (id)_dequeuePeerOutgoingResendActions:(long long)arg1;
- (void)_enqueuePeerOutgoingResendActions:(long long)arg1 actions:(id)arg2;
- (void)dequeuePeerOutgoingActions:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)enqueuePeerOutgoingAction:(long long)arg1 action:(id)arg2 useSeq:(_Bool)arg3 seqOut:(int *)arg4 seqIn:(int *)arg5 actionId:(int *)arg6;
- (int)peerNextSeqOut:(long long)arg1;
- (void)peersWithOutgoingAndIncomingActions:(CDUnknownBlockType)arg1;
- (void)loadAllSercretChatPeerIds:(CDUnknownBlockType)arg1;
- (unsigned long long)peerLayer:(long long)arg1;
- (void)setPeerLayer:(long long)arg1 layer:(unsigned long long)arg2;
- (unsigned long long)lastReportedToPeerLayer:(long long)arg1;
- (void)setLastReportedToPeerLayer:(long long)arg1 layer:(unsigned long long)arg2;
- (id)_filePathForDeletionOfMedia:(id)arg1;
- (void)_processDeletionQueue;
- (void)_enqueueFilesToDelete:(id)arg1;
- (void)_beginBackgroundIndexing;
- (id)filePathForDocument:(id)arg1;
- (id)filePathForAudio:(id)arg1;
- (id)filePathForVideoId:(long long)arg1 local:(_Bool)arg2;
- (void)processAndScheduleMediaCleanup;
- (void)updateLastUseDateForMediaType:(int)arg1 mediaId:(long long)arg2 messageId:(int)arg3;
- (void)_updateLastUseDateRecords:(const vector_c120cb5c *)arg1;
- (void)findAllMediaMessages:(CDUnknownBlockType)arg1 isCancelled:(CDUnknownBlockType)arg2;
- (int)secretMessageFlags:(int)arg1;
- (void)raiseSecretMessageFlagsByMessageId:(int)arg1 flagsToRise:(int)arg2;
- (void)raiseSecretMessageFlagsByRandomId:(long long)arg1 flagsToRise:(int)arg2;
- (double)messageCountdownLocalTime:(int)arg1 enqueueIfNotQueued:(_Bool)arg2 initiatedCountdown:(_Bool *)arg3;
- (void)initiateSelfDestructForMessageIds:(id)arg1;
- (void)processAndScheduleSelfDestruct;
- (void)_scheduleSelfDestruct:(vector_e44c44be *)arg1 referenceDate:(int)arg2;
- (void)_filterConversationIdsByMessageLifetime:(map_af4b726e *)arg1;
- (void)setMessageLifetimeForPeerId:(long long)arg1 encryptedConversationId:(long long)arg2 messageLifetime:(int)arg3 writeToActionQueue:(_Bool)arg4;
- (int)messageLifetimeForPeerId:(long long)arg1;
- (void)addBroadcastConversation:(id)arg1 userIds:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)hasBroadcastConversations;
- (long long)activeEncryptedPeerIdForUserId:(int)arg1;
- (void)filterExistingRandomIds:(set_1e05eb4d *)arg1;
- (_Bool)encryptedConversationIsCreator:(long long)arg1;
- (int)encryptedParticipantIdForConversationId:(long long)arg1;
- (void)storeEncryptionKeyForConversationId:(long long)arg1 key:(id)arg2 keyFingerprint:(long long)arg3 firstSeqOut:(int)arg4;
- (void)discardEncryptionKeysForConversationId:(long long)arg1 beforeSeqOut:(int)arg2;
- (int)currentEncryptionKeyUseCount:(long long)arg1;
- (id)encryptionKeySignatureForConversationId:(long long)arg1;
- (id)encryptionKeyForConversationId:(long long)arg1 requestedKeyFingerprint:(long long)arg2 outKeyFingerprint:(long long *)arg3;
- (long long)encryptedConversationAccessHash:(long long)arg1;
- (long long)encryptedConversationIdForPeerId:(long long)arg1;
- (long long)peerIdForEncryptedConversationId:(long long)arg1 createIfNecessary:(_Bool)arg2;
- (long long)peerIdForEncryptedConversationId:(long long)arg1;
- (void)clearServerAssetData;
- (void)storeServerAssetData:(id)arg1 attachment:(id)arg2;
- (id)loadServerAssetData:(id)arg1;
- (void)checkIfLatestQtsIsNotApplied:(CDUnknownBlockType)arg1;
- (void)checkIfLatestMessageIdIsNotApplied:(CDUnknownBlockType)arg1;
- (void)updateLatestQts:(int)arg1 applied:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateLatestMessageId:(int)arg1 applied:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)clearPeerProfilePhotos:(long long)arg1;
- (void)clearPeerProfilePhotos;
- (void)deletePeerProfilePhotos:(long long)arg1 imageIds:(id)arg2;
- (void)loadPeerProfilePhotos:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (id)addPeerProfilePhotos:(long long)arg1 photosArray:(id)arg2;
- (void)storePeerProfilePhotos:(long long)arg1 photosArray:(id)arg2 append:(_Bool)arg3;
- (int)loadBlockedDate:(long long)arg1;
- (void)loadBlockedList:(CDUnknownBlockType)arg1;
- (void)replaceBlockedList:(id)arg1;
- (void)loadPeerIsBlocked:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_filterPeersAreBlockedSync:(set_8fb532d1 *)arg1;
- (void)setPeerIsBlocked:(long long)arg1 blocked:(_Bool)arg2 writeToActionQueue:(_Bool)arg3;
- (void)checkIfAssetIsStored:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setAssetIsStored:(id)arg1;
- (id)excludeMessagesWithHolesFromArray:(id)arg1 peerId:(long long)arg2 aroundMessageId:(int)arg3;
- (_Bool)conversationContainsHole:(long long)arg1 minMessageId:(int)arg2 maxMessageId:(int)arg3;
- (void)fillConversationHistoryHole:(long long)arg1 indexSet:(id)arg2;
- (void)addConversationHistoryHoleToLoadedLaterMessages:(long long)arg1 maxMessageId:(int)arg2;
- (void)addConversationHistoryHole:(long long)arg1 minMessageId:(int)arg2 maxMessageId:(int)arg3;
- (id)_historyHolesInConversation:(long long)arg1;
- (void)clearPeerNotificationSettings:(_Bool)arg1;
- (id)conversationCustomPropertySync:(long long)arg1 name:(int)arg2;
- (void)conversationCustomProperty:(long long)arg1 name:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setConversationCustomProperty:(long long)arg1 name:(int)arg2 value:(id)arg3;
- (void)storePeerNotificationSettings:(long long)arg1 soundId:(int)arg2 muteUntil:(int)arg3 previewText:(_Bool)arg4 photoNotificationsEnabled:(_Bool)arg5 writeToActionQueue:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;
- (void)storePeerMinMediaMid:(long long)arg1 minMediaMid:(int)arg2;
- (void)storePeerMinMid:(long long)arg1 minMid:(int)arg2;
- (void)storeMinAutosaveMessageIdForConversation:(long long)arg1 mid:(int)arg2;
- (int)minAutosaveMessageIdForConversation:(long long)arg1;
- (set_8fb532d1)filterPeerPhotoNotificationsEnabled:(const vector_562b947f *)arg1;
- (void)setPeerPhotoNotificationsEnabled:(long long)arg1 photoNotificationsEnabled:(_Bool)arg2;
- (_Bool)loadPeerPhotoNotificationsEnabled:(long long)arg1;
- (void)storePeerCustomSettings:(long long)arg1 customSettings:(CDStruct_b31ca263)arg2;
- (CDStruct_b31ca263)loadPeerCustomSettings:(long long)arg1;
- (_Bool)isPeerMuted:(long long)arg1;
- (void)loadPeerNotificationSettings:(long long)arg1 soundId:(int *)arg2 muteUntil:(int *)arg3 previewText:(_Bool *)arg4 photoNotificationsEnabled:(_Bool *)arg5 notFound:(_Bool *)arg6;
- (int)loadPeerMinMediaMid:(long long)arg1;
- (int)loadPeerMinMid:(long long)arg1;
- (id)loadFutureAction:(long long)arg1 type:(int)arg2;
- (id)loadFutureActionsWithType:(int)arg1;
- (id)loadOneFutureAction;
- (void)removeFutureActionsWithType:(int)arg1 uniqueIds:(id)arg2;
- (void)removeFutureAction:(long long)arg1 type:(int)arg2 randomId:(int)arg3;
- (void)storeFutureActions:(id)arg1;
- (void)loadQueuedActions:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)confirmQueuedActions:(id)arg1 requireFullMatch:(_Bool)arg2;
- (void)storeQueuedActions:(id)arg1;
- (int)mediaCountInConversation:(long long)arg1;
- (void)loadLastRemoteMediaMessageIdInConversation:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addMediaToConversation:(long long)arg1 messages:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)loadMediaInConversation:(long long)arg1 maxMid:(int)arg2 maxLocalMid:(int)arg3 maxDate:(int)arg4 limit:(int)arg5 count:(int *)arg6 important:(_Bool)arg7;
- (id)loadMediaInConversation:(long long)arg1 atMessageId:(int)arg2 limitAfter:(int)arg3 count:(int *)arg4 important:(_Bool)arg5;
- (void)loadMediaPositionInConversation:(long long)arg1 messageId:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readHistory:(long long)arg1 includeOutgoing:(_Bool)arg2 populateActionQueue:(_Bool)arg3 minRemoteMid:(int)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readHistoryOptimized:(long long)arg1 populateActionQueue:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)storeConversationState:(long long)arg1 state:(id)arg2 replyMessageId:(int)arg3 forwardMessageDescs:(id)arg4;
- (id)loadConversationState:(long long)arg1 replyMessageId:(int *)arg2 forwardMessageDescs:(id *)arg3;
- (void)markMessagesAsReadInConversation:(long long)arg1 maxDate:(int)arg2 referenceDate:(int)arg3;
- (void)markMessagesAsReadInConversation:(long long)arg1 outgoing:(_Bool)arg2 maxMessageId:(int)arg3;
- (void)markMessagesAsRead:(id)arg1;
- (void)clearConversation:(long long)arg1 populateActionQueue:(_Bool)arg2 clearOnly:(_Bool)arg3;
- (void)clearConversation:(long long)arg1 populateActionQueue:(_Bool)arg2;
- (void)deleteConversation:(long long)arg1 populateActionQueue:(_Bool)arg2;
- (void)deleteMessages:(id)arg1 populateActionQueue:(_Bool)arg2 fillMessagesByConversationId:(id)arg3 keepDate:(_Bool)arg4 populateActionQueueIfIncoming:(_Bool)arg5;
- (void)deleteMessages:(id)arg1 populateActionQueue:(_Bool)arg2 fillMessagesByConversationId:(id)arg3;
- (void)updateMessageRangesPts:(long long)arg1 messageRanges:(id)arg2 pts:(int)arg3;
- (void)updateMessageViews:(long long)arg1 messageIdToViews:(id)arg2;
- (void)updateMessages:(id)arg1;
- (void)updateMessage:(int)arg1 peerId:(long long)arg2 withMessage:(id)arg3;
- (void)updateMessage:(int)arg1 peerId:(long long)arg2 flags:(const vector_2fa3d354 *)arg3 media:(id)arg4 dispatch:(_Bool)arg5;
- (id)messageIdsInConversation:(long long)arg1;
- (void)randomIdsForMessageIds:(id)arg1 mapping:(map_ec2b8c91 *)arg2;
- (void)messageIdsForRandomIds:(id)arg1 mapping:(map_af4b726e *)arg2;
- (long long)randomIdForMessageId:(int)arg1;
- (int)messageIdForRandomId:(long long)arg1;
- (void)messageIdsForTempIds:(id)arg1 mapping:(map_af4b726e *)arg2;
- (void)removeTempIds:(id)arg1;
- (void)tempIdsForLocalMessages:(CDUnknownBlockType)arg1;
- (void)setTempIdForMessageId:(int)arg1 peerId:(long long)arg2 tempId:(long long)arg3;
- (void)addMessagesToConversation:(id)arg1 conversationId:(long long)arg2 updateConversation:(id)arg3 dispatch:(_Bool)arg4 countUnread:(_Bool)arg5 updateDates:(_Bool)arg6;
- (void)addMessagesToConversation:(id)arg1 conversationId:(long long)arg2 updateConversation:(id)arg3 dispatch:(_Bool)arg4 countUnread:(_Bool)arg5;
- (id)generateLocalMids:(int)arg1;
- (void)replaceContentPropertiesInMessageWithId:(int)arg1 contentProperties:(id)arg2;
- (void)replaceMediaInMessagesWithLocalMediaId:(int)arg1 media:(id)arg2;
- (void)loadMessagesFromConversationDownwards:(long long)arg1 minMid:(int)arg2 minLocalMid:(int)arg3 minDate:(int)arg4 limit:(int)arg5 completion:(CDUnknownBlockType)arg6;
- (void)loadMessagesFromConversation:(long long)arg1 maxMid:(int)arg2 maxDate:(int)arg3 maxLocalMid:(int)arg4 atMessageId:(int)arg5 limit:(int)arg6 extraUnread:(_Bool)arg7 completion:(CDUnknownBlockType)arg8;
- (void)loadUnreadMessagesHeadFromConversation:(long long)arg1 limit:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (id)loadMessageWithMid:(int)arg1 peerId:(long long)arg2;
- (id)loadMediaMessageWithMid:(int)arg1;
- (id)loadPhonebookContacts:(_Bool)arg1;
- (id)phonebookContactByPhoneId:(int)arg1;
- (void)replacePhonebookContact:(int)arg1 phonebookContact:(id)arg2 generateContactBindings:(_Bool)arg3;
- (id)phonebookContactByNativeId:(int)arg1;
- (void)replacePhonebookContacts:(id)arg1;
- (id)contactBindings;
- (id)contactBindingWithId:(int)arg1;
- (void)replaceContactBindings:(id)arg1;
- (void)deleteContactBinding:(int)arg1;
- (void)addContactBindings:(id)arg1;
- (void)deleteRemoteContactUids:(id)arg1;
- (void)addRemoteContactUids:(id)arg1;
- (void)replaceRemoteContactUids:(id)arg1;
- (_Bool)uidIsRemoteContact:(int)arg1;
- (_Bool)haveRemoteContactUids;
- (void)loadRemoteContactUidsContactIds:(map_5f2c8fba *)arg1;
- (void)loadRemoteContactUids:(vector_562b947f *)arg1;
- (id)loadContactUsers;
- (id)customProperty:(id)arg1;
- (void)customProperty:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setCustomProperty:(id)arg1 value:(id)arg2;
- (int)unreadCountForConversation:(long long)arg1;
- (int)cachedUnreadCount;
- (CDStruct_09df7c84)databaseState;
- (void)setUnreadCount:(int)arg1;
- (void)setPts:(int)arg1 date:(int)arg2 seq:(int)arg3 qts:(int)arg4 unreadCount:(int)arg5;
- (void)applyPts:(int)arg1 date:(int)arg2 seq:(int)arg3 qts:(int)arg4 unreadCount:(int)arg5;
- (void)markAllPendingMessagesAsFailed;
- (void)deleteMessagesFromIndex:(id)arg1;
- (CDUnknownBlockType)searchMessages:(id)arg1 peerId:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)searchPhonebookContacts:(id)arg1 contacts:(id)arg2;
- (void)buildTransliterationCache;
- (CDUnknownBlockType)searchContacts:(id)arg1 ignoreUid:(int)arg2 searchPhonebook:(_Bool)arg3 completion:(CDUnknownBlockType)arg4 internalIsCancelled:(CDUnknownBlockType)arg5;
- (CDUnknownBlockType)searchContacts:(id)arg1 ignoreUid:(int)arg2 searchPhonebook:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)searchDialogs:(id)arg1 ignoreUid:(int)arg2 partial:(_Bool)arg3 completion:(CDUnknownBlockType)arg4 isCancelled:(CDUnknownBlockType)arg5;
- (void)actualizeConversation:(long long)arg1 dispatch:(_Bool)arg2 conversation:(id)arg3 forceUpdate:(_Bool)arg4 addUnreadCount:(int)arg5 addServiceUnreadCount:(int)arg6 keepDate:(_Bool)arg7;
- (void)actualizeConversation:(long long)arg1 dispatch:(_Bool)arg2;
- (void)storeConversationParticipantData:(long long)arg1 participantData:(id)arg2;
- (_Bool)containsConversationWithId:(long long)arg1;
- (id)loadConversationWithIdCached:(long long)arg1;
- (id)loadConversationWithId:(long long)arg1;
- (id)_listTableNameForConversationId:(long long)arg1;
- (_Bool)isConversationBroadcast:(long long)arg1;
- (long long)secretUnreadCount;
- (int)loadConversationListRemoteOffsetDate;
- (void)loadBroadcastConversationListFromDate:(int)arg1 limit:(int)arg2 excludeConversationIds:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)loadConversationListFromDate:(int)arg1 limit:(int)arg2 excludeConversationIds:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readDeactivatedConversations;
- (void)storeConversationList:(id)arg1 replace:(_Bool)arg2;
- (void)upgradeUserLinks;
- (void)clearCachedUserLinks;
- (void)storeUserLink:(int)arg1 link:(int)arg2;
- (int)loadUserLink:(int)arg1 outdated:(_Bool *)arg2;
- (shared_ptr_efc6659d)loadUsers:(const vector_562b947f *)arg1;
- (int)loadUsersOnlineCount:(id)arg1 alwaysOnlineUid:(int)arg2;
- (void)loadCachedUsersWithContactIds:(const set_8fb532d1 *)arg1 resultMap:(map_bcd462f6 *)arg2;
- (int)loadCachedPhoneIdByUid:(int)arg1;
- (id)loadUser:(int)arg1;
- (void)setLocalUserStatusPrivacyRules:(id)arg1 changedLoadedUsers:(CDUnknownBlockType)arg2;
- (void)storeUsersPresences:(map_07fedd0b *)arg1;
- (void)storeUsers:(id)arg1;
- (void)dropDatabase:(_Bool)arg1;
- (void)dropDatabase;
- (void)closeDatabase;
- (void)migrateDatabasePlaintext:(CDUnknownBlockType)arg1;
- (void)migrateDatabaseEncrypted:(CDUnknownBlockType)arg1;
- (void)rekeyDatabase:(id)arg1;
- (void)initDatabase;
- (void)_reopenIndexDatabase;
- (void)_reopenDatabase;
- (id)backedUpDatabasePaths;
- (id)_hexKey:(_Bool *)arg1;
- (_Bool)isEncryptionEnabled;
- (void)setEncryptionEnabled:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)checkIndexPassword:(id)arg1 isLegacy:(_Bool *)arg2;
- (_Bool)checkPassword:(id)arg1 isLegacy:(_Bool *)arg2;
- (_Bool)verifyPassword:(id)arg1;
- (_Bool)isCurrentIndexDatabaseEncrypted;
- (_Bool)isCurrentDatabaseEncrypted;
- (void)upgradeTables;
- (_Bool)table:(id)arg1 containsField:(id)arg2;
- (_Bool)isPasswordSet:(_Bool *)arg1;
- (void)setPassword:(id)arg1 isStrong:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)currentPassword;
- (id)documentsPath;
- (void)explainQuery:(id)arg1;
- (id)init;
- (void)dispatchOnIndexThread:(CDUnknownBlockType)arg1 synchronous:(_Bool)arg2;
- (void)dispatchOnDatabaseThreadDebug:(const char *)arg1 line:(int)arg2 block:(CDUnknownBlockType)arg3 synchronous:(_Bool)arg4;
- (_Bool)isCurrentQueueDatabaseIndexQueue;
- (id)databaseIndexQueue;
- (_Bool)isCurrentQueueDatabaseQueue;
- (id)appliedPts;
- (id)databaseQueue;

@end

