//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

@class _M_end_of_storage, _M_finish;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct GPUMatrix3x3 {
    struct GPUVector3 _field1;
    struct GPUVector3 _field2;
    struct GPUVector3 _field3;
};

struct GPUMatrix4x4 {
    struct GPUVector4 _field1;
    struct GPUVector4 _field2;
    struct GPUVector4 _field3;
    struct GPUVector4 _field4;
};

struct GPUTextureOptions {
    unsigned int minFilter;
    unsigned int magFilter;
    unsigned int wrapS;
    unsigned int wrapT;
    unsigned int internalFormat;
    unsigned int format;
    unsigned int type;
};

struct GPUVector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct GPUVector4 {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct POPAnimatorItem;

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct TGAudioBuffer {
    unsigned long long _field1;
    char *_field2;
    unsigned long long _field3;
    long long _field4;
};

struct TGServerSalt {
    int _field1;
    int _field2;
    long long _field3;
};

struct TLMetaObject;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _Hash_node<std::pair<const int, TGUser *>, false>;

struct _Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false>;

struct _Mod_range_hashing;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _Prime_rehash_policy {
    float _M_max_load_factor;
    float _M_growth_factor;
    unsigned long long _M_next_resize;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TGContactBinding *>, std::_Select1st<std::pair<const int, TGContactBinding *>>, std::less<int>, std::allocator<std::pair<const int, TGContactBinding *>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TGPhonebookContact *>, std::_Select1st<std::pair<const int, TGPhonebookContact *>>, std::less<int>, std::allocator<std::pair<const int, TGPhonebookContact *>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TGUser *>, std::_Select1st<std::pair<const int, TGUser *>>, std::less<int>, std::allocator<std::pair<const int, TGUser *>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TGUserPresence>, std::_Select1st<std::pair<const int, TGUserPresence>>, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TGVideoPartData>, std::_Select1st<std::pair<const int, TGVideoPartData>>, std::less<int>, std::allocator<std::pair<const int, TGVideoPartData>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, TLConstructedValue>, std::_Select1st<std::pair<const int, TLConstructedValue>>, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<int, std::pair<const int, double>, std::_Select1st<std::pair<const int, double>>, std::less<int>, std::allocator<std::pair<const int, double>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, float>, std::_Select1st<std::pair<const int, float>>, std::less<int>, std::allocator<std::pair<const int, float>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>, std::allocator<std::pair<const int, int>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, long long>, std::_Select1st<std::pair<const int, long long>>, std::less<int>, std::allocator<std::pair<const int, long long>>> {
    struct _Rb_tree_impl<std::less<int>, false> _field1;
};

struct _Rb_tree<int, std::pair<const int, std::pair<TGUser *, int>>, std::_Select1st<std::pair<const int, std::pair<TGUser *, int>>>, std::less<int>, std::allocator<std::pair<const int, std::pair<TGUser *, int>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<int, std::pair<const int, std::pair<int, int>>, std::_Select1st<std::pair<const int, std::pair<int, int>>>, std::less<int>, std::allocator<std::pair<const int, std::pair<int, int>>>> {
    struct _Rb_tree_impl<std::less<int>, false> _M_impl;
};

struct _Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, NSDictionary *>, std::_Select1st<std::pair<const long long, NSDictionary *>>, std::less<long long>, std::allocator<std::pair<const long long, NSDictionary *>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, NSString *>, std::_Select1st<std::pair<const long long, NSString *>>, std::less<long long>, std::allocator<std::pair<const long long, NSString *>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, TGConversation *>, std::_Select1st<std::pair<const long long, TGConversation *>>, std::less<long long>, std::allocator<std::pair<const long long, TGConversation *>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, TGPeerCustomSettings>, std::_Select1st<std::pair<const long long, TGPeerCustomSettings>>, std::less<long long>, std::allocator<std::pair<const long long, TGPeerCustomSettings>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, bool>, std::_Select1st<std::pair<const long long, bool>>, std::less<long long>, std::allocator<std::pair<const long long, bool>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, int>, std::_Select1st<std::pair<const long long, int>>, std::less<long long>, std::allocator<std::pair<const long long, int>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long>>, std::less<long long>, std::allocator<std::pair<const long long, long long>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>, std::_Select1st<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>, std::less<long long>, std::allocator<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long long, std::pair<const long long, unsigned long>, std::_Select1st<std::pair<const long long, unsigned long>>, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>> {
    struct _Rb_tree_impl<std::less<long long>, false> _M_impl;
};

struct _Rb_tree<long, std::pair<const long, UIView<TGModernView>*>, std::_Select1st<std::pair<const long, UIView<TGModernView>*>>, std::less<long>, std::allocator<std::pair<const long, UIView<TGModernView>*>>> {
    struct _Rb_tree_impl<std::less<long>, false> _M_impl;
};

struct _Rb_tree_impl<std::less<int>, false> {
    struct less<int> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_impl<std::less<long long>, false> {
    struct less<long long> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_impl<std::less<long>, false> {
    struct less<long> _M_key_compare;
    struct _Rb_tree_node_base _M_header;
    unsigned long long _M_node_count;
};

struct _Rb_tree_node_base {
    int _M_color;
    struct _Rb_tree_node_base *_M_parent;
    struct _Rb_tree_node_base *_M_left;
    struct _Rb_tree_node_base *_M_right;
};

struct _Select1st<std::pair<const int, TGUser *>>;

struct _Select1st<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>>;

struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic>;

struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>;

struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> {
    struct _Sp_counted_base<__gnu_cxx::_Lock_policy::_S_atomic> *_M_pi;
};

struct _opaque_pthread_cond_t {
    long long __sig;
    char __opaque[40];
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct allocator<std::tr1::__detail::_Hash_node<std::pair<const int, TGUser *>, false>>;

struct allocator<std::tr1::__detail::_Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false>>;

struct equal_to<int>;

struct hash<int>;

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct less<int>;

struct less<long long>;

struct less<long>;

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<int, TGContactBinding *, std::less<int>, std::allocator<std::pair<const int, TGContactBinding *>>> {
    struct _Rb_tree<int, std::pair<const int, TGContactBinding *>, std::_Select1st<std::pair<const int, TGContactBinding *>>, std::less<int>, std::allocator<std::pair<const int, TGContactBinding *>>> _M_t;
};

struct map<int, TGPhonebookContact *, std::less<int>, std::allocator<std::pair<const int, TGPhonebookContact *>>> {
    struct _Rb_tree<int, std::pair<const int, TGPhonebookContact *>, std::_Select1st<std::pair<const int, TGPhonebookContact *>>, std::less<int>, std::allocator<std::pair<const int, TGPhonebookContact *>>> _M_t;
};

struct map<int, TGUser *, std::less<int>, std::allocator<std::pair<const int, TGUser *>>> {
    struct _Rb_tree<int, std::pair<const int, TGUser *>, std::_Select1st<std::pair<const int, TGUser *>>, std::less<int>, std::allocator<std::pair<const int, TGUser *>>> _M_t;
};

struct map<int, TGUserPresence, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>> {
    struct _Rb_tree<int, std::pair<const int, TGUserPresence>, std::_Select1st<std::pair<const int, TGUserPresence>>, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>> _M_t;
};

struct map<int, TGVideoPartData, std::less<int>, std::allocator<std::pair<const int, TGVideoPartData>>> {
    struct _Rb_tree<int, std::pair<const int, TGVideoPartData>, std::_Select1st<std::pair<const int, TGVideoPartData>>, std::less<int>, std::allocator<std::pair<const int, TGVideoPartData>>> _M_t;
};

struct map<int, TLConstructedValue, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue>>> {
    struct _Rb_tree<int, std::pair<const int, TLConstructedValue>, std::_Select1st<std::pair<const int, TLConstructedValue>>, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue>>> _field1;
};

struct map<int, double, std::less<int>, std::allocator<std::pair<const int, double>>> {
    struct _Rb_tree<int, std::pair<const int, double>, std::_Select1st<std::pair<const int, double>>, std::less<int>, std::allocator<std::pair<const int, double>>> _M_t;
};

struct map<int, float, std::less<int>, std::allocator<std::pair<const int, float>>> {
    struct _Rb_tree<int, std::pair<const int, float>, std::_Select1st<std::pair<const int, float>>, std::less<int>, std::allocator<std::pair<const int, float>>> _M_t;
};

struct map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> {
    struct _Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>, std::allocator<std::pair<const int, int>>> _M_t;
};

struct map<int, long long, std::less<int>, std::allocator<std::pair<const int, long long>>> {
    struct _Rb_tree<int, std::pair<const int, long long>, std::_Select1st<std::pair<const int, long long>>, std::less<int>, std::allocator<std::pair<const int, long long>>> _field1;
};

struct map<int, std::pair<TGUser *, int>, std::less<int>, std::allocator<std::pair<const int, std::pair<TGUser *, int>>>> {
    struct _Rb_tree<int, std::pair<const int, std::pair<TGUser *, int>>, std::_Select1st<std::pair<const int, std::pair<TGUser *, int>>>, std::less<int>, std::allocator<std::pair<const int, std::pair<TGUser *, int>>>> _M_t;
};

struct map<int, std::pair<int, int>, std::less<int>, std::allocator<std::pair<const int, std::pair<int, int>>>> {
    struct _Rb_tree<int, std::pair<const int, std::pair<int, int>>, std::_Select1st<std::pair<const int, std::pair<int, int>>>, std::less<int>, std::allocator<std::pair<const int, std::pair<int, int>>>> _M_t;
};

struct map<long long, NSDictionary *, std::less<long long>, std::allocator<std::pair<const long long, NSDictionary *>>> {
    struct _Rb_tree<long long, std::pair<const long long, NSDictionary *>, std::_Select1st<std::pair<const long long, NSDictionary *>>, std::less<long long>, std::allocator<std::pair<const long long, NSDictionary *>>> _M_t;
};

struct map<long long, NSString *, std::less<long long>, std::allocator<std::pair<const long long, NSString *>>> {
    struct _Rb_tree<long long, std::pair<const long long, NSString *>, std::_Select1st<std::pair<const long long, NSString *>>, std::less<long long>, std::allocator<std::pair<const long long, NSString *>>> _M_t;
};

struct map<long long, TGConversation *, std::less<long long>, std::allocator<std::pair<const long long, TGConversation *>>> {
    struct _Rb_tree<long long, std::pair<const long long, TGConversation *>, std::_Select1st<std::pair<const long long, TGConversation *>>, std::less<long long>, std::allocator<std::pair<const long long, TGConversation *>>> _M_t;
};

struct map<long long, TGPeerCustomSettings, std::less<long long>, std::allocator<std::pair<const long long, TGPeerCustomSettings>>> {
    struct _Rb_tree<long long, std::pair<const long long, TGPeerCustomSettings>, std::_Select1st<std::pair<const long long, TGPeerCustomSettings>>, std::less<long long>, std::allocator<std::pair<const long long, TGPeerCustomSettings>>> _M_t;
};

struct map<long long, bool, std::less<long long>, std::allocator<std::pair<const long long, bool>>> {
    struct _Rb_tree<long long, std::pair<const long long, bool>, std::_Select1st<std::pair<const long long, bool>>, std::less<long long>, std::allocator<std::pair<const long long, bool>>> _M_t;
};

struct map<long long, int, std::less<long long>, std::allocator<std::pair<const long long, int>>> {
    struct _Rb_tree<long long, std::pair<const long long, int>, std::_Select1st<std::pair<const long long, int>>, std::less<long long>, std::allocator<std::pair<const long long, int>>> _M_t;
};

struct map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long>>> {
    struct _Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long>>, std::less<long long>, std::allocator<std::pair<const long long, long long>>> _M_t;
};

struct map<long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>, std::less<long long>, std::allocator<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>> {
    struct _Rb_tree<long long, std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>, std::_Select1st<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>, std::less<long long>, std::allocator<std::pair<const long long, std::vector<TGEncryptionKeyData *, std::allocator<TGEncryptionKeyData *>>>>> _M_t;
};

struct map<long long, unsigned long, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>> {
    struct _Rb_tree<long long, std::pair<const long long, unsigned long>, std::_Select1st<std::pair<const long long, unsigned long>>, std::less<long long>, std::allocator<std::pair<const long long, unsigned long>>> _M_t;
};

struct map<long, UIView<TGModernView>*, std::less<long>, std::allocator<std::pair<const long, UIView<TGModernView>*>>> {
    struct _Rb_tree<long, std::pair<const long, UIView<TGModernView>*>, std::_Select1st<std::pair<const long, UIView<TGModernView>*>>, std::less<long>, std::allocator<std::pair<const long, UIView<TGModernView>*>>> _M_t;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t _field7;
    struct _opaque_pthread_cond_t _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[13];
    unsigned int ports[13];
    int behaviors[13];
    int flavors[13];
};

struct set<int, std::less<int>, std::allocator<int>> {
    struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> _M_t;
};

struct set<long long, std::less<long long>, std::allocator<long long>> {
    struct _Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long>> _M_t;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<TLMetaObject> {
    struct TLMetaObject *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
};

struct shared_ptr<std::map<int, TGUser *, std::less<int>, std::allocator<std::pair<const int, TGUser *>>>> {
    map_bcd462f6 *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
};

struct shared_ptr<std::map<int, TGUserPresence, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>>> {
    map_07fedd0b *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
};

struct shared_ptr<void> {
    void *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct unordered_map<int, TGUser *, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, TGUser *>>, false> {
    struct _Select1st<std::pair<const int, TGUser *>> _M_extract;
    struct equal_to<int> _M_eq;
    struct hash<int> _M_h1;
    struct _Mod_range_hashing _M_h2;
    struct allocator<std::tr1::__detail::_Hash_node<std::pair<const int, TGUser *>, false>> _M_node_allocator;
    struct _Hash_node<std::pair<const int, TGUser *>, false> **_M_buckets;
    unsigned long long _M_bucket_count;
    unsigned long long _M_element_count;
    struct _Prime_rehash_policy _M_rehash_policy;
};

struct unordered_map<int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>>, false> {
    struct _Select1st<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>> _M_extract;
    struct equal_to<int> _M_eq;
    struct hash<int> _M_h1;
    struct _Mod_range_hashing _M_h2;
    struct allocator<std::tr1::__detail::_Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false>> _M_node_allocator;
    struct _Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false> **_M_buckets;
    unsigned long long _M_bucket_count;
    unsigned long long _M_element_count;
    struct _Prime_rehash_policy _M_rehash_policy;
};

struct vector<ASHandle *, std::allocator<ASHandle *>> {
    struct _Vector_impl {
        _M_finish **_M_start;
        _M_end_of_storage **_field1;
        id *_field2;
    } _M_impl;
};

struct vector<FilePart, std::allocator<FilePart>> {
    struct _Vector_impl {
        struct FilePart *_M_start;
        struct FilePart *_M_finish;
        struct FilePart *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGDatabaseMessageFlagValue, std::allocator<TGDatabaseMessageFlagValue>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _field1;
};

struct vector<TGDecorationViewAttrubutes, std::allocator<TGDecorationViewAttrubutes>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGImageSizeRecord, std::allocator<TGImageSizeRecord>> {
    struct _Vector_impl {
        struct TGImageSizeRecord *_M_start;
        struct TGImageSizeRecord *_M_finish;
        struct TGImageSizeRecord *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGLinePosition, std::allocator<TGLinePosition>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGLinkData, std::allocator<TGLinkData>> {
    struct _Vector_impl {
        struct TGLinkData *_M_start;
        struct TGLinkData *_M_finish;
        struct TGLinkData *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGServerSalt, std::allocator<TGServerSalt>> {
    struct _Vector_impl {
        struct TGServerSalt *_M_start;
        struct TGServerSalt *_M_finish;
        struct TGServerSalt *_M_end_of_storage;
    } _M_impl;
};

struct vector<TGUpdateLastUseRecord, std::allocator<TGUpdateLastUseRecord>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _field1;
};

struct vector<TGVideoQualityRecord, std::allocator<TGVideoQualityRecord>> {
    struct _Vector_impl {
        struct TGVideoQualityRecord *_M_start;
        struct TGVideoQualityRecord *_M_finish;
        struct TGVideoQualityRecord *_M_end_of_storage;
    } _M_impl;
};

struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_M_start;
        int *_M_finish;
        int *_M_end_of_storage;
    } _M_impl;
};

struct vector<std::pair<ASHandle *, NSString *>, std::allocator<std::pair<ASHandle *, NSString *>>> {
    struct _Vector_impl {
        struct pair<ASHandle *, NSString *> *_M_start;
        struct pair<ASHandle *, NSString *> *_M_finish;
        struct pair<ASHandle *, NSString *> *_M_end_of_storage;
    } _M_impl;
};

struct vector<std::pair<int, int>, std::allocator<std::pair<int, int>>> {
    struct _Vector_impl {
        struct pair<int, int> *_M_start;
        struct pair<int, int> *_M_finish;
        struct pair<int, int> *_M_end_of_storage;
    } _M_impl;
};

struct vector<std::tr1::shared_ptr<TGContactListSection>, std::allocator<std::tr1::shared_ptr<TGContactListSection>>> {
    struct _Vector_impl {
        struct shared_ptr<TGContactListSection> *_M_start;
        struct shared_ptr<TGContactListSection> *_M_finish;
        struct shared_ptr<TGContactListSection> *_M_end_of_storage;
    } _M_impl;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool downloaded;
    _Bool downloading;
    double progress;
} CDStruct_336c4210;

typedef struct {
    _Bool online;
    int lastSeen;
    int temporaryLastSeen;
} CDStruct_0fa87f8c;

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned char _field1[16];
} CDStruct_60067b7e;

typedef struct {
    unsigned char key[17];
} CDStruct_08fb5524;

typedef struct {
    unsigned char key[9];
} CDStruct_8c593122;

typedef struct {
    char *_field1;
    unsigned long long _field2;
} CDStruct_b9c9288f;

typedef struct {
    int firstMessageId;
    int firstLocalMessageId;
    int firstDate;
    int lastMessageId;
    int lastLocalMessageId;
    int lastDate;
} CDStruct_bb3f6764;

typedef struct {
    int pts;
    int date;
    int seq;
    int unreadCount;
    int qts;
} CDStruct_09df7c84;

typedef struct {
    int type;
    int value;
} CDStruct_9d3f4b40;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    CDStruct_2c43369c center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_feeb6407;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
} CDStruct_f9662865;

// Ambiguous groups
typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long index;
    unsigned long long count;
} CDStruct_cc92dc72;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
        struct __list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_0886b999;

typedef struct map<int, TGUser *, std::less<int>, std::allocator<std::pair<const int, TGUser *>>> {
    struct _Rb_tree<int, std::pair<const int, TGUser *>, std::_Select1st<std::pair<const int, TGUser *>>, std::less<int>, std::allocator<std::pair<const int, TGUser *>>> _M_t;
} map_bcd462f6;

typedef struct map<int, TGUserPresence, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>> {
    struct _Rb_tree<int, std::pair<const int, TGUserPresence>, std::_Select1st<std::pair<const int, TGUserPresence>>, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>> _M_t;
} map_07fedd0b;

typedef struct map<int, TLConstructedValue, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue>>> {
    struct _Rb_tree<int, std::pair<const int, TLConstructedValue>, std::_Select1st<std::pair<const int, TLConstructedValue>>, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue>>> _field1;
} map_d3ce7d86;

typedef struct map<int, int, std::less<int>, std::allocator<std::pair<const int, int>>> {
    struct _Rb_tree<int, std::pair<const int, int>, std::_Select1st<std::pair<const int, int>>, std::less<int>, std::allocator<std::pair<const int, int>>> _M_t;
} map_5f2c8fba;

typedef struct map<int, long long, std::less<int>, std::allocator<std::pair<const int, long long>>> {
    struct _Rb_tree<int, std::pair<const int, long long>, std::_Select1st<std::pair<const int, long long>>, std::less<int>, std::allocator<std::pair<const int, long long>>> _field1;
} map_ec2b8c91;

typedef struct map<long long, int, std::less<long long>, std::allocator<std::pair<const long long, int>>> {
    struct _Rb_tree<long long, std::pair<const long long, int>, std::_Select1st<std::pair<const long long, int>>, std::less<long long>, std::allocator<std::pair<const long long, int>>> _M_t;
} map_af4b726e;

typedef struct map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long>>> {
    struct _Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long>>, std::less<long long>, std::allocator<std::pair<const long long, long long>>> _M_t;
} map_d98b03af;

typedef struct set<int, std::less<int>, std::allocator<int>> {
    struct _Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int>> _M_t;
} set_8fb532d1;

typedef struct set<long long, std::less<long long>, std::allocator<long long>> {
    struct _Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long>> _M_t;
} set_1e05eb4d;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<TLMetaObject> {
    struct TLMetaObject *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
} shared_ptr_20f5e271;

typedef struct shared_ptr<std::map<int, TGUser *, std::less<int>, std::allocator<std::pair<const int, TGUser *>>>> {
    map_bcd462f6 *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
} shared_ptr_efc6659d;

typedef struct shared_ptr<std::map<int, TGUserPresence, std::less<int>, std::allocator<std::pair<const int, TGUserPresence>>>> {
    map_07fedd0b *_field1;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _field2;
} shared_ptr_1f5cd48e;

typedef struct shared_ptr<void> {
    void *_M_ptr;
    struct __shared_count<__gnu_cxx::_Lock_policy::_S_atomic> _M_refcount;
} shared_ptr_f1a7d524;

typedef struct unordered_map<int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>>, false> {
    struct _Select1st<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>> _M_extract;
    struct equal_to<int> _M_eq;
    struct hash<int> _M_h1;
    struct _Mod_range_hashing _M_h2;
    struct allocator<std::tr1::__detail::_Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false>> _M_node_allocator;
    struct _Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int>>, false>>, false> **_M_buckets;
    unsigned long long _M_bucket_count;
    unsigned long long _M_element_count;
    struct _Prime_rehash_policy _M_rehash_policy;
} unordered_map_855812c0;

typedef struct vector<TGDatabaseMessageFlagValue, std::allocator<TGDatabaseMessageFlagValue>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _field1;
} vector_2fa3d354;

typedef struct vector<TGDecorationViewAttrubutes, std::allocator<TGDecorationViewAttrubutes>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _M_impl;
} vector_56ae4a7f;

typedef struct vector<TGLinePosition, std::allocator<TGLinePosition>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _M_impl;
} vector_d4ab83fb;

typedef struct vector<TGLinkData, std::allocator<TGLinkData>> {
    struct _Vector_impl {
        struct TGLinkData *_M_start;
        struct TGLinkData *_M_finish;
        struct TGLinkData *_M_end_of_storage;
    } _M_impl;
} vector_c3c4c93b;

typedef struct vector<TGUpdateLastUseRecord, std::allocator<TGUpdateLastUseRecord>> {
    struct _Vector_impl {
        struct *_M_start;
        struct *_M_finish;
        struct *_M_end_of_storage;
    } _field1;
} vector_c120cb5c;

typedef struct vector<int, std::allocator<int>> {
    struct _Vector_impl {
        int *_M_start;
        int *_M_finish;
        int *_M_end_of_storage;
    } _M_impl;
} vector_562b947f;

typedef struct vector<std::pair<int, int>, std::allocator<std::pair<int, int>>> {
    struct _Vector_impl {
        struct pair<int, int> *_M_start;
        struct pair<int, int> *_M_finish;
        struct pair<int, int> *_M_end_of_storage;
    } _M_impl;
} vector_e44c44be;

typedef struct vector<std::tr1::shared_ptr<TGContactListSection>, std::allocator<std::tr1::shared_ptr<TGContactListSection>>> {
    struct _Vector_impl {
        struct shared_ptr<TGContactListSection> *_M_start;
        struct shared_ptr<TGContactListSection> *_M_finish;
        struct shared_ptr<TGContactListSection> *_M_end_of_storage;
    } _M_impl;
} vector_d876c77f;

