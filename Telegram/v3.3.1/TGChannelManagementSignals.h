//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@interface TGChannelManagementSignals : NSObject
{
}

+ (id)canMakePublicChannels;
+ (id)deleteChannel:(long long)arg1 accessHash:(long long)arg2;
+ (id)channelInviterUser:(long long)arg1 accessHash:(long long)arg2;
+ (id)channelAdmins:(long long)arg1 accessHash:(long long)arg2 offset:(unsigned long long)arg3 count:(unsigned long long)arg4;
+ (id)channelMembers:(long long)arg1 accessHash:(long long)arg2 offset:(unsigned long long)arg3 count:(unsigned long long)arg4;
+ (id)channelBlacklistMembers:(long long)arg1 accessHash:(long long)arg2 offset:(unsigned long long)arg3 count:(unsigned long long)arg4;
+ (id)channelMembers:(long long)arg1 accessHash:(long long)arg2 filter:(id)arg3 offset:(unsigned long long)arg4 count:(unsigned long long)arg5;
+ (id)channelRole:(long long)arg1 accessHash:(long long)arg2 user:(id)arg3;
+ (id)channelChangeRole:(long long)arg1 accessHash:(long long)arg2 user:(id)arg3 role:(int)arg4;
+ (id)channelChangeMemberKicked:(long long)arg1 accessHash:(long long)arg2 user:(id)arg3 kicked:(_Bool)arg4;
+ (id)toggleChannelCommentsEnabled:(long long)arg1 accessHash:(long long)arg2 enabled:(_Bool)arg3;
+ (id)consumeMessages:(long long)arg1 accessHash:(long long)arg2 messageIds:(id)arg3;
+ (id)updatedPeerMessageViews:(long long)arg1 accessHash:(long long)arg2 messageIds:(id)arg3;
+ (id)updateChannelExtendedInfo:(long long)arg1 accessHash:(long long)arg2 updateUnread:(_Bool)arg3;
+ (id)updateChannelPhoto:(long long)arg1 accessHash:(long long)arg2 uploadedFile:(id)arg3;
+ (id)updateChannelAbout:(long long)arg1 accessHash:(long long)arg2 about:(id)arg3;
+ (id)updateChannelUsername:(long long)arg1 accessHash:(long long)arg2 username:(id)arg3;
+ (id)checkChannelUsername:(long long)arg1 accessHash:(long long)arg2 username:(id)arg3;
+ (id)inviteUsers:(long long)arg1 accessHash:(long long)arg2 users:(id)arg3;
+ (id)joinTemporaryChannel:(long long)arg1;
+ (void)updateChannelState:(long long)arg1 pts:(int)arg2 ptsCount:(int)arg3;
+ (id)leaveChannels;
+ (id)readChannelMessages;
+ (id)deleteChannelMessages;
+ (id)_channelDifference:(long long)arg1 accessHash:(long long)arg2 pts:(int)arg3;
+ (id)exportChannelInvitationLink:(long long)arg1 accessHash:(long long)arg2;
+ (id)channelMessageHoleForPeerId:(long long)arg1 accessHash:(long long)arg2 hole:(id)arg3 direction:(int)arg4 important:(_Bool)arg5;
+ (id)preloadedChannel:(long long)arg1;
+ (id)preloadedChannelAtMessage:(long long)arg1 messageId:(int)arg2;
+ (id)preloadedHistoryTailForPeerId:(long long)arg1 accessHash:(long long)arg2;
+ (id)preloadedHistoryForPeerId:(long long)arg1 accessHash:(long long)arg2 aroundMessageId:(int)arg3;
+ (id)messagesWithDownloadedReplyMessages:(long long)arg1 accessHash:(long long)arg2 messages:(id)arg3;
+ (_Bool)_containsPreloadedHistoryForPeerId:(long long)arg1 aroundMessageId:(int)arg2;
+ (id)synchronizedChannelList;
+ (id)storeRemoteChannelList;
+ (id)remoteChannelList;
+ (id)addChannel:(id)arg1;
+ (id)preloadChannelTail:(long long)arg1 accessHash:(long long)arg2 important:(_Bool)arg3;
+ (id)makeChannelWithTitle:(id)arg1 about:(id)arg2 group:(_Bool)arg3;

@end

