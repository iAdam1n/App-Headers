/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:46:33 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/D20B482D-7A4B-420E-BEFA-D4B2B5C94752/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Telegram/Telegram-Structs.h>
@class NSArray, NSString;

@interface TGReusableLabelLayoutData : NSObject {

	unordered_map<int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false>, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false> > >, false>* _lineOffsets;
	vector<TGLinePosition, std::allocator<TGLinePosition> >* _lineOrigins;
	vector<TGLinkData, std::allocator<TGLinkData> >* _links;
	NSArray* _textLines;
	NSString* _text;
	double _fontLineHeight;
	double _fontLineSpacing;
	CGSize _size;
	CGSize _drawingSize;
	CGPoint _drawingOffset;

}

@property (nonatomic,retain) NSArray * textLines;                 //@synthesize textLines=_textLines - In the implementation block
@property (assign,nonatomic) CGSize drawingSize;                  //@synthesize drawingSize=_drawingSize - In the implementation block
@property (assign,nonatomic) CGPoint drawingOffset;               //@synthesize drawingOffset=_drawingOffset - In the implementation block
@property (nonatomic,retain) NSString * text;                     //@synthesize text=_text - In the implementation block
@property (assign,nonatomic) double fontLineHeight;               //@synthesize fontLineHeight=_fontLineHeight - In the implementation block
@property (assign,nonatomic) double fontLineSpacing;              //@synthesize fontLineSpacing=_fontLineSpacing - In the implementation block
@property (assign,nonatomic) CGSize size;                         //@synthesize size=_size - In the implementation block
-(id)linkAtPoint:(CGPoint)arg1 topRegion:(CGRect*)arg2 middleRegion:(CGRect*)arg3 bottomRegion:(CGRect*)arg4 hiddenLink:(BOOL*)arg5 linkText:(id*)arg6 ;
-(void)enumerateSearchRegionsForString:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(vector<TGLinePosition, std::allocator<TGLinePosition> >*)lineOrigins;
-(unordered_map<int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false>, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false> > >, false>=_Select1st<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false> > >equal_to<int>hash<int>_Mod_range_hashingallocator<std::tr1::__detail::_Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false> >, false> >_Hash_node<std::pair<const int, std::tr1::unordered_map<int, int, std::tr1::hash<int>, std::equal_to<int>, std::allocator<std::pair<const int, int> >, false> >, false>}QQ_Prime_rehash_policy=ffQ}}Ref)lineOffsets;
-(void)setDrawingSize:(CGSize)arg1 ;
-(double)fontLineHeight;
-(void)setFontLineHeight:(double)arg1 ;
-(double)fontLineSpacing;
-(void)setFontLineSpacing:(double)arg1 ;
-(CGSize)size;
-(NSString *)text;
-(void)setText:(NSString *)arg1 ;
-(void)setSize:(CGSize)arg1 ;
-(void)setDrawingOffset:(CGPoint)arg1 ;
-(CGPoint)drawingOffset;
-(void)setTextLines:(NSArray *)arg1 ;
-(NSArray *)textLines;
-(vector<TGLinkData, std::allocator<TGLinkData> >*)links;
-(CGSize)drawingSize;
@end

