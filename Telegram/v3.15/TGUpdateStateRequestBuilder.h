/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:46:32 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/D20B482D-7A4B-420E-BEFA-D4B2B5C94752/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/ASActor.h>
#import <Telegram/ASWatcher.h>

@class ASHandle, TGSynchronizeActionQueueActor, TLupdates_State, SGraphNode, NSString;

@interface TGUpdateStateRequestBuilder : ASActor <ASWatcher> {

	ASHandle* _actionHandle;
	TGSynchronizeActionQueueActor* _synchronizeActionQueueActor;
	TLupdates_State* _state;
	SGraphNode* _dialogListNode;

}

@property (nonatomic,retain) TGSynchronizeActionQueueActor * synchronizeActionQueueActor;              //@synthesize synchronizeActionQueueActor=_synchronizeActionQueueActor - In the implementation block
@property (nonatomic,retain) TLupdates_State * state;                                                  //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) SGraphNode * dialogListNode;                                              //@synthesize dialogListNode=_dialogListNode - In the implementation block
@property (nonatomic,retain) ASHandle * actionHandle;                                                  //@synthesize actionHandle=_actionHandle - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)scheduleInitialUpdates;
+(id)genericPath;
+(id)decryptEncryptedMessageData:(id)arg1 decryptedLayer:(unsigned long long*)arg2 cachedPeerIds:(map<long long, long long, std::less<long long>, std::allocator<std::pair<const long long, long long> > >=_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >=_Rb_tree_impl<std::less<long long>, false>=less<long long>_Rb_tree_node_base=i_Rb_tree_node_base}_Rb_tree_node_base}_Rb_tree_node_base}}Q}}}Ref)arg3 cachedParticipantIds:(map<long long, int, std::less<long long>, std::allocator<std::pair<const long long, int> > >=_Rb_tree<long long, std::pair<const long long, int>, std::_Select1st<std::pair<const long long, int> >, std::less<long long>, std::allocator<std::pair<const long long, int> > >=_Rb_tree_impl<std::less<long long>, false>=less<long long>_Rb_tree_node_base=i_Rb_tree_node_base}_Rb_tree_node_base}_Rb_tree_node_base}}Q}}}Ref)arg4 outConversationId:(long long*)arg5 outKeyId:(long long*)arg6 outSeqIn:(int*)arg7 outSeqOut:(int*)arg8 ;
+(id)webPageWithLink:(id)arg1 ;
+(id)webPageByTextRequest:(id)arg1 ;
+(void)addWebPageWithLink:(id)arg1 webPage:(id)arg2 ;
+(void)invalidateStateVersion;
+(void)addWebPage:(id)arg1 ;
+(void)applyDelayedOutgoingMessages:(long long)arg1 ;
+(void)applyUpdates:(id)arg1 otherUpdates:(id)arg2 usersDesc:(id)arg3 chatsDesc:(id)arg4 chatParticipantsDesc:(id)arg5 updatesWithDates:(id)arg6 addedEncryptedActionsByPeerId:(id)arg7 addedEncryptedUnparsedActionsByPeerId:(id)arg8 completion:(/*^block*/id)arg9 ;
+(void)clearStateHistory;
+(int)stateVersion;
+(void)addIgnoreConversationId:(long long)arg1 ;
+(BOOL)ignoringConversationId:(long long)arg1 ;
+(void)removeIgnoreConversationId:(long long)arg1 ;
+(id)webPageWithId:(long long)arg1 ;
+(id)requestWebPageByText:(id)arg1 ;
+(void)updateNotifiedVersionUpdate;
+(void)processDelayedMessagesInConversation:(long long)arg1 completedPath:(id)arg2 ;
-(void)actorCompleted:(int)arg1 path:(id)arg2 result:(id)arg3 ;
-(ASHandle *)actionHandle;
-(void)setActionHandle:(ASHandle *)arg1 ;
-(void)stateRequestSuccess:(id)arg1 ;
-(void)stateRequestFailed;
-(void)stateDeltaRequestSuccess:(id)arg1 ;
-(void)stateDeltaRequestFailed;
-(void)completeDifferenceUpdate:(BOOL)arg1 ;
-(TGSynchronizeActionQueueActor *)synchronizeActionQueueActor;
-(void)setSynchronizeActionQueueActor:(TGSynchronizeActionQueueActor *)arg1 ;
-(SGraphNode *)dialogListNode;
-(void)setDialogListNode:(SGraphNode *)arg1 ;
-(void)cancel;
-(void)dealloc;
-(TLupdates_State *)state;
-(void)setState:(TLupdates_State *)arg1 ;
-(id)initWithPath:(id)arg1 ;
-(void)execute:(id)arg1 ;
-(void)prepare:(id)arg1 ;
@end

