/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:46:33 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/D20B482D-7A4B-420E-BEFA-D4B2B5C94752/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/TLPhoneConnection.h>

@class NSString, NSData;

@interface TLPhoneConnection$phoneConnection : TLPhoneConnection {

	int _port;
	long long _n_id;
	NSString* _ip;
	NSString* _ipv6;
	NSData* _peer_tag;

}

@property (assign,nonatomic) long long n_id;                 //@synthesize n_id=_n_id - In the implementation block
@property (nonatomic,retain) NSString * ip;                  //@synthesize ip=_ip - In the implementation block
@property (nonatomic,retain) NSString * ipv6;                //@synthesize ipv6=_ipv6 - In the implementation block
@property (assign,nonatomic) int port;                       //@synthesize port=_port - In the implementation block
@property (nonatomic,retain) NSData * peer_tag;              //@synthesize peer_tag=_peer_tag - In the implementation block
-(int)TLconstructorSignature;
-(int)TLconstructorName;
-(id)TLbuildFromMetaObject:(shared_ptr<TLMetaObject>*)arg1 ;
-(void)TLfillFieldsWithValues:(map<int, TLConstructedValue, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue> > >=_Rb_tree<int, std::pair<const int, TLConstructedValue>, std::_Select1st<std::pair<const int, TLConstructedValue> >, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue> > >=_Rb_tree_impl<std::less<int>, false>=less<int>_Rb_tree_node_base=i_Rb_tree_node_base}_Rb_tree_node_base}_Rb_tree_node_base}}Q}}}Ref)arg1 ;
-(void)setN_id:(long long)arg1 ;
-(long long)n_id;
-(NSData *)peer_tag;
-(void)setPeer_tag:(NSData *)arg1 ;
-(int)port;
-(NSString *)ip;
-(NSString *)ipv6;
-(void)setIp:(NSString *)arg1 ;
-(void)setPort:(int)arg1 ;
-(void)setIpv6:(NSString *)arg1 ;
@end

