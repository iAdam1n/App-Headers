/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:46:32 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/D20B482D-7A4B-420E-BEFA-D4B2B5C94752/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/TLupdates_Difference.h>

@class NSArray, TLupdates_State;

@interface TLupdates_Difference$updates_differenceSlice : TLupdates_Difference {

	NSArray* _n_new_messages;
	NSArray* _n_new_encrypted_messages;
	NSArray* _other_updates;
	NSArray* _chats;
	NSArray* _users;
	TLupdates_State* _intermediate_state;

}

@property (nonatomic,retain) NSArray * n_new_messages;                          //@synthesize n_new_messages=_n_new_messages - In the implementation block
@property (nonatomic,retain) NSArray * n_new_encrypted_messages;                //@synthesize n_new_encrypted_messages=_n_new_encrypted_messages - In the implementation block
@property (nonatomic,retain) NSArray * other_updates;                           //@synthesize other_updates=_other_updates - In the implementation block
@property (nonatomic,retain) NSArray * chats;                                   //@synthesize chats=_chats - In the implementation block
@property (nonatomic,retain) NSArray * users;                                   //@synthesize users=_users - In the implementation block
@property (nonatomic,retain) TLupdates_State * intermediate_state;              //@synthesize intermediate_state=_intermediate_state - In the implementation block
-(int)TLconstructorSignature;
-(int)TLconstructorName;
-(id)TLbuildFromMetaObject:(shared_ptr<TLMetaObject>*)arg1 ;
-(void)TLfillFieldsWithValues:(map<int, TLConstructedValue, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue> > >=_Rb_tree<int, std::pair<const int, TLConstructedValue>, std::_Select1st<std::pair<const int, TLConstructedValue> >, std::less<int>, std::allocator<std::pair<const int, TLConstructedValue> > >=_Rb_tree_impl<std::less<int>, false>=less<int>_Rb_tree_node_base=i_Rb_tree_node_base}_Rb_tree_node_base}_Rb_tree_node_base}}Q}}}Ref)arg1 ;
-(void)setChats:(NSArray *)arg1 ;
-(TLupdates_State *)intermediate_state;
-(NSArray *)n_new_messages;
-(NSArray *)n_new_encrypted_messages;
-(NSArray *)other_updates;
-(void)setN_new_messages:(NSArray *)arg1 ;
-(void)setN_new_encrypted_messages:(NSArray *)arg1 ;
-(void)setOther_updates:(NSArray *)arg1 ;
-(void)setIntermediate_state:(TLupdates_State *)arg1 ;
-(NSArray *)chats;
-(NSArray *)users;
-(void)setUsers:(NSArray *)arg1 ;
@end

