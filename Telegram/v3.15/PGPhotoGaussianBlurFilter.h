/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:46:33 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/D20B482D-7A4B-420E-BEFA-D4B2B5C94752/Telegram.app/Telegram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Telegram/Telegram-Structs.h>
#import <Telegram/GPUImageFilter.h>

@class GPUImageFramebuffer, GLProgram, NSMutableDictionary;

@interface PGPhotoGaussianBlurFilter : GPUImageFilter {

	GPUImageFramebuffer* _secondOutputFramebuffer;
	GLProgram* _secondFilterProgram;
	int _secondFilterPositionAttribute;
	int _secondFilterTextureCoordinateAttribute;
	int _secondFilterInputTextureUniform;
	int _verticalPassTexelWidthOffsetUniform;
	int _verticalPassTexelHeightOffsetUniform;
	int _horizontalPassTexelWidthOffsetUniform;
	int _horizontalPassTexelHeightOffsetUniform;
	float _verticalPassTexelWidthOffset;
	float _verticalPassTexelHeightOffset;
	float _horizontalPassTexelWidthOffset;
	float _horizontalPassTexelHeightOffset;
	double _verticalTexelSpacing;
	double _horizontalTexelSpacing;
	NSMutableDictionary* _secondProgramUniformStateRestorationBlocks;
	unsigned long long _currentRadius;

}
+(id)vertexShaderForBlurOfRadius:(unsigned long long)arg1 sigma:(double)arg2 ;
+(id)fragmentShaderForBlurOfRadius:(unsigned long long)arg1 sigma:(double)arg2 ;
-(void)setInputSize:(CGSize)arg1 atIndex:(long long)arg2 ;
-(id)initWithFirstStageVertexShaderFromString:(id)arg1 firstStageFragmentShaderFromString:(id)arg2 secondStageVertexShaderFromString:(id)arg3 secondStageFragmentShaderFromString:(id)arg4 ;
-(void)initializeSecondaryAttributes;
-(void)setupFilterForSize:(CGSize)arg1 ;
-(void)switchToVertexShader:(id)arg1 fragmentShader:(id)arg2 ;
-(void)setUniformsForProgramAtIndex:(unsigned long long)arg1 ;
-(id)initWithFirstStageFragmentShaderFromString:(id)arg1 secondStageFragmentShaderFromString:(id)arg2 ;
-(id)framebufferForOutput;
-(void)removeOutputFramebuffer;
-(void)renderToTextureWithVertices:(const float*)arg1 textureCoordinates:(const float*)arg2 ;
-(void)setAndExecuteUniformStateCallbackAtIndex:(int)arg1 forProgram:(id)arg2 toBlock:(/*^block*/id)arg3 ;
-(id)init;
@end

