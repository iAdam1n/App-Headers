//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "ASWatcher.h"
#import "MTContextChangeListener.h"
#import "MTProtoDelegate.h"
#import "MTRequestMessageServiceDelegate.h"
#import "TGNetworkWorkerDelegate.h"

@class ASHandle, MTContext, MTProto, MTRequestMessageService, NSMutableArray, NSMutableDictionary, NSString, TGUpdateMessageService, UIWindow;

@interface TGTelegramNetworking : NSObject <ASWatcher, MTProtoDelegate, MTRequestMessageServiceDelegate, TGNetworkWorkerDelegate, MTContextChangeListener>
{
    _Bool _isTestingEnvironment;
    id <MTKeychain> _settingsKeychain;
    id <MTKeychain> _keychain;
    MTContext *_context;
    MTProto *_mtProto;
    MTRequestMessageService *_requestService;
    TGUpdateMessageService *_updateService;
    long long _masterDatacenterId;
    _Bool _isNetworkAvailable;
    _Bool _isConnected;
    _Bool _isUpdatingConnectionContext;
    _Bool _isPerformingServiceTasks;
    _Bool _isPerformingGetDifference;
    int _dispatchNetworkStateToken;
    int _completeWakeUpToken;
    NSMutableDictionary *_workersByDatacenterId;
    NSMutableDictionary *_awaitingWorkerTokensByDatacenterId;
    NSMutableArray *_currentWakeUpCompletions;
    UIWindow *_currentPasswordEntryWindow;
    ASHandle *_actionHandle;
}

+ (id)instance;
@property(retain, nonatomic) ASHandle *actionHandle; // @synthesize actionHandle=_actionHandle;
- (void).cxx_destruct;
- (void)contextIsPasswordRequiredUpdated:(id)arg1 datacenterId:(long long)arg2;
- (id)extractNetworkErrorType:(id)arg1;
- (id)requestSignal:(id)arg1 worker:(id)arg2;
- (id)requestSignal:(id)arg1 requestClass:(int)arg2;
- (id)requestSignal:(id)arg1 continueOnServerErrors:(_Bool)arg2;
- (id)requestSignal:(id)arg1;
- (id)downloadWorkerForDatacenterId:(long long)arg1;
- (void)actionStageResourceDispatched:(id)arg1 resource:(id)arg2 arguments:(id)arg3;
- (void)dispatchNetworkState;
- (_Bool)_isReadyToBeSuspended;
- (void)mtProtoServiceTasksStateChanged:(id)arg1 isPerformingServiceTasks:(_Bool)arg2;
- (void)mtProtoConnectionContextUpdateStateChanged:(id)arg1 isUpdatingConnectionContext:(_Bool)arg2;
- (void)mtProtoConnectionStateChanged:(id)arg1 isConnected:(_Bool)arg2;
- (void)mtProtoNetworkAvailabilityChanged:(id)arg1 isNetworkAvailable:(_Bool)arg2;
- (void)requestMessageServiceAuthorizationRequired:(id)arg1;
- (void)completeWakeUpIfAny:(id)arg1;
- (void)wakeUpWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isUpdating;
- (_Bool)isConnecting;
- (_Bool)isNetworkAvailable;
- (void)cancelRpc:(id)arg1;
- (id)performRpc:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 progressBlock:(CDUnknownBlockType)arg3 quickAckBlock:(CDUnknownBlockType)arg4 requiresCompletion:(_Bool)arg5 requestClass:(int)arg6 datacenterId:(int)arg7;
- (long long)peerIdFromInputPeer:(id)arg1;
- (id)performRpc:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 progressBlock:(CDUnknownBlockType)arg3 requiresCompletion:(_Bool)arg4 requestClass:(int)arg5 datacenterId:(int)arg6;
- (id)performRpc:(id)arg1 completionBlock:(CDUnknownBlockType)arg2 progressBlock:(CDUnknownBlockType)arg3 requiresCompletion:(_Bool)arg4 requestClass:(int)arg5;
- (void)addRequest:(id)arg1;
- (void)switchBackends;
- (void)addUpdates:(id)arg1;
- (void)updatePts:(int)arg1 ptsCount:(int)arg2 seq:(int)arg3;
- (void)networkWorkerReadyToBeRemoved:(id)arg1;
- (void)networkWorkerDidBecomeAvailable:(id)arg1;
- (void)cancelDownloadWorkerRequestByToken:(id)arg1;
- (void)_processWorkerQueue;
- (id)requestDownloadWorkerForDatacenterId:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)masterDatacenterId;
- (void)performDeferredServiceTasks;
- (void)mergeDatacenterAddress:(long long)arg1 address:(id)arg2;
- (void)clearExportedTokens;
- (void)restartWithCleanCredentials;
- (void)moveToDatacenterId:(long long)arg1;
- (void)resume;
- (void)pause;
- (void)start;
- (void)loadCredentials;
- (double)approximateRemoteTime;
- (double)timeOffset;
- (double)globalTime;
- (void)resetMainMtProto:(long long)arg1;
- (id)mtProto;
- (id)context;
- (void)exportCredentialsForExtensions;
- (id)generateSalt256;
- (void)removeCredentialsForExtensions;
- (id)sharedAuthInfoPath;
- (id)genericTasksSignalManager;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

