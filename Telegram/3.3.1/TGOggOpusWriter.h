//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class TGDataItem;

@interface TGOggOpusWriter : NSObject
{
    TGDataItem *_dataItem;
    struct OpusEncoder *_encoder;
    char *_packet;
    struct {
        void *readdata;
        long long total_samples_per_channel;
        int rawmode;
        int channels;
        long long rate;
        int gain;
        int samplesize;
        int endianness;
        char *infilename;
        int ignorelength;
        int skip;
        int extraout;
        char *comments;
        int comments_length;
        int copy_comments;
    } inopt;
    struct {
        char *body_data;
        long long body_storage;
        long long body_fill;
        long long body_returned;
        int *lacing_vals;
        long long *granule_vals;
        long long lacing_storage;
        long long lacing_fill;
        long long lacing_packet;
        long long lacing_returned;
        unsigned char header[282];
        int header_fill;
        int e_o_s;
        int b_o_s;
        long long serialno;
        long long pageno;
        long long packetno;
        long long granulepos;
    } os;
    struct {
        char *header;
        long long header_len;
        char *body;
        long long body_len;
    } og;
    struct {
        char *packet;
        long long bytes;
        long long b_o_s;
        long long e_o_s;
        long long granulepos;
        long long packetno;
    } op;
    long long last_granulepos;
    long long enc_granulepos;
    int last_segments;
    int eos;
    struct {
        int version;
        int channels;
        int preskip;
        unsigned int input_sample_rate;
        int gain;
        int channel_mapping;
        int nb_streams;
        int nb_coupled;
        unsigned char stream_map[255];
    } header;
    int _packetId;
    int size_segments;
    long long nb_encoded;
    long long bytes_written;
    long long pages_out;
    long long total_bytes;
    long long total_samples;
    int nb_samples;
    int peak_bytes;
    int min_bytes;
    int max_frame_bytes;
    int bitrate;
    int rate;
    int coding_rate;
    int frame_size;
    int with_cvbr;
    int max_ogg_delay;
    int comment_padding;
    int serialno;
    int lookahead;
}

- (void).cxx_destruct;
- (double)encodedDuration;
- (unsigned long long)encodedBytes;
- (_Bool)writeFrame:(char *)arg1 frameByteCount:(unsigned long long)arg2;
- (_Bool)beginWithDataItem:(id)arg1;
- (void)cleanup;
- (id)init;

@end

