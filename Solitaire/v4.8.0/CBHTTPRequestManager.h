/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:42 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/SolitaireFree-Structs.h>
#import <SolitaireFree/CBAFHTTPRequestOperationManager.h>

@class NSManagedObjectContext, NSDictionary, NSOperationQueue, CBHTTPRequestDataManager;

@interface CBHTTPRequestManager : CBAFHTTPRequestOperationManager {

	BOOL _defaultFlush;
	NSManagedObjectContext* _managedObjectContext;
	NSDictionary* _apiRetryRules;
	NSOperationQueue* _retryOperationQueue;
	CBHTTPRequestDataManager* _requestManagerPersistence;

}

@property (assign,nonatomic) BOOL defaultFlush;                                                 //@synthesize defaultFlush=_defaultFlush - In the implementation block
@property (nonatomic,retain) NSDictionary * apiRetryRules;                                      //@synthesize apiRetryRules=_apiRetryRules - In the implementation block
@property (retain) NSOperationQueue * retryOperationQueue;                                      //@synthesize retryOperationQueue=_retryOperationQueue - In the implementation block
@property (nonatomic,retain) CBHTTPRequestDataManager * requestManagerPersistence;              //@synthesize requestManagerPersistence=_requestManagerPersistence - In the implementation block
@property (nonatomic,retain) NSManagedObjectContext * managedObjectContext;                     //@synthesize managedObjectContext=_managedObjectContext - In the implementation block
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)shared;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 sendNow:(BOOL)arg4 ;
-(void)updateApiRetryRules;
-(void)setDefaultFlush:(BOOL)arg1 ;
-(void)setRetryOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)retryOperationQueue;
-(void)setRequestManagerPersistence:(CBHTTPRequestDataManager *)arg1 ;
-(void)setupReachabilityManager;
-(void)deleteCache;
-(void)initializeOperationQueueFromCoreData;
-(NSDictionary *)apiRetryRules;
-(id)retryRulesDictionary;
-(void)setApiRetryRules:(NSDictionary *)arg1 ;
-(id)retryRuleForRequest:(id)arg1 ;
-(CBHTTPRequestDataManager *)requestManagerPersistence;
-(BOOL)requestShouldBeRetried:(id)arg1 ;
-(void)removeRequestInCoreData:(id)arg1 ;
-(void)updateOperationsQueueFromCoreData:(BOOL)arg1 ;
-(void)processRequestsFromCoreDataNotInOperationQueueWithRequests:(id)arg1 path:(id)arg2 apiRetryRules:(id)arg3 ;
-(void)processRequestBatchArray:(id)arg1 apiRetryRules:(id)arg2 path:(id)arg3 ;
-(void)createAndAddRequestOperationWithBody:(id)arg1 path:(id)arg2 retryCount:(id)arg3 ;
-(void)createAndAddRequestOperationWithBatchedData:(id)arg1 path:(id)arg2 retryCount:(id)arg3 ;
-(void)createAndAddRequestOperationWithRequest:(id)arg1 retryCount:(id)arg2 ;
-(unsigned long long)retryIntervalForRequest:(id)arg1 ;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 autoRetryOf:(unsigned long long)arg4 sendNow:(BOOL)arg5 ;
-(unsigned long long)initialRetryIntervalForRequest:(id)arg1 ;
-(unsigned long long)nextBackoffForRequest:(id)arg1 intervalInSeconds:(unsigned long long)arg2 ;
-(BOOL)defaultFlush;
-(long long)timesToRetryForRequest:(id)arg1 ;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(BOOL)arg6 ;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(BOOL)arg6 priority:(long long)arg7 ;
-(void)addRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 sendNow:(BOOL)arg6 priority:(long long)arg7 withQueue:(id)arg8 ;
-(void)saveRequestInCoreData:(id)arg1 inOperationQueue:(BOOL)arg2 ;
-(id)createRequestOperation:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 autoRetryOf:(unsigned long long)arg5 ;
-(id)enqueueOperation:(id)arg1 sendNow:(BOOL)arg2 withQueue:(id)arg3 ;
-(id)CBHTTPAPIRequestOperationWithRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 serializer:(id)arg5 autoRetryOf:(unsigned long long)arg6 retryInterval:(unsigned long long)arg7 ;
-(BOOL)failedRequestShouldBeRetried:(id)arg1 operation:(id)arg2 error:(id)arg3 timesToRetry:(unsigned long long)arg4 ;
-(void)addRetryOperation:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 stream:(id)arg4 serializer:(id)arg5 autoRetryOf:(unsigned long long)arg6 retryInterval:(unsigned long long)arg7 error:(id)arg8 ;
-(void)removeRequestFromRetrySystem:(id)arg1 ;
-(void)CBLogRequestFailure:(id)arg1 error:(id)arg2 ;
-(void)CBLogRequestFailureDone:(id)arg1 ;
-(void)logFailureOfRequest:(id)arg1 error:(id)arg2 ;
-(void)logSuccessOfRequest:(id)arg1 response:(id)arg2 ;
-(void)CBLogRequestSuccess:(id)arg1 ;
-(void)CBLogRequestSuccessDone:(id)arg1 ;
-(void)updateRequestInCoreData:(id)arg1 ;
-(void)delayFor:(unsigned long long)arg1 withContinuation:(id)arg2 operationQueue:(id)arg3 ;
-(void)populateOperationQueueFromCoreData;
-(id)getDictionaryForLogging:(id)arg1 ;
-(id)initializeApiRetryQueueSizePerRouteFromApiRetryRules:(id)arg1 ;
-(void)createDummyData;
-(id)init;
-(id)copyWithZone:(NSZone*)arg1 ;
-(NSManagedObjectContext *)managedObjectContext;
-(void)setManagedObjectContext:(NSManagedObjectContext *)arg1 ;
@end

