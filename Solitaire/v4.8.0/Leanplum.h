/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:43 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@interface Leanplum : NSObject
+(void)onceVariablesChangedAndNoDownloadsPending:(/*^block*/id)arg1 ;
+(void)defineAction:(id)arg1 ofKind:(int)arg2 withArguments:(id)arg3 withResponder:(/*^block*/id)arg4 ;
+(void)setAppId:(id)arg1 withProductionKey:(id)arg2 ;
+(void)setAppId:(id)arg1 withDevelopmentKey:(id)arg2 ;
+(void)startWithUserId:(id)arg1 userAttributes:(id)arg2 ;
+(void)startWithUserAttributes:(id)arg1 ;
+(void)startWithUserId:(id)arg1 ;
+(void)trackInAppPurchases;
+(void)syncResourcePaths:(id)arg1 excluding:(id)arg2 async:(BOOL)arg3 ;
+(void)onVariablesChangedAndNoDownloadsPending:(/*^block*/id)arg1 ;
+(void)track:(id)arg1 withValue:(double)arg2 andInfo:(id)arg3 andParameters:(id)arg4 ;
+(void)track:(id)arg1 withValue:(double)arg2 andInfo:(id)arg3 ;
+(void)track:(id)arg1 withValue:(double)arg2 andParameters:(id)arg3 ;
+(void)track:(id)arg1 withParameters:(id)arg2 ;
+(void)track:(id)arg1 withValue:(double)arg2 ;
+(void)track:(id)arg1 withInfo:(id)arg2 ;
+(void)setUserAttributes:(id)arg1 ;
+(void)forceContentUpdate:(/*^block*/id)arg1 ;
+(void)trackInAppPurchase:(id)arg1 ;
+(void)setTestModeEnabled:(BOOL)arg1 ;
+(void)setNetworkTimeoutSeconds:(int)arg1 ;
+(void)setVerboseLoggingInDevelopmentMode:(BOOL)arg1 ;
+(BOOL)hasStartedAndRegisteredAsDeveloper;
+(void)onInterfaceChanged:(/*^block*/id)arg1 ;
+(void)onEventsChanged:(/*^block*/id)arg1 ;
+(void)syncResourcesAsync:(BOOL)arg1 ;
+(void)startWithUserId:(id)arg1 userAttributes:(id)arg2 responseHandler:(/*^block*/id)arg3 ;
+(void)onHasStartedAndRegisteredAsDeveloperAndFinishedSyncing;
+(void)throwError:(id)arg1 ;
+(BOOL)validateScalarValue:(id)arg1 argName:(id)arg2 ;
+(void)onStartResponse:(/*^block*/id)arg1 ;
+(void)triggerStartResponse:(BOOL)arg1 ;
+(void)triggerVariablesChanged;
+(void)triggerInterfaceChanged;
+(void)triggerEventsChanged;
+(void)triggerVariablesChangedAndNoDownloadsPending;
+(id)validateAttributes:(id)arg1 named:(id)arg2 allowLists:(BOOL)arg3 ;
+(void)trackCrashes;
+(id)initializePreLeanplumInstall;
+(void)onHasStartedAndRegisteredAsDeveloper;
+(void)maybePerformActions:(id)arg1 withEventName:(id)arg2 withFilter:(int)arg3 fromMessageId:(id)arg4 withContextualValues:(id)arg5 ;
+(void)recordAttributeChanges;
+(void)maybeRegisterForNotifications;
+(id)createInvocationWithResponder:(id)arg1 selector:(SEL)arg2 ;
+(void)addInvocation:(id)arg1 toSet:(id)arg2 ;
+(void)removeResponder:(id)arg1 withSelector:(SEL)arg2 fromSet:(id)arg3 ;
+(void)defineAction:(id)arg1 ofKind:(int)arg2 withArguments:(id)arg3 withOptions:(id)arg4 withResponder:(/*^block*/id)arg5 ;
+(void)onAction:(id)arg1 invoke:(/*^block*/id)arg2 ;
+(BOOL)triggerAction:(id)arg1 ;
+(void)track:(id)arg1 withValue:(double)arg2 andInfo:(id)arg3 andArgs:(id)arg4 andParameters:(id)arg5 ;
+(void)setUserId:(id)arg1 withUserAttributes:(id)arg2 ;
+(void)advanceTo:(id)arg1 withInfo:(id)arg2 ;
+(void)advanceTo:(id)arg1 withInfo:(id)arg2 andParameters:(id)arg3 ;
+(void)trackException:(id)arg1 ;
+(void)_initPush;
+(void)setApiHostName:(id)arg1 withServletName:(id)arg2 usingSsl:(BOOL)arg3 ;
+(void)setSocketHostName:(id)arg1 withPortNumber:(int)arg2 ;
+(void)setClient:(id)arg1 withVersion:(id)arg2 ;
+(void)setFileHashingEnabledInDevelopmentMode:(BOOL)arg1 ;
+(void)setNetworkTimeoutSeconds:(int)arg1 forDownloads:(int)arg2 ;
+(void)setCanDownloadContentMidSessionInProductionMode:(BOOL)arg1 ;
+(void)setInAppPurchaseEventName:(id)arg1 ;
+(void)allowInterfaceEditing;
+(BOOL)interfaceEditingEnabled;
+(void)syncResources;
+(void)syncResourcePaths:(id)arg1 excluding:(id)arg2 ;
+(void)startWithResponseHandler:(/*^block*/id)arg1 ;
+(void)startWithUserId:(id)arg1 responseHandler:(/*^block*/id)arg2 ;
+(void)setDeveloperEmail:(id)arg1 ;
+(void)addStartResponseResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)removeStartResponseResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)onVariablesChanged:(/*^block*/id)arg1 ;
+(void)addVariablesChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)addInterfaceChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)addEventsChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)removeVariablesChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)removeInterfaceChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)removeEventsChangedResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)addVariablesChangedAndNoDownloadsPendingResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)removeVariablesChangedAndNoDownloadsPendingResponder:(id)arg1 withSelector:(SEL)arg2 ;
+(void)defineAction:(id)arg1 ofKind:(int)arg2 withArguments:(id)arg3 ;
+(void)defineAction:(id)arg1 ofKind:(int)arg2 withArguments:(id)arg3 withOptions:(id)arg4 ;
+(void)handleNotification:(id)arg1 fetchCompletionHandler:(/*^block*/id)arg2 ;
+(void)handleActionWithIdentifier:(id)arg1 forLocalNotification:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)handleActionWithIdentifier:(id)arg1 forRemoteNotification:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)setShouldOpenNotificationHandler:(/*^block*/id)arg1 ;
+(void)addResponder:(id)arg1 withSelector:(SEL)arg2 forActionNamed:(id)arg3 ;
+(void)removeResponder:(id)arg1 withSelector:(SEL)arg2 forActionNamed:(id)arg3 ;
+(id)createActionContextForMessageId:(id)arg1 ;
+(void)trackAllAppScreens;
+(void)track:(id)arg1 withValue:(double)arg2 andArgs:(id)arg3 andParameters:(id)arg4 ;
+(void)setTrafficSourceInfo:(id)arg1 ;
+(void)advanceTo:(id)arg1 withParameters:(id)arg2 ;
+(void)pauseState;
+(void)resumeState;
+(void)forceContentUpdate;
+(void)createDefaultExceptionHandler;
+(void)createExceptionHandler:(/*function pointer*/void*)arg1 ;
+(id)objectForKeyPathComponents:(id)arg1 ;
+(void)setPushSetup:(/*^block*/id)arg1 ;
+(/*^block*/id)pushSetupBlock;
+(BOOL)isPreLeanplumInstall;
+(void)reset;
+(id)pathForResource:(id)arg1 ofType:(id)arg2 ;
+(void)start;
+(void)resume;
+(void)pause;
+(void)advanceTo:(id)arg1 ;
+(void)enableTestMode;
+(void)track:(id)arg1 ;
+(id)platform;
+(id)variants;
+(BOOL)hasStarted;
+(void)setDeviceId:(id)arg1 ;
+(id)objectForKeyPath:(id)arg1 ;
+(void)setExtensionContext:(id)arg1 ;
+(void)setUserId:(id)arg1 ;
+(id)userId;
+(id)deviceId;
@end

