/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:43 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, MWAdNetController, MWAdNetTier, NSMutableArray, NSTimer, MWAdNetLock;

@interface MWAdNetAdapter : NSObject {

	NSString* sourceName;
	NSString* netName;
	MWAdNetController* controller;
	unsigned char enabled;
	int sessionCap;
	int dailyCap;
	int savedDailyDisplays;
	NSString* netID;
	MWAdNetTier* activeTier;
	NSMutableArray* tiers;
	int weight;
	int weightLimit;
	int firstLookWeight;
	int firstLookWeightLimit;
	unsigned char iPad;
	unsigned char iPhone;
	int attempts;
	int requests;
	int fills;
	int displays;
	unsigned char testingMode;
	unsigned char dismissed;
	NSTimer* deadManTimer;
	MWAdNetLock* lock;
	unsigned char requestInProgress;
	unsigned char displayError;
	unsigned char background;
	unsigned char adDisplaying;
	unsigned char adDisplayingThruReinit;
	unsigned char wifi;
	NSTimer* prerequestTimer;
	unsigned char inGeo;
	int requiredLevel;
	unsigned char errorReceived;
	unsigned char inPrerequest;
	double requestStartTime;
	double responseTime;
	unsigned char banners;
	int adType;
	unsigned char noLock;
	unsigned char rewarded;
	unsigned char noDeadMan;
	NSString* adID;
	NSString* requestErrorMsg;
	unsigned char unusable;

}

@property (retain) NSString * sourceName; 
@property (retain) NSString * netName; 
@property (retain) MWAdNetController * controller; 
@property (assign) int sessionCap; 
@property (assign) int dailyCap; 
@property (retain) NSString * netID; 
@property (assign) unsigned char unusable; 
@property (retain) MWAdNetTier * activeTier; 
@property (assign) int weight; 
@property (assign) int weightLimit; 
@property (assign) int firstLookWeight; 
@property (assign) int firstLookWeightLimit; 
@property (assign) int requests; 
@property (assign) int fills; 
@property (assign) int displays; 
@property (assign) unsigned char enabled; 
@property (retain) NSTimer * deadManTimer; 
@property (retain) NSString * requestErrorMsg; 
@property (retain) NSString * adID; 
@property (assign) unsigned char background; 
@property (assign) unsigned char rewarded; 
@property (assign) unsigned char adDisplaying; 
@property (assign) unsigned char adDisplayingThruReinit; 
@property (retain) NSTimer * prerequestTimer; 
@property (assign) unsigned char displayError; 
@property (assign) unsigned char banners; 
@property (retain) NSMutableArray * tiers; 
@property (assign) unsigned char requestInProgress; 
@property (assign) double responseTime; 
-(unsigned char)iOS7;
-(id)getBanner:(id)arg1 ;
-(void)clearBanner;
-(void)adDismissed;
-(void)adRewarded;
-(int)dailyCap;
-(id)getSDKVersion;
-(unsigned char)requestInProgress;
-(void)setRequestInProgress:(unsigned char)arg1 ;
-(void)reportClick;
-(void)setNetName:(NSString *)arg1 ;
-(NSString *)netID;
-(void)checkVersionCompatability:(id)arg1 ;
-(void)requestSuccess;
-(void)setAdID:(NSString *)arg1 ;
-(void)adapterInit:(id)arg1 ;
-(void)localClear;
-(unsigned char)preemptDeadman;
-(unsigned char)startNet;
-(unsigned char)isAdReady;
-(void)setRequestErrorMsg:(NSString *)arg1 ;
-(void)displayFinished;
-(void)adapterUnusable;
-(unsigned char)verifyIntForParam:(id)arg1 msg:(id)arg2 ;
-(void)disableAdapter;
-(unsigned char)attemptRewardedDisplay;
-(NSString *)adID;
-(void)setNetID:(NSString *)arg1 ;
-(int)getSupportedLevel;
-(void)setUnusable:(unsigned char)arg1 ;
-(void)processInGeo:(id)arg1 ;
-(void)processExGeo:(id)arg1 ;
-(void)processDisableSDK:(id)arg1 ;
-(void)clearDeadMan;
-(void)freeRequestLock;
-(void)setPrerequestTimer:(NSTimer *)arg1 ;
-(void)clearTiers;
-(void)processParams:(id)arg1 ;
-(void)verifyAdapter;
-(void)initProcess:(id)arg1 params:(id)arg2 test:(unsigned char)arg3 lock:(id)arg4 ;
-(void)setDeadManTimer:(NSTimer *)arg1 ;
-(void)delayedPreRequest;
-(unsigned char)getRequestLock;
-(void)deadNet;
-(unsigned char)privatePreDisplay:(int)arg1 tier:(id)arg2 ;
-(unsigned char)doesNotifyOfReward;
-(void)logStats;
-(void)clearAdapter;
-(void)addTier:(id)arg1 ;
-(void)removeTier:(id)arg1 ;
-(id)init:(id)arg1 params:(id)arg2 test:(unsigned char)arg3 lock:(id)arg4 ;
-(unsigned char)preRequest:(id)arg1 ;
-(unsigned char)preRewardedDisplay:(id)arg1 ;
-(unsigned char)preDisplay:(id)arg1 ;
-(void)checkVersionCompatability;
-(void)adapterTerminate;
-(id)getAdResponseInfo;
-(unsigned char)supportsBanners;
-(NSString *)netName;
-(int)sessionCap;
-(void)setSessionCap:(int)arg1 ;
-(void)setDailyCap:(int)arg1 ;
-(unsigned char)unusable;
-(MWAdNetTier *)activeTier;
-(void)setActiveTier:(MWAdNetTier *)arg1 ;
-(int)weightLimit;
-(void)setWeightLimit:(int)arg1 ;
-(int)firstLookWeight;
-(void)setFirstLookWeight:(int)arg1 ;
-(int)firstLookWeightLimit;
-(void)setFirstLookWeightLimit:(int)arg1 ;
-(void)setFills:(int)arg1 ;
-(void)setDisplays:(int)arg1 ;
-(NSTimer *)deadManTimer;
-(NSString *)requestErrorMsg;
-(unsigned char)rewarded;
-(void)setRewarded:(unsigned char)arg1 ;
-(unsigned char)adDisplaying;
-(void)setAdDisplaying:(unsigned char)arg1 ;
-(unsigned char)adDisplayingThruReinit;
-(void)setAdDisplayingThruReinit:(unsigned char)arg1 ;
-(NSTimer *)prerequestTimer;
-(unsigned char)displayError;
-(void)setDisplayError:(unsigned char)arg1 ;
-(NSMutableArray *)tiers;
-(void)setTiers:(NSMutableArray *)arg1 ;
-(unsigned char)enabled;
-(int)displays;
-(unsigned char)display;
-(unsigned char)request;
-(void)setEnabled:(unsigned char)arg1 ;
-(unsigned char)isEnabled;
-(unsigned char)background;
-(void)setBackground:(unsigned char)arg1 ;
-(MWAdNetController *)controller;
-(void)setController:(MWAdNetController *)arg1 ;
-(void)applicationWillResignActive;
-(int)weight;
-(void)setWeight:(int)arg1 ;
-(int)requests;
-(NSString *)sourceName;
-(void)setSourceName:(NSString *)arg1 ;
-(double)responseTime;
-(void)setResponseTime:(double)arg1 ;
-(void)requestError;
-(void)log:(id)arg1 ;
-(unsigned char)banners;
-(void)setBanners:(unsigned char)arg1 ;
-(void)setRequests:(int)arg1 ;
-(int)fills;
-(unsigned char)isiPad;
@end

