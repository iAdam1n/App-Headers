/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:42 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <SolitaireFree/SolitaireFree-Structs.h>
@class NSString, NSMutableArray, NSNumber, NSTimer;

@interface CBTrack : NSObject {

	BOOL _active;
	NSString* _sessionID;
	NSString* _currentFileCacheName;
	NSMutableArray* _events;
	NSNumber* _sessionStartTime;
	NSNumber* _sessionLastTime;
	NSNumber* _sessionCurrentTime;
	NSTimer* _flushTimer;

}

@property (retain) NSString * sessionID;                                 //@synthesize sessionID=_sessionID - In the implementation block
@property (retain) NSString * currentFileCacheName;                      //@synthesize currentFileCacheName=_currentFileCacheName - In the implementation block
@property (retain) NSMutableArray * events;                              //@synthesize events=_events - In the implementation block
@property (assign,nonatomic) BOOL active;                                //@synthesize active=_active - In the implementation block
@property (nonatomic,retain) NSNumber * sessionStartTime;                //@synthesize sessionStartTime=_sessionStartTime - In the implementation block
@property (nonatomic,retain) NSNumber * sessionLastTime;                 //@synthesize sessionLastTime=_sessionLastTime - In the implementation block
@property (nonatomic,retain) NSNumber * sessionCurrentTime;              //@synthesize sessionCurrentTime=_sessionCurrentTime - In the implementation block
@property (nonatomic,retain) NSTimer * flushTimer;                       //@synthesize flushTimer=_flushTimer - In the implementation block
+(void)trackSessionStart;
+(void)trackLoadError:(id)arg1 withLocation:(id)arg2 withErrorId:(unsigned long long)arg3 ;
+(void)trackClickError:(id)arg1 withLocation:(id)arg2 withErrorId:(unsigned long long)arg3 ;
+(void)trackAdGet:(id)arg1 withLocation:(id)arg2 withCaching:(BOOL)arg3 ;
+(void)trackAdLoaded:(id)arg1 withAdId:(id)arg2 withCaching:(BOOL)arg3 ;
+(void)trackAppSheetEvent:(id)arg1 withiTunesId:(id)arg2 ;
+(void)trackAdShow:(id)arg1 withLocation:(id)arg2 withAdId:(id)arg3 ;
+(void)trackAdClose:(id)arg1 withLocation:(id)arg2 withAdId:(id)arg3 ;
+(void)trackWebviewError:(id)arg1 withEvent:(id)arg2 withData:(id)arg3 withMeta:(id)arg4 forAdUnit:(id)arg5 ;
+(void)trackVideoPlayerStart:(id)arg1 withAdId:(id)arg2 withPlayCount:(int)arg3 ;
+(void)trackVideoPlayerReplay:(id)arg1 withAdId:(id)arg2 ;
+(void)trackWebviewWarning:(id)arg1 withEvent:(id)arg2 withData:(id)arg3 withMeta:(id)arg4 forAdUnit:(id)arg5 ;
+(void)trackWebviewEvent:(id)arg1 withEvent:(id)arg2 withData:(id)arg3 withMeta:(id)arg4 forAdUnit:(id)arg5 ;
+(void)trackVideoPlayerStop:(id)arg1 withAdId:(id)arg2 ;
+(void)trackRequestEvent:(id)arg1 withKingdom:(id)arg2 withPhylum:(id)arg3 withClass:(id)arg4 withFamily:(id)arg5 withGenus:(id)arg6 withMeta:(id)arg7 ;
+(void)trackAdGetBatch:(id)arg1 withLocation:(id)arg2 ;
+(void)trackAdClick:(id)arg1 withLocation:(id)arg2 withAdId:(id)arg3 ;
+(void)trackAdHas:(id)arg1 withLocation:(id)arg2 withValue:(BOOL)arg3 ;
+(void)trackVideoPlayerControlsToggle:(id)arg1 withAdId:(id)arg2 withValue:(BOOL)arg3 ;
+(void)trackVideoInstallClick:(id)arg1 withVideo:(id)arg2 withAdId:(id)arg3 withX:(int)arg4 withY:(int)arg5 ;
+(void)trackVideoConfirmationDismiss:(id)arg1 withAdId:(id)arg2 withAccept:(BOOL)arg3 ;
+(void)trackVideoConfirmationShow:(id)arg1 withAdId:(id)arg2 ;
+(void)trackVideoPlayerCloseShow:(id)arg1 withAdId:(id)arg2 withDelay:(int)arg3 ;
+(void)trackSessionEvent:(id)arg1 ;
+(void)trackSessionEnd;
+(void)trackAdMoreAppsClick:(id)arg1 withLocation:(id)arg2 withAdId:(id)arg3 withRow:(int)arg4 ;
+(void)trackAdVideoClick:(id)arg1 withLocation:(id)arg2 withAdId:(id)arg3 withClickType:(id)arg4 ;
+(void)trackVideoPrefetchBegin;
+(void)trackVideoPrefetchCacheEvent:(id)arg1 withStatus:(id)arg2 withFileId:(id)arg3 ;
+(void)trackVideoPrefetchSynchronize:(int)arg1 filesAdded:(int)arg2 filesDeleted:(int)arg3 ;
+(void)trackVideoPrefetchDownloadStart:(id)arg1 withFilename:(id)arg2 ;
+(void)trackVideoPrefetchDownloadFailure:(id)arg1 withFilename:(id)arg2 withTime:(id)arg3 withError:(id)arg4 ;
+(void)trackVideoPrefetchDownloadSuccess:(id)arg1 withFilename:(id)arg2 withTime:(id)arg3 ;
+(void)trackVideoPrefetchComplete;
+(void)trackVideoPlayAnotherDismiss:(id)arg1 withAdId:(id)arg2 withAccept:(BOOL)arg3 skipConfirmation:(BOOL)arg4 ;
+(id)getSessionID;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)shared;
-(id)generateFileCacheName;
-(void)setCurrentFileCacheName:(NSString *)arg1 ;
-(void)loadOrCreateSessionID;
-(void)listenForSystemEvents;
-(void)timerFired;
-(void)setFlushTimer:(NSTimer *)arg1 ;
-(void)trackEventInternal:(id)arg1 withKingdom:(id)arg2 withPhylum:(id)arg3 withClass:(id)arg4 withFamily:(id)arg5 withGenus:(id)arg6 trackingLevel:(id)arg7 ;
-(void)trackEventInternal:(id)arg1 withKingdom:(id)arg2 withPhylum:(id)arg3 withClass:(id)arg4 withFamily:(id)arg5 withGenus:(id)arg6 withMeta:(id)arg7 trackingLevel:(id)arg8 ;
-(NSNumber *)sessionCurrentTime;
-(NSNumber *)sessionLastTime;
-(id)valueOrString:(id)arg1 ;
-(NSString *)currentFileCacheName;
-(void)saveLatestSessionInfo;
-(void)flushNow;
-(void)flushFile:(id)arg1 ;
-(void)flushAllFiles;
-(BOOL)skipFile:(id)arg1 ;
-(void)endCurrentSession;
-(void)setSessionCurrentTime:(NSNumber *)arg1 ;
-(void)setSessionLastTime:(NSNumber *)arg1 ;
-(id)generateSessionID;
-(void)saveSessionInfo:(id)arg1 currentTime:(id)arg2 ;
-(id)createUUID;
-(NSTimer *)flushTimer;
-(id)init;
-(void)flush;
-(id)copyWithZone:(NSZone*)arg1 ;
-(BOOL)active;
-(void)setActive:(BOOL)arg1 ;
-(id)dictionaryRepresentation;
-(void)setSessionID:(NSString *)arg1 ;
-(NSString *)sessionID;
-(void)endSession:(BOOL)arg1 ;
-(void)appDidEnterBackground;
-(void)startNewSession;
-(NSMutableArray *)events;
-(NSNumber *)sessionStartTime;
-(void)setSessionStartTime:(NSNumber *)arg1 ;
-(void)appDidBecomeActive;
-(void)setEvents:(NSMutableArray *)arg1 ;
@end

