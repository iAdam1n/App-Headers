/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:43 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/SolitaireFree-Structs.h>
#import <UIKit/UIViewController.h>
#import <SolitaireFree/RhythmAPIDelegate.h>
#import <UIKit/UIWebViewDelegate.h>
#import <SolitaireFree/RhythmLandingPageWindowDelegate.h>
#import <SolitaireFree/RhythmClickHandlerDelegate.h>
#import <libobjc.A.dylib/MFMailComposeViewControllerDelegate.h>

@class RhythmVideoConfig, RhythmMediationData, RhythmAPIServer, RhythmVideoSession, NSMutableDictionary, UIWebView, UIWindow, UIView, RhythmClickHandler, RhythmLandingPageWindow, NSTimer, NSMutableArray, NSString, TrackingWebView, NSDictionary, AVPlayerViewController, RhythmOneAd;

@interface RhythmVideoViewController : UIViewController <RhythmAPIDelegate, UIWebViewDelegate, RhythmLandingPageWindowDelegate, RhythmClickHandlerDelegate, MFMailComposeViewControllerDelegate> {

	RhythmVideoConfig* videoConfig;
	RhythmMediationData* mediationData;
	RhythmAPIServer* apiDelegate;
	RhythmVideoSession* videoSession;
	NSMutableDictionary* allConfigDict;
	UIWebView* vpaidWebView;
	BOOL isVPAIDJSLoaded;
	UIWindow* fullscreenPlayerWindow;
	UIWindow* originalKeyWindow;
	long long originalStatusBarStyle;
	BOOL originalStatusBarHidden;
	long long originalStatusBarOrientation;
	BOOL restoreOriginalStatusBarOrientation;
	UIView* originalSuperview;
	CGRect originalFrame;
	unsigned long long originalAutoresizingMask;
	UIView* originalViewPlaceholder;
	BOOL shutdown;
	BOOL isFullscreen;
	RhythmClickHandler* clickHandler;
	RhythmLandingPageWindow* landingPageWindow;
	NSTimer* startAdTimer;
	NSTimer* bridgeStatusTimer;
	NSTimer* stopAdTimer;
	NSTimer* loadAdTimer;
	NSTimer* resumeAdTimer;
	BOOL isInjectedStopOrSkipAd;
	BOOL isInjectedResumeAd;
	BOOL isInjectedPauseAd;
	BOOL isAddedWebView;
	BOOL isImpressionFired;
	BOOL landingPageWindowIsOpen;
	BOOL isVPAIDAd;
	NSMutableArray* overrideKeys;
	UIWebView* timerWebView;
	BOOL isTimerJSLoaded;
	UIWebView* skipOrCloseWebView;
	BOOL isSkipOrCloseJSLoaded;
	long long currentMedCount;
	NSString* mediationType;
	TrackingWebView* trackWebView;
	NSMutableDictionary* mappingValuesAndKeys;
	NSMutableDictionary* mappingDeviceType;
	BOOL isAppConfigUrl;
	BOOL isAdSkippable;
	BOOL isSkipInjected;
	BOOL isShownAlert;
	NSMutableDictionary* trackingMacros;
	NSDictionary* displayAdData;
	BOOL isDisplayAd;
	BOOL isDisplayAdProcessing;
	int mraidState;
	UIView* mraidAdPlaceHolder;
	UIWebView* mraidExpandedViewWhenURLGiven;
	NSMutableArray* adJugglerTrackEvents;
	AVPlayerViewController* playerController;
	unsigned long long forceOrientationMaskValue;
	long long prevOrientation;
	unsigned long long prevOrientationMastValue;
	BOOL isDelayTimerRunning;
	RhythmOneAd* _rhythmOneAd;

}

@property (nonatomic,retain) RhythmVideoSession * videoSession; 
@property (nonatomic,retain) TrackingWebView * trackWebView; 
@property (nonatomic,retain) UIWebView * vpaidWebView; 
@property (assign,nonatomic) BOOL isShownAlert; 
@property (assign,nonatomic,__weak) RhythmOneAd * rhythmOneAd;               //@synthesize rhythmOneAd=_rhythmOneAd - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)sendTrackingEvent:(id)arg1 ;
-(void)resumeAd;
-(void)landingPageWindowDidDismiss:(id)arg1 ;
-(void)clickActionDone:(BOOL)arg1 ;
-(void)setRhythmOneAd:(RhythmOneAd *)arg1 ;
-(void)initiateAdRequest;
-(void)startAd;
-(void)pauseAd;
-(void)injectSkipAdToWebView;
-(void)injectStopAdToWebView;
-(void)checkNetworkStatus;
-(BOOL)getSkippableState;
-(CGSize)getAdSize;
-(id)returnValueForKey:(id)arg1 ;
-(double)adRequestTimeOut;
-(void)fireConfigTrackingUrlsForEventType:(id)arg1 ;
-(void)api:(id)arg1 dataNotLoadedWithError:(id)arg2 ;
-(void)api:(id)arg1 dataLoaded:(id)arg2 ;
-(id)returnVastTrackingHeaders;
-(id)replaceMacrosForMasterAppAndVastTrackingUrlOrHeader:(id)arg1 ;
-(RhythmVideoSession *)videoSession;
-(void)applicationEntersBackground:(id)arg1 ;
-(void)applicationEntersForeground:(id)arg1 ;
-(void)injectViewableStateToBridge:(BOOL)arg1 ;
-(void)storeSDKParamsValues;
-(void)fetchMasterConfigForUrl:(id)arg1 ;
-(void)combineAllConfigSDKAndUserValues;
-(id)constructStringUsingValuesExists:(id)arg1 StringKey:(id)arg2 IsAppConfigUrl:(BOOL)arg3 ;
-(void)fetchAppConfigForUrl:(id)arg1 ;
-(BOOL)checkRegularExpressionForBooleanValue:(id)arg1 ;
-(BOOL)checkUserValueIsValidOrNotForSizeOrPostion:(id)arg1 ;
-(void)replaceAllMacros:(id)arg1 OriginalValue:(id)arg2 Key:(id)arg3 ;
-(id)convertObjectToString:(id)arg1 ;
-(void)checkRequiredValuesAndDoAdRequest;
-(void)parseNSArray:(id)arg1 OriginalValue:(id)arg2 Key:(id)arg3 ;
-(void)parseNSDictionary:(id)arg1 OriginalValue:(id)arg2 Key:(id)arg3 ;
-(void)replaceConfigMacroString:(id)arg1 ToReplaceString:(id)arg2 Key:(id)arg3 ;
-(id)convertStringToNsArray:(id)arg1 ;
-(id)convertStringToDictionary:(id)arg1 ;
-(BOOL)isValidAppId;
-(void)sendNotificationForVpaidEvent:(id)arg1 notifyParams:(id)arg2 ;
-(void)shutdownVPAIDWebView;
-(BOOL)checkAndGetAdMediationDetails;
-(void)checkForFullscreenAndSetViewFrame;
-(void)goFullscreen;
-(id)checkAndReturnMappedMacroValue:(id)arg1 TopLevelKey:(id)arg2 ;
-(CGRect)getButtonFrameForPosition:(id)arg1 ForSize:(id)arg2 OriginSize:(CGSize)arg3 ;
-(void)handleTimeOutInLoadAd;
-(void)showCloseButtonAfterDelay;
-(id)extractParamsFromUrl:(id)arg1 ;
-(void)vpaidSkipButtonClicked;
-(void)fireVastTrackingURLsForEvent:(id)arg1 ;
-(void)killStartAdTimer;
-(void)checkVpaidAdSkippableState;
-(void)checkVPAIDBridgeStatus;
-(void)killLoadAdTimer;
-(void)parseAdJuggleTrackingEvents;
-(void)loadSkipOrCloseUrlToWebView;
-(void)loadTimerUrlToWebView;
-(void)killResumeAdTimer;
-(void)vibrateDevice;
-(void)addProxyToWebViewToMapUrlRequests;
-(void)fireAdJugglerTrackingUrlsForScheme:(id)arg1 ForAuthority:(id)arg2 ;
-(void)doNextAdRequestOrFireError:(id)arg1 ;
-(void)MRAIDExpandToSize:(CGSize)arg1 useCustomClose:(BOOL)arg2 url:(id)arg3 ;
-(void)MRAIDResizeWithParameters:(id)arg1 ;
-(void)MRAIDCloseIsButtonClicked:(BOOL)arg1 ;
-(void)showOrHideCloseDisplayButton:(BOOL)arg1 ;
-(void)openLandingPage:(id)arg1 ;
-(void)fireDisplayAdTrackingUrlsForEvent:(id)arg1 ;
-(void)MRAIDPlayVideo:(id)arg1 ;
-(void)MRAIDSetOrientationWithProperties:(id)arg1 ;
-(id)webRequestFromURL:(id)arg1 ;
-(UIWebView *)vpaidWebView;
-(void)showVpaidWebView;
-(void)fireStartAdTimer;
-(void)displayToolBarAtBottom;
-(void)killTimersIfRunning;
-(void)removeVpaidWebView;
-(void)forceCloseWebView;
-(void)didRemoveVpaidWebView;
-(void)handleTimeOutInStartAd;
-(void)killStopAdTimer;
-(void)killVPAIDBridgeStatusTimer;
-(void)showSkipButtonAfterDelay;
-(void)showOrHideSkipButton:(BOOL)arg1 ;
-(void)heartBeatCloseButtonClicked;
-(id)createExpandModalView;
-(CGRect)adjustedFrameForFrame:(CGRect)arg1 ApplicationFrame:(CGRect)arg2 ;
-(BOOL)rhythmDoesOrientation:(long long)arg1 matchOrientationMask:(unsigned long long)arg2 ;
-(void)removeExpandedView;
-(void)videoDidFinishPlaying:(id)arg1 ;
-(BOOL)rhythmSupportsOrientationMask:(unsigned long long)arg1 ;
-(void)loadTemplateToVpaidWebView;
-(void)sendErrorEvent:(id)arg1 ;
-(void)makeTrackingRequest:(id)arg1 ;
-(id)requestForTrackingWithUrl:(id)arg1 ForTrackObject:(id)arg2 ;
-(BOOL)trackingLoaded;
-(void)setIsShownAlert:(BOOL)arg1 ;
-(id)sdkName;
-(void)showOrHideCountDownTimer:(BOOL)arg1 ;
-(void)updateVPAIDTimer;
-(void)updateAdDuration:(id)arg1 ;
-(void)pausePlayBackTime;
-(void)resumePlayBackTime;
-(void)onAdStoppedOrOnAdSkippedEventFired;
-(void)doMailTo:(id)arg1 subject:(id)arg2 body:(id)arg3 ;
-(void)setVideoSession:(RhythmVideoSession *)arg1 ;
-(TrackingWebView *)trackWebView;
-(void)setTrackWebView:(TrackingWebView *)arg1 ;
-(void)setVpaidWebView:(UIWebView *)arg1 ;
-(BOOL)isShownAlert;
-(RhythmOneAd *)rhythmOneAd;
-(id)init;
-(unsigned long long)supportedInterfaceOrientations;
-(void)didReceiveMemoryWarning;
-(BOOL)shouldAutorotate;
-(void)loadView;
-(void)viewDidLoad;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3 ;
-(void)shutdown;
-(BOOL)isFullscreen;
-(id)sdkVersion;
-(id)deviceName;
@end

