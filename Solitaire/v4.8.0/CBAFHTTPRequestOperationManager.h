/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 12:03:42 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE008365-307B-4CDF-8948-1B974F28A799/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/SolitaireFree-Structs.h>
#import <libobjc.A.dylib/NSSecureCoding.h>
#import <libobjc.A.dylib/NSCopying.h>

@protocol CBAFURLRequestSerialization, CBAFURLResponseSerialization;
@class NSURL, CBAFHTTPRequestSerializer, CBAFHTTPResponseSerializer, NSOperationQueue, NSURLCredential, CBAFSecurityPolicy, CBAFNetworkReachabilityManager;

@interface CBAFHTTPRequestOperationManager : NSObject <NSSecureCoding, NSCopying> {

	BOOL _shouldUseCredentialStorage;
	NSURL* _baseURL;
	CBAFHTTPRequestSerializer*<CBAFURLRequestSerialization> _requestSerializer;
	CBAFHTTPResponseSerializer*<CBAFURLResponseSerialization> _responseSerializer;
	NSOperationQueue* _operationQueue;
	NSURLCredential* _credential;
	CBAFSecurityPolicy* _securityPolicy;
	CBAFNetworkReachabilityManager* _reachabilityManager;
	dispatch_queue_sRef _completionQueue;
	dispatch_group_sRef _completionGroup;

}

@property (nonatomic,retain) NSURL * baseURL;                                                                           //@synthesize baseURL=_baseURL - In the implementation block
@property (nonatomic,retain) CBAFHTTPRequestSerializer*<CBAFURLRequestSerialization> requestSerializer;                 //@synthesize requestSerializer=_requestSerializer - In the implementation block
@property (nonatomic,retain) CBAFHTTPResponseSerializer*<CBAFURLResponseSerialization> responseSerializer;              //@synthesize responseSerializer=_responseSerializer - In the implementation block
@property (nonatomic,retain) NSOperationQueue * operationQueue;                                                         //@synthesize operationQueue=_operationQueue - In the implementation block
@property (assign,nonatomic) BOOL shouldUseCredentialStorage;                                                           //@synthesize shouldUseCredentialStorage=_shouldUseCredentialStorage - In the implementation block
@property (nonatomic,retain) NSURLCredential * credential;                                                              //@synthesize credential=_credential - In the implementation block
@property (nonatomic,retain) CBAFSecurityPolicy * securityPolicy;                                                       //@synthesize securityPolicy=_securityPolicy - In the implementation block
@property (nonatomic,retain) CBAFNetworkReachabilityManager * reachabilityManager;                                      //@synthesize reachabilityManager=_reachabilityManager - In the implementation block
@property (assign,nonatomic) dispatch_queue_sRef completionQueue;                                                       //@synthesize completionQueue=_completionQueue - In the implementation block
@property (assign,nonatomic) dispatch_group_sRef completionGroup;                                                       //@synthesize completionGroup=_completionGroup - In the implementation block
+(id)manager;
+(BOOL)supportsSecureCoding;
-(void)setResponseSerializer:(CBAFHTTPResponseSerializer*<CBAFURLResponseSerialization>)arg1 ;
-(CBAFHTTPResponseSerializer*<CBAFURLResponseSerialization>)responseSerializer;
-(dispatch_group_sRef)completionGroup;
-(void)setCompletionGroup:(dispatch_group_sRef)arg1 ;
-(id)HTTPRequestOperationWithRequest:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(void)setShouldUseCredentialStorage:(BOOL)arg1 ;
-(void)setSecurityPolicy:(CBAFSecurityPolicy *)arg1 ;
-(CBAFSecurityPolicy *)securityPolicy;
-(BOOL)shouldUseCredentialStorage;
-(void)setRequestSerializer:(CBAFHTTPRequestSerializer*<CBAFURLRequestSerialization>)arg1 ;
-(CBAFHTTPRequestSerializer*<CBAFURLRequestSerialization>)requestSerializer;
-(id)HTTPRequestOperationWithHTTPMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 ;
-(id)GET:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)HEAD:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)POST:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)POST:(id)arg1 parameters:(id)arg2 constructingBodyWithBlock:(/*^block*/id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 ;
-(id)PUT:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)PATCH:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)DELETE:(id)arg1 parameters:(id)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(NSURL *)baseURL;
-(NSOperationQueue *)operationQueue;
-(NSURLCredential *)credential;
-(void)setBaseURL:(NSURL *)arg1 ;
-(void)setCompletionQueue:(dispatch_queue_sRef)arg1 ;
-(dispatch_queue_sRef)completionQueue;
-(id)initWithBaseURL:(id)arg1 ;
-(void)setCredential:(NSURLCredential *)arg1 ;
-(CBAFNetworkReachabilityManager *)reachabilityManager;
-(void)setReachabilityManager:(CBAFNetworkReachabilityManager *)arg1 ;
@end

