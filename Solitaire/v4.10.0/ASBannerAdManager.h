/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:42:13 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/2E0DF6B4-8C57-4F66-9862-2B2C129D4027/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/SolitaireFree-Structs.h>
#import <SolitaireFree/ASAdManager.h>
#import <SolitaireFree/ASBannerAdProviderDelegate.h>
#import <SolitaireFree/ASMetricsDelegate.h>

@protocol ASBannerAdManagerDelegate;
@class NSString, ASBannerAdProvider, NSTimer, NSMutableArray, NSDictionary, NSMutableDictionary, NSArray, ASErrorCodeManager, ASTransactionInfo, ASMetricsUtil;

@interface ASBannerAdManager : ASAdManager <ASBannerAdProviderDelegate, ASMetricsDelegate> {

	BOOL _isLoading;
	BOOL _isFallingBack;
	NSString* closeOffset;
	id<ASBannerAdManagerDelegate> _delegate;
	double _bannerRefershTimeInterval;
	ASBannerAdProvider* _providerBeingAttempted;
	NSTimer* _timeoutTimer;
	NSMutableArray* _adTypesToTry;
	NSDictionary* _headers;
	NSMutableDictionary* _properties;
	NSString* _plcId;
	unsigned long long _env;
	NSArray* _keyWords;
	NSDictionary* _pubKeys;
	NSString* _userId;
	ASErrorCodeManager* _errCodeManager;
	ASTransactionInfo* _transactionInfo;
	unsigned long long _platform;
	ASMetricsUtil* _metrics;
	CGSize _adSize;

}

@property (assign,nonatomic) CGSize adSize;                                              //@synthesize adSize=_adSize - In the implementation block
@property (nonatomic,retain) ASBannerAdProvider * providerBeingAttempted;                //@synthesize providerBeingAttempted=_providerBeingAttempted - In the implementation block
@property (assign,nonatomic) BOOL isLoading;                                             //@synthesize isLoading=_isLoading - In the implementation block
@property (nonatomic,retain) NSTimer * timeoutTimer;                                     //@synthesize timeoutTimer=_timeoutTimer - In the implementation block
@property (assign,nonatomic) BOOL isFallingBack;                                         //@synthesize isFallingBack=_isFallingBack - In the implementation block
@property (nonatomic,retain) NSMutableArray * adTypesToTry;                              //@synthesize adTypesToTry=_adTypesToTry - In the implementation block
@property (nonatomic,retain) NSDictionary * headers;                                     //@synthesize headers=_headers - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * properties;                           //@synthesize properties=_properties - In the implementation block
@property (nonatomic,copy) NSString * plcId;                                             //@synthesize plcId=_plcId - In the implementation block
@property (assign,nonatomic) unsigned long long env;                                     //@synthesize env=_env - In the implementation block
@property (nonatomic,retain) NSArray * keyWords;                                         //@synthesize keyWords=_keyWords - In the implementation block
@property (nonatomic,retain) NSDictionary * pubKeys;                                     //@synthesize pubKeys=_pubKeys - In the implementation block
@property (nonatomic,copy) NSString * userId;                                            //@synthesize userId=_userId - In the implementation block
@property (nonatomic,retain) ASErrorCodeManager * errCodeManager;                        //@synthesize errCodeManager=_errCodeManager - In the implementation block
@property (nonatomic,retain) ASTransactionInfo * transactionInfo;                        //@synthesize transactionInfo=_transactionInfo - In the implementation block
@property (assign,nonatomic) unsigned long long platform;                                //@synthesize platform=_platform - In the implementation block
@property (nonatomic,retain) ASMetricsUtil * metrics;                                    //@synthesize metrics=_metrics - In the implementation block
@property (assign,nonatomic,__weak) id<ASBannerAdManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) double bannerRefershTimeInterval;                           //@synthesize bannerRefershTimeInterval=_bannerRefershTimeInterval - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSString * closeOffset; 
+(void)initialize;
-(void)bannerProvider:(id)arg1 didFailToLoadAdWithError:(id)arg2 ;
-(void)bannerProvider:(id)arg1 didFinishLoadingPreloadAd:(id)arg2 ;
-(void)bannerProvider:(id)arg1 didLoadAd:(id)arg2 ;
-(void)bannerProvider:(id)arg1 didPreloadAd:(id)arg2 ;
-(id)viewControllerForPresentingModalView;
-(id)bannerProviderWillGetAdView:(id)arg1 ;
-(BOOL)bannerProviderAdAttemptIsPreload:(id)arg1 ;
-(void)bannerProviderAdWasClicked:(id)arg1 ;
-(void)bannerProviderDidShowAdCompletely:(id)arg1 ;
-(void)bannerProviderWillEndAction:(id)arg1 ;
-(void)bannerProviderWillLeaveApplication:(id)arg1 ;
-(void)bannerProviderWillBeginAction:(id)arg1 ;
-(void)startPreloadedBannerAd;
-(void)setCloseOffset:(NSString *)arg1 ;
-(NSString *)closeOffset;
-(void)metrics:(id)arg1 didFireAdvertiserEventWithMessage:(id)arg2 ;
-(void)setPubKeys:(NSDictionary *)arg1 ;
-(NSDictionary *)pubKeys;
-(void)rotateToOrientation:(long long)arg1 withSize:(CGSize)arg2 ;
-(void)bannerProviderWillAttemptRefresh:(id)arg1 ;
-(void)stopAutomaticallyRefreshingAds;
-(void)startAutomaticallyRefreshingAds;
-(ASBannerAdProvider *)providerBeingAttempted;
-(void)setProviderBeingAttempted:(ASBannerAdProvider *)arg1 ;
-(void)killTimeoutTimer;
-(void)setTransactionInfo:(ASTransactionInfo *)arg1 ;
-(NSMutableArray *)adTypesToTry;
-(void)reportErrorToDelegate:(id)arg1 ;
-(void)setPlcId:(NSString *)arg1 ;
-(void)setEnv:(unsigned long long)arg1 ;
-(void)setKeyWords:(NSArray *)arg1 ;
-(NSString *)plcId;
-(NSArray *)keyWords;
-(void)setIsFallingBack:(BOOL)arg1 ;
-(void)setAdTypesToTry:(NSMutableArray *)arg1 ;
-(void)processMediationJSON:(id)arg1 ;
-(void)processFallbacks;
-(void)processPublisherSettings;
-(void)processEventResponse:(id)arg1 url:(id)arg2 withData:(id)arg3 ;
-(void)scheduleTimeOutTimer;
-(void)onTimeOutTimer;
-(unsigned long long)env;
-(void)fetchBannerAdForPlacementID:(id)arg1 inEnv:(unsigned long long)arg2 usingKeyWords:(id)arg3 andPubKeys:(id)arg4 withUserID:(id)arg5 onPlatform:(unsigned long long)arg6 ;
-(void)getFallbackAd;
-(double)bannerRefershTimeInterval;
-(void)reportLoadAttemptForProvider;
-(void)setBannerRefershTimeInterval:(double)arg1 ;
-(void)setErrCodeManager:(ASErrorCodeManager *)arg1 ;
-(ASErrorCodeManager *)errCodeManager;
-(ASTransactionInfo *)transactionInfo;
-(void)reportProviderAdLoaded;
-(void)bannerLoadSuccessfulCleanup;
-(void)reportErrorForProvider;
-(void)bannerProviderAdChangedSize:(id)arg1 ;
-(id)getKeyWords;
-(id)getPubKeys;
-(void)bannerProvider:(id)arg1 willChangeFrameTo:(CGRect)arg2 ;
-(id)bannerProviderWillGetContentView:(id)arg1 ;
-(void)bannerProvider:(id)arg1 willSetContentViewToMRAIDView:(id)arg2 ;
-(void)bannerProvider:(id)arg1 didLoadPlayerLayer:(id)arg2 ;
-(void)bannerProvider:(id)arg1 willShowSkip:(BOOL)arg2 ;
-(void)bannerProvider:(id)arg1 didFireAdvertiserEventWithMessage:(id)arg2 ;
-(CGSize)adSize;
-(void)setAdSize:(CGSize)arg1 ;
-(BOOL)isFallingBack;
-(void)AVPlayerCreated:(id)arg1 ;
-(id)init;
-(void)cancel;
-(void)setDelegate:(id<ASBannerAdManagerDelegate>)arg1 ;
-(void)dealloc;
-(id<ASBannerAdManagerDelegate>)delegate;
-(void)rotateToOrientation:(long long)arg1 ;
-(BOOL)isLoading;
-(void)setProperties:(NSMutableDictionary *)arg1 ;
-(ASMetricsUtil *)metrics;
-(NSMutableDictionary *)properties;
-(void)setIsLoading:(BOOL)arg1 ;
-(NSString *)userId;
-(void)setUserId:(NSString *)arg1 ;
-(unsigned long long)platform;
-(NSDictionary *)headers;
-(void)setHeaders:(NSDictionary *)arg1 ;
-(void)setMetrics:(ASMetricsUtil *)arg1 ;
-(void)setPlatform:(unsigned long long)arg1 ;
-(void)forceRefresh;
-(void)setTimeoutTimer:(NSTimer *)arg1 ;
-(NSTimer *)timeoutTimer;
@end

