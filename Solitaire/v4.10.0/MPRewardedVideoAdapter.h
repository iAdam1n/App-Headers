/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:42:14 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/2E0DF6B4-8C57-4F66-9862-2B2C129D4027/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/MPPrivateRewardedVideoCustomEventDelegate.h>

@protocol MPRewardedVideoAdapterDelegate;
@class MPRewardedVideoCustomEvent, MPAdConfiguration, MPTimer, NSString;

@interface MPRewardedVideoAdapter : NSObject <MPPrivateRewardedVideoCustomEventDelegate> {

	BOOL _hasTrackedImpression;
	BOOL _hasTrackedClick;
	BOOL _hasSuccessfullyLoaded;
	BOOL _hasExpired;
	id<MPRewardedVideoAdapterDelegate> _delegate;
	MPRewardedVideoCustomEvent* _rewardedVideoCustomEvent;
	MPAdConfiguration* _configuration;
	MPTimer* _timeoutTimer;

}

@property (nonatomic,retain) MPRewardedVideoCustomEvent * rewardedVideoCustomEvent;              //@synthesize rewardedVideoCustomEvent=_rewardedVideoCustomEvent - In the implementation block
@property (nonatomic,retain) MPAdConfiguration * configuration;                                  //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,retain) MPTimer * timeoutTimer;                                             //@synthesize timeoutTimer=_timeoutTimer - In the implementation block
@property (assign,nonatomic) BOOL hasTrackedImpression;                                          //@synthesize hasTrackedImpression=_hasTrackedImpression - In the implementation block
@property (assign,nonatomic) BOOL hasTrackedClick;                                               //@synthesize hasTrackedClick=_hasTrackedClick - In the implementation block
@property (assign,nonatomic) BOOL hasSuccessfullyLoaded;                                         //@synthesize hasSuccessfullyLoaded=_hasSuccessfullyLoaded - In the implementation block
@property (assign,nonatomic) BOOL hasExpired;                                                    //@synthesize hasExpired=_hasExpired - In the implementation block
@property (assign,nonatomic,__weak) id<MPRewardedVideoAdapterDelegate> delegate;                 //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)startTimeoutTimer;
-(void)setRewardedVideoCustomEvent:(MPRewardedVideoCustomEvent *)arg1 ;
-(MPRewardedVideoCustomEvent *)rewardedVideoCustomEvent;
-(BOOL)hasAdAvailable;
-(void)presentRewardedVideoFromViewController:(id)arg1 ;
-(void)handleAdPlayedForCustomEventNetwork;
-(id)instanceMediationSettingsForClass:(Class)arg1 ;
-(BOOL)hasSuccessfullyLoaded;
-(void)setHasSuccessfullyLoaded:(BOOL)arg1 ;
-(void)didStopLoading;
-(void)setHasExpired:(BOOL)arg1 ;
-(BOOL)hasTrackedImpression;
-(void)setHasTrackedImpression:(BOOL)arg1 ;
-(void)trackImpression;
-(BOOL)hasTrackedClick;
-(void)setHasTrackedClick:(BOOL)arg1 ;
-(void)trackClick;
-(id)adUnitId;
-(void)rewardedVideoDidLoadAdForCustomEvent:(id)arg1 ;
-(void)rewardedVideoDidFailToLoadAdForCustomEvent:(id)arg1 error:(id)arg2 ;
-(void)rewardedVideoDidExpireForCustomEvent:(id)arg1 ;
-(void)rewardedVideoDidFailToPlayForCustomEvent:(id)arg1 error:(id)arg2 ;
-(void)rewardedVideoWillAppearForCustomEvent:(id)arg1 ;
-(void)rewardedVideoDidAppearForCustomEvent:(id)arg1 ;
-(void)rewardedVideoWillDisappearForCustomEvent:(id)arg1 ;
-(void)rewardedVideoDidDisappearForCustomEvent:(id)arg1 ;
-(void)rewardedVideoWillLeaveApplicationForCustomEvent:(id)arg1 ;
-(void)rewardedVideoDidReceiveTapEventForCustomEvent:(id)arg1 ;
-(void)rewardedVideoShouldRewardUserForCustomEvent:(id)arg1 reward:(id)arg2 ;
-(void)getAdWithConfiguration:(id)arg1 ;
-(void)setDelegate:(id<MPRewardedVideoAdapterDelegate>)arg1 ;
-(void)dealloc;
-(id<MPRewardedVideoAdapterDelegate>)delegate;
-(id)initWithDelegate:(id)arg1 ;
-(void)setConfiguration:(MPAdConfiguration *)arg1 ;
-(MPAdConfiguration *)configuration;
-(BOOL)hasExpired;
-(void)timeout;
-(void)setTimeoutTimer:(MPTimer *)arg1 ;
-(MPTimer *)timeoutTimer;
@end

