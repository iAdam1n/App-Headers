/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:42:13 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/2E0DF6B4-8C57-4F66-9862-2B2C129D4027/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/GKMatchmakerViewControllerDelegate.h>
#import <libobjc.A.dylib/GKMatchDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>

@protocol GameCenterController;
@class UIViewController, GameCenter, GKMatch, NSString, GKVoiceChat, GKMatchmakerViewController, UIAlertView, GKInvite, NSTimer;

@interface MultiPlayer : NSObject <GKMatchmakerViewControllerDelegate, GKMatchDelegate, UIAlertViewDelegate> {

	UIViewController*<GameCenterController> viewController;
	GameCenter* gameCenter;
	GKMatch* match;
	unsigned char matchStarted;
	NSString* otherPlayerAlias;
	GKVoiceChat* allChannel;
	GKVoiceChat* allChannelDelayRelease;
	unsigned char wantVoiceChat;
	unsigned char otherWillVoiceChat;
	GKMatchmakerViewController* mmvc;
	unsigned char iAmTheDealer;
	unsigned char askPlayDisplayed;
	UIViewController* actionViewController;
	unsigned char chatDeclined;
	unsigned char sentPlayAgain;
	UIAlertView* noPlayAlert;
	GKInvite* saveInvite;
	unsigned char matchmakerShowing;
	NSTimer* receiveTimer;

}

@property (retain) GKInvite * saveInvite; 
@property (retain) GKMatch * match; 
@property (retain) NSString * otherPlayerAlias; 
@property (assign) unsigned char wantVoiceChat; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)sendAskPlayAgain;
-(NSString *)otherPlayerAlias;
-(void)letsChat;
-(void)declineChat;
-(void)sendControl:(int)arg1 ;
-(unsigned char)isChatCapable;
-(unsigned char)isChatOn;
-(unsigned char)goForeground;
-(void)turnChatOff:(id)arg1 active:(unsigned char)arg2 ;
-(GKInvite *)saveInvite;
-(void)acceptInviteAfterAuthentication;
-(id)init:(id)arg1 vc:(id)arg2 ;
-(void)statusBarDefault;
-(BOOL)hostMatch:(id)arg1 ;
-(void)delayRelease;
-(void)sendMsg:(int)arg1 msg:(id)arg2 ;
-(void)startVoiceChatForReal;
-(void)startVoiceChat;
-(void)sendAlias;
-(id)getMsgFromMsg:(char*)arg1 offset:(int)arg2 ;
-(void)setOtherPlayerAlias:(NSString *)arg1 ;
-(void)playerConnected:(unsigned char)arg1 ;
-(void)setSaveInvite:(GKInvite *)arg1 ;
-(void)delayedInvite:(id)arg1 ;
-(void)dismissMMVC;
-(void)setupTimeout;
-(void)sendError:(id)arg1 ;
-(void)match:(id)arg1 connectionWithPlayerFailed:(id)arg2 withError:(id)arg3 ;
-(void)queryActivity;
-(unsigned char)wantVoiceChat;
-(void)setWantVoiceChat:(unsigned char)arg1 ;
-(void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2 ;
-(void)disconnect;
-(void)sendData:(id)arg1 ;
-(void)match:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3 ;
-(void)match:(id)arg1 player:(id)arg2 didChangeState:(long long)arg3 ;
-(void)match:(id)arg1 didFailWithError:(id)arg2 ;
-(void)inviteHandler;
-(void)matchmakerViewControllerWasCancelled:(id)arg1 ;
-(void)matchmakerViewController:(id)arg1 didFailWithError:(id)arg2 ;
-(void)matchmakerViewController:(id)arg1 didFindMatch:(id)arg2 ;
-(void)setMatch:(GKMatch *)arg1 ;
-(GKMatch *)match;
@end

