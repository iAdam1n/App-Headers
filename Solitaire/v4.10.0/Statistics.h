/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:42:12 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/2E0DF6B4-8C57-4F66-9862-2B2C129D4027/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SolitaireFree/SolitaireFree-Structs.h>
#import <SolitaireFree/MWPViewController.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <UIKit/UITextViewDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <UIKit/UITableViewDelegate.h>
#import <UIKit/UITableViewDataSource.h>
#import <SolitaireFree/AchievementDisplayDelegate.h>

@class MWFlatButton, UITextView, UITableView, GameCenter, NSMutableArray, NSMutableString, UIView, AchievementDisplay, UIImageView, NSString;

@interface Statistics : MWPViewController <UINavigationControllerDelegate, UITextViewDelegate, UIAlertViewDelegate, UITableViewDelegate, UITableViewDataSource, AchievementDisplayDelegate> {

	int dataLen;
	MWFlatButton* doneButton;
	MWFlatButton* resetButton;
	int win1NoUndos;
	int win3NoUndos;
	int draw1Loses;
	int draw3Loses;
	int replay1Games;
	int replay3Games;
	int draw1Wins;
	int draw3Wins;
	int most1WinningMoves;
	int fewest1WinningMoves;
	int shortest1WinTime;
	int longest1WinTime;
	int most3WinningMoves;
	int fewest3WinningMoves;
	int tot1WinMoves;
	int tot3WinMoves;
	int shortest3WinTime;
	int longest3WinTime;
	int tot1Time;
	int tot3Time;
	int tot1WinTime;
	int tot3WinTime;
	UITextView* stats1TextView;
	UITextView* stats3TextView;
	UITableView* myTableView;
	int highStd1Score;
	int highStd3Score;
	int highVegas1Score;
	int highVegas3Score;
	int vegasScoreSave;
	int hVSs;
	int lVSs;
	GameCenter* gameCenter;
	unsigned char drawNbrChanged;
	int hints;
	int undos;
	int curr1Streak;
	int high1Streak;
	int curr3Streak;
	int high3Streak;
	int winsInARow;
	int gcWinStreak;
	int pending1Score;
	int pending3Score;
	int win1AvgTotal;
	int win3AvgTotal;
	NSMutableArray* achievementsText;
	NSMutableString* achieveEmail;
	unsigned char replay;
	int multiPlayerConfirmedWins;
	int multiPlayerLoses;
	int multiPlayerWinsByForfeit;
	int multiPlayerWinsByTimesUp;
	int multiPlayerTies;
	unsigned char loaded;
	UIView* cview;
	unsigned char fromStats;
	unsigned char isFirstRun;
	NSMutableString* facebookAchieve;
	int achieveCount;
	AchievementDisplay* achievementDisplay;
	UIImageView* topLine;
	BOOL _trophyLinkPressed;

}

@property (readonly) int fewest1WinningMoves; 
@property (readonly) int shortest1WinTime; 
@property (readonly) int fewest3WinningMoves; 
@property (readonly) int shortest3WinTime; 
@property (readonly) int highStd1Score; 
@property (readonly) int highStd3Score; 
@property (readonly) int highVegas1Score; 
@property (readonly) int highVegas3Score; 
@property (__weak) GameCenter * gameCenter; 
@property (assign) unsigned char drawNbrChanged; 
@property (assign) unsigned char replay; 
@property (assign) int hints; 
@property (assign) int undos; 
@property (assign) int multiPlayerConfirmedWins; 
@property (assign) int multiPlayerLoses; 
@property (assign) int multiPlayerWinsByForfeit; 
@property (assign) int multiPlayerWinsByTimesUp; 
@property (assign) int multiPlayerTies; 
@property (assign) unsigned char fromStats; 
@property (readonly) unsigned char isFirstRun; 
@property (assign) BOOL trophyLinkPressed;                          //@synthesize trophyLinkPressed=_trophyLinkPressed - In the implementation block
@property (readonly) int draw1Loses; 
@property (readonly) int draw3Loses; 
@property (readonly) int draw1Wins; 
@property (readonly) int draw3Wins; 
@property (readonly) int high1Streak; 
@property (readonly) int high3Streak; 
@property (readonly) int tot1WinTime; 
@property (readonly) int tot3WinTime; 
@property (readonly) int curr1Streak; 
@property (readonly) int curr3Streak; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedStats;
-(id)initWithMain:(id)arg1 ;
-(CGSize)suggestedSize:(long long)arg1 ;
-(void)moveControls:(long long)arg1 ;
-(int)undos;
-(void)setUndos:(int)arg1 ;
-(void)loadStats;
-(void)setGameCenter:(GameCenter *)arg1 ;
-(void)setValues;
-(id)getNextString:(char*)arg1 idx:(int)arg2 ;
-(void)saveStats;
-(void)checkForWinsCorruption;
-(void)resetAction:(id)arg1 ;
-(void)releaseAchievementDisplay;
-(void)achievementToDisplay:(int)arg1 ;
-(void)beginHidingDimView;
-(void)finishHidingDimView;
-(unsigned char)displayAchievement:(BOOL)arg1 ;
-(BOOL)trophyLinkPressed;
-(void)setTrophyLinkPressed:(BOOL)arg1 ;
-(void)submitVegasScore;
-(void)gamesPlayedAchievement;
-(void)gamesWonAchievement:(int)arg1 time:(int)arg2 ;
-(void)doneActionAnimated:(BOOL)arg1 ;
-(void)showDimBelowView:(id)arg1 ;
-(void)tellfriend;
-(id)obtainTableCellForRow:(long long)arg1 ;
-(id)fieldLabelWithFrame:(CGRect)arg1 title:(id)arg2 color:(id)arg3 ;
-(void)dismissAchievement;
-(BOOL)achievementButtonPressed;
-(void)incUndos;
-(void)incHints;
-(void)resolveAchievement:(int)arg1 percent:(double)arg2 ;
-(void)convertAchievements:(id)arg1 achievementControl:(id)arg2 ;
-(void)scoreSubmitted:(id)arg1 ;
-(void)submitPendingScores;
-(unsigned char)canEmail;
-(void)toldAFriend:(int)arg1 ;
-(void)top15Score;
-(void)betterSolution;
-(void)multiPlayerWin;
-(void)multiPlayerClear;
-(unsigned char)areWinsAllZero;
-(unsigned char)syncLeaderboard:(id)arg1 Value:(long long)arg2 ;
-(void)gameLost:(unsigned char)arg1 replay:(unsigned char)arg2 time:(int)arg3 moves:(int)arg4 ;
-(void)gameWon:(unsigned char)arg1 moves:(int)arg2 time:(int)arg3 ;
-(void)resetDailyChallengesMessage;
-(void)releaseFacebook;
-(int)getTotalWins;
-(id)statsForPlayerLog;
-(GameCenter *)gameCenter;
-(unsigned char)drawNbrChanged;
-(void)setDrawNbrChanged:(unsigned char)arg1 ;
-(void)setReplay:(unsigned char)arg1 ;
-(int)multiPlayerConfirmedWins;
-(void)setMultiPlayerConfirmedWins:(int)arg1 ;
-(int)multiPlayerLoses;
-(void)setMultiPlayerLoses:(int)arg1 ;
-(int)multiPlayerWinsByForfeit;
-(void)setMultiPlayerWinsByForfeit:(int)arg1 ;
-(int)multiPlayerWinsByTimesUp;
-(void)setMultiPlayerWinsByTimesUp:(int)arg1 ;
-(int)multiPlayerTies;
-(void)setMultiPlayerTies:(int)arg1 ;
-(int)fewest1WinningMoves;
-(int)shortest1WinTime;
-(int)fewest3WinningMoves;
-(int)shortest3WinTime;
-(int)highStd1Score;
-(int)highStd3Score;
-(unsigned char)fromStats;
-(void)setFromStats:(unsigned char)arg1 ;
-(int)highVegas1Score;
-(int)highVegas3Score;
-(int)draw1Loses;
-(int)draw1Wins;
-(int)high1Streak;
-(int)high3Streak;
-(int)draw3Loses;
-(int)draw3Wins;
-(int)tot1WinTime;
-(int)tot3WinTime;
-(int)curr1Streak;
-(int)curr3Streak;
-(double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2 ;
-(long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInTableView:(id)arg1 ;
-(id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2 ;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(CGSize)contentSizeForViewInPopoverView;
-(void)setHints:(int)arg1 ;
-(int)hints;
-(void)getValues;
-(int)gamesPlayed;
-(unsigned char)replay;
-(void)updateDisplay;
-(unsigned char)isFirstRun;
-(void)doneAction:(id)arg1 ;
@end

