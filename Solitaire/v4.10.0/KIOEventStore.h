/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:42:14 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/2E0DF6B4-8C57-4F66-9862-2B2C129D4027/SolitaireFree.app/SolitaireFree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <SolitaireFree/SolitaireFree-Structs.h>
@class NSString;

@interface KIOEventStore : NSObject {

	keen_io_sqlite3Ref keen_dbname;
	BOOL dbIsOpen;
	BOOL dbIsTableCreated;
	BOOL dbIsStmtPrepared;
	keen_io_sqlite3_stmtRef insert_stmt;
	keen_io_sqlite3_stmtRef find_stmt;
	keen_io_sqlite3_stmtRef count_all_stmt;
	keen_io_sqlite3_stmtRef count_pending_stmt;
	keen_io_sqlite3_stmtRef make_pending_stmt;
	keen_io_sqlite3_stmtRef reset_pending_stmt;
	keen_io_sqlite3_stmtRef purge_stmt;
	keen_io_sqlite3_stmtRef delete_stmt;
	keen_io_sqlite3_stmtRef delete_all_stmt;
	keen_io_sqlite3_stmtRef age_out_stmt;
	keen_io_sqlite3_stmtRef convert_date_stmt;
	NSString* _projectId;
	NSString* _lastErrorMessage;
	dispatch_queue_sRef _dbQueue;

}

@property (assign,nonatomic) dispatch_queue_sRef dbQueue;              //@synthesize dbQueue=_dbQueue - In the implementation block
@property (nonatomic,retain) NSString * projectId;                     //@synthesize projectId=_projectId - In the implementation block
@property (nonatomic,retain) NSString * lastErrorMessage;              //@synthesize lastErrorMessage=_lastErrorMessage - In the implementation block
+(void)initializeEncryptionKey:(id)arg1 ;
-(id)base64Encode:(id)arg1 ;
-(BOOL)openAndInitDB;
-(BOOL)isDatabaseFileAccessible;
-(BOOL)createTable;
-(BOOL)prepareAllSQLiteStatements;
-(void)handleSQLiteFailure:(id)arg1 ;
-(NSString *)projectId;
-(BOOL)hasPendingEvents;
-(void)resetPendingEvents;
-(id)decrypt:(id)arg1 ;
-(void)deleteEvent:(id)arg1 ;
-(unsigned long long)getPendingEventCount;
-(id)getDatabaseFilePath;
-(void)closeDB;
-(id)encdecBase:(int)arg1 data:(id)arg2 ;
-(id)base64Decode:(id)arg1 ;
-(void)releaseStatements;
-(void)setLastErrorMessage:(NSString *)arg1 ;
-(BOOL)addEvent:(id)arg1 collection:(id)arg2 ;
-(id)getEvents;
-(unsigned long long)getTotalEventCount;
-(void)deleteAllEvents;
-(void)deleteEventsFromOffset:(id)arg1 ;
-(void)purgePendingEvents;
-(id)convertNSDateToISO8601:(id)arg1 ;
-(void)setProjectId:(NSString *)arg1 ;
-(id)init;
-(BOOL)openDB;
-(NSString *)lastErrorMessage;
-(id)encrypt:(id)arg1 ;
-(dispatch_queue_sRef)dbQueue;
-(void)setDbQueue:(dispatch_queue_sRef)arg1 ;
@end

