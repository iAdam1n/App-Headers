/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:27:56 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/21F2B006-1C28-48A8-85CE-538D78391B66/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@class CritterImpl;

@interface Crittercism : NSObject {

	CritterImpl* critter_;

}

@property (assign,nonatomic) CritterImpl * critter; 
+(void)enableWithAppID:(id)arg1 andConfig:(id)arg2 ;
+(void)leaveBreadcrumb:(id)arg1 ;
+(void)cr_logCritterError:(id)arg1 ;
+(unsigned long long)maxOfflineCrashReports;
+(void)setMaxOfflineCrashReports:(unsigned long long)arg1 ;
+(void)logPluginException:(id)arg1 ;
+(void)setAsyncBreadcrumbMode:(BOOL)arg1 ;
+(BOOL)getOptOutStatus;
+(void)setOptOutStatus:(BOOL)arg1 ;
+(void)beginTransaction:(id)arg1 withValue:(int)arg2 ;
+(void)failTransaction:(id)arg1 ;
+(void)setValue:(int)arg1 forTransaction:(id)arg2 ;
+(int)valueForTransaction:(id)arg1 ;
+(void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 disableInstrumentation:(BOOL)arg4 ;
+(id)sharedCritter;
+(void)enableFromConfigFile;
+(BOOL)logHandledException:(id)arg1 ;
+(BOOL)logNetworkRequest:(id)arg1 url:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7 ;
+(id)getUserUUID;
+(BOOL)didCrashOnLastLoad;
+(void)cr_interruptTransaction:(id)arg1 ;
+(void)cr_cantFindTransaction:(id)arg1 ;
+(void)enableWithAppID:(id)arg1 ;
+(void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 ;
+(void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 ;
+(void)enableWithAppID:(id)arg1 andURLFilters:(id)arg2 ;
+(void)resetSharedCritter;
+(void)setValue:(id)arg1 forKey:(id)arg2 ;
+(void)setDelegate:(id)arg1 ;
+(id)delegate;
+(void)load;
+(void)setUsername:(id)arg1 ;
+(BOOL)logError:(id)arg1 ;
+(void)beginTransaction:(id)arg1 ;
+(void)endTransaction:(id)arg1 ;
+(void)addFilter:(id)arg1 ;
+(void)updateLocation:(id)arg1 ;
-(void)enableWithAppID:(id)arg1 andConfig:(id)arg2 ;
-(void)leaveBreadcrumb:(id)arg1 ;
-(void)cr_logCritterError:(id)arg1 ;
-(unsigned long long)maxOfflineCrashReports;
-(void)setMaxOfflineCrashReports:(unsigned long long)arg1 ;
-(void)logPluginException:(id)arg1 ;
-(void)setAsyncBreadcrumbMode:(BOOL)arg1 ;
-(BOOL)getOptOutStatus;
-(void)setOptOutStatus:(BOOL)arg1 ;
-(void)enableFromConfigFile;
-(BOOL)logHandledException:(id)arg1 ;
-(BOOL)logNetworkRequest:(id)arg1 url:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7 ;
-(id)getUserUUID;
-(BOOL)didCrashOnLastLoad;
-(CritterImpl *)critter;
-(void)setCritter:(CritterImpl *)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(void)setDelegate:(id)arg1 ;
-(id)init;
-(id)delegate;
-(void)setUsername:(id)arg1 ;
-(BOOL)logError:(id)arg1 ;
-(void)addFilter:(id)arg1 ;
@end

