/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:27:52 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/21F2B006-1C28-48A8-85CE-538D78391B66/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol GAITracker;
@class NSString, NSDictionary;

@interface MetricsGoogleAnalytics : NSObject {

	BOOL _debug;
	BOOL _ivSessionRunning;
	NSString* _identifier;
	NSString* _currentScreen;
	NSString* _previousScreen;
	id<GAITracker> _tracker;
	NSDictionary* _hitDimensions;

}

@property (nonatomic,retain) NSString * identifier;                     //@synthesize identifier=_identifier - In the implementation block
@property (assign,nonatomic) BOOL debug;                                //@synthesize debug=_debug - In the implementation block
@property (nonatomic,retain) NSString * currentScreen;                  //@synthesize currentScreen=_currentScreen - In the implementation block
@property (nonatomic,retain) NSString * previousScreen;                 //@synthesize previousScreen=_previousScreen - In the implementation block
@property (nonatomic,retain) id<GAITracker> tracker;                    //@synthesize tracker=_tracker - In the implementation block
@property (assign,nonatomic) BOOL ivSessionRunning;                     //@synthesize ivSessionRunning=_ivSessionRunning - In the implementation block
@property (nonatomic,retain) NSDictionary * hitDimensions;              //@synthesize hitDimensions=_hitDimensions - In the implementation block
+(id)customDimensionIndexMap;
+(id)notificationCDDict;
+(id)trueCatID:(id)arg1 ;
+(id)dimensionsWithCategoryID:(id)arg1 withLocation:(id)arg2 ;
+(id)dimensionsFromPostParameters:(id)arg1 ;
+(id)trackingIndexForCustomDimension:(id)arg1 ;
+(id)createGACustomDimensions:(id)arg1 ;
+(void)attachDimensions:(id)arg1 toBuilder:(id)arg2 ;
+(id)dimensionsFromAd:(id)arg1 ;
+(id)dimensionsFromDataProvider:(id)arg1 orSearchParams:(id)arg2 ;
+(id)customDimensionNameMap;
+(unsigned long long)enumForHitType:(id)arg1 ;
+(id)internalMeasurementNames;
+(id)sharedAnalytics;
+(void)setSharedAnalytics:(id)arg1 ;
+(void)GAFirstLaunchCleanup;
-(void)setCurrentScreen:(NSString *)arg1 ;
-(void)setPreviousScreen:(NSString *)arg1 ;
-(id<GAITracker>)tracker;
-(BOOL)ivSessionRunning;
-(void)setIvSessionRunning:(BOOL)arg1 ;
-(void)setTracker:(id<GAITracker>)arg1 ;
-(NSString *)currentScreen;
-(NSDictionary *)hitDimensions;
-(void)setHitDimensions:(NSDictionary *)arg1 ;
-(id)standardDimensions;
-(void)createDebugLogWithGAIBuilder:(id)arg1 ;
-(void)GATrackView:(id)arg1 withDimensions:(id)arg2 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 withDimensions:(id)arg4 forScreen:(id)arg5 ;
-(void)GATrackSocial:(id)arg1 withAction:(id)arg2 withDimensions:(id)arg3 ;
-(void)GAFlushTrackingData;
-(id)buildDebugOutputWithGAIBuilder:(id)arg1 ;
-(void)GAStartTrackingData;
-(void)GAStopTrackingData;
-(BOOL)GAIsDimensionSetForKey:(id)arg1 ;
-(void)GASetCustomHitDimensions:(id)arg1 ;
-(void)GASetCustomSessionDimensions:(id)arg1 ;
-(void)GATrackView:(id)arg1 ;
-(void)GATrackView:(id)arg1 withAd:(id)arg2 ;
-(void)GATrackView:(id)arg1 withPostParameters:(id)arg2 ;
-(void)GATrackView:(id)arg1 withSearchParameters:(id)arg2 withDataProvider:(id)arg3 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 withAd:(id)arg4 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 withPostParameters:(id)arg4 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 withSearchParameters:(id)arg4 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 ;
-(void)GATrackEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 withSearchParameters:(id)arg4 forScreen:(id)arg5 ;
-(void)GATrackNIEventWithCategory:(id)arg1 withAction:(id)arg2 withLabel:(id)arg3 ;
-(void)GATrackSocial:(id)arg1 withAction:(id)arg2 ;
-(void)GATrackSocial:(id)arg1 withAction:(id)arg2 withAd:(id)arg3 ;
-(NSString *)previousScreen;
-(BOOL)debug;
-(void)setDebug:(BOOL)arg1 ;
-(id)init;
-(NSString *)identifier;
-(void)setIdentifier:(NSString *)arg1 ;
-(BOOL)isRunning;
-(void)setRunning:(BOOL)arg1 ;
@end

