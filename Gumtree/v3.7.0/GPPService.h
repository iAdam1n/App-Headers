/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:28:03 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/21F2B006-1C28-48A8-85CE-538D78391B66/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Gumtree/GPPServiceBase.h>
#import <Gumtree/GPPService.h>
@class GTMHTTPFetcherService;


@protocol GPPService <NSObject>
@property (assign,nonatomic,__weak) id<GPPServiceDelegate> delegate; 
@property (nonatomic,retain) GTMHTTPFetcherService * fetcherService; 
@required
-(GTMHTTPFetcherService *)fetcherService;
-(void)setFetcherService:(id)arg1;
-(void)executeBatchQuery:(id)arg1 completionHandler:(/*^block*/id)arg2;
-(id)queryForUserInfo:(/*^block*/id)arg1;
-(void)setDelegate:(id)arg1;
-(id<GPPServiceDelegate>)delegate;

@end

#import <Gumtree/GPPShareboxService.h>
#import <Gumtree/GPPACLPickerService.h>

@protocol GPPServiceDelegate;
@class GTMHTTPFetcherService, GTLServicePlus, GPPOzLogger, GPPSpamSignal, NSString, NSMutableArray;

@interface GPPService : GPPServiceBase <GPPService, GPPShareboxService, GPPACLPickerService> {

	GTLServicePlus* _service;
	GPPOzLogger* _logger;
	GPPSpamSignal* _spamSignal;
	NSString* _abuseToken;
	NSMutableArray* _abuseTokenQueue;
	id<GPPServiceDelegate> delegate;

}

@property (assign,nonatomic,__weak) id<GPPServiceDelegate> delegate; 
@property (nonatomic,retain) GTMHTTPFetcherService * fetcherService; 
+(id)plusServiceWithSignIn:(id)arg1 internal:(BOOL)arg2 ;
-(GTMHTTPFetcherService *)fetcherService;
-(void)setFetcherService:(GTMHTTPFetcherService *)arg1 ;
-(void)getPeopleForQuery:(id)arg1 handler:(/*^block*/id)arg2 ;
-(id)stringFromUIEvent:(id)arg1 ;
-(id)queryForSettings:(/*^block*/id)arg1 enableExtendedFeatures:(BOOL)arg2 ;
-(void)setAddToCircleTextWarningShown:(/*^block*/id)arg1 ;
-(void)addDeepLinkItemToAttachment:(id)arg1 ;
-(void)getPreviewForLinkAttachment:(id)arg1 finished:(/*^block*/id)arg2 ;
-(void)insertActivity:(id)arg1 eventString:(id)arg2 finished:(/*^block*/id)arg3 ;
-(void)insertCircle:(id)arg1 eventString:(id)arg2 finished:(/*^block*/id)arg3 ;
-(void)addPeople:(id)arg1 toCircle:(id)arg2 eventString:(id)arg3 finished:(/*^block*/id)arg4 ;
-(void)logShareboxEvent:(id)arg1 totalTime:(id)arg2 networkTime:(id)arg3 ;
-(void)flushEvents;
-(void)executeBatchQuery:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)queryForUserInfo:(/*^block*/id)arg1 ;
-(id)executeQuery:(id)arg1 usingService:(id)arg2 batchLogsFrom:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)queryForGoogleACLsforActivity:(id)arg1 orderBy:(int)arg2 limit:(unsigned long long)arg3 handler:(/*^block*/id)arg4 chunky:(BOOL)arg5 ;
-(id)queryForCircles:(/*^block*/id)arg1 ;
-(id)initWithSignIn:(id)arg1 ;
-(void)addParametersToQuery:(id)arg1 ;
-(id)plusActivityFromGPPActivity:(id)arg1 ;
-(long long)networkTimeFromInfo:(id)arg1 ;
-(void)insertActivity:(id)arg1 withSignal:(id)arg2 media:(id)arg3 mediaType:(id)arg4 preview:(BOOL)arg5 finished:(/*^block*/id)arg6 ;
-(void)insertMediaWithImageData:(id)arg1 finished:(/*^block*/id)arg2 ;
-(void)insertMediaWithVideo:(id)arg1 finished:(/*^block*/id)arg2 ;
-(id)linkPreviewFromPlusActivity:(id)arg1 ;
-(void)fetchAllPagesUsing:(id)arg1 pageToken:(id)arg2 feedHandler:(/*^block*/id)arg3 batchQuery:(id)arg4 maxResults:(long long)arg5 finished:(/*^block*/id)arg6 ;
-(id)aclFromGPPACL:(id)arg1 ;
-(id)checkBatchResult:(id)arg1 withError:(id)arg2 ;
-(void)setDelegate:(id<GPPServiceDelegate>)arg1 ;
-(id<GPPServiceDelegate>)delegate;
@end

