/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:25:23 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FB69C75F-331C-4C56-9EB7-0BF6B9A7830F/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Gumtree/SCORCoreDelegate.h>

@class SCORTaskExecutor, SCORConfiguration, SCORCore, SCOREncoding, SCOROfflineCache, SCORKeepAlive, SCORStorage, SCORMeasurementDispatcher, SCORAggregateMeasurement, NSMutableArray, NSString;

@interface SCOREventManager : NSObject <SCORCoreDelegate> {

	int _eventCounter;
	int _secondEventCheckCounter;
	int _dayEventCheckCounter;
	SCORTaskExecutor* _taskExecutor;
	SCORConfiguration* _configuration;
	SCORCore* _core;
	SCOREncoding* _encoding;
	SCOROfflineCache* _offlineCache;
	SCORKeepAlive* _keepAlive;
	SCORStorage* _storage;
	SCORMeasurementDispatcher* _dispatcher;
	SCORAggregateMeasurement* _aggregateData;
	double _secondEventCheckOffset;
	double _dayEventCheckOffset;
	NSMutableArray* _queuedMeasurements;

}

@property (nonatomic,retain) SCORTaskExecutor * taskExecutor;                       //@synthesize taskExecutor=_taskExecutor - In the implementation block
@property (nonatomic,retain) SCORConfiguration * configuration;                     //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,retain) SCORCore * core;                                       //@synthesize core=_core - In the implementation block
@property (nonatomic,retain) SCOREncoding * encoding;                               //@synthesize encoding=_encoding - In the implementation block
@property (nonatomic,retain) SCOROfflineCache * offlineCache;                       //@synthesize offlineCache=_offlineCache - In the implementation block
@property (nonatomic,retain) SCORKeepAlive * keepAlive;                             //@synthesize keepAlive=_keepAlive - In the implementation block
@property (nonatomic,retain) SCORStorage * storage;                                 //@synthesize storage=_storage - In the implementation block
@property (nonatomic,retain) SCORMeasurementDispatcher * dispatcher;                //@synthesize dispatcher=_dispatcher - In the implementation block
@property (nonatomic,retain) SCORAggregateMeasurement * aggregateData;              //@synthesize aggregateData=_aggregateData - In the implementation block
@property (assign,nonatomic) int eventCounter;                                      //@synthesize eventCounter=_eventCounter - In the implementation block
@property (assign,nonatomic) double secondEventCheckOffset;                         //@synthesize secondEventCheckOffset=_secondEventCheckOffset - In the implementation block
@property (assign,nonatomic) int secondEventCheckCounter;                           //@synthesize secondEventCheckCounter=_secondEventCheckCounter - In the implementation block
@property (assign,nonatomic) double dayEventCheckOffset;                            //@synthesize dayEventCheckOffset=_dayEventCheckOffset - In the implementation block
@property (assign,nonatomic) int dayEventCheckCounter;                              //@synthesize dayEventCheckCounter=_dayEventCheckCounter - In the implementation block
@property (nonatomic,retain) NSMutableArray * queuedMeasurements;                   //@synthesize queuedMeasurements=_queuedMeasurements - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)processStackTagging:(id)arg1 coldStart:(BOOL)arg2 ;
-(id)measurementForEventWithType:(long long)arg1 labels:(id)arg2 timestamp:(long long)arg3 ;
-(void)handleMeasurement:(id)arg1 cache:(BOOL)arg2 ;
-(id)measurementForEventWithType:(long long)arg1 labels:(id)arg2 timestamp:(long long)arg3 queuedMeasurement:(BOOL)arg4 ;
-(BOOL)checkCounters;
-(void)processAggregateDataIn:(id)arg1 ;
-(void)loadEventData;
-(void)saveAggregateData:(id)arg1 ;
-(void)appendAggregateData:(id)arg1 ;
-(id)initWithTaskExecutor:(id)arg1 configuration:(id)arg2 core:(id)arg3 encoding:(id)arg4 offlineCache:(id)arg5 keepAlive:(id)arg6 storage:(id)arg7 ;
-(void)handleEventWithType:(long long)arg1 eventInfo:(id)arg2 cache:(BOOL)arg3 background:(BOOL)arg4 ;
-(id)measurementForEventWithType:(long long)arg1 labels:(id)arg2 ;
-(SCORTaskExecutor *)taskExecutor;
-(void)setTaskExecutor:(SCORTaskExecutor *)arg1 ;
-(SCORCore *)core;
-(void)setCore:(SCORCore *)arg1 ;
-(void)setOfflineCache:(SCOROfflineCache *)arg1 ;
-(SCORAggregateMeasurement *)aggregateData;
-(void)setAggregateData:(SCORAggregateMeasurement *)arg1 ;
-(int)eventCounter;
-(void)setEventCounter:(int)arg1 ;
-(double)secondEventCheckOffset;
-(void)setSecondEventCheckOffset:(double)arg1 ;
-(int)secondEventCheckCounter;
-(void)setSecondEventCheckCounter:(int)arg1 ;
-(double)dayEventCheckOffset;
-(void)setDayEventCheckOffset:(double)arg1 ;
-(int)dayEventCheckCounter;
-(void)setDayEventCheckCounter:(int)arg1 ;
-(NSMutableArray *)queuedMeasurements;
-(void)setQueuedMeasurements:(NSMutableArray *)arg1 ;
-(SCORStorage *)storage;
-(void)reset;
-(void)setConfiguration:(SCORConfiguration *)arg1 ;
-(SCORConfiguration *)configuration;
-(SCORKeepAlive *)keepAlive;
-(SCOROfflineCache *)offlineCache;
-(void)initializationCompleted;
-(void)setKeepAlive:(SCORKeepAlive *)arg1 ;
-(void)setStorage:(SCORStorage *)arg1 ;
-(SCORMeasurementDispatcher *)dispatcher;
-(void)setDispatcher:(SCORMeasurementDispatcher *)arg1 ;
-(void)setEncoding:(SCOREncoding *)arg1 ;
-(SCOREncoding *)encoding;
@end

