/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:25:23 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FB69C75F-331C-4C56-9EB7-0BF6B9A7830F/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Gumtree/Gumtree-Structs.h>
#import <Gumtree/SCORStreamingDelegate.h>

@class NSDictionary, SCORStreamingPlaybackSession, NSArray, NSString;

@interface SCORStreamingAnalytics : NSObject <SCORStreamingDelegate> {

	long long _state;
	StreamingAnalytics* _streamingAnalytics;
	OwnedArray<StreamingListenerImpl, juce::CriticalSection>* _listeners;

}

@property (assign,nonatomic) StreamingAnalytics* streamingAnalytics;                   //@synthesize streamingAnalytics=_streamingAnalytics - In the implementation block
@property (assign,nonatomic) OwnedArray<StreamingListenerImpl* listeners;              //@synthesize listeners=_listeners - In the implementation block
@property (assign) long long state;                                                    //@synthesize state=_state - In the implementation block
@property (readonly) NSDictionary * labels; 
@property (readonly) SCORStreamingPlaybackSession * playbackSession; 
@property (assign,nonatomic) BOOL pauseOnBufferingEnabled; 
@property (assign,nonatomic) BOOL throttlingEnabled; 
@property (assign,nonatomic) double playbackIntervalMergeTolerance; 
@property (assign,nonatomic) double throttlingDelay; 
@property (assign,nonatomic) double pauseOnBufferingInterval; 
@property (assign,nonatomic) double keepAliveInterval; 
@property (assign,nonatomic) double loadTimeOffset; 
@property (nonatomic,copy) NSArray * heartbeatIntervals; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(StreamingAnalytics*)streamingAnalytics;
-(void)onStateChanged:(long long)arg1 newState:(long long)arg2 eventLabels:(id)arg3 timeDelta:(double)arg4 ;
-(id)valueForLabel:(id)arg1 ;
-(void)createPlaybackSession;
-(void)createPlaybackSessionWithLabels:(id)arg1 ;
-(void)setPauseOnBufferingEnabled:(BOOL)arg1 ;
-(BOOL)pauseOnBufferingEnabled;
-(void)setThrottlingEnabled:(BOOL)arg1 ;
-(BOOL)throttlingEnabled;
-(void)setPlaybackIntervalMergeTolerance:(double)arg1 ;
-(double)playbackIntervalMergeTolerance;
-(void)setThrottlingDelay:(double)arg1 ;
-(double)throttlingDelay;
-(void)setPauseOnBufferingInterval:(double)arg1 ;
-(double)pauseOnBufferingInterval;
-(void)setLoadTimeOffset:(double)arg1 ;
-(double)loadTimeOffset;
-(void)setHeartbeatIntervals:(NSArray *)arg1 ;
-(NSArray *)heartbeatIntervals;
-(BOOL)notifyPlay;
-(BOOL)notifyPlayWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyPlayWithPosition:(long long)arg1 ;
-(BOOL)notifyPlayWithLabels:(id)arg1 ;
-(BOOL)notifyPause;
-(BOOL)notifyPauseWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyPauseWithPosition:(long long)arg1 ;
-(BOOL)notifyPauseWithLabels:(id)arg1 ;
-(BOOL)notifyEnd;
-(BOOL)notifyEndWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyEndWithPosition:(long long)arg1 ;
-(BOOL)notifyEndWithLabels:(id)arg1 ;
-(BOOL)notifyBufferStart;
-(BOOL)notifyBufferStartWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyBufferStartWithPosition:(long long)arg1 ;
-(BOOL)notifyBufferStartWithLabels:(id)arg1 ;
-(BOOL)notifyBufferEnd;
-(BOOL)notifyBufferEndWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyBufferEndWithPosition:(long long)arg1 ;
-(BOOL)notifyBufferEndWithLabels:(id)arg1 ;
-(BOOL)notifyLoad;
-(BOOL)notifyLoadWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyLoadWithPosition:(long long)arg1 ;
-(BOOL)notifyLoadWithLabels:(id)arg1 ;
-(BOOL)notifyEngage;
-(BOOL)notifyEngageWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyEngageWithPosition:(long long)arg1 ;
-(BOOL)notifyEngageWithLabels:(id)arg1 ;
-(BOOL)notifySeekStart;
-(BOOL)notifySeekStartWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifySeekStartWithPosition:(long long)arg1 ;
-(BOOL)notifySeekStartWithLabels:(id)arg1 ;
-(BOOL)notifySkipAd;
-(BOOL)notifySkipAdWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifySkipAdWithPosition:(long long)arg1 ;
-(BOOL)notifySkipAdWithLabels:(id)arg1 ;
-(BOOL)notifyCallToAction;
-(BOOL)notifyCallToActionWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyCallToActionWithPosition:(long long)arg1 ;
-(BOOL)notifyCallToActionWithLabels:(id)arg1 ;
-(BOOL)notifyError;
-(BOOL)notifyErrorWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyErrorWithPosition:(long long)arg1 ;
-(BOOL)notifyErrorWithLabels:(id)arg1 ;
-(BOOL)notifyTransferPlayback;
-(BOOL)notifyTransferPlaybackWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyTransferPlaybackWithPosition:(long long)arg1 ;
-(BOOL)notifyTransferPlaybackWithLabels:(id)arg1 ;
-(BOOL)notifyDRMFail;
-(BOOL)notifyDRMFailWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyDRMFailWithPosition:(long long)arg1 ;
-(BOOL)notifyDRMFailWithLabels:(id)arg1 ;
-(BOOL)notifyDRMApprove;
-(BOOL)notifyDRMApproveWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyDRMApproveWithPosition:(long long)arg1 ;
-(BOOL)notifyDRMApproveWithLabels:(id)arg1 ;
-(BOOL)notifyDRMDeny;
-(BOOL)notifyDRMDenyWithPosition:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyDRMDenyWithPosition:(long long)arg1 ;
-(BOOL)notifyDRMDenyWithLabels:(id)arg1 ;
-(BOOL)notifyChangeBitrate:(long long)arg1 ;
-(BOOL)notifyChangeBitrate:(long long)arg1 position:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeBitrate:(long long)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeBitrate:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangePlaybackRate:(long long)arg1 ;
-(BOOL)notifyChangePlaybackRate:(long long)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangePlaybackRate:(long long)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangePlaybackRate:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeVolume:(long long)arg1 ;
-(BOOL)notifyChangeVolume:(long long)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeVolume:(long long)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeVolume:(long long)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeWindowState:(id)arg1 ;
-(BOOL)notifyChangeWindowState:(id)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeWindowState:(id)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeWindowState:(id)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeAudioTrack:(id)arg1 ;
-(BOOL)notifyChangeAudioTrack:(id)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeAudioTrack:(id)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeAudioTrack:(id)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeVideoTrack:(id)arg1 ;
-(BOOL)notifyChangeVideoTrack:(id)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeVideoTrack:(id)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeVideoTrack:(id)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeSubtitleTrack:(id)arg1 ;
-(BOOL)notifyChangeSubtitleTrack:(id)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeSubtitleTrack:(id)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeSubtitleTrack:(id)arg1 labels:(id)arg2 ;
-(BOOL)notifyChangeCDN:(id)arg1 ;
-(BOOL)notifyChangeCDN:(id)arg1 withPosition:(long long)arg2 labels:(id)arg3 ;
-(BOOL)notifyChangeCDN:(id)arg1 position:(long long)arg2 ;
-(BOOL)notifyChangeCDN:(id)arg1 labels:(id)arg2 ;
-(void)setStreamingAnalytics:(StreamingAnalytics*)arg1 ;
-(void)setLabelWithName:(id)arg1 value:(id)arg2 ;
-(BOOL)containsLabel:(id)arg1 ;
-(SCORStreamingPlaybackSession *)playbackSession;
-(id)init;
-(void)dealloc;
-(long long)state;
-(void)setState:(long long)arg1 ;
-(void)reset;
-(id)initWithConfiguration:(id)arg1 ;
-(void)setLabels:(NSDictionary *)arg1 ;
-(NSDictionary *)labels;
-(double)keepAliveInterval;
-(void)setKeepAliveInterval:(double)arg1 ;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(OwnedArray<StreamingListenerImpl*)listeners;
-(void)setListeners:(OwnedArray<StreamingListenerImpl*)arg1 ;
@end

