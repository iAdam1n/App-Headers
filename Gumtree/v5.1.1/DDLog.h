/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Gumtree/Gumtree-Structs.h>
@class NSMutableArray;

@interface DDLog : NSObject {

	NSMutableArray* __loggers;

}

@property (nonatomic,retain) NSMutableArray * _loggers;              //@synthesize _loggers=__loggers - In the implementation block
+(void)log:(BOOL)arg1 message:(id)arg2 ;
+(dispatch_queue_sRef)loggingQueue;
+(void)addLogger:(id)arg1 ;
+(void)addLogger:(id)arg1 withLevel:(unsigned long long)arg2 ;
+(void)removeLogger:(id)arg1 ;
+(void)removeAllLoggers;
+(id)allLoggers;
+(void)log:(BOOL)arg1 message:(id)arg2 level:(unsigned long long)arg3 flag:(unsigned long long)arg4 context:(long long)arg5 file:(const char*)arg6 function:(const char*)arg7 line:(unsigned long long)arg8 tag:(id)arg9 ;
+(void)log:(BOOL)arg1 level:(unsigned long long)arg2 flag:(unsigned long long)arg3 context:(long long)arg4 file:(const char*)arg5 function:(const char*)arg6 line:(unsigned long long)arg7 tag:(id)arg8 format:(id)arg9 args:(char*)arg10 ;
+(BOOL)isRegisteredClass:(Class)arg1 ;
+(id)registeredClasses;
+(unsigned long long)levelForClass:(Class)arg1 ;
+(void)setLevel:(unsigned long long)arg1 forClass:(Class)arg2 ;
+(void)log:(BOOL)arg1 level:(unsigned long long)arg2 flag:(unsigned long long)arg3 context:(long long)arg4 file:(const char*)arg5 function:(const char*)arg6 line:(unsigned long long)arg7 tag:(id)arg8 format:(id)arg9 ;
+(id)registeredClassNames;
+(unsigned long long)levelForClassWithName:(id)arg1 ;
+(void)setLevel:(unsigned long long)arg1 forClassWithName:(id)arg2 ;
+(id)sharedInstance;
+(void)initialize;
+(void)flushLog;
-(void)log:(BOOL)arg1 message:(id)arg2 ;
-(void)set_loggers:(NSMutableArray *)arg1 ;
-(void)addLogger:(id)arg1 ;
-(void)addLogger:(id)arg1 withLevel:(unsigned long long)arg2 ;
-(void)lt_addLogger:(id)arg1 level:(unsigned long long)arg2 ;
-(void)removeLogger:(id)arg1 ;
-(void)lt_removeLogger:(id)arg1 ;
-(void)removeAllLoggers;
-(void)lt_removeAllLoggers;
-(id)allLoggers;
-(id)lt_allLoggers;
-(void)lt_log:(id)arg1 ;
-(void)log:(BOOL)arg1 message:(id)arg2 level:(unsigned long long)arg3 flag:(unsigned long long)arg4 context:(long long)arg5 file:(const char*)arg6 function:(const char*)arg7 line:(unsigned long long)arg8 tag:(id)arg9 ;
-(void)log:(BOOL)arg1 level:(unsigned long long)arg2 flag:(unsigned long long)arg3 context:(long long)arg4 file:(const char*)arg5 function:(const char*)arg6 line:(unsigned long long)arg7 tag:(id)arg8 format:(id)arg9 args:(char*)arg10 ;
-(void)queueLogMessage:(id)arg1 asynchronously:(BOOL)arg2 ;
-(void)lt_flush;
-(NSMutableArray *)_loggers;
-(void)log:(BOOL)arg1 level:(unsigned long long)arg2 flag:(unsigned long long)arg3 context:(long long)arg4 file:(const char*)arg5 function:(const char*)arg6 line:(unsigned long long)arg7 tag:(id)arg8 format:(id)arg9 ;
-(id)init;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)flushLog;
@end

