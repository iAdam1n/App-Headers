/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Gumtree/GIDSignInWebViewControllerDelegate.h>
#import <Gumtree/SFSafariViewControllerDelegate.h>

@protocol GIDSignInDelegate, GIDSignInUIDelegate;
@class GIDSignInCallbackSchemes, NSString, GIDRuntimeConfigFetcher, GIDGoogleUser, NSArray;

@interface GIDSignIn : NSObject <GIDSignInWebViewControllerDelegate, SFSafariViewControllerDelegate> {

	GIDSignInCallbackSchemes* _schemes;
	NSString* _scopeString;
	NSString* _keychainName;
	double _lastAuthenticateTimestamp;
	GIDRuntimeConfigFetcher* _configFetcher;
	BOOL _hasSafariViewController;
	id _safariViewController;
	BOOL _shouldFetchBasicProfile;
	BOOL _allowsSignInWithBrowser;
	BOOL _allowsSignInWithWebView;
	BOOL _allowsCanOpenURL;
	GIDGoogleUser* _currentUser;
	id<GIDSignInDelegate> _delegate;
	id<GIDSignInUIDelegate> _uiDelegate;
	NSString* _clientID;
	NSArray* _scopes;
	NSString* _language;
	NSString* _loginHint;
	NSString* _serverClientID;
	NSString* _openIDRealm;
	NSString* _hostedDomain;

}

@property (nonatomic,readonly) GIDGoogleUser * currentUser;                          //@synthesize currentUser=_currentUser - In the implementation block
@property (assign,nonatomic,__weak) id<GIDSignInDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<GIDSignInUIDelegate> uiDelegate;              //@synthesize uiDelegate=_uiDelegate - In the implementation block
@property (nonatomic,copy) NSString * clientID;                                      //@synthesize clientID=_clientID - In the implementation block
@property (nonatomic,copy) NSArray * scopes;                                         //@synthesize scopes=_scopes - In the implementation block
@property (assign,nonatomic) BOOL shouldFetchBasicProfile;                           //@synthesize shouldFetchBasicProfile=_shouldFetchBasicProfile - In the implementation block
@property (assign,nonatomic) BOOL allowsSignInWithBrowser;                           //@synthesize allowsSignInWithBrowser=_allowsSignInWithBrowser - In the implementation block
@property (assign,nonatomic) BOOL allowsSignInWithWebView;                           //@synthesize allowsSignInWithWebView=_allowsSignInWithWebView - In the implementation block
@property (nonatomic,copy) NSString * language;                                      //@synthesize language=_language - In the implementation block
@property (nonatomic,copy) NSString * loginHint;                                     //@synthesize loginHint=_loginHint - In the implementation block
@property (nonatomic,copy) NSString * serverClientID;                                //@synthesize serverClientID=_serverClientID - In the implementation block
@property (nonatomic,copy) NSString * openIDRealm;                                   //@synthesize openIDRealm=_openIDRealm - In the implementation block
@property (nonatomic,copy) NSString * hostedDomain;                                  //@synthesize hostedDomain=_hostedDomain - In the implementation block
@property (assign,nonatomic) BOOL allowsCanOpenURL;                                  //@synthesize allowsCanOpenURL=_allowsCanOpenURL - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isOperatingSystemAtLeast9;
+(BOOL)supportsCurrentUserKVO;
+(id)sharedInstance;
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1 ;
-(void)pleaseLinkSafariServicesFramework;
-(void)signIn;
-(NSString *)hostedDomain;
-(BOOL)isFreshInstall;
-(void)removeAllKeychainEntries;
-(id)errorWithString:(id)arg1 code:(long long)arg2 ;
-(void)assertValidParameters;
-(id)schemesWithAppSwitchConfig:(id)arg1 includeWebBrowserScheme:(BOOL)arg2 includeWebViewScheme:(BOOL)arg3 includeSafariViewControllerScheme:(BOOL)arg4 ;
-(void)fetchRuntimeConfigWithHandler:(/*^block*/id)arg1 ;
-(void)signInWithOptions:(id)arg1 ;
-(BOOL)URLIsFromBrowser:(id)arg1 sourceApplication:(id)arg2 ;
-(BOOL)URLIsFromSSO:(id)arg1 sourceApplication:(id)arg2 ;
-(BOOL)handleURL:(id)arg1 fromGoogleSSOApp:(BOOL)arg2 ;
-(id)stringFromKeychain:(id)arg1 ;
-(void)dismissViewController:(id)arg1 ;
-(BOOL)matchesSavedFingerprint;
-(void)parseAuthURL:(id)arg1 fromSSO:(BOOL)arg2 authFlow:(id)arg3 ;
-(void)addCodeReadyCallbacks:(id)arg1 ;
-(void)signOutWithUser:(id)arg1 ;
-(void)disconnectWithUser:(id)arg1 ;
-(void)didChangeParameters;
-(void)addDecodeIdTokenCallback:(id)arg1 ;
-(id)getEscapedKeychainNames;
-(BOOL)clearSavedKeychainNames;
-(void)clearAuthentication;
-(BOOL)save:(id)arg1 toKeychain:(id)arg2 ;
-(void)setEscapedKeychainNames:(id)arg1 ;
-(BOOL)generateVerifier;
-(void)finishWithKeychainError;
-(BOOL)saveFingerprint;
-(id)oauth2URLWithParams:(id)arg1 verifier:(id)arg2 ;
-(BOOL)openInBrowser:(id)arg1 ;
-(void)openWebViewWithURL:(id)arg1 ;
-(id)SSOURLOfScheme:(id)arg1 verifier:(id)arg2 params:(id)arg3 ;
-(id)redirectURI;
-(id)sdkVersionLoggingValue;
-(double)appSwitchRandomNumber;
-(id)keychainError;
-(void)informUIDelegateOfDispatchResult:(id)arg1 ;
-(void)addAdditionalTokenRequestParameters:(id)arg1 toAuth:(id)arg2 ;
-(void)didDisconnectWithUser:(id)arg1 error:(id)arg2 ;
-(void)startFetchURL:(id)arg1 fromAuth:(id)arg2 withComment:(id)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(BOOL)authenticateWithOptions:(id)arg1 appSwitchConfig:(id)arg2 ;
-(id)noSignInHandlersInstalledError;
-(void)assertValidUIDelegate;
-(void)clearAndAuthenticateWithOptions:(id)arg1 ;
-(void)authenticateInteractivelyWithOptions:(id)arg1 ;
-(void)maybeFetchToken:(id)arg1 fallback:(/*^block*/id)arg2 ;
-(void)addSaveAuthCallback:(id)arg1 toKeychain:(BOOL)arg2 ;
-(void)addCallUIDelegateCallback:(id)arg1 ;
-(void)addCallDelegateCallback:(id)arg1 ;
-(void)addClearVerifierCallback:(id)arg1 ;
-(void)addServerClientIDToAuth:(id)arg1 ;
-(void)addOpenIDRealmToAuth:(id)arg1 ;
-(void)addVerifierToAuth:(id)arg1 ;
-(void)removeAdditionalTokenRequestParametersFromAuth:(id)arg1 ;
-(void)addSavedKeychainName:(id)arg1 ;
-(BOOL)handleURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3 ;
-(BOOL)signInWebViewController:(id)arg1 shouldTreatURLAsAuthResponse:(id)arg2 ;
-(BOOL)signInWebViewController:(id)arg1 shouldKeepLSOCookiesForAuthResponseURL:(id)arg2 ;
-(void)signInWebViewControllerNeedsDismissing:(id)arg1 ;
-(void)signInWebViewControllerDidComplete:(id)arg1 withURL:(id)arg2 error:(id)arg3 ;
-(BOOL)hasAuthInKeychain;
-(void)checkGoogleSignInAppInstalled:(/*^block*/id)arg1 ;
-(void)signInSilently;
-(void)setShouldFetchBasicProfile:(BOOL)arg1 ;
-(void)setHostedDomain:(NSString *)arg1 ;
-(void)fetchUserID:(/*^block*/id)arg1 ;
-(double)lastAuthenticateTimestamp;
-(BOOL)shouldFetchBasicProfile;
-(BOOL)allowsSignInWithBrowser;
-(void)setAllowsSignInWithBrowser:(BOOL)arg1 ;
-(BOOL)allowsSignInWithWebView;
-(void)setAllowsSignInWithWebView:(BOOL)arg1 ;
-(NSString *)loginHint;
-(void)setLoginHint:(NSString *)arg1 ;
-(NSString *)serverClientID;
-(void)setServerClientID:(NSString *)arg1 ;
-(NSString *)openIDRealm;
-(void)setOpenIDRealm:(NSString *)arg1 ;
-(BOOL)allowsCanOpenURL;
-(void)setAllowsCanOpenURL:(BOOL)arg1 ;
-(id)canceledError;
-(void)setDelegate:(id<GIDSignInDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<GIDSignInDelegate>)delegate;
-(NSArray *)scopes;
-(void)setScopes:(NSArray *)arg1 ;
-(void)disconnect;
-(NSString *)language;
-(void)setLanguage:(NSString *)arg1 ;
-(id)randomString;
-(id)unknownError;
-(id)fingerprint;
-(GIDGoogleUser *)currentUser;
-(void)setClientID:(NSString *)arg1 ;
-(NSString *)clientID;
-(id)appBundleID;
-(void)presentViewController:(id)arg1 ;
-(void)safariViewControllerDidFinish:(id)arg1 ;
-(void)signOut;
-(void)setUiDelegate:(id<GIDSignInUIDelegate>)arg1 ;
-(id<GIDSignInUIDelegate>)uiDelegate;
@end

