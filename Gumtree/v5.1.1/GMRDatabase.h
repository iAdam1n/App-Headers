/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class GMRSqliteStore, GMRPersistedConfig, GMRDailyCounts;

@interface GMRDatabase : NSObject {

	GMRSqliteStore* _sqliteStore;
	GMRPersistedConfig* _persistedConfig;

}

@property (nonatomic,readonly) BOOL isQueuedBundleTableEmpty; 
@property (nonatomic,readonly) BOOL isRawEventsTableEmpty; 
@property (nonatomic,readonly) GMRDailyCounts * dailyCounts; 
@property (nonatomic,readonly) int publicEventCount; 
@property (nonatomic,readonly) int publicUserAttributeCount; 
+(id)databasePathWithName:(id)arg1 ;
-(id)eventFiltersForEventName:(id)arg1 ;
-(id)filterResultForAudienceID:(int)arg1 ;
-(BOOL)updateFilterResults:(id)arg1 ;
-(BOOL)deleteEventFilters:(id)arg1 ;
-(id)propertyFiltersForPropertyName:(id)arg1 ;
-(BOOL)deletePropertyFilters:(id)arg1 ;
-(id)allFilterResults;
-(BOOL)deleteAllEventFilters;
-(BOOL)deleteAllPropertyFilters;
-(BOOL)updateEventFilters:(id)arg1 ;
-(BOOL)updatePropertyFilters:(id)arg1 ;
-(id)allUserAttributes;
-(BOOL)ensureAllTables;
-(BOOL)initializeAppMetadata;
-(id)queryAppMetadata;
-(id)dictionaryFromAppMetadata:(id)arg1 ;
-(BOOL)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 createDictionaryBlock:(/*^block*/id)arg6 ;
-(id)appMetadataFromDictionary:(id)arg1 ;
-(id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 createDataTypeBlock:(/*^block*/id)arg4 ;
-(BOOL)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id*)arg5 createDictionaryBlock:(/*^block*/id)arg6 ;
-(id)dailyCountsFromDictionary:(id)arg1 ;
-(id)dictionaryFromDailyCounts:(id)arg1 ;
-(id)queryRawEventsMetadataWithFingerprint:(long long)arg1 ;
-(id)dictionaryFromMeasurementBundleMetadata:(id)arg1 ;
-(id)measurementBundleFromDictionary:(id)arg1 ;
-(id)dictionaryFromRawEvent:(id)arg1 ;
-(BOOL)insertDataType:(id)arg1 inTableWithName:(id)arg2 createDictionaryBlock:(/*^block*/id)arg3 ;
-(id)rawEventDataFromDictionary:(id)arg1 ;
-(BOOL)deleteUnusedRawEventsMetadata;
-(id)eventFromDictionary:(id)arg1 ;
-(BOOL)maybeDeleteStaleData;
-(id)bundleRowIDPairsWithRecords:(id)arg1 countLimit:(long long)arg2 sizeLimit:(long long)arg3 ;
-(BOOL)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 ;
-(BOOL)deleteStaleBundlesOlderThanMaxAge:(double)arg1 ;
-(id)eventAggregatesFromDictionary:(id)arg1 ;
-(id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 createDataTypeBlock:(/*^block*/id)arg3 ;
-(id)dictionaryFromEventAggregates:(id)arg1 ;
-(id)userAttributeFromDictionary:(id)arg1 ;
-(id)dictionaryFromUserAttribute:(id)arg1 ;
-(id)filterResultFromDictionary:(id)arg1 ;
-(id)eventFilterFromDictionary:(id)arg1 ;
-(id)propertyFilterFromDictionary:(id)arg1 ;
-(id)dictionaryFromEventFilter:(id)arg1 ;
-(id)dictionaryFromPropertyFilter:(id)arg1 ;
-(id)dictionaryFromFilterResult:(id)arg1 ;
-(id)elementaryTableDefinitions;
-(id)constructCreateStatementForTableWithName:(id)arg1 columnInfo:(id)arg2 ;
-(id)columnNamesFromColumnInfo:(id)arg1 ;
-(id)addOnTableDefinitions;
-(id)constructAlterStatementForTableWithName:(id)arg1 columnInfo:(id)arg2 ;
-(id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 ;
-(BOOL)updateAppMetadata:(id)arg1 ;
-(GMRDailyCounts *)dailyCounts;
-(BOOL)updateDailyCounts:(id)arg1 error:(id*)arg2 ;
-(BOOL)insertIfNotExistsRawEventMetadata:(id)arg1 ;
-(BOOL)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 ;
-(BOOL)isRawEventsTableEmpty;
-(BOOL)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 ;
-(double)queryLatestRawEventTime;
-(id)rawEventsWithMetadataFingerprint:(long long)arg1 eventFilter:(/*^block*/id)arg2 ;
-(BOOL)containsRawEventWithMetadataFingerprint:(long long)arg1 ;
-(BOOL)deleteRawEventsWithMaxRowID:(long long)arg1 ;
-(int)deleteRawEventsOverAbsoluteLimit:(id*)arg1 ;
-(id)nextMetadataFingerprintToProcess:(id*)arg1 ;
-(BOOL)isQueuedBundleTableEmpty;
-(BOOL)insertBundle:(id)arg1 error:(id*)arg2 ;
-(id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 ;
-(BOOL)deleteBundlesWithRowIDs:(id)arg1 ;
-(BOOL)deleteAllQueuedBundles;
-(double)queryLatestBundleTime;
-(int)publicEventCount;
-(id)allEventAggregates;
-(id)eventAggregatesWithName:(id)arg1 ;
-(BOOL)updateEventAggregates:(id)arg1 ;
-(int)publicUserAttributeCount;
-(id)userAttributeWithName:(id)arg1 ;
-(id)allLifetimeValueUserAttributes;
-(BOOL)updateUserAttribute:(id)arg1 ;
-(BOOL)deleteUserAttributeWithName:(id)arg1 ;
-(BOOL)updateRemoteConfig:(id)arg1 error:(id*)arg2 ;
-(BOOL)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id*)arg2 ;
-(id)queryACPMeasurementConfigWithError:(id*)arg1 ;
-(double)lastRemoteConfigUpdateTimestamp;
-(BOOL)performTransaction:(/*^block*/id)arg1 ;
@end

