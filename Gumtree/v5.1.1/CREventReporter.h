/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol CREventReporterDelegate;
@class CRReporterConfiguration, NSDate, NSManagedObjectContext, NSString, CRAppLocator, NSURLSession, NSObject;

@interface CREventReporter : NSObject {

	BOOL _isRunning;
	BOOL _dataIsAvailable;
	BOOL _sendIsScheduled;
	BOOL _isEnabled;
	CRReporterConfiguration* _configuration;
	NSDate* _lastSendDate;
	NSManagedObjectContext* _managedObjectContext;
	NSString* _entityName;
	CRAppLocator* _appLocator;
	NSURLSession* _session;
	id<CREventReporterDelegate> _delegate;
	long long _pendingRequests;
	double _sendFrequency;
	id _reportableEventClass;
	NSObject* _schedulingLock;
	NSObject* _isRunningLock;

}

@property (assign) BOOL isRunning;                                             //@synthesize isRunning=_isRunning - In the implementation block
@property (retain) NSDate * lastSendDate;                                      //@synthesize lastSendDate=_lastSendDate - In the implementation block
@property (retain) NSManagedObjectContext * managedObjectContext;              //@synthesize managedObjectContext=_managedObjectContext - In the implementation block
@property (retain) NSString * entityName;                                      //@synthesize entityName=_entityName - In the implementation block
@property (retain) CRAppLocator * appLocator;                                  //@synthesize appLocator=_appLocator - In the implementation block
@property (retain) NSURLSession * session;                                     //@synthesize session=_session - In the implementation block
@property (retain) id<CREventReporterDelegate> delegate;                       //@synthesize delegate=_delegate - In the implementation block
@property (assign) BOOL dataIsAvailable;                                       //@synthesize dataIsAvailable=_dataIsAvailable - In the implementation block
@property (assign) BOOL sendIsScheduled;                                       //@synthesize sendIsScheduled=_sendIsScheduled - In the implementation block
@property (assign) long long pendingRequests;                                  //@synthesize pendingRequests=_pendingRequests - In the implementation block
@property (retain) CRReporterConfiguration * configuration;                    //@synthesize configuration=_configuration - In the implementation block
@property (assign) double sendFrequency;                                       //@synthesize sendFrequency=_sendFrequency - In the implementation block
@property (assign) BOOL isEnabled;                                             //@synthesize isEnabled=_isEnabled - In the implementation block
@property (retain) id reportableEventClass;                                    //@synthesize reportableEventClass=_reportableEventClass - In the implementation block
@property (retain) NSObject * schedulingLock;                                  //@synthesize schedulingLock=_schedulingLock - In the implementation block
@property (retain) NSObject * isRunningLock;                                   //@synthesize isRunningLock=_isRunningLock - In the implementation block
-(void)setSendFrequency:(double)arg1 ;
-(void)setReportableEventClass:(id)arg1 ;
-(void)setAppLocator:(CRAppLocator *)arg1 ;
-(double)sendFrequency;
-(void)setLastSendDate:(NSDate *)arg1 ;
-(void)setDataIsAvailable:(BOOL)arg1 ;
-(void)setIsRunningLock:(NSObject *)arg1 ;
-(void)setSchedulingLock:(NSObject *)arg1 ;
-(void)setSendIsScheduled:(BOOL)arg1 ;
-(id)fetchObjectsToSend;
-(BOOL)scheduleSend;
-(void)eventIsReadyToSend:(id)arg1 ;
-(BOOL)sendIsScheduled;
-(double)timeTillNextSend;
-(void)sendReports;
-(NSDate *)lastSendDate;
-(id)reportableEventClass;
-(CRAppLocator *)appLocator;
-(void)addTrackerInfoToRequest:(id)arg1 ;
-(BOOL)dataIsAvailable;
-(NSObject *)isRunningLock;
-(id)initWithReportableClass:(Class)arg1 configuration:(id)arg2 appLocator:(id)arg3 managedObjectContext:(id)arg4 session:(id)arg5 ;
-(id)initWithReportableClass:(Class)arg1 configuration:(id)arg2 appLocator:(id)arg3 managedObjectContext:(id)arg4 session:(id)arg5 delegate:(id)arg6 ;
-(NSObject *)schedulingLock;
-(void)setDelegate:(id<CREventReporterDelegate>)arg1 ;
-(void)dealloc;
-(id<CREventReporterDelegate>)delegate;
-(void)stop;
-(BOOL)isEnabled;
-(void)start;
-(void)setIsEnabled:(BOOL)arg1 ;
-(void)setConfiguration:(CRReporterConfiguration *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)isRunning;
-(CRReporterConfiguration *)configuration;
-(NSManagedObjectContext *)managedObjectContext;
-(void)setIsRunning:(BOOL)arg1 ;
-(void)setManagedObjectContext:(NSManagedObjectContext *)arg1 ;
-(NSString *)entityName;
-(NSURLSession *)session;
-(void)setEntityName:(NSString *)arg1 ;
-(void)setSession:(NSURLSession *)arg1 ;
-(void)performRequest:(id)arg1 ;
-(long long)pendingRequests;
-(void)setPendingRequests:(long long)arg1 ;
@end

