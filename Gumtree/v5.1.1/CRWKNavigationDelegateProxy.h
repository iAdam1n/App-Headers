/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Gumtree/Gumtree-Structs.h>
#import <Foundation/NSProxy.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>

@class NSSet, CRNetworkStatistics, NSTimer, CRNetStatDispatch, NSString;

@interface CRWKNavigationDelegateProxy : NSProxy <WKNavigationDelegate> {

	id _navigationDelegate;
	NSSet* _selectorsWeRespondTo;
	CRNetworkStatistics* _networkStatistics;
	NSTimer* _timer;
	CRNetStatDispatch* _dispatch;

}

@property (nonatomic,retain) NSSet * selectorsWeRespondTo;                         //@synthesize selectorsWeRespondTo=_selectorsWeRespondTo - In the implementation block
@property (nonatomic,retain) CRNetworkStatistics * networkStatistics;              //@synthesize networkStatistics=_networkStatistics - In the implementation block
@property (nonatomic,retain) NSTimer * timer;                                      //@synthesize timer=_timer - In the implementation block
@property (nonatomic,retain) CRNetStatDispatch * dispatch;                         //@synthesize dispatch=_dispatch - In the implementation block
@property (assign,nonatomic,__weak) id navigationDelegate;                         //@synthesize navigationDelegate=_navigationDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isInstrumented;
+(void)traverseUI;
+(void)traverseView:(id)arg1 ;
+(id)proxyFromWebView:(id)arg1 dispatch:(id)arg2 ;
+(void)instrumentWKWebViewWithDispatch:(id)arg1 ;
+(id)initWithFrameForWKWebView:(id)arg1 frame:(CGRect)arg2 configuration:(id)arg3 dispatch:(id)arg4 ;
+(id)navigationDelegateForWKWebView:(id)arg1 dispatch:(id)arg2 ;
+(void)setNavigationDelegateForWKWebView:(id)arg1 navigationDelegate:(id)arg2 dispatch:(id)arg3 ;
+(void)swizzleWKWebViewInitWithFrameAndDispatch:(id)arg1 ;
+(void)swizzleWKWebViewNavigationDelegateWithDispatch:(id)arg1 ;
+(void)swizzleWKWebViewSetNavigationDelegateWithDispatch:(id)arg1 ;
+(id)performSwizzledWKWebViewNavigationDelegateSelector:(id)arg1 ;
+(void)performSwizzledWKWebViewSetNavigationDelegateSelector:(id)arg1 withProxy:(id)arg2 ;
+(id)performSwizzledWKWebViewInitWithFrameSelector:(id)arg1 withFrame:(CGRect)arg2 withConfig:(id)arg3 ;
+(void)uninstrumentWKWebView;
+(BOOL)respondsToSelector:(SEL)arg1 ;
-(void)setDispatch:(CRNetStatDispatch *)arg1 ;
-(NSSet *)selectorsWeRespondTo;
-(void)setSelectorsWeRespondTo:(NSSet *)arg1 ;
-(void)addAssociationToWebView:(id)arg1 ;
-(id)initWithNavigationDelegate:(id)arg1 dispatch:(id)arg2 ;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(NSString *)description;
-(NSString *)debugDescription;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)forwardInvocation:(id)arg1 ;
-(void)setTimer:(NSTimer *)arg1 ;
-(NSTimer *)timer;
-(id)navigationDelegate;
-(CRNetStatDispatch *)dispatch;
-(void)setNavigationDelegate:(id)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)setNetworkStatistics:(CRNetworkStatistics *)arg1 ;
-(CRNetworkStatistics *)networkStatistics;
@end

