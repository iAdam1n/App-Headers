/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Gumtree/Gumtree-Structs.h>
#import <Gumtree/ECThemedViewBackgroundPrimary.h>
#import <UIKit/UITextFieldDelegate.h>
#import <Gumtree/ECAccessibilityProtocol.h>

@class ECObserverSet, UITextField, UIImageView, NSString;

@interface ECVRNView : ECThemedViewBackgroundPrimary <UITextFieldDelegate, ECAccessibilityProtocol> {

	unsigned long long _maxNumberOfCharacters;
	unsigned long long _minNumberOfCharacters;
	ECObserverSet* _validityObservers;
	UITextField* _textField;
	UIImageView* _leftImageView;

}

@property (nonatomic,retain) UITextField * textField;                               //@synthesize textField=_textField - In the implementation block
@property (nonatomic,retain) UIImageView * leftImageView;                           //@synthesize leftImageView=_leftImageView - In the implementation block
@property (nonatomic,retain) ECObserverSet * validityObservers;                     //@synthesize validityObservers=_validityObservers - In the implementation block
@property (assign,nonatomic) unsigned long long maxNumberOfCharacters;              //@synthesize maxNumberOfCharacters=_maxNumberOfCharacters - In the implementation block
@property (assign,nonatomic) unsigned long long minNumberOfCharacters;              //@synthesize minNumberOfCharacters=_minNumberOfCharacters - In the implementation block
@property (nonatomic,retain) NSString * text; 
@property (nonatomic,readonly) BOOL isValid; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setMinNumberOfCharacters:(unsigned long long)arg1 ;
-(void)setMaxNumberOfCharacters:(unsigned long long)arg1 ;
-(ECObserverSet *)validityObservers;
-(id)accessibilityElementForValueInView;
-(void)buildView;
-(void)setValidityObservers:(ECObserverSet *)arg1 ;
-(id)VRNYellow;
-(void)setLeftImageView:(UIImageView *)arg1 ;
-(UIImageView *)leftImageView;
-(unsigned long long)maxNumberOfCharacters;
-(BOOL)isReplacementString:(id)arg1 withRange:(NSRange)arg2 validForTextField:(id)arg3 withMaximumNumberOfCharacters:(unsigned long long)arg4 ;
-(unsigned long long)minNumberOfCharacters;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)resignFirstResponder;
-(BOOL)isValid;
-(void)becomeFirstResponder;
-(NSString *)text;
-(void)setText:(NSString *)arg1 ;
-(void)textFieldDidBeginEditing:(id)arg1 ;
-(BOOL)textFieldShouldEndEditing:(id)arg1 ;
-(void)textFieldDidEndEditing:(id)arg1 ;
-(BOOL)textField:(id)arg1 shouldChangeCharactersInRange:(NSRange)arg2 replacementString:(id)arg3 ;
-(BOOL)textFieldShouldClear:(id)arg1 ;
-(BOOL)textFieldShouldReturn:(id)arg1 ;
-(UITextField *)textField;
-(void)textFieldDidChange:(id)arg1 ;
-(void)setPlaceholderText:(id)arg1 ;
-(void)setTextField:(UITextField *)arg1 ;
@end

