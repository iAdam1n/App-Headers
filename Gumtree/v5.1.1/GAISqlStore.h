/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:49:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/A861CD42-DC74-45D3-9030-D3B6F185E279/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Gumtree/Gumtree-Structs.h>
@class NSString, NSMutableDictionary;

@interface GAISqlStore : NSObject {

	NSString* _databaseName;
	sqlite3Ref _database;
	NSMutableDictionary* _statementCache;
	NSString* _databasePath;

}

@property (nonatomic,copy,readonly) NSString * databaseName;                    //@synthesize databaseName=_databaseName - In the implementation block
@property (nonatomic,copy,readonly) NSString * errorMessage; 
@property (assign,nonatomic) sqlite3Ref database;                               //@synthesize database=_database - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * statementCache;              //@synthesize statementCache=_statementCache - In the implementation block
@property (nonatomic,readonly) NSString * databasePath;                         //@synthesize databasePath=_databasePath - In the implementation block
+(id)databaseDirectoryPath;
+(id)sharedInstance;
-(BOOL)openAndValidateDatabase;
-(BOOL)closeAndDeleteDatabase;
-(sqlite3_stmtRef)statementForQuery:(id)arg1 ;
-(void)finalizeAndClearStatements;
-(unsigned long long)rowCountForTableWithName:(id)arg1 ;
-(id)initWithDatabaseName:(id)arg1 ;
-(BOOL)ensureOpenDatabase;
-(NSMutableDictionary *)statementCache;
-(void)removeStatementForQuery:(id)arg1 ;
-(sqlite3_stmtRef)prepareSql:(id)arg1 ;
-(void)setStatement:(sqlite3_stmtRef)arg1 forQuery:(id)arg2 ;
-(int)executeSql:(id)arg1 ;
-(void)setStatementCache:(NSMutableDictionary *)arg1 ;
-(void)dealloc;
-(id)closeDatabase;
-(BOOL)tableExists:(id)arg1 ;
-(NSString *)databasePath;
-(sqlite3Ref)database;
-(NSString *)errorMessage;
-(void)setDatabase:(sqlite3Ref)arg1 ;
-(NSString *)databaseName;
-(BOOL)dropTableWithName:(id)arg1 ;
@end

