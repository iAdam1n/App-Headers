/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 30, 2016 at 12:04:10 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/4EC3D7DE-EC7A-4340-8E6F-37E25C97EB19/Gumtree.app/Gumtree
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSDictionary, NSSet, NSMutableDictionary;

@interface RFMSupportedMediations : NSObject {

	unsigned long long _supportedMediationPartnerOption;
	NSDictionary* mediationApiMap;
	NSSet* standardMediations;
	NSSet* mraidMediations;
	NSSet* vastMediations;
	NSSet* partnerMediations;
	NSMutableDictionary* _mediationTagMap;
	NSDictionary* _mediationPredefinedTagMap;

}

@property (nonatomic,readonly) unsigned long long supportedMediationPartnerOption; 
@property (nonatomic,retain) NSDictionary * mediationApiMap; 
@property (nonatomic,retain) NSMutableDictionary * mediationTagMap; 
@property (nonatomic,retain) NSDictionary * mediationPredefinedTagMap; 
@property (nonatomic,retain) NSSet * standardMediations; 
@property (nonatomic,retain) NSSet * mraidMediations; 
@property (nonatomic,retain) NSSet * vastMediations; 
@property (nonatomic,retain) NSSet * partnerMediations; 
@property (nonatomic,retain) NSMutableDictionary * mediationTagMap;                             //@synthesize mediationTagMap=_mediationTagMap - In the implementation block
@property (nonatomic,retain) NSDictionary * mediationPredefinedTagMap;                          //@synthesize mediationPredefinedTagMap=_mediationPredefinedTagMap - In the implementation block
+(id)sharedInstance;
-(BOOL)registerMediator:(Class)arg1 ;
-(void)findAllSubclassesOfClass:(Class)arg1 performBlock:(/*^block*/id)arg2 ;
-(id)getSupportedApiMediations;
-(id)normalizedMediationPartnerTags;
-(void)scanAndRegisterAllPredefinedMediators;
-(void)registerDefaultMediators;
-(unsigned long long)optionForClass:(Class)arg1 ;
-(Class)mediatorClassForApiMediationType:(id)arg1 ;
-(BOOL)isApiMediationSupported:(id)arg1 ;
-(id)mediationSetForType:(unsigned long long)arg1 ;
-(BOOL)isPartnerMediatorSupported:(Class)arg1 ;
-(NSMutableDictionary *)mediationTagMap;
-(BOOL)registerCustomMediator:(Class)arg1 tag:(id)arg2 ;
-(void)unregisterMediator:(Class)arg1 ;
-(id)supportedMediations;
-(void)unregisterMediation;
-(void)registerCustomMediationInfo:(id)arg1 ;
-(void)unregisterMediators:(id)arg1 ;
-(unsigned long long)supportedMediationPartnerOption;
-(NSDictionary *)mediationApiMap;
-(void)setMediationApiMap:(NSDictionary *)arg1 ;
-(NSSet *)standardMediations;
-(void)setStandardMediations:(NSSet *)arg1 ;
-(NSSet *)mraidMediations;
-(void)setMraidMediations:(NSSet *)arg1 ;
-(NSSet *)vastMediations;
-(void)setVastMediations:(NSSet *)arg1 ;
-(NSSet *)partnerMediations;
-(void)setPartnerMediations:(NSSet *)arg1 ;
-(void)setMediationTagMap:(NSMutableDictionary *)arg1 ;
-(NSDictionary *)mediationPredefinedTagMap;
-(void)setMediationPredefinedTagMap:(NSDictionary *)arg1 ;
-(id)init;
@end

