/*
* This header is generated by classdump-dyld 1.0
* on Friday, September 2, 2016 at 11:47:05 AM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/FE1D7681-1F8E-4F70-B735-8E445CD8E257/TestFlight.app/TestFlight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSMutableDictionary, NSMutableArray;

@interface OASTaskRunnerContext : NSObject {

	BOOL _shouldFailIfBackgroundTaskExpires;
	BOOL _taskEjected;
	BOOL _taskInInitialExecutionContext;
	NSMutableDictionary* _userInfo;
	NSMutableArray* _deferredCleanUpBlocks;
	NSMutableArray* _failureReversionBlocks;
	/*^block*/id _privateTaskEjectBlock;

}

@property (assign,nonatomic) BOOL shouldFailIfBackgroundTaskExpires;                 //@synthesize shouldFailIfBackgroundTaskExpires=_shouldFailIfBackgroundTaskExpires - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * userInfo;                       //@synthesize userInfo=_userInfo - In the implementation block
@property (assign) BOOL taskEjected;                                                 //@synthesize taskEjected=_taskEjected - In the implementation block
@property (nonatomic,readonly) NSMutableArray * deferredCleanUpBlocks;               //@synthesize deferredCleanUpBlocks=_deferredCleanUpBlocks - In the implementation block
@property (nonatomic,readonly) NSMutableArray * failureReversionBlocks;              //@synthesize failureReversionBlocks=_failureReversionBlocks - In the implementation block
@property (copy) id privateTaskEjectBlock;                                           //@synthesize privateTaskEjectBlock=_privateTaskEjectBlock - In the implementation block
@property (assign) BOOL taskInInitialExecutionContext;                               //@synthesize taskInInitialExecutionContext=_taskInInitialExecutionContext - In the implementation block
-(void)setTaskEjectedCallback:(/*^block*/id)arg1 ;
-(void)addFailureReversionBlock:(/*^block*/id)arg1 ;
-(BOOL)shouldFailIfBackgroundTaskExpires;
-(void)setTaskInInitialExecutionContext:(BOOL)arg1 ;
-(void)setPrivateTaskEjectBlock:(id)arg1 ;
-(void)setTaskEjected:(BOOL)arg1 ;
-(id)privateTaskEjectBlock;
-(NSMutableArray *)deferredCleanUpBlocks;
-(NSMutableArray *)failureReversionBlocks;
-(void)setShouldFailIfBackgroundTaskExpires:(BOOL)arg1 ;
-(BOOL)taskInInitialExecutionContext;
-(void)addDeferredCleanUpBlock:(/*^block*/id)arg1 ;
-(BOOL)taskEjected;
-(id)init;
-(NSMutableDictionary *)userInfo;
@end

