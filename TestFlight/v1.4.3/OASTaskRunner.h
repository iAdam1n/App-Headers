/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:48:08 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/C8BBB3B7-A738-4D43-8A19-90B2CFB12AE1/TestFlight.app/TestFlight
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OASTaskRunnerBackgroundTaskMaster;
@class OASTaskRunnerContext, NSMutableArray;

@interface OASTaskRunner : NSObject {

	BOOL _shouldRunInBackground;
	BOOL _shouldFailIfBackgroundTaskExpires;
	BOOL _finishing;
	BOOL _started;
	/*^block*/id _willFailBlock;
	unsigned long long _finishReason;
	/*^block*/id _finishedBlock;
	OASTaskRunnerContext* _context;
	NSMutableArray* _tasks;
	unsigned long long _finishingReason;
	id<OASTaskRunnerBackgroundTaskMaster> _backgroundTaskMaster;
	unsigned long long _bgTaskID;

}

@property (assign,nonatomic) BOOL shouldRunInBackground;                                              //@synthesize shouldRunInBackground=_shouldRunInBackground - In the implementation block
@property (assign,nonatomic) BOOL shouldFailIfBackgroundTaskExpires;                                  //@synthesize shouldFailIfBackgroundTaskExpires=_shouldFailIfBackgroundTaskExpires - In the implementation block
@property (assign,nonatomic) BOOL finishing;                                                          //@synthesize finishing=_finishing - In the implementation block
@property (nonatomic,copy) id willFailBlock;                                                          //@synthesize willFailBlock=_willFailBlock - In the implementation block
@property (nonatomic,readonly) BOOL failed; 
@property (nonatomic,readonly) BOOL cancelled; 
@property (assign,nonatomic) unsigned long long finishReason;                                         //@synthesize finishReason=_finishReason - In the implementation block
@property (nonatomic,copy) id finishedBlock;                                                          //@synthesize finishedBlock=_finishedBlock - In the implementation block
@property (nonatomic,readonly) BOOL finished; 
@property (nonatomic,readonly) BOOL succeeded; 
@property (nonatomic,retain) OASTaskRunnerContext * context;                                          //@synthesize context=_context - In the implementation block
@property (nonatomic,readonly) NSMutableArray * tasks;                                                //@synthesize tasks=_tasks - In the implementation block
@property (assign,nonatomic) BOOL started;                                                            //@synthesize started=_started - In the implementation block
@property (assign,nonatomic) unsigned long long finishingReason;                                      //@synthesize finishingReason=_finishingReason - In the implementation block
@property (nonatomic,retain) id<OASTaskRunnerBackgroundTaskMaster> backgroundTaskMaster;              //@synthesize backgroundTaskMaster=_backgroundTaskMaster - In the implementation block
@property (assign,nonatomic) unsigned long long bgTaskID;                                             //@synthesize bgTaskID=_bgTaskID - In the implementation block
-(void)addTasks:(id)arg1 ;
-(BOOL)finishing;
-(void)setWillFailBlock:(id)arg1 ;
-(BOOL)shouldRunInBackground;
-(id<OASTaskRunnerBackgroundTaskMaster>)backgroundTaskMaster;
-(void)backgroundTaskExpired;
-(void)setBgTaskID:(unsigned long long)arg1 ;
-(id)subclassWillStart;
-(void)completeFinish;
-(void)runNextTask;
-(BOOL)shouldFailIfBackgroundTaskExpires;
-(void)beginFinishingWithReason:(unsigned long long)arg1 ;
-(unsigned long long)bgTaskID;
-(void)beginTaskCompletedThreadSafe:(id)arg1 success:(BOOL)arg2 ;
-(void)completeTaskCompletedOnMainThread:(BOOL)arg1 ;
-(void)subclassInterTaskCheckpoint;
-(void)setFinishing:(BOOL)arg1 ;
-(void)setFinishingReason:(unsigned long long)arg1 ;
-(void)subclassRunnerWillFail:(unsigned long long)arg1 ;
-(id)willFailBlock;
-(unsigned long long)finishingReason;
-(void)setFinishReason:(unsigned long long)arg1 ;
-(void)subclassRunnerDidFinish;
-(unsigned long long)finishReason;
-(void)setShouldRunInBackground:(BOOL)arg1 ;
-(void)setShouldFailIfBackgroundTaskExpires:(BOOL)arg1 ;
-(void)setBackgroundTaskMaster:(id<OASTaskRunnerBackgroundTaskMaster>)arg1 ;
-(id)init;
-(void)cancel;
-(OASTaskRunnerContext *)context;
-(void)start;
-(BOOL)cancelled;
-(void)setContext:(OASTaskRunnerContext *)arg1 ;
-(void)fail;
-(id)finishedBlock;
-(void)setFinishedBlock:(id)arg1 ;
-(BOOL)finished;
-(BOOL)failed;
-(void)setStarted:(BOOL)arg1 ;
-(BOOL)started;
-(NSMutableArray *)tasks;
-(BOOL)succeeded;
@end

