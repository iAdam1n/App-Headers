/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:59:40 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/2A9FB5F5-F793-4429-94C0-AF0877EC9D65/AngryBirdsRio.app/AngryBirdsRio
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AngryBirdsRio/AngryBirdsRio-Structs.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>

@class AVCaptureSession, AVCaptureVideoPreviewLayer, AppController, UIViewController, NSString;

@interface CameraController : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate> {

	AVCaptureSession* m_captureSession;
	AVCaptureVideoPreviewLayer* m_previewLayer;
	AppController* m_appController;
	UIViewController* m_viewController;
	CGRect m_previewBounds;
	BOOL m_enableListener;
	CameraListener* m_listener;

}

@property (assign,nonatomic) CameraListener* m_listener; 
@property (assign,nonatomic) BOOL m_enableListener; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(long long)convertInterfaceOrientation:(long long)arg1 ;
+(long long)convertDeviceOrientation:(long long)arg1 ;
+(id)getCameraDeviceWithPosition:(long long)arg1 ;
+(void)initialize;
-(BOOL)enableInput:(id)arg1 withCaptureSession:(id)arg2 andObserver:(id)arg3 ;
-(void)cameraStatus:(int)arg1 withMessage:(id)arg2 andSelf:(id)arg3 ;
-(void)disableInput:(id)arg1 withObserver:(id)arg2 ;
-(BOOL)enableOutput:(id)arg1 withDelegate:(id)arg2 ;
-(void)disableOutput:(id)arg1 ;
-(void)captureSessionError:(id)arg1 ;
-(CameraListener*)m_listener;
-(BOOL)m_enableListener;
-(vector<pf::Camera::Size, std::__1::allocator<pf::Camera::Size> >*)getSupportedImageResolutions;
-(BOOL)setImageResolution:(id)arg1 ;
-(void)setPreviewBounds:(CGRect)arg1 ;
-(void)setM_listener:(CameraListener*)arg1 ;
-(void)setM_enableListener:(BOOL)arg1 ;
-(id)initWithListener:(CameraListener*)arg1 ;
-(void)dealloc;
-(void)close;
-(void)startCapture;
-(void)open:(id)arg1 ;
-(void)stopCapture;
-(void)orientationChanged:(id)arg1 ;
-(void)captureOutput:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
-(void)captureOutput:(id)arg1 didDropSampleBuffer:(opaqueCMSampleBufferRef)arg2 fromConnection:(id)arg3 ;
@end

