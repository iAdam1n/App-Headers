/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:44:05 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/DE3331E2-1165-4E9B-8894-BDF4D69820B5/ECBCricketApp.app/ECBCricketApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <ECBCricketApp/ECBCricketApp-Structs.h>
#import <ECBCricketApp/UALocationProviderDelegate.h>

@protocol UALocationServiceDelegate;
@class UAStandardLocationProvider, UASignificantChangeProvider, CLLocation, NSDate, NSString;

@interface UALocationService : NSObject <UALocationProviderDelegate> {

	UAStandardLocationProvider* _standardLocationProvider;
	UAStandardLocationProvider* _singleLocationProvider;
	UASignificantChangeProvider* _significantChangeProvider;
	BOOL _automaticLocationOnForegroundEnabled;
	BOOL _requestAlwaysAuthorization;
	BOOL _backgroundLocationServiceEnabled;
	BOOL _shouldStartReportingStandardLocation;
	BOOL _shouldStartReportingSignificantChange;
	BOOL _singleLocationShutdownScheduled;
	CLLocation* _lastReportedLocation;
	NSDate* _dateOfLastLocation;
	id<UALocationServiceDelegate> _delegate;
	double _minimumTimeBetweenForegroundUpdates;
	CLLocation* _bestAvailableSingleLocation;
	unsigned long long _singleLocationBackgroundIdentifier;

}

@property (nonatomic,retain) CLLocation * lastReportedLocation;                                                                      //@synthesize lastReportedLocation=_lastReportedLocation - In the implementation block
@property (nonatomic,retain) NSDate * dateOfLastLocation;                                                                            //@synthesize dateOfLastLocation=_dateOfLastLocation - In the implementation block
@property (assign,nonatomic,__weak) id<UALocationServiceDelegate> delegate;                                                          //@synthesize delegate=_delegate - In the implementation block
@property (assign,setter=setAutomaticLocationOnForegroundEnabled:,nonatomic) BOOL automaticLocationOnForegroundEnabled;              //@synthesize automaticLocationOnForegroundEnabled=_automaticLocationOnForegroundEnabled - In the implementation block
@property (assign,nonatomic) BOOL requestAlwaysAuthorization;                                                                        //@synthesize requestAlwaysAuthorization=_requestAlwaysAuthorization - In the implementation block
@property (assign,nonatomic) BOOL backgroundLocationServiceEnabled;                                                                  //@synthesize backgroundLocationServiceEnabled=_backgroundLocationServiceEnabled - In the implementation block
@property (assign,nonatomic) double minimumTimeBetweenForegroundUpdates;                                                             //@synthesize minimumTimeBetweenForegroundUpdates=_minimumTimeBetweenForegroundUpdates - In the implementation block
@property (nonatomic,readonly) long long standardLocationServiceStatus; 
@property (nonatomic,readonly) long long significantChangeServiceStatus; 
@property (nonatomic,readonly) long long singleLocationServiceStatus; 
@property (assign,nonatomic) BOOL shouldStartReportingStandardLocation;                                                              //@synthesize shouldStartReportingStandardLocation=_shouldStartReportingStandardLocation - In the implementation block
@property (assign,nonatomic) BOOL shouldStartReportingSignificantChange;                                                             //@synthesize shouldStartReportingSignificantChange=_shouldStartReportingSignificantChange - In the implementation block
@property (nonatomic,retain) CLLocation * bestAvailableSingleLocation;                                                               //@synthesize bestAvailableSingleLocation=_bestAvailableSingleLocation - In the implementation block
@property (assign,nonatomic) unsigned long long singleLocationBackgroundIdentifier;                                                  //@synthesize singleLocationBackgroundIdentifier=_singleLocationBackgroundIdentifier - In the implementation block
@property (assign,nonatomic) BOOL singleLocationShutdownScheduled;                                                                   //@synthesize singleLocationShutdownScheduled=_singleLocationShutdownScheduled - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)registerNSUserDefaults;
+(void)setDouble:(double)arg1 forLocationServiceKey:(NSString*)arg2 ;
+(double)doubleForLocationServiceKey:(NSString*)arg1 ;
+(BOOL)airshipLocationServiceEnabled;
+(BOOL)locationServiceAuthorized;
+(void)setObject:(id)arg1 forLocationServiceKey:(NSString*)arg2 ;
+(BOOL)boolForLocationServiceKey:(NSString*)arg1 ;
+(void)setBool:(BOOL)arg1 forLocationServiceKey:(NSString*)arg2 ;
+(id)objectForLocationServiceKey:(NSString*)arg1 ;
+(void)setAirshipLocationServiceEnabled:(BOOL)arg1 ;
+(BOOL)coreLocationWillPromptUserForPermissionToRun;
+(void)initialize;
+(BOOL)locationServicesEnabled;
-(void)appDidEnterBackground;
-(void)appWillEnterForeground;
-(id)standardLocationProvider;
-(id)significantChangeProvider;
-(void)setStandardLocationProvider:(id)arg1 ;
-(void)setSignificantChangeProvider:(id)arg1 ;
-(void)stopSingleLocation;
-(void)setMinimumTimeBetweenForegroundUpdates:(double)arg1 ;
-(void)beginObservingUIApplicationState;
-(void)setSingleLocationBackgroundIdentifier:(unsigned long long)arg1 ;
-(void)setRequestAlwaysAuthorization:(BOOL)arg1 ;
-(BOOL)backgroundLocationServiceEnabled;
-(BOOL)shouldStartReportingStandardLocation;
-(void)startReportingStandardLocation;
-(BOOL)shouldStartReportingSignificantChange;
-(void)startReportingSignificantLocationChanges;
-(BOOL)shouldPerformAutoLocationUpdate;
-(void)reportCurrentLocation;
-(void)restartPreviousLocationServices;
-(void)stopReportingStandardLocation;
-(void)setShouldStartReportingStandardLocation:(BOOL)arg1 ;
-(void)stopReportingSignificantLocationChanges;
-(void)setShouldStartReportingSignificantChange:(BOOL)arg1 ;
-(BOOL)automaticLocationOnForegroundEnabled;
-(NSDate *)dateOfLastLocation;
-(double)minimumTimeBetweenForegroundUpdates;
-(id)singleLocationProvider;
-(void)stopSingleLocationWithError:(id)arg1 ;
-(void)singleLocationDidUpdateLocations:(id)arg1 ;
-(void)standardLocationDidUpdateLocations:(id)arg1 ;
-(void)significantChangeDidUpdateLocations:(id)arg1 ;
-(void)startReportingLocationWithProvider:(id)arg1 ;
-(void)reportLocationToAnalytics:(id)arg1 fromProvider:(id)arg2 ;
-(double)desiredAccuracyForLocationServiceKey:(NSString*)arg1 ;
-(long long)singleLocationServiceStatus;
-(BOOL)isLocationServiceEnabledAndAuthorized;
-(void)setSingleLocationProvider:(id)arg1 ;
-(BOOL)requestAuthorizationWithLocationManager:(id)arg1 ;
-(void)shutdownSingleLocationWithTimeoutError;
-(unsigned long long)singleLocationBackgroundIdentifier;
-(id)locationTimeoutError;
-(BOOL)singleLocationShutdownScheduled;
-(double)timeoutForSingleLocationService;
-(void)setSingleLocationShutdownScheduled:(BOOL)arg1 ;
-(void)stopSingleLocationWithLocation:(id)arg1 ;
-(CLLocation *)bestAvailableSingleLocation;
-(void)setBestAvailableSingleLocation:(CLLocation *)arg1 ;
-(void)setCommonPropertiesOnProvider:(id)arg1 ;
-(double)distanceFilterForLocationServiceKey:(NSString*)arg1 ;
-(void)setLastReportedLocation:(CLLocation *)arg1 ;
-(void)setDateOfLastLocation:(NSDate *)arg1 ;
-(void)locationProvider:(id)arg1 withLocationManager:(id)arg2 didChangeAuthorizationStatus:(int)arg3 ;
-(void)locationProvider:(id)arg1 withLocationManager:(id)arg2 didFailWithError:(id)arg3 ;
-(void)locationProvider:(id)arg1 withLocationManager:(id)arg2 didUpdateLocations:(id)arg3 ;
-(long long)standardLocationServiceStatus;
-(long long)significantChangeServiceStatus;
-(double)standardLocationDistanceFilter;
-(void)setStandardLocationDistanceFilter:(double)arg1 ;
-(double)standardLocationDesiredAccuracy;
-(void)setStandardLocationDesiredAccuracy:(double)arg1 ;
-(void)setTimeoutForSingleLocationService:(double)arg1 ;
-(double)singleLocationDesiredAccuracy;
-(void)setSingleLocationDesiredAccuracy:(double)arg1 ;
-(void)setAutomaticLocationOnForegroundEnabled:(BOOL)arg1 ;
-(CLLocation *)lastReportedLocation;
-(void)setBackgroundLocationServiceEnabled:(BOOL)arg1 ;
-(BOOL)requestAlwaysAuthorization;
-(void)dealloc;
-(void)setDelegate:(id<UALocationServiceDelegate>)arg1 ;
-(id)init;
-(id<UALocationServiceDelegate>)delegate;
-(id)location;
-(id)purpose;
@end

