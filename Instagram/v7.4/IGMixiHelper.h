/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 12:10:16 PM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/EECA69E8-8DA6-473D-BDCA-9D4EFB22C6CE/Instagram.app/Instagram
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Instagram/IGMixiAuthDelegate.h>
#import <Instagram/IGServiceHelperProtocol.h>

@class NSString;

@interface IGMixiHelper : NSObject <IGMixiAuthDelegate, IGServiceHelperProtocol> {

	NSString* _accessToken;
	NSString* _serviceName;
	NSString* _shortServiceName;

}

@property (nonatomic,copy) NSString * accessToken;                         //@synthesize accessToken=_accessToken - In the implementation block
@property (nonatomic,copy) NSString * serviceName;                         //@synthesize serviceName=_serviceName - In the implementation block
@property (nonatomic,copy) NSString * shortServiceName;                    //@synthesize shortServiceName=_shortServiceName - In the implementation block
@property (assign,nonatomic) long long currentPrivacySetting; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedHelper;
-(id)sharingInfo;
-(void)logoutAndUnlink;
-(void)setNeedsReauthorization;
-(BOOL)isConfigurable;
-(BOOL)hasAdvancedOptions;
-(BOOL)requiresLocationCoordinate;
-(BOOL)hasEverBeenConfigured;
-(BOOL)isAvailableInCurrentLocale;
-(BOOL)supportsMediaType:(long long)arg1 ;
-(NSString *)shortServiceName;
-(BOOL)needsToReauthorize;
-(void)reauthorizeIfNeeded;
-(id)viewControllerForAdvancedOptions;
-(BOOL)hasSelectedPrivacySetting;
-(id)authURLString;
-(id)callbackURLString;
-(id)accessTokenKey;
-(void)setAccessAndRefreshToken:(id)arg1 expirationInSeconds:(int)arg2 refreshToken:(id)arg3 ;
-(void)reauthorize;
-(void)fetchTokenFinished:(id)arg1 ;
-(void)onFetchTokenFailed;
-(void)reauthorizationNeedsLogin;
-(long long)currentPrivacySetting;
-(id)getLabelForPrivacySetting:(long long)arg1 ;
-(void)mixiAuthControllerLoginFailed:(id)arg1 ;
-(void)mixiAuthController:(id)arg1 didLoginWithCode:(id)arg2 ;
-(id)getMixiConstantForPrivacySetting:(long long)arg1 ;
-(void)reauthorizationFinished;
-(void)setShortServiceName:(NSString *)arg1 ;
-(BOOL)isConfigured;
-(id)refreshToken;
-(void)setCurrentPrivacySetting:(long long)arg1 ;
-(id)init;
-(NSString *)serviceName;
-(void)setServiceName:(NSString *)arg1 ;
-(void)logout;
-(id)clientID;
-(void)setAccessToken:(NSString *)arg1 ;
-(NSString *)accessToken;
@end

