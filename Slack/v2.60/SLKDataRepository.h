/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 13, 2015 at 2:24:38 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8DFB78BE-38F8-46CD-A2D2-C1EE6F510A67/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@class NSManagedObjectModel, NSPersistentStoreCoordinator, NSManagedObjectContext, NSOperationQueue, NSString;

@interface SLKDataRepository : NSObject {

	BOOL _useInMemoryStore;
	NSManagedObjectModel* _managedObjectModel;
	NSPersistentStoreCoordinator* _readPersistentStoreCoordinator;
	NSPersistentStoreCoordinator* _writePersistentStoreCoordinator;
	NSManagedObjectContext* _mainContext;
	NSManagedObjectContext* _backgroundContext;
	NSManagedObjectContext* _messageContext;
	NSOperationQueue* _mainOperationQueue;
	NSOperationQueue* _backgroundOperationQueue;
	NSOperationQueue* _messageOperationQueue;
	NSOperationQueue* _setupOperationQueue;
	NSString* _storeType;

}

@property (assign,getter=isUsingInMemoryStore,nonatomic) BOOL useInMemoryStore;                 //@synthesize useInMemoryStore=_useInMemoryStore - In the implementation block
@property (nonatomic,readonly) BOOL isConfigured; 
@property (retain) NSPersistentStoreCoordinator * readPersistentStoreCoordinator;               //@synthesize readPersistentStoreCoordinator=_readPersistentStoreCoordinator - In the implementation block
@property (retain) NSPersistentStoreCoordinator * writePersistentStoreCoordinator;              //@synthesize writePersistentStoreCoordinator=_writePersistentStoreCoordinator - In the implementation block
@property (retain) NSManagedObjectModel * managedObjectModel;                                   //@synthesize managedObjectModel=_managedObjectModel - In the implementation block
@property (retain) NSManagedObjectContext * mainContext;                                        //@synthesize mainContext=_mainContext - In the implementation block
@property (retain) NSManagedObjectContext * backgroundContext;                                  //@synthesize backgroundContext=_backgroundContext - In the implementation block
@property (retain) NSManagedObjectContext * messageContext;                                     //@synthesize messageContext=_messageContext - In the implementation block
@property (retain) NSOperationQueue * mainOperationQueue;                                       //@synthesize mainOperationQueue=_mainOperationQueue - In the implementation block
@property (retain) NSOperationQueue * backgroundOperationQueue;                                 //@synthesize backgroundOperationQueue=_backgroundOperationQueue - In the implementation block
@property (retain) NSOperationQueue * messageOperationQueue;                                    //@synthesize messageOperationQueue=_messageOperationQueue - In the implementation block
@property (retain) NSOperationQueue * setupOperationQueue;                                      //@synthesize setupOperationQueue=_setupOperationQueue - In the implementation block
@property (nonatomic,retain) NSString * storeType;                                              //@synthesize storeType=_storeType - In the implementation block
+(void)performMainBlock:(/*^block*/id)arg1 ;
+(void)performBackgroundBlock:(/*^block*/id)arg1 ;
+(void)cleanAllRepositories;
+(void)restartQueues:(/*^block*/id)arg1 ;
+(void)pauseAndEmptyQueues:(/*^block*/id)arg1 ;
+(id)sharedRepository;
+(id)applicationSupportPathForAccount:(id)arg1 ;
+(void)deletePersistentStore:(id)arg1 ;
+(void)removePersistentStoresForCoordinator:(id)arg1 completion:(/*^block*/id)arg2 ;
+(id)messageStoreURLForAccount:(id)arg1 ;
+(id)botStoreURLForAccount:(id)arg1 ;
+(id)mainStoreURLForAccount:(id)arg1 ;
+(void)cleanRepositoryForAccount:(id)arg1 ;
+(id)newManagedObjectModel;
+(id)newContextOperationQueue;
+(id)newManagedObjectContext:(unsigned long long)arg1 coordinator:(id)arg2 ;
+(void)waitUntilCompleted:(/*^block*/id)arg1 ;
+(void)performContextBlock:(unsigned long long)arg1 block:(/*^block*/id)arg2 ;
+(id)contextForType:(unsigned long long)arg1 ;
+(id)queueForType:(unsigned long long)arg1 ;
+(void)removeBotPersistentStoreForCoordinator:(id)arg1 ;
+(void)performBlockWithPausedQueues:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
+(void)removeMessagePersistentStoreForCoordinator:(id)arg1 ;
+(id)cachePathForAccount:(id)arg1 ;
+(BOOL)deleteRepositoryForAccount:(id)arg1 ;
+(void)performMessageBlock:(/*^block*/id)arg1 ;
+(id)defaultApplicationSupportPath;
+(id)defaultCachePath;
+(id)applicationSupportDatabasePathForAccount:(id)arg1 ;
+(id)unarchiveObjectAtPath:(id)arg1 ;
+(unsigned long long)typeForContext:(id)arg1 ;
+(void)removeMainPersistentStoreForCoordinator:(id)arg1 ;
+(BOOL)hasExecutingOperation:(id)arg1 ;
+(void)saveWithBlock:(/*^block*/id)arg1 ;
+(void)dumpCache:(/*^block*/id)arg1 ;
+(id)storeOptions;
+(id)mainContext;
+(id)messageContext;
+(id)backgroundContext;
-(void)resetRepository;
-(void)setSetupOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)setupOperationQueue;
-(void)willChangeAccounts:(id)arg1 ;
-(NSOperationQueue *)mainOperationQueue;
-(NSOperationQueue *)backgroundOperationQueue;
-(NSOperationQueue *)messageOperationQueue;
-(void)setReadPersistentStoreCoordinator:(NSPersistentStoreCoordinator *)arg1 ;
-(void)setWritePersistentStoreCoordinator:(NSPersistentStoreCoordinator *)arg1 ;
-(void)setMainOperationQueue:(NSOperationQueue *)arg1 ;
-(void)setBackgroundOperationQueue:(NSOperationQueue *)arg1 ;
-(void)setMessageOperationQueue:(NSOperationQueue *)arg1 ;
-(void)setMainContext:(NSManagedObjectContext *)arg1 ;
-(void)createCoreDataStackForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(NSPersistentStoreCoordinator *)readPersistentStoreCoordinator;
-(NSPersistentStoreCoordinator *)writePersistentStoreCoordinator;
-(void)performSetupBlock:(/*^block*/id)arg1 ;
-(void)addMessagePersistentStoreForAccount:(id)arg1 coordinator:(id)arg2 ;
-(void)addBotPersistentStoreForAccount:(id)arg1 coordinator:(id)arg2 ;
-(void)addPersistentStoresForAccount:(id)arg1 coordinator:(id)arg2 ;
-(void)deleteAllMessages:(/*^block*/id)arg1 ;
-(void)resetCoreDataStackForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)prepareToDelete:(/*^block*/id)arg1 ;
-(void)setUseInMemoryStore:(BOOL)arg1 ;
-(void)replaceCoreDataStackForNewAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)removePersistentStoresForAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addPersistentStoresForAccount:(id)arg1 coordinator:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)deleteAllBots:(/*^block*/id)arg1 ;
-(void)deleteEphemeralMessages:(/*^block*/id)arg1 ;
-(void)cleanRepository:(/*^block*/id)arg1 ;
-(BOOL)deleteRepository;
-(BOOL)isUsingInMemoryStore;
-(NSString *)storeType;
-(void)setStoreType:(NSString *)arg1 ;
-(void)dealloc;
-(id)init;
-(NSManagedObjectContext *)mainContext;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(NSManagedObjectModel *)managedObjectModel;
-(void)setManagedObjectModel:(NSManagedObjectModel *)arg1 ;
-(void)contextDidSave:(id)arg1 ;
-(void)setMessageContext:(NSManagedObjectContext *)arg1 ;
-(NSManagedObjectContext *)messageContext;
-(NSManagedObjectContext *)backgroundContext;
-(void)setBackgroundContext:(NSManagedObjectContext *)arg1 ;
-(BOOL)isConfigured;
@end

