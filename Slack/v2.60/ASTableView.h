/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 13, 2015 at 2:24:42 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8DFB78BE-38F8-46CD-A2D2-C1EE6F510A67/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Slack/Slack-Structs.h>
#import <UIKit/UITableView.h>
#import <Slack/ASRangeControllerDelegate.h>
#import <Slack/ASDataControllerSource.h>

@protocol ASTableViewDataSource, ASTableViewDelegate;
@class _ASTableViewProxy, ASDataController, ASFlowLayoutController, ASRangeController, ASBatchContext, NSIndexPath, NSString;

@interface ASTableView : UITableView <ASRangeControllerDelegate, ASDataControllerSource> {

	_ASTableViewProxy* _proxyDataSource;
	_ASTableViewProxy* _proxyDelegate;
	ASDataController* _dataController;
	ASFlowLayoutController* _layoutController;
	ASRangeController* _rangeController;
	BOOL _asyncDataFetchingEnabled;
	ASBatchContext* _batchContext;
	NSIndexPath* _pendingVisibleIndexPath;
	BOOL _asyncDataSourceLocked;
	id<ASTableViewDataSource> _asyncDataSource;
	id<ASTableViewDelegate> _asyncDelegate;
	double _leadingScreensForBatching;

}

@property (assign,nonatomic,__weak) id<ASTableViewDataSource> asyncDataSource;              //@synthesize asyncDataSource=_asyncDataSource - In the implementation block
@property (assign,nonatomic,__weak) id<ASTableViewDelegate> asyncDelegate;                  //@synthesize asyncDelegate=_asyncDelegate - In the implementation block
@property (assign,nonatomic) double leadingScreensForBatching;                              //@synthesize leadingScreensForBatching=_leadingScreensForBatching - In the implementation block
@property (assign) BOOL asyncDataSourceLocked;                                              //@synthesize asyncDataSourceLocked=_asyncDataSourceLocked - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)reloadDataWithCompletion:(/*^block*/id)arg1 ;
-(void)setTuningParameters:(CGPoint)arg1 forRangeType:(long long)arg2 ;
-(CGPoint)tuningParametersForRangeType:(long long)arg1 ;
-(void)handleBatchFetchScrollingToOffset:(CGPoint)arg1 ;
-(BOOL)shouldBatchFetch;
-(void)setAsyncDataSourceLocked:(BOOL)arg1 ;
-(id)rangeControllerVisibleNodeIndexPaths:(id)arg1 ;
-(CGSize)rangeControllerViewportSize:(id)arg1 ;
-(void)rangeControllerBeginUpdates:(id)arg1 ;
-(void)rangeControllerEndUpdates:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)rangeController:(id)arg1 nodesAtIndexPaths:(id)arg2 ;
-(void)rangeController:(id)arg1 didInsertNodesAtIndexPaths:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didDeleteNodesAtIndexPaths:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didInsertSectionsAtIndexSet:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didDeleteSectionsAtIndexSet:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(id)dataController:(id)arg1 nodeAtIndexPath:(id)arg2 ;
-(CGSize)dataController:(id)arg1 constrainedSizeForNodeAtIndexPath:(id)arg2 ;
-(unsigned long long)dataController:(id)arg1 rowsInSection:(unsigned long long)arg2 ;
-(unsigned long long)dataControllerNumberOfSections:(id)arg1 ;
-(void)dataControllerLockDataSource;
-(void)dataControllerUnlockDataSource;
-(void)setAsyncDataSource:(id<ASTableViewDataSource>)arg1 ;
-(void)setAsyncDelegate:(id<ASTableViewDelegate>)arg1 ;
-(CGPoint)rangeTuningParameters;
-(void)setRangeTuningParameters:(CGPoint)arg1 ;
-(id)visibleNodes;
-(id<ASTableViewDataSource>)asyncDataSource;
-(id<ASTableViewDelegate>)asyncDelegate;
-(double)leadingScreensForBatching;
-(void)setLeadingScreensForBatching:(double)arg1 ;
-(BOOL)asyncDataSourceLocked;
-(id)initWithFrame:(CGRect)arg1 style:(long long)arg2 asyncDataFetching:(BOOL)arg3 ;
-(void)configureWithAsyncDataFetching:(BOOL)arg1 ;
-(id)nodeForRowAtIndexPath:(id)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setDataSource:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)reloadData;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2 ;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInTableView:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 style:(long long)arg2 ;
-(void)beginUpdates;
-(void)endUpdates;
-(void)insertSections:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)deleteSections:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)reloadSections:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)moveSection:(long long)arg1 toSection:(long long)arg2 ;
-(void)insertRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)deleteRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)reloadRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2 ;
-(void)moveRowAtIndexPath:(id)arg1 toIndexPath:(id)arg2 ;
-(long long)scrollDirection;
@end

