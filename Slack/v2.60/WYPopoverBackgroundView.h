/*
* This header is generated by classdump-dyld 0.7
* on Friday, November 13, 2015 at 2:24:43 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8DFB78BE-38F8-46CD-A2D2-C1EE6F510A67/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Slack/Slack-Structs.h>
#import <UIKit/UIView.h>

@class WYPopoverInnerView, UIColor, UIView;

@interface WYPopoverBackgroundView : UIView {

	WYPopoverInnerView* innerView;
	CGSize contentSize;
	BOOL wantsDefaultContentAppearance;
	UIColor* tintColor;
	UIColor* strokeColor;
	UIColor* fillTopColor;
	UIColor* fillBottomColor;
	UIColor* glossShadowColor;
	double glossShadowBlurRadius;
	double borderWidth;
	double arrowBase;
	double arrowHeight;
	UIColor* outerShadowColor;
	UIColor* outerStrokeColor;
	double outerShadowBlurRadius;
	double outerCornerRadius;
	double minOuterCornerRadius;
	UIColor* innerShadowColor;
	UIColor* innerStrokeColor;
	double innerShadowBlurRadius;
	double innerCornerRadius;
	unsigned long long arrowDirection;
	UIView* contentView;
	double arrowOffset;
	double navigationBarHeight;
	UIColor* defaultTintColor;
	UIColor* _overlayColor;
	CGSize glossShadowOffset;
	CGSize outerShadowOffset;
	CGSize innerShadowOffset;
	UIEdgeInsets viewContentInsets;
	UIEdgeInsets outerShadowInsets;

}

@property (nonatomic,retain) UIColor * strokeColor; 
@property (nonatomic,retain) UIColor * tintColor; 
@property (nonatomic,retain) UIColor * fillTopColor; 
@property (nonatomic,retain) UIColor * fillBottomColor; 
@property (nonatomic,retain) UIColor * glossShadowColor; 
@property (assign,nonatomic) CGSize glossShadowOffset; 
@property (assign,nonatomic) double glossShadowBlurRadius; 
@property (assign,nonatomic) double borderWidth; 
@property (assign,nonatomic) double arrowBase; 
@property (assign,nonatomic) double arrowHeight; 
@property (nonatomic,retain) UIColor * outerShadowColor; 
@property (nonatomic,retain) UIColor * outerStrokeColor; 
@property (assign,nonatomic) double outerShadowBlurRadius; 
@property (assign,nonatomic) CGSize outerShadowOffset; 
@property (assign,nonatomic) double outerCornerRadius; 
@property (assign,nonatomic) double minOuterCornerRadius; 
@property (nonatomic,retain) UIColor * innerShadowColor; 
@property (nonatomic,retain) UIColor * innerStrokeColor; 
@property (assign,nonatomic) double innerShadowBlurRadius; 
@property (assign,nonatomic) CGSize innerShadowOffset; 
@property (assign,nonatomic) double innerCornerRadius; 
@property (assign,nonatomic) UIEdgeInsets viewContentInsets; 
@property (nonatomic,retain) UIColor * overlayColor;                          //@synthesize overlayColor=_overlayColor - In the implementation block
@property (assign,nonatomic) unsigned long long arrowDirection; 
@property (nonatomic,readonly) UIView * contentView; 
@property (nonatomic,readonly) double navigationBarHeight; 
@property (nonatomic,readonly) UIEdgeInsets outerShadowInsets; 
@property (assign,nonatomic) double arrowOffset; 
@property (assign,nonatomic) BOOL wantsDefaultContentAppearance; 
@property (nonatomic,readonly) UIColor * defaultTintColor; 
+(void)load;
-(UIColor *)innerStrokeColor;
-(void)setInnerStrokeColor:(UIColor *)arg1 ;
-(double)innerShadowBlurRadius;
-(void)setInnerShadowBlurRadius:(double)arg1 ;
-(double)innerCornerRadius;
-(void)setInnerCornerRadius:(double)arg1 ;
-(void)setWantsDefaultContentAppearance:(BOOL)arg1 ;
-(void)setOuterStrokeColor:(UIColor *)arg1 ;
-(void)setFillTopColor:(UIColor *)arg1 ;
-(void)setFillBottomColor:(UIColor *)arg1 ;
-(void)setGlossShadowColor:(UIColor *)arg1 ;
-(void)setGlossShadowOffset:(CGSize)arg1 ;
-(void)setGlossShadowBlurRadius:(double)arg1 ;
-(void)setArrowBase:(double)arg1 ;
-(void)setOuterShadowBlurRadius:(double)arg1 ;
-(void)setOuterCornerRadius:(double)arg1 ;
-(void)setMinOuterCornerRadius:(double)arg1 ;
-(void)setViewContentInsets:(UIEdgeInsets)arg1 ;
-(CGRect)outerRect;
-(CGRect)innerRect;
-(UIColor *)fillTopColor;
-(UIColor *)fillBottomColor;
-(UIEdgeInsets)outerShadowInsets;
-(UIColor *)defaultTintColor;
-(CGRect)outerRect:(CGRect)arg1 arrowDirection:(unsigned long long)arg2 ;
-(UIColor *)glossShadowColor;
-(UIColor *)outerStrokeColor;
-(CGRect)innerRect:(CGRect)arg1 arrowDirection:(unsigned long long)arg2 ;
-(CGRect)arrowRect:(CGRect)arg1 arrowDirection:(unsigned long long)arg2 ;
-(CGRect)arrowRect;
-(BOOL)isTouchedAtPoint:(CGPoint)arg1 ;
-(CGSize)glossShadowOffset;
-(double)glossShadowBlurRadius;
-(double)outerShadowBlurRadius;
-(double)outerCornerRadius;
-(double)minOuterCornerRadius;
-(UIEdgeInsets)viewContentInsets;
-(id)initWithContentSize:(CGSize)arg1 ;
-(void)setNeedsDisplay;
-(void)dealloc;
-(CGSize)sizeThatFits:(CGSize)arg1 ;
-(void)setInnerShadowColor:(UIColor *)arg1 ;
-(void)setInnerShadowOffset:(CGSize)arg1 ;
-(void)setOuterShadowColor:(UIColor *)arg1 ;
-(void)setOuterShadowOffset:(CGSize)arg1 ;
-(UIColor *)innerShadowColor;
-(CGSize)innerShadowOffset;
-(UIColor *)outerShadowColor;
-(CGSize)outerShadowOffset;
-(UIView *)contentView;
-(UIColor *)tintColor;
-(void)setTintColor:(UIColor *)arg1 ;
-(void)sizeToFit;
-(void)drawLayer:(id)arg1 inContext:(CGContextRef)arg2 ;
-(void)setBorderWidth:(double)arg1 ;
-(void)setViewController:(id)arg1 ;
-(BOOL)wantsDefaultContentAppearance;
-(void)setStrokeColor:(UIColor *)arg1 ;
-(UIColor *)strokeColor;
-(void)setOverlayColor:(UIColor *)arg1 ;
-(UIColor *)overlayColor;
-(double)borderWidth;
-(unsigned long long)arrowDirection;
-(void)setArrowDirection:(unsigned long long)arg1 ;
-(void)setArrowHeight:(double)arg1 ;
-(double)arrowHeight;
-(double)arrowBase;
-(void)setArrowOffset:(double)arg1 ;
-(double)arrowOffset;
-(double)navigationBarHeight;
@end

