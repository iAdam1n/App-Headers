/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:38:00 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/B4EAB98E-4B8F-47BB-A92B-B0524BEFEA49/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Slack/SRWebSocketDelegate.h>

@protocol OS_dispatch_queue;
@class NSOperationQueue, NSURL, NSTimer, SRWebSocket, NSMutableDictionary, SLKWebSocketClientConnectionAttempt, NSHashTable, NSObject, SLKDependencies, NSString;

@interface SLKWebSocketClient : NSObject <SRWebSocketDelegate> {

	NSOperationQueue* _messageQueue;
	NSURL* _url;
	/*^block*/id _connectionSuccessBlock;
	/*^block*/id _connectionFailureBlock;
	double _lastTypingSentTimeInterval;
	NSTimer* _connectTimer;
	NSTimer* _fastReconnectTimer;
	NSTimer* _pingTimer;
	SRWebSocket* _webSocket;
	NSMutableDictionary* _completionBlocks;
	SLKWebSocketClientConnectionAttempt* _lastSocketConnectionAttempt;
	NSHashTable* _fileChangeObservers;
	NSObject*<OS_dispatch_queue> _queue;
	SLKDependencies* _dependencies;

}

@property (nonatomic,retain) NSOperationQueue * messageQueue;                                                //@synthesize messageQueue=_messageQueue - In the implementation block
@property (nonatomic,retain) NSURL * url;                                                                    //@synthesize url=_url - In the implementation block
@property (nonatomic,copy) id connectionSuccessBlock;                                                        //@synthesize connectionSuccessBlock=_connectionSuccessBlock - In the implementation block
@property (nonatomic,copy) id connectionFailureBlock;                                                        //@synthesize connectionFailureBlock=_connectionFailureBlock - In the implementation block
@property (assign,nonatomic) double lastTypingSentTimeInterval;                                              //@synthesize lastTypingSentTimeInterval=_lastTypingSentTimeInterval - In the implementation block
@property (nonatomic,retain) NSTimer * connectTimer;                                                         //@synthesize connectTimer=_connectTimer - In the implementation block
@property (nonatomic,retain) NSTimer * fastReconnectTimer;                                                   //@synthesize fastReconnectTimer=_fastReconnectTimer - In the implementation block
@property (nonatomic,retain) NSTimer * pingTimer;                                                            //@synthesize pingTimer=_pingTimer - In the implementation block
@property (nonatomic,retain) SRWebSocket * webSocket;                                                        //@synthesize webSocket=_webSocket - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * completionBlocks;                                         //@synthesize completionBlocks=_completionBlocks - In the implementation block
@property (nonatomic,retain) SLKWebSocketClientConnectionAttempt * lastSocketConnectionAttempt;              //@synthesize lastSocketConnectionAttempt=_lastSocketConnectionAttempt - In the implementation block
@property (nonatomic,retain) NSHashTable * fileChangeObservers;                                              //@synthesize fileChangeObservers=_fileChangeObservers - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                             //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic,__weak) SLKDependencies * dependencies;                                          //@synthesize dependencies=_dependencies - In the implementation block
@property (readonly) BOOL hasFileChangeObservers; 
@property (nonatomic,readonly) unsigned long long connectionStatus; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)addEphemeralMessage:(id)arg1 threadTimestamp:(id)arg2 forUnsupportedCommand:(id)arg3 genericChannelId:(id)arg4 ;
-(void)sendMessage:(id)arg1 channelId:(id)arg2 threadTimestamp:(id)arg3 broadcast:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(BOOL)canHandleSlashCommand:(id)arg1 threadTimestamp:(id)arg2 genericChannel:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)retryMessage:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addEphemeralMessage:(id)arg1 genericChannelId:(id)arg2 ;
-(void)sendTypingIndicator:(id)arg1 ;
-(void)webSocketDidOpen:(id)arg1 ;
-(void)webSocket:(id)arg1 didFailWithError:(id)arg2 ;
-(void)webSocket:(id)arg1 didReceiveMessage:(id)arg2 ;
-(void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(BOOL)arg4 ;
-(id)genericChannelForId:(id)arg1 contextType:(unsigned long long)arg2 ;
-(void)setFileChangeObservers:(NSHashTable *)arg1 ;
-(void)reconnectIfDisconnected;
-(void)setConnectTimer:(NSTimer *)arg1 ;
-(SRWebSocket *)webSocket;
-(id)sendPing;
-(void)setConnectionSuccessBlock:(id)arg1 ;
-(void)setConnectionFailureBlock:(id)arg1 ;
-(void)setWebSocket:(SRWebSocket *)arg1 ;
-(NSTimer *)fastReconnectTimer;
-(void)setFastReconnectTimer:(NSTimer *)arg1 ;
-(void)trackWebSocketWillOpenWithFastReconnect:(BOOL)arg1 ;
-(void)stopPingHandler;
-(void)beginPingHandler;
-(id)connectionSuccessBlock;
-(void)invalidateFastReconnectTimer;
-(id)connectionFailureBlock;
-(void)processPayloadString:(id)arg1 ;
-(void)processMessagePayload:(id)arg1 ;
-(void)trackWebSocketDidOpen;
-(void)trackWebSocketDidFailOpening;
-(void)sendSocketPayload:(id)arg1 ;
-(void)sendTickle;
-(double)lastTypingSentTimeInterval;
-(void)setLastTypingSentTimeInterval:(double)arg1 ;
-(void)setLastSocketConnectionAttempt:(SLKWebSocketClientConnectionAttempt *)arg1 ;
-(SLKWebSocketClientConnectionAttempt *)lastSocketConnectionAttempt;
-(void)beginReconnectionHandler;
-(void)didFinishConnectionProcess;
-(void)connectWithURL:(id)arg1 isFastReconnect:(BOOL)arg2 success:(/*^block*/id)arg3 failure:(/*^block*/id)arg4 ;
-(void)checkIfConnectedViaFastReconnect;
-(id)localizedConnectionStatusDescription;
-(void)sendMessage:(id)arg1 channelId:(id)arg2 threadTimestamp:(id)arg3 broadcast:(BOOL)arg4 success:(/*^block*/id)arg5 failure:(/*^block*/id)arg6 ;
-(void)retryMessage:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(void)addFileChangeObserver:(id)arg1 ;
-(void)removeFileChangeObserver:(id)arg1 ;
-(BOOL)hasFileChangeObservers;
-(NSTimer *)connectTimer;
-(NSHashTable *)fileChangeObservers;
-(void)addEphemeralMessage:(id)arg1 forOutOfChannelMentions:(id)arg2 genericChannelId:(id)arg3 ;
-(void)processMessageText:(id)arg1 forChannel:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)handleSystemCallWithScheme:(id)arg1 genericChannel:(id)arg2 ;
-(void)handleSlackCallInGenericChannel:(id)arg1 ;
-(void)addEphemeralMessageForUnavailableCommand:(id)arg1 genericChannelId:(id)arg2 ;
-(void)addEphemeralMessageForUnsupportedCommand:(id)arg1 genericChannelId:(id)arg2 ;
-(void)addEphemeralMessage:(id)arg1 threadTimestamp:(id)arg2 genericChannelId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)handleEvents:(id)arg1 ;
-(void)handleAddUserToEnterpriseTeams:(id)arg1 ;
-(void)handleRemoveUserFromEnterpriseTeams:(id)arg1 ;
-(void)handleMessageType:(id)arg1 ;
-(void)handleMessageEvent:(id)arg1 ;
-(void)handleMessageSubtype:(id)arg1 ;
-(void)persistMessage:(id)arg1 ;
-(void)updateChannelSharedList:(id)arg1 ;
-(void)deleteChannelForChannelID:(id)arg1 ;
-(void)archiveChannelForChannelID:(id)arg1 ;
-(void)handleFileChange:(id)arg1 eventType:(id)arg2 ;
-(void)dealloc;
-(NSURL *)url;
-(void)setUrl:(NSURL *)arg1 ;
-(void)disconnect;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSMutableDictionary *)completionBlocks;
-(id)initWithDependencies:(id)arg1 ;
-(SLKDependencies *)dependencies;
-(void)didFailWithError:(id)arg1 ;
-(void)setMessageQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)messageQueue;
-(unsigned long long)connectionStatus;
-(void)setCompletionBlocks:(NSMutableDictionary *)arg1 ;
-(void)setDependencies:(SLKDependencies *)arg1 ;
-(void)didConnect;
-(void)handleMessage:(id)arg1 ;
-(NSTimer *)pingTimer;
-(void)setPingTimer:(NSTimer *)arg1 ;
@end

