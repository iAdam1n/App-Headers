/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:38:00 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/B4EAB98E-4B8F-47BB-A92B-B0524BEFEA49/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class SLKAccount, NSMutableDictionary, NSMutableArray;

@interface SLKAccountManager : NSObject {

	BOOL _isSwitching;
	SLKAccount* _currentAccount;
	SLKAccount* _previousAccount;
	SLKAccount* _previousPreviousAccount;
	NSMutableDictionary* _info;
	NSMutableArray* _accounts;
	NSMutableDictionary* _teamDependencies;

}

@property (nonatomic,retain) NSMutableDictionary * info;                          //@synthesize info=_info - In the implementation block
@property (nonatomic,retain) NSMutableArray * accounts;                           //@synthesize accounts=_accounts - In the implementation block
@property (assign) BOOL isSwitching;                                              //@synthesize isSwitching=_isSwitching - In the implementation block
@property (nonatomic,retain) SLKAccount * currentAccount;                         //@synthesize currentAccount=_currentAccount - In the implementation block
@property (nonatomic,retain) SLKAccount * previousAccount;                        //@synthesize previousAccount=_previousAccount - In the implementation block
@property (nonatomic,retain) SLKAccount * previousPreviousAccount;                //@synthesize previousPreviousAccount=_previousPreviousAccount - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * teamDependencies;              //@synthesize teamDependencies=_teamDependencies - In the implementation block
+(id)sharedManager;
-(id)dependenciesForTeamId:(id)arg1 ;
-(id)allTeamIds;
-(id)dependenciesWithContext:(id)arg1 ;
-(void)removeDependenciesForTeamId:(id)arg1 ;
-(void)switchAccountBack:(/*^block*/id)arg1 ;
-(BOOL)switchToTeam:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)accountForTeamId:(id)arg1 ;
-(void)switchAccountForward:(/*^block*/id)arg1 ;
-(SLKAccount *)previousAccount;
-(SLKAccount *)previousPreviousAccount;
-(BOOL)switchToAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)updateOrCreateAccountWithTeamId:(id)arg1 teamName:(id)arg2 teamDomain:(id)arg3 teamImageUrls:(id)arg4 authUserID:(id)arg5 enterpriseId:(id)arg6 enterpriseName:(id)arg7 enterpriseImageUrls:(id)arg8 enterpriseToken:(id)arg9 ;
-(id)teamAccountsForEnterpriseId:(id)arg1 ;
-(id)createAccountWithTeamId:(id)arg1 authUserID:(id)arg2 ;
-(void)setAsCurrentAccount:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)updateOrCreateAccountWithPayload:(id)arg1 ;
-(id)teamIdsForEnterpriseId:(id)arg1 ;
-(void)setTeamDependencies:(NSMutableDictionary *)arg1 ;
-(BOOL)clearAndSave:(BOOL)arg1 ;
-(id)allDependencies;
-(NSMutableDictionary *)teamDependencies;
-(BOOL)removeAccountForTeamId:(id)arg1 ;
-(void)setPreviousAccount:(SLKAccount *)arg1 ;
-(void)setAsCurrentAccount:(id)arg1 withTeamSwitchAnimations:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)switchAccountForward:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)configureTestTeamTokenIfNeeded;
-(void)setPreviousPreviousAccount:(SLKAccount *)arg1 ;
-(id)allEnterpriseIds;
-(BOOL)removeAccountForTeam:(id)arg1 ;
-(BOOL)removeAllAccounts;
-(void)setIsSwitching:(BOOL)arg1 ;
-(id)init;
-(NSMutableDictionary *)info;
-(void)setInfo:(NSMutableDictionary *)arg1 ;
-(id)allAccounts;
-(BOOL)save;
-(BOOL)isSwitching;
-(BOOL)saveToKeychain;
-(void)setAccounts:(NSMutableArray *)arg1 ;
-(SLKAccount *)currentAccount;
-(NSMutableArray *)accounts;
-(void)setCurrentAccount:(SLKAccount *)arg1 ;
-(BOOL)removeAccount:(id)arg1 ;
@end

