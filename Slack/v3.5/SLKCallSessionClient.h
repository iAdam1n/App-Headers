/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 8:46:55 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/11A60D99-01E0-433C-ADB9-36971BECDA0C/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Slack/SHSessionDelegateProtocol.h>

@protocol SLKCallSessionDelegate;
@class AFHTTPSessionManager, NSString, NSNumber, SHSession, NSTimer, NSMutableArray, NSArray, NSMutableDictionary, CTCallCenter, NSDate, SLKDependencies;

@interface SLKCallSessionClient : NSObject <SHSessionDelegateProtocol> {

	BOOL _userHasAcceptedCall;
	BOOL _muted;
	BOOL _speaker;
	BOOL _isCurrentlyOnCall;
	BOOL _userIsCurrentlyNotOniOSCall;
	BOOL _userHasGrantedMicrophonePermission;
	BOOL _userHasHeadphonesPluggedIn;
	BOOL _attemptToReconnect;
	BOOL _reconnecting;
	AFHTTPSessionManager* _manager;
	NSString* _accessToken;
	id<SLKCallSessionDelegate> _delegate;
	unsigned long long _connectionState;
	NSString* _roomID;
	NSString* _callSurveyRoomID;
	NSNumber* _callSurveyPercentage;
	NSString* _currentCallDuration;
	SHSession* _session;
	unsigned long long _callType;
	NSString* _sessionToken;
	NSTimer* _updateCallSessionTokenTimer;
	NSTimer* _attemptingToReconnectToCallTimer;
	NSTimer* _possiblyAttemptToReconnectToCallTimer;
	NSTimer* _callInitiatedButNotConnectedTimeoutTimer;
	NSMutableArray* _userInvitesTimers;
	NSMutableArray* _userInvitesIDs;
	NSString* _hostnameURLString;
	NSString* _turnAuthUserName;
	NSString* _turnAuthUserPassword;
	NSArray* _turnAuthPorts;
	NSString* _turnHostName;
	NSNumber* _port;
	NSString* _windowHostname;
	NSString* _channelID;
	NSNumber* _participantID;
	NSMutableDictionary* _participantsCache;
	CTCallCenter* _callCenter;
	NSTimer* _callDurationTimer;
	NSDate* _callBeginDate;
	double _currentTimeInterval;
	unsigned long long _numberOfTimesAttemptedToConnectToCallServer;
	NSString* _errorMessageToDisplayBeforeEndingCall;
	NSMutableArray* _managers;
	SLKDependencies* _dependencies;

}

@property (nonatomic,retain) SHSession * session;                                                         //@synthesize session=_session - In the implementation block
@property (assign,nonatomic) unsigned long long callType;                                                 //@synthesize callType=_callType - In the implementation block
@property (nonatomic,retain) NSString * sessionToken;                                                     //@synthesize sessionToken=_sessionToken - In the implementation block
@property (nonatomic,retain) NSTimer * updateCallSessionTokenTimer;                                       //@synthesize updateCallSessionTokenTimer=_updateCallSessionTokenTimer - In the implementation block
@property (nonatomic,retain) NSTimer * attemptingToReconnectToCallTimer;                                  //@synthesize attemptingToReconnectToCallTimer=_attemptingToReconnectToCallTimer - In the implementation block
@property (nonatomic,retain) NSTimer * possiblyAttemptToReconnectToCallTimer;                             //@synthesize possiblyAttemptToReconnectToCallTimer=_possiblyAttemptToReconnectToCallTimer - In the implementation block
@property (nonatomic,retain) NSTimer * callInitiatedButNotConnectedTimeoutTimer;                          //@synthesize callInitiatedButNotConnectedTimeoutTimer=_callInitiatedButNotConnectedTimeoutTimer - In the implementation block
@property (nonatomic,retain) NSString * roomID;                                                           //@synthesize roomID=_roomID - In the implementation block
@property (assign,nonatomic) BOOL userHasAcceptedCall;                                                    //@synthesize userHasAcceptedCall=_userHasAcceptedCall - In the implementation block
@property (nonatomic,retain) NSString * currentCallDuration;                                              //@synthesize currentCallDuration=_currentCallDuration - In the implementation block
@property (nonatomic,retain) NSMutableArray * userInvitesTimers;                                          //@synthesize userInvitesTimers=_userInvitesTimers - In the implementation block
@property (nonatomic,retain) NSMutableArray * userInvitesIDs;                                             //@synthesize userInvitesIDs=_userInvitesIDs - In the implementation block
@property (nonatomic,retain) NSString * hostnameURLString;                                                //@synthesize hostnameURLString=_hostnameURLString - In the implementation block
@property (nonatomic,retain) NSString * turnAuthUserName;                                                 //@synthesize turnAuthUserName=_turnAuthUserName - In the implementation block
@property (nonatomic,retain) NSString * turnAuthUserPassword;                                             //@synthesize turnAuthUserPassword=_turnAuthUserPassword - In the implementation block
@property (nonatomic,retain) NSArray * turnAuthPorts;                                                     //@synthesize turnAuthPorts=_turnAuthPorts - In the implementation block
@property (nonatomic,retain) NSString * turnHostName;                                                     //@synthesize turnHostName=_turnHostName - In the implementation block
@property (nonatomic,retain) NSNumber * port;                                                             //@synthesize port=_port - In the implementation block
@property (nonatomic,retain) NSString * windowHostname;                                                   //@synthesize windowHostname=_windowHostname - In the implementation block
@property (nonatomic,retain) NSString * channelID;                                                        //@synthesize channelID=_channelID - In the implementation block
@property (nonatomic,retain) NSNumber * participantID;                                                    //@synthesize participantID=_participantID - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * participantsCache;                                     //@synthesize participantsCache=_participantsCache - In the implementation block
@property (assign,nonatomic) BOOL isCurrentlyOnCall;                                                      //@synthesize isCurrentlyOnCall=_isCurrentlyOnCall - In the implementation block
@property (assign,nonatomic) BOOL userIsCurrentlyNotOniOSCall;                                            //@synthesize userIsCurrentlyNotOniOSCall=_userIsCurrentlyNotOniOSCall - In the implementation block
@property (assign,nonatomic) BOOL userHasGrantedMicrophonePermission;                                     //@synthesize userHasGrantedMicrophonePermission=_userHasGrantedMicrophonePermission - In the implementation block
@property (assign,nonatomic) BOOL userHasHeadphonesPluggedIn;                                             //@synthesize userHasHeadphonesPluggedIn=_userHasHeadphonesPluggedIn - In the implementation block
@property (assign,nonatomic) BOOL attemptToReconnect;                                                     //@synthesize attemptToReconnect=_attemptToReconnect - In the implementation block
@property (assign,nonatomic) BOOL reconnecting;                                                           //@synthesize reconnecting=_reconnecting - In the implementation block
@property (nonatomic,retain) CTCallCenter * callCenter;                                                   //@synthesize callCenter=_callCenter - In the implementation block
@property (assign,nonatomic) BOOL muted;                                                                  //@synthesize muted=_muted - In the implementation block
@property (assign,nonatomic) BOOL speaker;                                                                //@synthesize speaker=_speaker - In the implementation block
@property (assign,nonatomic) unsigned long long connectionState;                                          //@synthesize connectionState=_connectionState - In the implementation block
@property (nonatomic,retain) NSTimer * callDurationTimer;                                                 //@synthesize callDurationTimer=_callDurationTimer - In the implementation block
@property (nonatomic,retain) NSDate * callBeginDate;                                                      //@synthesize callBeginDate=_callBeginDate - In the implementation block
@property (assign,nonatomic) double currentTimeInterval;                                                  //@synthesize currentTimeInterval=_currentTimeInterval - In the implementation block
@property (assign,nonatomic) unsigned long long numberOfTimesAttemptedToConnectToCallServer;              //@synthesize numberOfTimesAttemptedToConnectToCallServer=_numberOfTimesAttemptedToConnectToCallServer - In the implementation block
@property (nonatomic,retain) NSString * errorMessageToDisplayBeforeEndingCall;                            //@synthesize errorMessageToDisplayBeforeEndingCall=_errorMessageToDisplayBeforeEndingCall - In the implementation block
@property (nonatomic,retain) NSMutableArray * managers;                                                   //@synthesize managers=_managers - In the implementation block
@property (assign,nonatomic,__weak) SLKDependencies * dependencies;                                       //@synthesize dependencies=_dependencies - In the implementation block
@property (assign,nonatomic,__weak) id<SLKCallSessionDelegate> delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) AFHTTPSessionManager * manager;                                            //@synthesize manager=_manager - In the implementation block
@property (nonatomic,readonly) NSString * accessToken;                                                    //@synthesize accessToken=_accessToken - In the implementation block
@property (nonatomic,readonly) BOOL userIsCurrentlyOniOSCall; 
@property (nonatomic,retain) NSString * callSurveyRoomID;                                                 //@synthesize callSurveyRoomID=_callSurveyRoomID - In the implementation block
@property (nonatomic,retain) NSNumber * callSurveyPercentage;                                             //@synthesize callSurveyPercentage=_callSurveyPercentage - In the implementation block
-(id)initWithDependencies:(id)arg1 ;
-(void)setCallSurveyRoomID:(NSString *)arg1 ;
-(void)setCallSurveyPercentage:(NSNumber *)arg1 ;
-(NSNumber *)callSurveyPercentage;
-(NSString *)callSurveyRoomID;
-(NSString *)channelID;
-(void)setChannelID:(NSString *)arg1 ;
-(NSString *)roomID;
-(void)setRoomID:(NSString *)arg1 ;
-(BOOL)isCurrentlyOnCall;
-(void)closeCurrentCallSynchronously:(BOOL)arg1 ;
-(BOOL)userHasAcceptedCall;
-(void)setUserHasAcceptedCall:(BOOL)arg1 ;
-(BOOL)userIsCurrentlyOniOSCall;
-(void)respondToIncomingCallForRoomID:(id)arg1 fromUserID:(id)arg2 forTeamID:(id)arg3 withResponse:(unsigned long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)joinExistingVoiceCallWithRoomID:(id)arg1 teamID:(id)arg2 ;
-(BOOL)isVoiceCallsEnabled;
-(BOOL)userHasGrantedMicrophonePermission;
-(void)stopCallDurationTimer;
-(void)handleUserTapOnCallRoom:(id)arg1 channelID:(id)arg2 ;
-(void)setSpeaker:(BOOL)arg1 ;
-(void)setUserHasHeadphonesPluggedIn:(BOOL)arg1 ;
-(BOOL)userHasHeadphonesPluggedIn;
-(BOOL)speaker;
-(void)setUserHasGrantedMicrophonePermission:(BOOL)arg1 ;
-(void)voiceCallResponseRecieved:(id)arg1 ;
-(void)voiceCallInviteCancelRecieved:(id)arg1 ;
-(void)setCallCenter:(CTCallCenter *)arg1 ;
-(CTCallCenter *)callCenter;
-(void)setAttemptToReconnect:(BOOL)arg1 ;
-(void)setReconnecting:(BOOL)arg1 ;
-(void)invalidateReconnectToCallTimerIfNeeded;
-(NSTimer *)callInitiatedButNotConnectedTimeoutTimer;
-(void)setCallInitiatedButNotConnectedTimeoutTimer:(NSTimer *)arg1 ;
-(NSTimer *)possiblyAttemptToReconnectToCallTimer;
-(void)setPossiblyAttemptToReconnectToCallTimer:(NSTimer *)arg1 ;
-(void)setCallBeginDate:(NSDate *)arg1 ;
-(NSTimer *)callDurationTimer;
-(void)updateCallDuration:(id)arg1 ;
-(void)setCallDurationTimer:(NSTimer *)arg1 ;
-(void)setMuteStateON:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)softcloseCurrentCall;
-(void)disconnectCallIfNotConnected;
-(NSString *)errorMessageToDisplayBeforeEndingCall;
-(NSDate *)callBeginDate;
-(void)setCurrentCallDuration:(NSString *)arg1 ;
-(void)setErrorMessageToDisplayBeforeEndingCall:(NSString *)arg1 ;
-(NSString *)hostnameURLString;
-(void)connectToJanusWithAuthenticationToken:(id)arg1 hostnameURL:(id)arg2 teamID:(id)arg3 ;
-(void)createNewCallRoomWithRegions:(id)arg1 channelID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)getCallRegionsWithCompletion:(/*^block*/id)arg1 ;
-(NSMutableArray *)userInvitesIDs;
-(void)addTimerToCancelIfCallNotAcceptedForUserID:(id)arg1 ;
-(void)createNewVoiceCallWithChannelID:(id)arg1 ;
-(void)inviteWithParams:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)getExistingCallRoomWithRegions:(id)arg1 roomID:(id)arg2 teamID:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)joinRoom;
-(void)addCallEndedDateToCallRoomWithID:(id)arg1 ;
-(id)jsonStringWithCallMethod:(id)arg1 parameters:(id)arg2 ;
-(BOOL)attemptToReconnect;
-(BOOL)reconnecting;
-(void)updateCallTokenWithCompletion:(/*^block*/id)arg1 ;
-(void)parseCreateRoomReturnedDictionary:(id)arg1 completion:(/*^block*/id)arg2 ;
-(unsigned long long)numberOfTimesAttemptedToConnectToCallServer;
-(void)setNumberOfTimesAttemptedToConnectToCallServer:(unsigned long long)arg1 ;
-(NSMutableDictionary *)participantsCache;
-(NSMutableArray *)managers;
-(void)setTurnHostName:(NSString *)arg1 ;
-(NSString *)turnHostName;
-(void)setHostnameURLString:(NSString *)arg1 ;
-(void)setTurnAuthUserPassword:(NSString *)arg1 ;
-(void)setTurnAuthUserName:(NSString *)arg1 ;
-(void)setTurnAuthPorts:(NSArray *)arg1 ;
-(void)setWindowHostname:(NSString *)arg1 ;
-(NSTimer *)updateCallSessionTokenTimer;
-(void)updateCallToken;
-(void)setUpdateCallSessionTokenTimer:(NSTimer *)arg1 ;
-(NSArray *)turnAuthPorts;
-(NSString *)turnAuthUserName;
-(NSString *)turnAuthUserPassword;
-(NSString *)windowHostname;
-(void)cancelUserInviteFromTimer:(id)arg1 ;
-(NSMutableArray *)userInvitesTimers;
-(void)cancelInviteToUser:(id)arg1 roomID:(id)arg2 withResponse:(unsigned long long)arg3 withCompletion:(/*^block*/id)arg4 ;
-(void)stopUpdateCallTokenTimer;
-(id)dictionaryFromCallJSONString:(id)arg1 ;
-(void)connectToCall;
-(void)inviteUser:(id)arg1 toRoomID:(id)arg2 shouldShare:(BOOL)arg3 completion:(/*^block*/id)arg4 ;
-(void)attemptToReconnectToCall;
-(NSTimer *)attemptingToReconnectToCallTimer;
-(void)setAttemptingToReconnectToCallTimer:(NSTimer *)arg1 ;
-(void)setManagers:(NSMutableArray *)arg1 ;
-(void)setParticipantsCache:(NSMutableDictionary *)arg1 ;
-(void)setUserInvitesTimers:(NSMutableArray *)arg1 ;
-(void)setUserInvitesIDs:(NSMutableArray *)arg1 ;
-(void)createNewVoiceCallWithChannelID:(id)arg1 withUser:(id)arg2 ;
-(void)respondToIncomingCallForRoomID:(id)arg1 fromUserID:(id)arg2 withResponse:(unsigned long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)toggleMuteWithCompletion:(/*^block*/id)arg1 ;
-(void)renameCallNameTo:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)shareCurrentCallToChannel:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)sendSurveyWithEventValue:(unsigned long long)arg1 comments:(id)arg2 ;
-(NSString *)currentCallDuration;
-(void)setIsCurrentlyOnCall:(BOOL)arg1 ;
-(BOOL)userIsCurrentlyNotOniOSCall;
-(void)setUserIsCurrentlyNotOniOSCall:(BOOL)arg1 ;
-(void)invokeJsMethod:(id)arg1 ;
-(void)setPort:(NSNumber *)arg1 ;
-(SLKDependencies *)dependencies;
-(AFHTTPSessionManager *)manager;
-(NSString *)sessionToken;
-(void)setSessionToken:(NSString *)arg1 ;
-(void)setDelegate:(id<SLKCallSessionDelegate>)arg1 ;
-(void)dealloc;
-(id<SLKCallSessionDelegate>)delegate;
-(void)reset;
-(NSNumber *)port;
-(BOOL)muted;
-(unsigned long long)connectionState;
-(void)setCallType:(unsigned long long)arg1 ;
-(unsigned long long)callType;
-(void)closeSession;
-(SHSession *)session;
-(void)setMuted:(BOOL)arg1 ;
-(void)setSession:(SHSession *)arg1 ;
-(void)setCurrentTimeInterval:(double)arg1 ;
-(double)currentTimeInterval;
-(void)setDependencies:(SLKDependencies *)arg1 ;
-(void)reconnect;
-(NSNumber *)participantID;
-(void)setParticipantID:(NSNumber *)arg1 ;
-(void)setConnectionState:(unsigned long long)arg1 ;
-(NSString *)accessToken;
@end

