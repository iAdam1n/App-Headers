/*
* This header is generated by classdump-dyld 0.7
* on Friday, October 30, 2015 at 11:56:59 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8F19A127-6676-4AF1-9C62-4FB96FF45C56/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Slack/Slack-Structs.h>
#import <UIKit/UIResponder.h>
#import <UIKit/UIApplicationDelegate.h>
#import <Slack/TTTAttributedLabelDelegate.h>

@class UIWindow, SlackAccessibility, NSTimer, SLWindow, SLFileUploadManager, NSString;

@interface SLAppDelegate : UIResponder <UIApplicationDelegate, TTTAttributedLabelDelegate> {

	SlackAccessibility* accessibility;
	NSTimer* disconnectTimer;
	SLWindow* _window;
	SLFileUploadManager* _fileUploadManager;
	NSString* _channelIdToOpenWhenLoggedIn;
	double _mostRecentLaunchTime;

}

@property (nonatomic,retain) SLWindow * window;                                    //@synthesize window=_window - In the implementation block
@property (nonatomic,retain) SLFileUploadManager * fileUploadManager;              //@synthesize fileUploadManager=_fileUploadManager - In the implementation block
@property (nonatomic,retain) NSString * channelIdToOpenWhenLoggedIn;               //@synthesize channelIdToOpenWhenLoggedIn=_channelIdToOpenWhenLoggedIn - In the implementation block
@property (assign,nonatomic) double mostRecentLaunchTime;                          //@synthesize mostRecentLaunchTime=_mostRecentLaunchTime - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)clearAllCache:(id)arg1 ;
-(void)setMostRecentLaunchTime:(double)arg1 ;
-(void)configureInitialUI:(id)arg1 ;
-(void)cleanupPushTokens;
-(void)configureViewControllers:(id)arg1 ;
-(void)showMainViewController;
-(void)showSignInViewController;
-(void)handleFileURL:(id)arg1 ;
-(BOOL)isSignInFlowDisplayed;
-(void)registerForUserNotifications;
-(void)showTestPushConfirmation;
-(void)handleBackgroundPushWithDictionary:(id)arg1 ;
-(id)stringWithDeviceToken:(id)arg1 ;
-(void)setFileUploadManager:(SLFileUploadManager *)arg1 ;
-(SLFileUploadManager *)fileUploadManager;
-(double)mostRecentLaunchTime;
-(BOOL)openTeam:(id)arg1 channel:(id)arg2 ;
-(BOOL)handleSpotlightUserActivityWithIdenitifer:(id)arg1 ;
-(BOOL)switchTeamsFromSpotlight:(id)arg1 forUserId:(id)arg2 ;
-(BOOL)openDMFromSpotlightForUserId:(id)arg1 ;
-(void)attributedLabel:(id)arg1 didSelectLinkWithURL:(id)arg2 ;
-(void)didAuth:(id)arg1 ;
-(double)secondsSinceLaunch;
-(id)calabashBackdoorLogout:(id)arg1 ;
-(NSString *)channelIdToOpenWhenLoggedIn;
-(void)setChannelIdToOpenWhenLoggedIn:(NSString *)arg1 ;
-(void)dealloc;
-(SLWindow *)window;
-(BOOL)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationDidReceiveMemoryWarning:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)application:(id)arg1 handleWatchKitExtensionRequest:(id)arg2 reply:(/*^block*/id)arg3 ;
-(unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2 ;
-(BOOL)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2 ;
-(BOOL)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(void)setWindow:(SLWindow *)arg1 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 withResponseInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(BOOL)application:(id)arg1 willContinueUserActivityWithType:(id)arg2 ;
-(void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2 ;
-(void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2 ;
-(void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2 ;
-(void)registerForNotifications;
-(void)logout;
-(void)handleURL:(id)arg1 ;
-(void)cancelAllOperations:(id)arg1 ;
@end

