/*
* This header is generated by classdump-dyld 0.7
* on Friday, October 30, 2015 at 11:57:02 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8F19A127-6676-4AF1-9C62-4FB96FF45C56/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <Slack/Slack-Structs.h>
#import <UIKit/UICollectionView.h>
#import <Slack/ASRangeControllerDelegate.h>
#import <Slack/ASDataControllerSource.h>

@protocol ASCollectionViewDataSource, ASCollectionViewDelegate;
@class _ASCollectionViewProxy, ASDataController, ASRangeController, ASFlowLayoutController, NSMutableArray, ASBatchContext, NSString;

@interface ASCollectionView : UICollectionView <ASRangeControllerDelegate, ASDataControllerSource> {

	_ASCollectionViewProxy* _proxyDataSource;
	_ASCollectionViewProxy* _proxyDelegate;
	ASDataController* _dataController;
	ASRangeController* _rangeController;
	ASFlowLayoutController* _layoutController;
	BOOL _performingBatchUpdates;
	NSMutableArray* _batchUpdateBlocks;
	BOOL _asyncDataFetchingEnabled;
	ASBatchContext* _batchContext;
	BOOL _asyncDataSourceLocked;
	id<ASCollectionViewDataSource> _asyncDataSource;
	id<ASCollectionViewDelegate> _asyncDelegate;
	double _leadingScreensForBatching;

}

@property (assign,nonatomic,__weak) id<ASCollectionViewDataSource> asyncDataSource;              //@synthesize asyncDataSource=_asyncDataSource - In the implementation block
@property (assign,nonatomic,__weak) id<ASCollectionViewDelegate> asyncDelegate;                  //@synthesize asyncDelegate=_asyncDelegate - In the implementation block
@property (assign,nonatomic) double leadingScreensForBatching;                                   //@synthesize leadingScreensForBatching=_leadingScreensForBatching - In the implementation block
@property (assign) BOOL asyncDataSourceLocked;                                                   //@synthesize asyncDataSourceLocked=_asyncDataSourceLocked - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithFrame:(CGRect)arg1 collectionViewLayout:(id)arg2 asyncDataFetching:(BOOL)arg3 ;
-(void)reloadDataWithCompletion:(/*^block*/id)arg1 ;
-(void)setTuningParameters:(CGPoint)arg1 forRangeType:(long long)arg2 ;
-(CGPoint)tuningParametersForRangeType:(long long)arg1 ;
-(id)nodeForItemAtIndexPath:(id)arg1 ;
-(void)handleBatchFetchScrollingToOffset:(CGPoint)arg1 ;
-(BOOL)shouldBatchFetch;
-(void)setAsyncDataSourceLocked:(BOOL)arg1 ;
-(id)rangeControllerVisibleNodeIndexPaths:(id)arg1 ;
-(CGSize)rangeControllerViewportSize:(id)arg1 ;
-(void)rangeControllerBeginUpdates:(id)arg1 ;
-(void)rangeControllerEndUpdates:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)rangeController:(id)arg1 nodesAtIndexPaths:(id)arg2 ;
-(void)rangeController:(id)arg1 didInsertNodesAtIndexPaths:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didDeleteNodesAtIndexPaths:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didInsertSectionsAtIndexSet:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(void)rangeController:(id)arg1 didDeleteSectionsAtIndexSet:(id)arg2 withAnimationOption:(unsigned long long)arg3 ;
-(id)dataController:(id)arg1 nodeAtIndexPath:(id)arg2 ;
-(CGSize)dataController:(id)arg1 constrainedSizeForNodeAtIndexPath:(id)arg2 ;
-(unsigned long long)dataController:(id)arg1 rowsInSection:(unsigned long long)arg2 ;
-(unsigned long long)dataControllerNumberOfSections:(id)arg1 ;
-(void)dataControllerLockDataSource;
-(void)dataControllerUnlockDataSource;
-(void)setAsyncDataSource:(id<ASCollectionViewDataSource>)arg1 ;
-(void)setAsyncDelegate:(id<ASCollectionViewDelegate>)arg1 ;
-(CGPoint)rangeTuningParameters;
-(void)setRangeTuningParameters:(CGPoint)arg1 ;
-(CGSize)calculatedSizeForNodeAtIndexPath:(id)arg1 ;
-(id)visibleNodes;
-(id<ASCollectionViewDataSource>)asyncDataSource;
-(id<ASCollectionViewDelegate>)asyncDelegate;
-(double)leadingScreensForBatching;
-(void)setLeadingScreensForBatching:(double)arg1 ;
-(BOOL)asyncDataSourceLocked;
-(void)setDataSource:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)reloadData;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInCollectionView:(id)arg1 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(id)initWithFrame:(CGRect)arg1 collectionViewLayout:(id)arg2 ;
-(void)moveSection:(long long)arg1 toSection:(long long)arg2 ;
-(CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3 ;
-(void)insertItemsAtIndexPaths:(id)arg1 ;
-(void)deleteItemsAtIndexPaths:(id)arg1 ;
-(void)performBatchUpdates:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)reloadItemsAtIndexPaths:(id)arg1 ;
-(long long)scrollDirection;
-(void)moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2 ;
-(void)insertSections:(id)arg1 ;
-(void)deleteSections:(id)arg1 ;
-(void)reloadSections:(id)arg1 ;
@end

