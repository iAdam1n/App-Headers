/*
* This header is generated by classdump-dyld 0.7
* on Friday, October 30, 2015 at 11:57:04 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/8F19A127-6676-4AF1-9C62-4FB96FF45C56/Slack.app/Slack
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct _NSZone* NSZoneRef;

typedef struct NSRange {
	unsigned long long location;
	unsigned long long length;
} NSRange;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_PS6;

typedef struct __CFHTTPMessage* CFHTTPMessageRef;

typedef struct {
	BOOL field1;
	unsigned char field2;
	BOOL field3;
	unsigned long long field4;
} SCD_Struct_SR8;

typedef struct CGContext* CGContextRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct __CTFont* CTFontRef;

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct UIOffset {
	double horizontal;
	double vertical;
} UIOffset;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct {
	BOOL statusBarHiddenPriorToPresentation;
	long long statusBarStylePriorToPresentation;
	CGRect startingReferenceFrameForThumbnail;
	CGRect startingReferenceFrameForThumbnailInPresentingViewControllersOriginalOrientation;
	CGPoint startingReferenceCenterForThumbnail;
	long long startingInterfaceOrientation;
	BOOL presentingViewControllerPresentedFromItsUnsupportedOrientation;
} SCD_Struct_JT15;

typedef struct {
	BOOL field1;
	long long field2;
	CGPoint field3;
	CGRect field4;
	CGRect field5;
	long long field6;
	BOOL field7;
} SCD_Struct_JT16;

typedef struct {
	BOOL field1;
	BOOL field2;
	BOOL field3;
	BOOL field4;
	BOOL field5;
	BOOL field6;
	BOOL field7;
	BOOL field8;
	BOOL field9;
	BOOL field10;
	BOOL field11;
	BOOL field12;
	BOOL field13;
} SCD_Struct_JT17;

typedef struct __SecTrust* SecTrustRef;

typedef struct {
	long long field1;
	void field2;
	/*function pointer*/void* field3;
	/*function pointer*/void* field4;
	/*function pointer*/void* field5;
} SCD_Struct_AF19;

typedef struct __CFRunLoop* CFRunLoopRef;

typedef struct __CFString* CFStringRef;

typedef struct opaque_pthread_mutex_t {
	long long __sig;
	char __opaque[56];
} opaque_pthread_mutex_t;

typedef struct RecursiveMutex {
	opaque_pthread_mutex_t _m;
} RecursiveMutex;

typedef struct _ASDisplayNodeExtraIvars* ASDisplayNodeExtraIvarsRef;

typedef struct CGColor* CGColorRef;

typedef struct _compressed_pair<std::__1::vector<CGSize, std::__1::allocator<CGSize> > *, std::__1::allocator<std::__1::vector<CGSize, std::__1::allocator<CGSize> > > > {
	vector<CGSize, std::__1::allocator<CGSize> > __first_;
} compressed_pair<std::__1::vector<CGSize, std::__1::allocator<CGSize> > *, std::__1::allocator<std::__1::vector<CGSize, std::__1::allocator<CGSize> > > >;

typedef struct vector<std::__1::vector<CGSize, std::__1::allocator<CGSize> >, std::__1::allocator<std::__1::vector<CGSize, std::__1::allocator<CGSize> > > > {
	vector<CGSize, std::__1::allocator<CGSize> > __begin_;
	vector<CGSize, std::__1::allocator<CGSize> > __end_;
	compressed_pair<std::__1::vector<CGSize, std::__1::allocator<CGSize> > *, std::__1::allocator<std::__1::vector<CGSize, std::__1::allocator<CGSize> > > > __end_cap_;
} vector<std::__1::vector<CGSize, std::__1::allocator<CGSize> >, std::__1::allocator<std::__1::vector<CGSize, std::__1::allocator<CGSize> > > >;

typedef struct pair<int, int> {
	int first;
	int second;
} pair<int, int>;

typedef struct _compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > > {
	pair<int, int> __first_;
} compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > >;

typedef struct vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > > {
	pair<int, int> __begin_;
	pair<int, int> __end_;
	compressed_pair<std::__1::pair<int, int> *, std::__1::allocator<std::__1::pair<int, int> > > __end_cap_;
} vector<std::__1::pair<int, int>, std::__1::allocator<std::__1::pair<int, int> > >;

typedef struct _compressed_pair<ASRangeTuningParameters *, std::__1::allocator<ASRangeTuningParameters> > {
	/*function pointer*/void* __first_;
} compressed_pair<ASRangeTuningParameters *, std::__1::allocator<ASRangeTuningParameters> >;

typedef struct vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters> > {
	/*function pointer*/void* __begin_;
	/*function pointer*/void* __end_;
	compressed_pair<ASRangeTuningParameters *, std::__1::allocator<ASRangeTuningParameters> > __end_cap_;
} vector<ASRangeTuningParameters, std::__1::allocator<ASRangeTuningParameters> >;

typedef struct Mutex {
	opaque_pthread_mutex_t _m;
} Mutex;

typedef struct CATransform3D {
	double m11;
	double m12;
	double m13;
	double m14;
	double m21;
	double m22;
	double m23;
	double m24;
	double m31;
	double m32;
	double m33;
	double m34;
	double m41;
	double m42;
	double m43;
	double m44;
} CATransform3D;

typedef struct CGImageSource* CGImageSourceRef;

typedef struct CGImage* CGImageRef;

typedef struct dispatch_queue_s* dispatch_queue_sRef;

typedef struct __CTFramesetter* CTFramesetterRef;

typedef struct __CTFrame* CTFrameRef;

typedef struct {
	long long field1;
	long long field2;
} SCD_Struct_TT40;

typedef struct {
	id field1;
	id field2;
	/*function pointer*/void* field3;
	id field4;
	/*function pointer*/void* field5;
	double field6;
} SCD_Struct_PO41;

typedef struct SpringSolver<POP::Vector4<double> >* SpringSolver<POP::Vector4<double> >Ref;

typedef struct _compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> > > {
	unsigned long long __first_;
} compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> > >;

typedef struct _list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
	__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> __prev_;
	__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> __next_;
} list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *>;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem> > > {
	list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
	compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *> > > __size_alloc_;
} list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem> > >;

typedef struct __CFRunLoopObserver* CFRunLoopObserverRef;

typedef struct __SecCertificate* SecCertificateRef;

typedef struct {
	unsigned major;
	unsigned minor;
	unsigned bugfix;
} SCD_Struct_FA48;

typedef struct dispatch_source_s* dispatch_source_sRef;

typedef struct {
	void field1;
	unsigned long long field2;
	void field3;
	void field4;
	void field5;
} SCD_Struct_CL50;

typedef struct {
	char field1[33];
	BOOL field2;
	SCD_Struct_FA48 field3;
	SCD_Struct_FA48 field4;
	SCD_Struct_CL50 field5;
	unsigned char field6;
	unsigned long field7;
	unsigned short field8;
	M field9;
	a field10;
	char field11;
	h field12;
	O field13;
	unsigned short field14;
	long field15;
	int field16;
	char field17;
	e field18;
} SCD_Struct_CL51;

typedef struct {
	char* field1;
	void field2;
	BOOL field3;
	void field4;
	char* field5;
	char* field6;
	char* field7;
	char* field8;
	char* field9;
	unsigned field10;
	BOOL field11;
	BOOL field12;
	unsigned field13;
	unsigned field14;
	unsigned field15;
	unsigned field16;
} SCD_Struct_CL52;

typedef struct {
	char* field1;
	char* field2;
	unsigned field3;
	unsigned field4;
} SCD_Struct_CL53;

