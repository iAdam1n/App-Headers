//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSMutableSet, NSString, SCClientEncryption, TMDiskCache, TMMemoryCache;

@interface SCCacheInternal : NSObject
{
    NSString *_kindName;
    NSMutableSet *_keyPool;
    SCClientEncryption *_encryptor;
    TMMemoryCache *_memoryCache;
    TMDiskCache *_diskCache;
    id <SCConcurrentPerforming> _workQueuePerformer;
    id <SCConcurrentPerforming> _diskCacheQueuePerformer;
    id <SCConcurrentPerforming> _completionQueuePerformer;
}

@property(retain, nonatomic) id <SCConcurrentPerforming> completionQueuePerformer; // @synthesize completionQueuePerformer=_completionQueuePerformer;
@property(retain, nonatomic) id <SCConcurrentPerforming> diskCacheQueuePerformer; // @synthesize diskCacheQueuePerformer=_diskCacheQueuePerformer;
@property(retain, nonatomic) id <SCConcurrentPerforming> workQueuePerformer; // @synthesize workQueuePerformer=_workQueuePerformer;
@property(retain, nonatomic) TMDiskCache *diskCache; // @synthesize diskCache=_diskCache;
@property(retain, nonatomic) TMMemoryCache *memoryCache; // @synthesize memoryCache=_memoryCache;
@property(retain, nonatomic) SCClientEncryption *encryptor; // @synthesize encryptor=_encryptor;
@property(retain, nonatomic) NSMutableSet *keyPool; // @synthesize keyPool=_keyPool;
@property(readonly, nonatomic) NSString *kindName; // @synthesize kindName=_kindName;
- (void).cxx_destruct;
- (void)removeAllMemoryObjects;
- (id)decrypt:(id)arg1 withEncryptionKey:(id)arg2 initializationVector:(id)arg3;
- (id)encrypt:(id)arg1 withEncryptionKey:(id)arg2 initializationVector:(id)arg3;
- (void)readObjectFromDiskForKey:(id)arg1 withEncryption:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)executeCompletionBlock:(CDUnknownBlockType)arg1 withKey:(id)arg2 object:(id)arg3;
- (void)removeObjectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeAllObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)objectForKey:(id)arg1 withEncryptor:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2 withEncryptor:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)initWithName:(id)arg1;

@end

