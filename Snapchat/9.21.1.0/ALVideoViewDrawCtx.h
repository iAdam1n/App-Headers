//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class ALService, CAEAGLLayer, EAGLContext, NSNumber, NSObject<OS_dispatch_queue>, UIView;

@interface ALVideoViewDrawCtx : NSObject
{
    UIView *_uiView;
    NSNumber *_rendererId;
    int _srcWidth;
    int _srcHeight;
    int _dstWidth;
    int _dstHeight;
    _Bool _mirror;
    CAEAGLLayer *_gllayer;
    EAGLContext *_glcontext;
    unsigned int _renderBuffer;
    unsigned int _textureY;
    unsigned int _textureUV;
    unsigned int _positionSlot;
    unsigned int _texCoordSlot;
    unsigned int _texUniformY;
    unsigned int _texUniformUV;
    unsigned int _scaleUniformUV;
    float _scaleUV;
    struct {
        float Position[3];
        float TexCoord[2];
    } _vertices[4];
    _Bool _async;
    NSObject<OS_dispatch_queue> *_drawQueue;
    _Bool _active;
    ALService *_service;
}

@property(nonatomic) ALService *service; // @synthesize service=_service;
- (id).cxx_construct;
- (void)didBecomeActive:(id)arg1;
- (void)willResignActive:(id)arg1;
- (void)dispatchBlock:(CDUnknownBlockType)arg1;
- (void)renderTexture:(struct CGSize)arg1;
- (void)createTextures:(struct CGSize)arg1 dst:(struct CGSize)arg2;
- (void)prepareRender:(struct CGSize)arg1 red:(double)arg2 green:(double)arg3 blue:(double)arg4 alpha:(double)arg5;
- (void)clearTextures:(struct CGSize)arg1;
- (unsigned int)newTextureUV:(int)arg1 height:(int)arg2;
- (unsigned int)newTextureY:(int)arg1 height:(int)arg2;
- (void)deallocTextures;
- (void)allocTextures:(struct CGSize)arg1 withDst:(struct CGSize)arg2;
- (unsigned int)compileShader:(id)arg1 withType:(unsigned int)arg2;
- (void)initShaders;
- (id)createOpenGL;
- (id)getDrawingPrimitive;
- (_Bool)isOpenGLAllowed;
- (void)frameSizeChanged:(int)arg1 height:(int)arg2;
- (void)draw;
- (id)disposeGL;
- (id)setupOpenGL:(id)arg1;
- (void)setMirror:(_Bool)arg1;
- (void)dealloc;
- (id)initWithService:(id)arg1 withView:(id)arg2 withAsync:(_Bool)arg3;

@end

