//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SCLensDataProviderDelegate.h"
#import "TTTAttributedLabelDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"

@class NSArray, NSString, SCAlertViewActionButtonController, SCCameraOverlayView, SCCameraTimer, SCLens, SCLensesOpenCloseButton, SCSponsoredSlugView, UICollectionView, UILabel, UITapGestureRecognizer, UIView;

@interface SCLensesUIController : NSObject <SCLensDataProviderDelegate, TTTAttributedLabelDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
{
    id <SCLensDataProvider> _lensDataProvider;
    SCAlertViewActionButtonController *_cancelBuyingLensAction;
    _Bool _lensesActive;
    NSString *_lensIdToRestore;
    SCCameraOverlayView *_cameraOverlay;
    SCCameraTimer *_cameraTimer;
    UIView *_hidableViewContainer;
    NSArray *_lenses;
    NSString *_activeLensId;
    SCLensesOpenCloseButton *_lensesOpenCloseButton;
    UILabel *_lensHintLabel;
    UICollectionView *_lensesCollectionView;
    UIView *_lensDownloadOverlay;
    UILabel *_tapToDownloadLabel;
    UILabel *_lensesCategoryHeader;
    UIView *_lensesCategoryView;
    NSString *_lensesCategoryHeaderNewText;
    SCSponsoredSlugView *_sponsoredSlugView;
    UITapGestureRecognizer *_cameraTimerTapGestureRecognizer;
    SCLens *_currentSelectedLens;
}

@property(retain, nonatomic) SCLens *currentSelectedLens; // @synthesize currentSelectedLens=_currentSelectedLens;
@property(retain, nonatomic) UITapGestureRecognizer *cameraTimerTapGestureRecognizer; // @synthesize cameraTimerTapGestureRecognizer=_cameraTimerTapGestureRecognizer;
@property(retain, nonatomic) SCSponsoredSlugView *sponsoredSlugView; // @synthesize sponsoredSlugView=_sponsoredSlugView;
@property(copy, nonatomic) NSString *lensesCategoryHeaderNewText; // @synthesize lensesCategoryHeaderNewText=_lensesCategoryHeaderNewText;
@property(retain, nonatomic) UIView *lensesCategoryView; // @synthesize lensesCategoryView=_lensesCategoryView;
@property(retain, nonatomic) UILabel *lensesCategoryHeader; // @synthesize lensesCategoryHeader=_lensesCategoryHeader;
@property(retain, nonatomic) UILabel *tapToDownloadLabel; // @synthesize tapToDownloadLabel=_tapToDownloadLabel;
@property(retain, nonatomic) UIView *lensDownloadOverlay; // @synthesize lensDownloadOverlay=_lensDownloadOverlay;
@property(retain, nonatomic) UICollectionView *lensesCollectionView; // @synthesize lensesCollectionView=_lensesCollectionView;
@property(retain, nonatomic) UILabel *lensHintLabel; // @synthesize lensHintLabel=_lensHintLabel;
@property(retain, nonatomic) SCLensesOpenCloseButton *lensesOpenCloseButton; // @synthesize lensesOpenCloseButton=_lensesOpenCloseButton;
@property(copy, nonatomic) NSString *activeLensId; // @synthesize activeLensId=_activeLensId;
@property(retain, nonatomic) NSArray *lenses; // @synthesize lenses=_lenses;
@property(nonatomic, getter=areLensesActive) _Bool lensesActive; // @synthesize lensesActive=_lensesActive;
@property(nonatomic) __weak UIView *hidableViewContainer; // @synthesize hidableViewContainer=_hidableViewContainer;
@property(nonatomic) __weak SCCameraTimer *cameraTimer; // @synthesize cameraTimer=_cameraTimer;
@property(nonatomic) __weak SCCameraOverlayView *cameraOverlay; // @synthesize cameraOverlay=_cameraOverlay;
@property(retain, nonatomic) NSString *lensIdToRestore; // @synthesize lensIdToRestore=_lensIdToRestore;
- (void).cxx_destruct;
- (struct CGRect)lensesRect;
- (struct CGSize)itemSize;
- (void)showOrHideSponsoredSlugForLensIfNeeded:(id)arg1;
- (void)clearLens;
- (void)applyLens:(id)arg1;
- (void)lensSelected:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)animateSponsoredSlug;
- (void)discardHeaderFade;
- (void)scheduleHeaderFade;
- (void)changeHeaderText:(id)arg1;
- (void)updateLensesCategoryHeaderForLens:(id)arg1;
- (void)showOrHideHintForLensIfNeeded:(id)arg1;
- (id)_localizedHintForHintId:(id)arg1;
- (void)showHintView:(_Bool)arg1 withHintView:(id)arg2 animated:(_Bool)arg3;
- (void)showTapToDownloadHint:(_Bool)arg1 andDownloadInProgress:(_Bool)arg2 animated:(_Bool)arg3;
- (void)showLensesCollectionSubviews;
- (void)hideLensesCollectionSubviewsExceptCameraTimer;
- (void)scrollLensesCollectionToItem:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)adjustLensCellPositionAndScale:(id)arg1;
- (void)adjustLenseViewCollectionVisibleCellsScale;
- (void)downloadCurrentLens;
- (void)hideLensesUI:(_Bool)arg1;
- (void)showLensesUI:(_Bool)arg1;
- (void)setLensesActive:(_Bool)arg1 animated:(_Bool)arg2;
- (void)lensesOpenCloseButtonPressed;
- (void)setLensesOpenCloseButtonVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (id)lensFromCurrentArrayByLensId:(id)arg1;
- (unsigned long long)currentSelectedLensIndex;
- (id)activeLensIdOrNilForOriginal;
- (id)activeLensIcon;
- (void)attributedLabel:(id)arg1 didSelectLinkWithTextCheckingResult:(id)arg2;
- (void)buyLens:(id)arg1;
- (id)priceTextForLens:(id)arg1;
- (void)buyCurrentLens;
- (_Bool)isActiveSponsoredLens;
- (_Bool)isActiveFeaturedLens;
- (_Bool)isActiveGeoLens;
- (_Bool)isPointInsideLensesUI:(struct CGPoint)arg1;
- (unsigned long long)indexOfItemToSnapForPoint:(struct CGPoint)arg1 andLayout:(id)arg2;
- (void)selectLensAccordingScrollViewContentOffset:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (struct CGPoint)collectionView:(id)arg1 pointForTargetContentOffset:(struct CGPoint)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)lensDataProvider:(id)arg1 didUpdateAllLenses:(id)arg2;
- (void)lensDataProvider:(id)arg1 didUpdateLens:(id)arg2;
- (void)reloadCellWithLens:(id)arg1;
- (void)updateSlugViewWithDefaultMargins:(id)arg1 forPosition:(long long)arg2;
- (struct CGRect)hintLabelRect;
- (void)initLensesCollectionViewProperties:(id)arg1;
- (void)dealloc;
- (id)initWithCameraOverlay:(id)arg1 andCameraTimer:(id)arg2 andHidableViewContainer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

