//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIImageView.h"

#import "SCTimedThumbnailCacheObject.h"

@class NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSObject, NSObject<OS_dispatch_queue>, NSString;

@interface SCTimedThumbnail : UIImageView <SCTimedThumbnailCacheObject>
{
    _Bool _thumbnailFailed;
    double _cachedTime;
    NSString *_lastStoryId;
    unsigned long long _numberOfThumbnailsNeededBeforeDisplay;
    NSObject *_imageLock;
    NSMutableDictionary *_loadingStoryThumbnailsDictionary;
    NSMutableDictionary *_loadedStoryThumbnailsDictionary;
    NSMutableDictionary *_storyThumbnailStartEndDictionary;
    NSMutableOrderedSet *_maxThumbnailPercents;
    NSObject<OS_dispatch_queue> *_thumbnailQueue;
    CDUnknownBlockType _callback;
    NSMutableArray *_backgroundImages;
    unsigned long long _numBackgroundImagesExpected;
    unsigned long long _imageToken;
    double _currentImageEndPercent;
}

+ (double)percentFromDateCreated:(id)arg1;
@property(nonatomic) double currentImageEndPercent; // @synthesize currentImageEndPercent=_currentImageEndPercent;
@property(nonatomic) unsigned long long imageToken; // @synthesize imageToken=_imageToken;
@property(nonatomic) unsigned long long numBackgroundImagesExpected; // @synthesize numBackgroundImagesExpected=_numBackgroundImagesExpected;
@property(retain, nonatomic) NSMutableArray *backgroundImages; // @synthesize backgroundImages=_backgroundImages;
@property(copy, nonatomic) CDUnknownBlockType callback; // @synthesize callback=_callback;
@property(nonatomic) _Bool thumbnailFailed; // @synthesize thumbnailFailed=_thumbnailFailed;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *thumbnailQueue; // @synthesize thumbnailQueue=_thumbnailQueue;
@property(retain, nonatomic) NSMutableOrderedSet *maxThumbnailPercents; // @synthesize maxThumbnailPercents=_maxThumbnailPercents;
@property(retain, nonatomic) NSMutableDictionary *storyThumbnailStartEndDictionary; // @synthesize storyThumbnailStartEndDictionary=_storyThumbnailStartEndDictionary;
@property(retain, nonatomic) NSMutableDictionary *loadedStoryThumbnailsDictionary; // @synthesize loadedStoryThumbnailsDictionary=_loadedStoryThumbnailsDictionary;
@property(retain, nonatomic) NSMutableDictionary *loadingStoryThumbnailsDictionary; // @synthesize loadingStoryThumbnailsDictionary=_loadingStoryThumbnailsDictionary;
@property(retain, nonatomic) NSObject *imageLock; // @synthesize imageLock=_imageLock;
@property(nonatomic) unsigned long long numberOfThumbnailsNeededBeforeDisplay; // @synthesize numberOfThumbnailsNeededBeforeDisplay=_numberOfThumbnailsNeededBeforeDisplay;
@property(retain, nonatomic) NSString *lastStoryId; // @synthesize lastStoryId=_lastStoryId;
@property(nonatomic) double cachedTime; // @synthesize cachedTime=_cachedTime;
- (void).cxx_destruct;
- (_Bool)isLoaded;
- (_Bool)storyDisplayingOnThumbnail:(id)arg1;
- (double)maxThumbnailPercentSoFar;
- (double)maxThumbnailPercentLessThanPercent:(double)arg1;
- (void)updateCountingDownThumbnailWithStory:(id)arg1 nextStory:(id)arg2 forViewingType:(long long)arg3 callback:(CDUnknownBlockType)arg4;
- (void)addThumbnailToBackgroundThumbnailForStory:(id)arg1;
- (void)setThumbnailWithStory:(id)arg1 forPercentStart:(double)arg2 percentEnd:(double)arg3;
- (_Bool)needsUpdateBackgroundThumbnailWithStories:(id)arg1;
- (void)setThumbnailWithGreyImageForPercentStart:(double)arg1 percentEnd:(double)arg2;
- (void)setBackgroundThumbnailWithStory:(id)arg1;
- (void)updateBackgroundThumbnailWithMostRecentStory:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)updateBackgroundThumbnailWithStories:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setThumbnailWithStory:(id)arg1 withPercentFilled:(double)arg2;
- (void)updateThumbnailWithStory:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)hasExpired;
- (void)setImage:(id)arg1 forStartPercent:(double)arg2 endPercent:(double)arg3;
- (void)setImageAsync:(id)arg1 withPercent:(double)arg2;
- (void)setImage:(id)arg1 withPercent:(double)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

