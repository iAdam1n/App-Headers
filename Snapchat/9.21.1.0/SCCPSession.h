//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "GCDAsyncSocketDelegate.h"

@class GCDAsyncSocket, NSDictionary, NSMutableDictionary, NSNumber, NSObject<OS_dispatch_queue>, NSString, SCGCDTimer, SCReachabilityWatcher;

@interface SCCPSession : NSObject <GCDAsyncSocketDelegate>
{
    void *_isOnDispatchQueueKey;
    _Bool _isShutDown;
    unsigned short _port;
    id <SCCPSessionDelegate> _delegate;
    long long _socketErrorCode;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSDictionary *_authDictionary;
    SCGCDTimer *_sccpDisabledMaxLimitRetryConnectTimer;
    NSString *_host;
    unsigned long long _nextWriteTag;
    unsigned long long _numberOfRetries;
    GCDAsyncSocket *_socket;
    long long _state;
    NSMutableDictionary *_writeCompletionHandlers;
    NSString *_activePingID;
    SCGCDTimer *_pingSendTimer;
    SCGCDTimer *_connectTimer;
    double _connectStartTime;
    NSNumber *_globalReachability;
    SCReachabilityWatcher *_globalReachabilityWatcher;
    SCReachabilityWatcher *_connectionReachabilityWatcher;
}

+ (id)startSessionWithDelegate:(id)arg1 dataSource:(id)arg2 onDispatchQueue:(id)arg3;
@property(retain, nonatomic) SCReachabilityWatcher *connectionReachabilityWatcher; // @synthesize connectionReachabilityWatcher=_connectionReachabilityWatcher;
@property(retain, nonatomic) SCReachabilityWatcher *globalReachabilityWatcher; // @synthesize globalReachabilityWatcher=_globalReachabilityWatcher;
@property(retain, nonatomic) NSNumber *globalReachability; // @synthesize globalReachability=_globalReachability;
@property(nonatomic) double connectStartTime; // @synthesize connectStartTime=_connectStartTime;
@property(nonatomic) _Bool isShutDown; // @synthesize isShutDown=_isShutDown;
@property(retain, nonatomic) SCGCDTimer *connectTimer; // @synthesize connectTimer=_connectTimer;
@property(retain, nonatomic) SCGCDTimer *pingSendTimer; // @synthesize pingSendTimer=_pingSendTimer;
@property(copy, nonatomic) NSString *activePingID; // @synthesize activePingID=_activePingID;
@property(retain, nonatomic) NSMutableDictionary *writeCompletionHandlers; // @synthesize writeCompletionHandlers=_writeCompletionHandlers;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) GCDAsyncSocket *socket; // @synthesize socket=_socket;
@property(nonatomic) unsigned short port; // @synthesize port=_port;
@property(nonatomic) unsigned long long numberOfRetries; // @synthesize numberOfRetries=_numberOfRetries;
@property(nonatomic) unsigned long long nextWriteTag; // @synthesize nextWriteTag=_nextWriteTag;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(retain, nonatomic) SCGCDTimer *sccpDisabledMaxLimitRetryConnectTimer; // @synthesize sccpDisabledMaxLimitRetryConnectTimer=_sccpDisabledMaxLimitRetryConnectTimer;
@property(retain, nonatomic) NSDictionary *authDictionary; // @synthesize authDictionary=_authDictionary;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic, getter=getSocketErrorCode) long long socketErrorCode; // @synthesize socketErrorCode=_socketErrorCode;
@property(nonatomic) __weak id <SCCPSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)addressPairReachabilityWatcherFired:(_Bool)arg1;
- (void)uninstallAddressPairReachabilityWatcher;
- (void)installAddressPairReachabilityWatcherFromAddress:(const void *)arg1 toAddress:(const void *)arg2;
- (void)uninstallGlobalReachabilityWatcher;
- (void)globalReachabilityWatcherFired:(_Bool)arg1;
- (void)installGlobalReachabilityWatcherToHostname:(id)arg1;
- (void)completedWritingWithTag:(long long)arg1 error:(id)arg2;
- (void)markAllSendingMessagesFailed;
- (id)protocolErrorDictionaryWithMessage:(id)arg1;
- (id)disconnectDictionary;
- (id)connectDictionary;
- (void)writeDictionaryToSocket:(id)arg1;
- (void)handlePingResponse:(id)arg1;
- (void)handleErrorResponse:(id)arg1;
- (void)handleProtocolErrorResponse:(id)arg1;
- (void)handleConnectResponse:(id)arg1;
- (void)handleBodyData:(id)arg1;
- (unsigned long long)lengthOfBodyFromHeaderData:(id)arg1;
- (id)getTLSSettings;
- (void)socketDidSecure:(id)arg1;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (double)socket:(id)arg1 shouldTimeoutWriteWithTag:(long long)arg2 elapsed:(double)arg3 bytesDone:(unsigned long long)arg4;
- (double)socket:(id)arg1 shouldTimeoutReadWithTag:(long long)arg2 elapsed:(double)arg3 bytesDone:(unsigned long long)arg4;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)socket:(id)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (double)retryDelay;
- (void)resetRetryCount;
- (void)retryConnectingToHost;
- (void)logConnectProgressWithSuccess:(_Bool)arg1;
- (void)connectionTimeoutTimerFired:(id)arg1;
- (void)startConnectionTimeoutTimer:(double)arg1;
- (void)scheduleNextPing;
- (void)pingRequestCompletedWithStatus:(_Bool)arg1 error:(id)arg2;
- (void)makePingRequestWithTimeout:(double)arg1;
- (void)makePingRequest;
- (void)invalidateTimers;
- (void)disconnectWithError:(id)arg1;
- (void)terminateWithError:(id)arg1 updatedServerInfo:(id)arg2;
- (void)restartSessionWithRetryReset:(_Bool)arg1;
- (void)endSession;
- (void)startSession;
- (void)startSessionIfNotConnected;
- (id)interfaceTransportString;
- (id)localInterface;
- (id)diagnosticStateString;
- (_Bool)isConnecting;
- (_Bool)isConnected;
- (void)writeParameters:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)shutdown;
- (void)dealloc;
- (id)initWithHost:(id)arg1 Port:(unsigned short)arg2 Auth:(id)arg3 Delegate:(id)arg4 onDispatchQueue:(id)arg5;

@end

