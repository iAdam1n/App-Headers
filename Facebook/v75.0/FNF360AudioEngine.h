/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:26 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FNFPlayerAudioEngine.h>

@protocol FNFTimer;
@class NSString;

@interface FNF360AudioEngine : NSObject <FNFPlayerAudioEngine> {

	AudioEngine* _engine;
	SpatDecoderQueue* _engineQueue;
	int _channelMap;
	unsigned long long _numberOfChannels;
	OpusMSDecoderRef _opusDecoder;
	vector<short, std::__1::allocator<short> >* _pcmBuffer;
	unsigned long long _startingSamplesPerChannel;
	unsigned _samplesPerChannelInPcmBuffer;
	unsigned _adjustmentSilenceSamples;
	unsigned _skipSamplesPerChannel;
	BOOL _shouldSkip;
	BOOL _endOfStream;
	AQBufferState* _audioQueueBuffer[3];
	int _fillingQueueIndex;
	int _decodingQueueIndex;
	BOOL _hasNoMoreFramesToEnqueue;
	/*^block*/id _putDataCallback;
	/*^block*/id _errorCallback;
	unsigned _preSkip;
	id<FNFTimer> _timer;
	BOOL _requestedToChangeVolume;
	float _requestedVolume;
	float _requestedRampTime;
	BOOL _enableFocus;
	float _offFocusLevel;
	float _focusWidthDegrees;
	unsigned long long _bufferUnderrunCount;

}

@property (assign) unsigned long long bufferUnderrunCount;              //@synthesize bufferUnderrunCount=_bufferUnderrunCount - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isValidAudioChannelConfiguration:(id)arg1 ;
+(int)_channelMapWithAudioChannelConfiguration:(id)arg1 ;
-(void)_timerCallback;
-(void)setVolume:(float)arg1 rampTime:(float)arg2 ;
-(id)initWithAudioChannelConfiguration:(id)arg1 enableFocus:(BOOL)arg2 offFocusLevel:(float)arg3 focusWidthDegrees:(float)arg4 ;
-(void)setListenerRotationWithMatrix:(float)arg1 ;
-(unsigned long long)bufferUnderrunCount;
-(void)audioSessionInterruptionBegan;
-(void)audioSessionInterruptionEnded;
-(void)_destroyOpusDecoder;
-(BOOL)_enqueuePCM;
-(void)_fillQueue;
-(void)_decodeOpus;
-(void)_handleError:(unsigned long long)arg1 userInfo:(id)arg2 ;
-(void)_resetAQBufferState:(AQBufferState*)arg1 ;
-(void)_allocateAudioQueueBuffer:(AQBufferState*)arg1 asbd:(AudioStreamBasicDescription)arg2 ;
-(BOOL)_initializeEngine;
-(void)_resetQueue;
-(void)setAudioStreamBasicDescription:(AudioStreamBasicDescription)arg1 extraParameters:(id)arg2 putDataCallback:(/*^block*/id)arg3 errorCallback:(/*^block*/id)arg4 sampleFrameSize:(unsigned)arg5 ;
-(void)playWithStartTime:(SCD_Struct_FB100)arg1 ;
-(void)stopLoadingData;
-(void)resumeEnqueuingData;
-(void)enableLevelMeteringWithCallback:(/*^block*/id)arg1 ;
-(void)sendCurrentAudioLevelToCallback;
-(void)removeLevelMetering;
-(void)setBufferUnderrunCount:(unsigned long long)arg1 ;
-(void)dealloc;
-(void)invalidate;
-(void)reset;
-(void)stop;
-(void)_startTimer;
-(void)pause;
-(SCD_Struct_FB100)getCurrentTime;
-(void)prepareToPlay;
@end

