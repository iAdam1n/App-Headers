/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:07 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/FBTVCastingPlaybackControlling.h>
#import <Facebook/FBSimpleTVVideoExperienceDelegate.h>

@protocol FBServiceTransactionMutating, FBSimpleTVVideoExperience, FBVideoPlaybackLoggingDataProvider;
@class FBTVCastingPlaybackEventListenerAnnouncer, NSDate, FBSimpleTVVideoPlaybackItem, FBUserSession, NSString, FBVideoPlaybackItem;

@interface FBTVCastingPlaybackController : NSObject <FBTVCastingPlaybackControlling, FBSimpleTVVideoExperienceDelegate> {

	FBTVCastingPlaybackEventListenerAnnouncer* _announcer;
	NSDate* _castRequestedTime;
	BOOL _loggingForInitialCast;
	FBSimpleTVVideoPlaybackItem* _playbackItem;
	double _playbackTimeToStartAt;
	id<FBServiceTransactionMutating> _requestHandle;
	FBUserSession* _session;
	unsigned long long _state;
	NSString* _connectedDeviceShortName;
	id<FBSimpleTVVideoExperience> _experience;
	FBVideoPlaybackItem* _currentVideoPlaybackItem;
	id<FBVideoPlaybackLoggingDataProvider> _loggingProvider;
	NSString* _castingSessionID;

}

@property (nonatomic,readonly) long long state; 
@property (assign,nonatomic) double currentVideoTime; 
@property (nonatomic,readonly) double duration; 
@property (nonatomic,copy,readonly) NSString * connectedDeviceShortName;                          //@synthesize connectedDeviceShortName=_connectedDeviceShortName - In the implementation block
@property (nonatomic,readonly) unsigned long long connectedDeviceType; 
@property (nonatomic,readonly) BOOL canShowFeedback; 
@property (nonatomic,readonly) BOOL canControlVolume; 
@property (nonatomic,readonly) id<FBSimpleTVVideoExperience> experience;                          //@synthesize experience=_experience - In the implementation block
@property (nonatomic,readonly) FBVideoPlaybackItem * currentVideoPlaybackItem;                    //@synthesize currentVideoPlaybackItem=_currentVideoPlaybackItem - In the implementation block
@property (nonatomic,retain) id<FBVideoPlaybackLoggingDataProvider> loggingProvider;              //@synthesize loggingProvider=_loggingProvider - In the implementation block
@property (nonatomic,copy,readonly) NSString * castingSessionID;                                  //@synthesize castingSessionID=_castingSessionID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setLoggingProvider:(id<FBVideoPlaybackLoggingDataProvider>)arg1 ;
-(id<FBVideoPlaybackLoggingDataProvider>)loggingProvider;
-(FBVideoPlaybackItem *)currentVideoPlaybackItem;
-(double)currentVideoTime;
-(void)_enterIdleState;
-(void)stopCasting;
-(unsigned long long)connectedDeviceType;
-(NSString *)connectedDeviceShortName;
-(void)experience:(id)arg1 didUpdateStatus:(unsigned long long)arg2 ;
-(void)experience:(id)arg1 didDisconnectWithReason:(unsigned long long)arg2 ;
-(void)experienceDidStart:(id)arg1 ;
-(void)experience:(id)arg1 didFailWithReason:(unsigned long long)arg2 ;
-(void)_enterStartRequestedState;
-(void)_enterStartedState;
-(void)experience:(id)arg1 commandNotSupported:(SEL)arg2 ;
-(NSString *)castingSessionID;
-(id<FBSimpleTVVideoExperience>)experience;
-(id)initWithExperience:(id)arg1 session:(id)arg2 shortName:(id)arg3 ;
-(BOOL)_needsToFinishTTILogging;
-(void)_logCastRequested;
-(void)_logCastStarted;
-(void)prepareVideoWithPlaybackItem:(id)arg1 atPlaybackTime:(double)arg2 channelID:(id)arg3 channelCaller:(id)arg4 channelCursor:(id)arg5 loggingProvider:(id)arg6 ;
-(void)addPlaybackEventListener:(id)arg1 ;
-(void)removePlaybackEventListener:(id)arg1 ;
-(void)setCurrentVideoTime:(double)arg1 ;
-(BOOL)canShowFeedback;
-(BOOL)canControlVolume;
-(void)_finishPrepareWithVideo:(id)arg1 ;
-(void)_logCastFailed:(unsigned long long)arg1 ;
-(void)_finishTTILogging:(long long)arg1 ;
-(void)_announcePlaybackStateChangedTo:(long long)arg1 ;
-(void)_finishAdvanceWithVideo:(id)arg1 ;
-(void)experience:(id)arg1 didAdvanceToVideoID:(id)arg2 ;
-(void)dealloc;
-(long long)state;
-(double)duration;
-(void)play;
-(void)pause;
@end

