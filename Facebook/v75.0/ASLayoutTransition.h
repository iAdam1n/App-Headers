/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:22 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/_ASTransitionContextLayoutDelegate.h>

@class NSArray, ASDisplayNode, ASLayout, NSString;

@interface ASLayoutTransition : NSObject <_ASTransitionContextLayoutDelegate> {

	RecursiveMutex _propertyLock;
	BOOL _calculatedSubnodeOperations;
	NSArray* _insertedSubnodes;
	NSArray* _removedSubnodes;
	vector<unsigned long, std::__1::allocator<unsigned long> >* _insertedSubnodePositions;
	vector<unsigned long, std::__1::allocator<unsigned long> >* _removedSubnodePositions;
	ASDisplayNode* _node;
	ASLayout* _previousLayout;
	ASLayout* _pendingLayout;

}

@property (nonatomic,__weak,readonly) ASDisplayNode * node;              //@synthesize node=_node - In the implementation block
@property (nonatomic,readonly) ASLayout * previousLayout;                //@synthesize previousLayout=_previousLayout - In the implementation block
@property (nonatomic,readonly) ASLayout * pendingLayout;                 //@synthesize pendingLayout=_pendingLayout - In the implementation block
@property (nonatomic,readonly) BOOL isSynchronous; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithNode:(id)arg1 pendingLayout:(id)arg2 previousLayout:(id)arg3 ;
-(void)applySubnodeInsertions;
-(void)applySubnodeRemovals;
-(ASLayout *)pendingLayout;
-(void)startTransition;
-(void)calculateSubnodeOperationsIfNeeded;
-(id)currentSubnodesWithTransitionContext:(id)arg1 ;
-(id)insertedSubnodesWithTransitionContext:(id)arg1 ;
-(id)removedSubnodesWithTransitionContext:(id)arg1 ;
-(id)transitionContext:(id)arg1 layoutForKey:(id)arg2 ;
-(CKSizeRange)transitionContext:(id)arg1 constrainedSizeForKey:(id)arg2 ;
-(ASLayout *)previousLayout;
-(ASDisplayNode *)node;
-(BOOL)isSynchronous;
@end

