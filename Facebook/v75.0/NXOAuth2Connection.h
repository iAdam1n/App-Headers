/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:28 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol NXOAuth2ConnectionDelegate;
@class NSURLConnection, NSMutableURLRequest, NSURLResponse, NSDictionary, NSMutableData, NXOAuth2Client, NSObject, NSData;

@interface NXOAuth2Connection : NSObject {

	NSURLConnection* connection;
	NSMutableURLRequest* request;
	NSURLResponse* response;
	NSDictionary* requestParameters;
	NSMutableData* data;
	BOOL savesData;
	id context;
	NSDictionary* userInfo;
	NXOAuth2Client* client;
	NSObject*<NXOAuth2ConnectionDelegate> delegate;
	/*^block*/id responseHandler;
	/*^block*/id sendingProgressHandler;
	BOOL sendConnectionDidEndNotification;

}

@property (nonatomic,readonly) id<NXOAuth2TrustDelegate> trustDelegate; 
@property (assign,nonatomic) NSObject*<NXOAuth2ConnectionDelegate> delegate; 
@property (nonatomic,readonly) NSData * data; 
@property (assign,nonatomic) BOOL savesData; 
@property (nonatomic,readonly) long long expectedContentLength; 
@property (nonatomic,readonly) NSURLResponse * response; 
@property (nonatomic,readonly) long long statusCode; 
@property (nonatomic,retain) id context; 
@property (nonatomic,retain) NSDictionary * userInfo; 
@property (nonatomic,readonly) NXOAuth2Client * client; 
-(id)initWithRequest:(id)arg1 requestParameters:(id)arg2 oauthClient:(id)arg3 delegate:(id)arg4 ;
-(id<NXOAuth2TrustDelegate>)trustDelegate;
-(BOOL)isServerCertificateForAuthenticationChallenge:(id)arg1 andHostname:(id)arg2 matchingCertificate:(id)arg3 ;
-(BOOL)trustsAuthenticationChallenge:(id)arg1 forHostname:(id)arg2 withTrustMode:(int)arg3 ;
-(id)descriptionForRequest:(id)arg1 ;
-(void)stream:(id)arg1 didSendBytes:(unsigned long long)arg2 ofTotal:(unsigned long long)arg3 ;
-(BOOL)savesData;
-(void)setSavesData:(BOOL)arg1 ;
-(void)applyParameters:(id)arg1 onRequest:(id)arg2 ;
-(id)initWithRequest:(id)arg1 requestParameters:(id)arg2 oauthClient:(id)arg3 sendingProgressHandler:(/*^block*/id)arg4 responseHandler:(/*^block*/id)arg5 ;
-(void)cancel;
-(void)setDelegate:(NSObject*<NXOAuth2ConnectionDelegate>)arg1 ;
-(void)dealloc;
-(id)description;
-(NSObject*<NXOAuth2ConnectionDelegate>)delegate;
-(NSURLResponse *)response;
-(NSDictionary *)userInfo;
-(NSData *)data;
-(id)context;
-(void)setUserInfo:(NSDictionary *)arg1 ;
-(void)setContext:(id)arg1 ;
-(long long)statusCode;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(id)createConnection;
-(BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(NXOAuth2Client *)client;
-(long long)expectedContentLength;
-(void)retry;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(id)connection:(id)arg1 needNewBodyStream:(id)arg2 ;
-(void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4 ;
@end

