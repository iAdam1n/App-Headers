/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:08 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBComposerGroupCommercePostInterceptControllerDelegate.h>
#import <Facebook/FBComposerMarketplacePostInterceptControllerDelegate.h>
#import <Facebook/FBComposerViewControllerDelegate.h>
#import <Facebook/FBComposerViewControllerDisplayDelegate.h>
#import <Facebook/FBComposerCompositionStateChangedListener.h>
#import <Facebook/FBCompositionLinkShareControllerDelegate.h>
#import <Facebook/FBComposerCancellationAlertListener.h>
#import <Facebook/FBComposerPostCompositionListener.h>
#import <Facebook/FBComposerUpdateHandler.h>
#import <Facebook/FBComposerPublicationHandlingDelegate.h>
#import <Facebook/FBComposerDisplayer.h>

@protocol FBComposerFlowDelegate, FBComposerPresentationHandler, FBComposerPublicationHandling, FBComposerActionSheetPresenter, FBComposerAlertPresenter;
@class FBCompositionListenerAnnouncer, FBPublisherManager, FBExceptionHandler, NSMutableArray, FBUserSession, FBComposerDestinationNavigator, NSString, FBComposerPerformanceUpdateContext, FBComposerCompositionState, FBComposerScope, FBComposerDataUpdateManager, FBComposerCompositionListenerEventRelayer, FBComposerCrashRecoveryCache, FBComposerDraftRecoveryMonitor, FBQuickPerformanceLogger, FBComposerPrivacySetting;

@interface FBComposerFlowDisplayer : NSObject <FBComposerGroupCommercePostInterceptControllerDelegate, FBComposerMarketplacePostInterceptControllerDelegate, FBComposerViewControllerDelegate, FBComposerViewControllerDisplayDelegate, FBComposerCompositionStateChangedListener, FBCompositionLinkShareControllerDelegate, FBComposerCancellationAlertListener, FBComposerPostCompositionListener, FBComposerUpdateHandler, FBComposerPublicationHandlingDelegate, FBComposerDisplayer> {

	FBCompositionListenerAnnouncer* _compositionAnnouncer;
	FBPublisherManager* _publisherManager;
	FBExceptionHandler* _exceptionHandler;
	NSMutableArray* _recentUpdates;
	FBUserSession* _session;
	unordered_map<std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination>, FBComposerNavigationDescription ()(FBComposerScope *, FBUserSession *, id, FBPopoverInfo *), NavigationMapHasher, std::__1::equal_to<std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination> >, std::__1::allocator<std::__1::pair<const std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination>, FBComposerNavigationDescription ()(FBComposerScope *, FBUserSession *, id, FBPopoverInfo *)> > >* _navigationMap;
	id<FBComposerFlowDelegate> _composerDelegate;
	FBComposerDestinationNavigator* _composerDestinationNavigator;
	NSString* _compositionID;
	FBComposerPerformanceUpdateContext* _performanceUpdateContext;
	FBComposerCompositionState* _currentCompositionState;
	FBComposerCompositionState* _originalCompositionState;
	FBComposerScope* _currentComposerScope;
	FBComposerDataUpdateManager* _dataUpdateManager;
	id<FBComposerPresentationHandler> _presentationHandler_DO_NOT_USE_ONLY_EXPOSED_FOR_AFTER_PARTY;
	unsigned long long _presentationMode;
	FBComposerCompositionListenerEventRelayer* _eventRelayer;
	NSMutableArray* _services;
	FBComposerCrashRecoveryCache* _crashRecoveryCache;
	FBComposerDraftRecoveryMonitor* _draftRecoveryMonitor;
	id<FBComposerPublicationHandling> _publicationHandler;
	id<FBComposerActionSheetPresenter> _actionSheetPresenter;
	id<FBComposerAlertPresenter> _alertPresenter;
	FBQuickPerformanceLogger* _performanceLogger;
	FBComposerPrivacySetting* _initialAudiencePrivacySetting;
	BOOL _audienceHasChanged;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)isComposerActive;
-(void)openComposerWithBootstrapContent:(id)arg1 presentationHandler:(id)arg2 startingStyleContext:(id)arg3 sourceView:(id)arg4 delegate:(id)arg5 animated:(BOOL)arg6 ;
-(void)composerCompletedWithResult:(id)arg1 ;
-(BOOL)shouldComposerAllowAttachRemoteMedia;
-(void)composerTappedAttachRemoteMedia;
-(void)dismissComposerAnimated:(BOOL)arg1 ;
-(void)composerCompositionStateChangedFromPreviousCompositionState:(id)arg1 toCurrentCompositionState:(id)arg2 ;
-(void)addedRemoteImageAttachments:(id)arg1 forCompositionID:(id)arg2 ;
-(void)presentAlert:(id)arg1 actionListener:(id)arg2 ;
-(void)cancellationCancelButtonPressed;
-(void)cancellationDiscardButtonPressed;
-(void)cancellationSaveAsDraftButtonPressed;
-(void)handleComposerUpdate:(id)arg1 ;
-(void)alertUserOfIncompleteCompositionStateIfNeeded:(id)arg1 actionListener:(id)arg2 ;
-(BOOL)showAudienceEducationIfNeededForPrivacy:(id)arg1 platform:(unsigned long long)arg2 ;
-(void)publicationHandlingFinishedPublishing;
-(void)publicationHandlingReadyToPublish;
-(void)publicationHandlingStartedPublishing:(id)arg1 ;
-(id)intentHandlerForPublicationHandler;
-(id)initWithUserSession:(id)arg1 publisherManager:(id)arg2 ;
-(void)platformLoadedPayload:(id)arg1 forCompositionID:(id)arg2 ;
-(void)groupCommercePostInterceptControllerDidSelectUpsell:(id)arg1 ;
-(void)groupCommercePostInterceptControllerDidSelectPost:(id)arg1 ;
-(void)marketplacePostInterceptControllerDidSelectCrossPost:(id)arg1 ;
-(void)marketplacePostInterceptControllerDidSelectOnlyGroup:(id)arg1 ;
-(void)_composerFlowDidEnd;
-(void)handleComposerComposedResult:(id)arg1 animated:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_openComposerWithBootstrapContent:(id)arg1 presentationHandler:(id)arg2 startingStyleContext:(id)arg3 sourceView:(id)arg4 delegate:(id)arg5 animated:(BOOL)arg6 ;
-(void)_addAnalyticPayloadForComposerCancelsFromCancellationDialog;
-(void)_cancelAndWantsDraft;
-(void)confirmCancellationWithUser;
-(BOOL)canDraftComposition:(id)arg1 ;
-(void)attemptToCloseComposerFlow;
-(void)_composerFlowCompletedWithComposedResult:(id)arg1 ;
-(void)_didDismissComposerWithCompositionID:(id)arg1 ;
-(void)_dismissGroupCommercePostInterceptWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)_composerFlowWillBeCancelled;
-(void)_cleanUpLocalResources;
-(void)_handleSharedLink:(id)arg1 ;
-(void)_handleMutationUpdate:(id)arg1 performanceUpdateHandlers:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_handleUpdateAction:(id)arg1 ;
-(void)_handleAnalyticsEvent:(id)arg1 ;
-(void)_handleDestinationUpdate:(id)arg1 performanceUpdateHandlers:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_handleFunnelEventUpdate:(id)arg1 ;
-(BOOL)_hasPresentedMainComposeView;
-(void)_PRIVATE_USECOMPOSERUPDATE_dismissCurrentDestinationAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_PRIVATE_USECOMPOSERUPDATE_dismissCurrentDestinationThenNavigateToComposeViewDestinationWithPush:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)linkShareControllerDidFetchLinkInformation:(id)arg1 ;
-(void)linkShareControllerDidFindSharedLink:(id)arg1 ;
-(void)linkShareController:(id)arg1 didFailFetchWithError:(id)arg2 ;
-(void)didTapPostItem;
-(void)didTapStickerAttachmentForSticker:(id)arg1 ;
-(void)didTapRemoveStickerButtonForSticker:(id)arg1 ;
-(BOOL)canDismiss;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(unsigned long long)currentDestination;
@end

