/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:07 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIViewController.h>
#import <Facebook/FBModalContentViewController.h>
#import <Facebook/FBCastingLiveCommentsViewControllerDelegate.h>
#import <Facebook/FBTVCastingPlaybackEventListener.h>
#import <Facebook/FBVideoPlaybackEventListener.h>
#import <Facebook/FBVideoCastingViewControllerDelegate.h>
#import <Facebook/FBNuxStepChainControllerDelegate.h>
#import <Facebook/FBMediaUFIBarControllerPresentingViewController.h>
#import <Facebook/FBDisplayableMediaTransitioningDelegate.h>
#import <Facebook/FBDisplayableMediaTransitionManagerDelegate.h>
#import <Facebook/FBFullScreenVideoViewControlling.h>
#import <Facebook/FBInAppNotificationEligibilityProtocol.h>
#import <Facebook/FBModalContainerViewControllerDelegate.h>

@protocol FBMediaUFIBarControllerDelegate, FBVideoPresentingDelegate, FBScrollPositionModifyingController;
@class FBMemFeedStory, FBUserSession, FBMemVideo, NSArray, FBButtonWithExtendedTapTarget, FBNetworkImageView, PABlurView, FBVideoCastingViewController, UILabel, FBCastingLiveCommentsViewController, FBCastingCommentsBarController, FBMediaUFIBarController, FBNuxController, UIView, FBVideoViewManager, NSString;

@interface FBCastingViewController : UIViewController <FBModalContentViewController, FBCastingLiveCommentsViewControllerDelegate, FBTVCastingPlaybackEventListener, FBVideoPlaybackEventListener, FBVideoCastingViewControllerDelegate, FBNuxStepChainControllerDelegate, FBMediaUFIBarControllerPresentingViewController, FBDisplayableMediaTransitioningDelegate, FBDisplayableMediaTransitionManagerDelegate, FBFullScreenVideoViewControlling, FBInAppNotificationEligibilityProtocol, FBModalContainerViewControllerDelegate> {

	FBMemFeedStory* _story;
	FBUserSession* _session;
	FBMemVideo* _videoObject;
	FBMemVideo* _nextChainedVideo;
	NSArray* _trackingCodes;
	FBButtonWithExtendedTapTarget* _dismissButton;
	FBNetworkImageView* _backgroundView;
	PABlurView* _backgroundBlurView;
	FBVideoCastingViewController* _castingVideoViewController;
	FBNetworkImageView* _ownerImageView;
	UILabel* _titleLabel;
	FBCastingLiveCommentsViewController* _commentsViewController;
	FBCastingCommentsBarController* _commentsBarController;
	FBMediaUFIBarController* _ufiBarController;
	id<FBMediaUFIBarControllerDelegate> _ufiDelegate;
	FBNuxController* _nuxController;
	BOOL _isDismissing;
	unsigned long long _viewState;
	UIView* _transitionOverlay;
	BOOL _isDraggingCommentBar;
	double _commentBarDragPercent;
	double _commentBarDragStartPosition;
	BOOL _preventAutoPlayIfManuallyPaused;
	FBVideoViewManager* _viewManager;
	id<FBVideoPresentingDelegate> _fullscreenVideoDelegate;
	id<FBScrollPositionModifyingController> _containingScrollController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) FBVideoViewManager * viewManager;                                                       //@synthesize viewManager=_viewManager - In the implementation block
@property (assign,nonatomic) BOOL autoDismissWhenVideoFinishes; 
@property (nonatomic,readonly) BOOL canAutoAdvance; 
@property (nonatomic,readonly) FBMediaUFIBarController * ufiBarController; 
@property (assign,nonatomic,__weak) id<FBVideoPresentingDelegate> fullscreenVideoDelegate;                             //@synthesize fullscreenVideoDelegate=_fullscreenVideoDelegate - In the implementation block
@property (nonatomic,__weak,readonly) id<FBScrollPositionModifyingController> containingScrollController;              //@synthesize containingScrollController=_containingScrollController - In the implementation block
@property (assign,nonatomic) BOOL preventAutoPlayIfManuallyPaused;                                                     //@synthesize preventAutoPlayIfManuallyPaused=_preventAutoPlayIfManuallyPaused - In the implementation block
-(BOOL)inAppNotificationBeeperManager:(id)arg1 shouldShowNotification:(id)arg2 ;
-(id)analyticsModule;
-(void)videoPlaybackController:(id)arg1 didUpdatePlaybackTime:(double)arg2 ;
-(FBVideoViewManager *)viewManager;
-(void)stepChainControllerDidEnd:(id)arg1 ;
-(void)dismissModalContainerViewController:(id)arg1 ;
-(id)headerViewForModalContainerViewController:(id)arg1 ;
-(id)scrollViewForDismissingModalContainerViewController:(id)arg1 ;
-(BOOL)swipeGestureCanDismissModalContainerViewController:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)transitionManagerNeedsDismissal:(id)arg1 ;
-(id)transitionManagerNeedsMediaInfoForAnimation:(id)arg1 ;
-(unsigned long long)transitionManager:(id)arg1 preferredDismissalTransitionTypeForMedia:(id)arg2 ;
-(void)transitionManager:(id)arg1 willPresentWithMediaViewProviderInfo:(id)arg2 ;
-(void)setAutoDismissWhenVideoFinishes:(BOOL)arg1 ;
-(void)setPreventAutoPlayIfManuallyPaused:(BOOL)arg1 ;
-(void)resetViewManager;
-(void)didFinishAnimatingViewAfterCancelingDismissal:(BOOL)arg1 ;
-(void)configureViewManager;
-(FBMediaUFIBarController *)ufiBarController;
-(CGRect)animationFrameForView;
-(BOOL)canAutoAdvance;
-(BOOL)autoDismissWhenVideoFinishes;
-(id<FBVideoPresentingDelegate>)fullscreenVideoDelegate;
-(void)setFullscreenVideoDelegate:(id<FBVideoPresentingDelegate>)arg1 ;
-(id<FBScrollPositionModifyingController>)containingScrollController;
-(BOOL)preventAutoPlayIfManuallyPaused;
-(id)initWithViewManager:(id)arg1 castingPlaybackController:(id)arg2 story:(id)arg3 video:(id)arg4 channelID:(id)arg5 channelCaller:(id)arg6 channelCursor:(id)arg7 ufiDelegate:(id)arg8 session:(id)arg9 trackingCodes:(id)arg10 ;
-(void)transitionManager:(id)arg1 willStartTransitionWithMediaViewOrLayer:(id)arg2 containerView:(id)arg3 ;
-(void)transitionManager:(id)arg1 animateInsideAnimationBlockWithWithMediaViewOrLayer:(id)arg2 containerView:(id)arg3 ;
-(void)transitionManager:(id)arg1 didEndTransitionWithMediaViewOrLayer:(id)arg2 containerView:(id)arg3 ;
-(void)transitionManager:(id)arg1 interactiveDismissalDidUpdateWithTranslation:(CGPoint)arg2 dismissalProgress:(double)arg3 mediaViewOrLayer:(id)arg4 containerView:(id)arg5 ;
-(BOOL)transitionManagerShouldShowPresentedViewDuringTransition:(id)arg1 ;
-(BOOL)transitionManagerShouldAddMediaViewOnTop:(id)arg1 ;
-(BOOL)transitionManagerSupportsInteractiveDismissOnlyOnPresentedView:(id)arg1 ;
-(BOOL)canShowMoreOption;
-(void)dismissAfterDeletion;
-(void)disableDismissal;
-(void)enableDismissal;
-(void)_didUpdatePlaybackTime:(double)arg1 ;
-(void)tvVideoPlaybackController:(id)arg1 didUpdatePlaybackTime:(double)arg2 ;
-(void)tvVideoPlaybackController:(id)arg1 didAdvanceToVideo:(id)arg2 ;
-(void)_configureUFIOrLiveComments;
-(CGRect)_dismissButtonFrame;
-(CGRect)_castingFrame;
-(CGRect)_backgroundFrame;
-(CGRect)_commentsFrame;
-(CGRect)_commentsBarFrame;
-(CGRect)_titleFrameGivenVideoFrame:(CGRect)arg1 ;
-(CGRect)_ownerImageFrameGivenTitleFrame:(CGRect)arg1 ;
-(void)_showComments;
-(void)commentsViewControllerDidTapClose:(id)arg1 ;
-(void)_toggleCommentsVisible;
-(void)_dragBar:(id)arg1 ;
-(void)_arrangeSubviewsZIndex;
-(void)_didUpdateToVideo:(id)arg1 ;
-(void)commentsViewControllerStartedSocialInviteFlow:(id)arg1 ;
-(void)commentsViewControllerFinishedSocialInviteFlow:(id)arg1 ;
-(void)videoControllerWillStartCasting:(id)arg1 ;
-(void)videoControllerDidSwitchDevices:(id)arg1 ;
-(void)videoControllerWillStopCasting:(id)arg1 ;
-(void)videoControllerDidStartCasting:(id)arg1 ;
-(void)dealloc;
-(BOOL)prefersStatusBarHidden;
-(unsigned long long)supportedInterfaceOrientations;
-(void)viewWillLayoutSubviews;
-(long long)preferredInterfaceOrientationForPresentation;
-(void)viewDidLoad;
-(void)_dismiss;
-(void)dismissWithCompletion:(/*^block*/id)arg1 ;
@end

