/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:28 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/NXOAuth2ClientDelegate.h>
#import <Facebook/NXOAuth2TrustDelegate.h>

@class NSMutableDictionary, NSString, NSArray;

@interface NXOAuth2AccountStore : NSObject <NXOAuth2ClientDelegate, NXOAuth2TrustDelegate> {

	NSMutableDictionary* pendingOAuthClients;
	NSMutableDictionary* accountsDict;
	NSMutableDictionary* configurations;
	NSMutableDictionary* trustModeHandler;
	NSMutableDictionary* trustedCertificatesHandler;
	NSString* _keychainAccessGroup;
	NSString* _keychainServiceName;

}

@property (nonatomic,retain) NSMutableDictionary * pendingOAuthClients; 
@property (nonatomic,retain) NSMutableDictionary * accountsDict; 
@property (nonatomic,retain) NSMutableDictionary * configurations; 
@property (nonatomic,retain) NSMutableDictionary * trustModeHandler; 
@property (nonatomic,retain) NSMutableDictionary * trustedCertificatesHandler; 
@property (nonatomic,retain) NSString * keychainAccessGroup;                                //@synthesize keychainAccessGroup=_keychainAccessGroup - In the implementation block
@property (nonatomic,retain) NSString * keychainServiceName;                                //@synthesize keychainServiceName=_keychainServiceName - In the implementation block
@property (nonatomic,readonly) NSArray * accounts; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedStore;
-(void)requestAccessToAccountWithType:(id)arg1 withPreparedAuthorizationURLHandler:(/*^block*/id)arg2 ;
-(BOOL)handleRedirectURL:(id)arg1 ;
-(void)setClientID:(id)arg1 secret:(id)arg2 authorizationURL:(id)arg3 tokenURL:(id)arg4 redirectURL:(id)arg5 forAccountType:(id)arg6 ;
-(id)configurationForAccountType:(id)arg1 ;
-(void)setConfiguration:(id)arg1 forAccountType:(id)arg2 ;
-(void)setPendingOAuthClients:(NSMutableDictionary *)arg1 ;
-(void)setTrustModeHandler:(NSMutableDictionary *)arg1 ;
-(void)setTrustedCertificatesHandler:(NSMutableDictionary *)arg1 ;
-(void)accountDidChangeUserData:(id)arg1 ;
-(void)accountDidChangeAccessToken:(id)arg1 ;
-(void)accountDidLoseAccessToken:(id)arg1 ;
-(id)accountsFromDefaultKeychainWithAccessGroup:(id)arg1 ;
-(NSMutableDictionary *)accountsDict;
-(id)pendingOAuthClientForAccountType:(id)arg1 ;
-(void)storeAccountsInDefaultKeychain:(id)arg1 withAccessGroup:(id)arg2 ;
-(NSMutableDictionary *)trustModeHandler;
-(NSMutableDictionary *)trustedCertificatesHandler;
-(BOOL)handleRedirectURL:(id)arg1 error:(id*)arg2 ;
-(id)fixRedirectURL:(id)arg1 storedURL:(id)arg2 ;
-(NSMutableDictionary *)pendingOAuthClients;
-(id)accountTypeOfPendingOAuthClient:(id)arg1 ;
-(/*^block*/id)trustModeHandlerForAccountType:(id)arg1 ;
-(/*^block*/id)trustedCertificatesHandlerForAccountType:(id)arg1 ;
-(NSString *)keychainServiceName;
-(id)accountsKeychainServiceName;
-(void)removeFromDefaultKeychainWithAccessGroup:(id)arg1 ;
-(void)oauthClientNeedsAuthentication:(id)arg1 ;
-(void)oauthClientDidGetAccessToken:(id)arg1 ;
-(void)oauthClientDidLoseAccessToken:(id)arg1 ;
-(void)oauthClientDidRefreshAccessToken:(id)arg1 ;
-(void)oauthClient:(id)arg1 didFailToGetAccessTokenWithError:(id)arg2 ;
-(int)connection:(id)arg1 trustModeForHostname:(id)arg2 ;
-(id)connection:(id)arg1 trustedCertificatesForHostname:(id)arg2 ;
-(void)requestAccessToAccountWithType:(id)arg1 ;
-(void)requestAccessToAccountWithType:(id)arg1 username:(id)arg2 password:(id)arg3 ;
-(void)requestAccessToAccountWithType:(id)arg1 assertionType:(id)arg2 assertion:(id)arg3 ;
-(void)requestClientCredentialsAccessWithType:(id)arg1 ;
-(void)setClientID:(id)arg1 secret:(id)arg2 scope:(id)arg3 authorizationURL:(id)arg4 tokenURL:(id)arg5 redirectURL:(id)arg6 keyChainGroup:(id)arg7 forAccountType:(id)arg8 ;
-(void)setClientID:(id)arg1 secret:(id)arg2 scope:(id)arg3 authorizationURL:(id)arg4 tokenURL:(id)arg5 redirectURL:(id)arg6 keyChainGroup:(id)arg7 tokenType:(id)arg8 forAccountType:(id)arg9 ;
-(void)setTrustModeHandlerForAccountType:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)setTrustedCertificatesHandlerForAccountType:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)setAccountsDict:(NSMutableDictionary *)arg1 ;
-(void)setKeychainServiceName:(NSString *)arg1 ;
-(NSMutableDictionary *)configurations;
-(id)init;
-(void)dealloc;
-(void)addAccount:(id)arg1 ;
-(void)setKeychainAccessGroup:(NSString *)arg1 ;
-(NSString *)keychainAccessGroup;
-(void)setConfigurations:(NSMutableDictionary *)arg1 ;
-(id)accountWithIdentifier:(id)arg1 ;
-(id)accountsWithAccountType:(id)arg1 ;
-(NSArray *)accounts;
-(void)removeAccount:(id)arg1 ;
@end

