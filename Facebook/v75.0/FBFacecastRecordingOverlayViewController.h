/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:21:07 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/FE7A361D-639E-4E8F-9E98-6A4739748428/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIViewController.h>
#import <Facebook/FBNuxStepChainControllerDelegate.h>
#import <Facebook/FBFacecastCreativeToolsViewControllerDelegate.h>
#import <Facebook/FBFacecastCommercialBreakViewControllerDelegate.h>
#import <Facebook/FBFacecastCopyrightStatusManagerDelegate.h>
#import <Facebook/FBFacecastStatusOverlayViewDelegate.h>
#import <Facebook/FBFacecastInteractionViewControllerDelegate.h>
#import <Facebook/FBFacecastRecordingOverlayViewDelegate.h>
#import <Facebook/FBFacecastWithBroadcasterCameraViewControllerDelegate.h>
#import <Facebook/FBScenePathHolding.h>
#import <Facebook/FBMediaCreativeToolDrawDelegate.h>
#import <Facebook/FBCommentPublisherDelegate.h>

@protocol FBFacecastRecordingOverlayViewControllerDelegate, FBQueriedProfileFieldsProtocol, FBHumanQueriedFundraiserToCharityFieldsProtocol;
@class FBUserSession, FBMemVideo, NSString, FBFacecastCompositionState, FBComposerPrivacySetting, FBScenePath, FBTimer, FBCommentPublisher, FBMemFeedback, FBMemModelObject, FBNuxStepChainController, FBCrowdNoiseViewController, FBFacecastInteractionViewController, FBFacecastCreativeToolsViewController, FBFacecastCreativeToolsModelManager, FBMediaCreativeToolsModel, FBFacecastBroadcastLogger, FBFacecastBroadcastManager, FBFacecastCommercialBreakViewController, FBFacecastInviteFriendsPresenterViewController, FBFacecastCopyrightStatusManager, FBFacecastCameraView, FBFacecastRecordingOverlayView, NSArray;

@interface FBFacecastRecordingOverlayViewController : UIViewController <FBNuxStepChainControllerDelegate, FBFacecastCreativeToolsViewControllerDelegate, FBFacecastCommercialBreakViewControllerDelegate, FBFacecastCopyrightStatusManagerDelegate, FBFacecastStatusOverlayViewDelegate, FBFacecastInteractionViewControllerDelegate, FBFacecastRecordingOverlayViewDelegate, FBFacecastWithBroadcasterCameraViewControllerDelegate, FBScenePathHolding, FBMediaCreativeToolDrawDelegate, FBCommentPublisherDelegate> {

	FBUserSession* _userSession;
	FBMemVideo* _video;
	NSString* _videoID;
	NSString* _broadcastID;
	NSString* _targetID;
	NSString* _targetGraphQLTypeName;
	NSString* _analyticsModule;
	FBFacecastCompositionState* _composition;
	FBComposerPrivacySetting* _privacySetting;
	long long _cameraCount;
	double _maxBroadcastTime;
	double _statusPollingInterval;
	long long _broadcastType;
	FBScenePath* _scenePath;
	FBTimer* _videoToStoryPoller;
	id<FBFacecastRecordingOverlayViewControllerDelegate> _delegate;
	double _lastUpdatedVideoDuration;
	FBCommentPublisher* _commentPublisher;
	FBMemFeedback* _feedback;
	FBMemModelObject*<FBQueriedProfileFieldsProtocol> _storyTo;
	unsigned long long _lastUpdatedViewerCount;
	BOOL _didReceiveCopyRightViolationMessage;
	FBNuxStepChainController* _tooltipController;
	FBCrowdNoiseViewController* _crowdNoiseViewController;
	FBFacecastInteractionViewController* _interactionViewController;
	FBFacecastCreativeToolsViewController* _creativeToolsViewController;
	FBFacecastCreativeToolsModelManager* _creativeToolsModelManager;
	FBMediaCreativeToolsModel* _creativeToolsModel;
	BOOL _liveEventsCovered;
	FBFacecastBroadcastLogger* _logger;
	FBFacecastBroadcastManager* _broadcastManager;
	FBFacecastCommercialBreakViewController* _commercialBreakViewController;
	double _lastCommercialDuration;
	long long _lastBreakTimestampMilliseconds;
	long long _numberOfBreaks;
	BOOL _isOnCommercialBreak;
	unsigned long long _highestViewerCount;
	FBFacecastInviteFriendsPresenterViewController* _inviteFriendsPresenter;
	FBFacecastCopyrightStatusManager* _copyrightStatusManager;
	CGSize _streamingVideoSize;
	BOOL _isDrawing;
	FBTimer* _drawDismissTimer;
	BOOL _didViewAppear;
	BOOL _paused;
	FBFacecastCameraView* _cameraView;
	unsigned long long _recordingState;
	FBMemModelObject*<FBHumanQueriedFundraiserToCharityFieldsProtocol> _fundraiser;

}

@property (nonatomic,retain) FBFacecastRecordingOverlayView * view; 
@property (nonatomic,retain) FBFacecastCameraView * cameraView;                                                          //@synthesize cameraView=_cameraView - In the implementation block
@property (nonatomic,copy,readonly) NSArray * viewerCountDataPoints; 
@property (assign,nonatomic) unsigned long long recordingState;                                                          //@synthesize recordingState=_recordingState - In the implementation block
@property (nonatomic,retain) FBMemModelObject*<FBHumanQueriedFundraiserToCharityFieldsProtocol> fundraiser;              //@synthesize fundraiser=_fundraiser - In the implementation block
@property (assign,nonatomic) BOOL paused;                                                                                //@synthesize paused=_paused - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)_statusOverlayViewStateFromControllerState:(unsigned long long)arg1 ;
-(id)analyticsModule;
-(void)stepChainControllerDidEnd:(id)arg1 ;
-(FBMemModelObject*<FBHumanQueriedFundraiserToCharityFieldsProtocol>)fundraiser;
-(void)facecastInteractionViewController:(id)arg1 didTapFundraiserBannerWithFundraiser:(id)arg2 ;
-(void)facecastInteractionViewController:(id)arg1 didTapDonateButtonWithFundraiser:(id)arg2 ;
-(void)facecastInteractionViewController:(id)arg1 didSetUpDonateViewWithFundraiser:(id)arg2 ;
-(void)facecastInteractionViewControllerDidInviteGuest:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidFinish:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidShowPopup:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidDismissPopup:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidCancel:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidConfirm:(id)arg1 ;
-(void)facecastCommercialBreakViewControllerDidStart:(id)arg1 ;
-(void)facecastLiveBroadcastCopyrightStatusManager:(id)arg1 didUpdateCopyrightsViolationStatusCode:(unsigned long long)arg2 copyrightViolationUINotificationTexts:(id)arg3 ;
-(void)mediaCreativeToolsViewController:(id)arg1 beganDismissingDistance:(double)arg2 ;
-(void)mediaCreativeToolsViewControllerDidCancelDismissal:(id)arg1 ;
-(void)mediaCreativeToolsViewControllerDidCommitDismissal:(id)arg1 ;
-(void)creativeToolDrawViewControllerDidStartDrawing:(id)arg1 ;
-(void)creativeToolDrawViewControllerDidStopDrawing:(id)arg1 ;
-(void)facecastRecordingOverlayView:(id)arg1 tappedCameraWithGesture:(id)arg2 ;
-(void)facecastRecordingOverlayView:(id)arg1 pinchedCameraWithGesture:(id)arg2 ;
-(void)facecastRecordingOverlayView:(id)arg1 committedCommentWithText:(id)arg2 ;
-(void)facecastRecordingOverlayViewNeedsToResize:(id)arg1 ;
-(void)facecastRecordingOverlayViewDidEnterComposer:(id)arg1 ;
-(void)_cameraFlipButtonTapped:(id)arg1 ;
-(void)_addCommercialBreakMenuItemIfEligible;
-(void)_addInviteFriendsMenuItemIfEligible;
-(void)_addCommentingMenuItemIfEligible;
-(void)_creativeToolButtonTapped:(id)arg1 ;
-(unsigned long long)_facecastLayoutStyle;
-(void)_queryVideoToStory;
-(void)_stopCopyrightStatusManager;
-(void)_hideTooltip;
-(void)_resetLiveEventsIfOverlayedOrPaused;
-(void)_updateCommercialMenuItemStateForDuration:(double)arg1 ;
-(void)_commentPostFailedWithError:(id)arg1 ;
-(void)_commentPostSucceededWithOptimisticID:(id)arg1 ;
-(id)_commercialBreakFunnelActionPayload;
-(void)_dismissCommercialBreakView;
-(unsigned long long)_nuxInterfaceOrientationMaskFromCurrentOrientation;
-(void)_videoToStoryQuerySucceeded:(id)arg1 ;
-(void)_configureVideoToStoryQuery:(id)arg1 ;
-(void)_didTapCommercialBreakMenuItem:(id)arg1 ;
-(void)_didTapInviteFriendsMenuItem:(id)arg1 ;
-(void)_dismissOverlayViews;
-(void)facecastStatusOverlayView:(id)arg1 didUpdateWithViewerCount:(long long)arg2 ;
-(void)facecastStatusOverlayViewReachedTimeLimit:(id)arg1 ;
-(void)facecastStatusOverlayViewFinishedOnPause:(id)arg1 ;
-(void)facecastStatusOverlayViewFinishedOnReconnecting:(id)arg1 ;
-(void)facecastStatusOverlayViewFinishedFromCopyrightViolation:(id)arg1 ;
-(void)facecastStatusOverlayViewResumed:(id)arg1 ;
-(void)facecastStatusOverlayViewResumedFromCopyrightViolation:(id)arg1 ;
-(void)facecastStatusOverlayViewTappedOnViewerCount:(id)arg1 ;
-(void)commentPublisher:(id)arg1 didCreateOptimisticComment:(id)arg2 ;
-(void)commentPublisher:(id)arg1 didUpdateOptimisticComment:(id)arg2 ;
-(void)commentPublisher:(id)arg1 didFinishPostingOptimisticComment:(id)arg2 ;
-(CGRect)_regularCameraFrame;
-(void)updateTimerView:(double)arg1 ;
-(void)setStatusText:(id)arg1 withSeverityLevel:(unsigned long long)arg2 ;
-(id)initWithUserSession:(id)arg1 videoID:(id)arg2 broadcastID:(id)arg3 targetID:(id)arg4 targetGraphQLTypeName:(id)arg5 compositionState:(id)arg6 privacySetting:(id)arg7 cameraCount:(long long)arg8 streamingVideoSize:(CGSize)arg9 analyticsModule:(id)arg10 maxBroadcastTime:(double)arg11 statusPollingInterval:(double)arg12 broadcastManager:(id)arg13 creativeToolsModelManager:(id)arg14 logger:(id)arg15 scenePath:(id)arg16 delegate:(id)arg17 ;
-(NSArray *)viewerCountDataPoints;
-(void)facecastWithBroadcasterCameraViewControllerDidReceiveAcceptFromGuest:(id)arg1 ;
-(void)facecastWithBroadcasterCameraViewControllerDidReceiveDeclineFromGuest:(id)arg1 ;
-(void)facecastWithBroadcasterCameraViewControllerDidReceiveNoAnswerFromGuest:(id)arg1 ;
-(void)facecastWithBroadcasterCameraViewControllerDidReceiveExitFromGuest:(id)arg1 ;
-(void)setFundraiser:(FBMemModelObject*<FBHumanQueriedFundraiserToCharityFieldsProtocol>)arg1 ;
-(unsigned long long)supportedInterfaceOrientations;
-(BOOL)shouldAutorotate;
-(void)loadView;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 ;
-(void)didRotateFromInterfaceOrientation:(long long)arg1 ;
-(void)animateIn;
-(void)setPaused:(BOOL)arg1 ;
-(BOOL)paused;
-(unsigned long long)recordingState;
-(void)setRecordingState:(unsigned long long)arg1 ;
-(FBFacecastCameraView *)cameraView;
-(void)setCameraView:(FBFacecastCameraView *)arg1 ;
-(void)setCameraPosition:(long long)arg1 ;
-(void)_stopButtonTapped:(id)arg1 ;
@end

