/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBComposerAttachmentListenerProtocol.h>
#import <Facebook/FBComposerGroupCommercePostInterceptControllerDelegate.h>
#import <Facebook/FBComposerMarketplacePostInterceptControllerDelegate.h>
#import <Facebook/FBComposerViewControllerDelegate.h>
#import <Facebook/FBComposerViewControllerDisplayDelegate.h>
#import <Facebook/FBComposerLocationPickerControllerDelegate.h>
#import <Facebook/FBComposerCompositionStateChangedListener.h>
#import <Facebook/FBComposerMediaPickerControllerDelegate.h>
#import <Facebook/FBMediaPickerViewControllerDelegate.h>
#import <Facebook/FBComposerAvatarPickerControllerDelegate.h>
#import <Facebook/FBComposerAudienceSelectionFlowControllerDelegate.h>
#import <Facebook/FBCompositionLinkShareControllerDelegate.h>
#import <Facebook/FBComposerCancellationAlertListener.h>
#import <Facebook/FBComposerPostCompositionListener.h>
#import <Facebook/FBComposerUpdateHandler.h>
#import <Facebook/FBFacecastViewControllerDelegate.h>
#import <Facebook/FBComposerPublicationHandlerDelegate.h>
#import <Facebook/FBComposerDisplayer.h>

@protocol FBComposerFlowDelegate, FBComposerPresentationHandler, FBComposerActionSheetPresenter, FBComposerAlertPresenter;
@class FBCompositionListenerAnnouncer, FBPublisherManager, FBExceptionHandler, NSMutableArray, FBUserSession, FBComposerDestinationNavigator, FBComposerViewController, NSString, FBComposerPerformanceUpdateContext, FBComposerCompositionState, FBComposerScope, FBComposerDataUpdateManager, FBComposerCompositionListenerEventRelayer, FBComposerCrashRecoveryCache, FBComposerDraftRecoveryMonitor, FBComposerPublicationHandler, FBComposerSongActivityFetcher, FBQuickPerformanceLogger, FBComposerPrivacySetting;

@interface FBComposerFlowDisplayer : NSObject <FBComposerAttachmentListenerProtocol, FBComposerGroupCommercePostInterceptControllerDelegate, FBComposerMarketplacePostInterceptControllerDelegate, FBComposerViewControllerDelegate, FBComposerViewControllerDisplayDelegate, FBComposerLocationPickerControllerDelegate, FBComposerCompositionStateChangedListener, FBComposerMediaPickerControllerDelegate, FBMediaPickerViewControllerDelegate, FBComposerAvatarPickerControllerDelegate, FBComposerAudienceSelectionFlowControllerDelegate, FBCompositionLinkShareControllerDelegate, FBComposerCancellationAlertListener, FBComposerPostCompositionListener, FBComposerUpdateHandler, FBFacecastViewControllerDelegate, FBComposerPublicationHandlerDelegate, FBComposerDisplayer> {

	FBCompositionListenerAnnouncer* _compositionAnnouncer;
	FBPublisherManager* _publisherManager;
	BOOL _hasBeenSetup;
	FBExceptionHandler* _exceptionHandler;
	NSMutableArray* _recentUpdates;
	FBUserSession* _session;
	unordered_map<std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination>, FBComposerNavigationDescription ()(FBComposerScope *, id, FBPopoverInfo *, const FBComposerNavigationBundle_DEPRECATED_DONOTADDNEWVALUES &), NavigationMapHasher, std::__1::equal_to<std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination> >, std::__1::allocator<std::__1::pair<const std::__1::pair<FBComposerNavigationDestination, FBComposerNavigationDestination>, FBComposerNavigationDescription ()(FBComposerScope *, id, FBPopoverInfo *, const FBComposerNavigationBundle_DEPRECATED_DONOTADDNEWVALUES &)> > >* _navigationMap;
	id<FBComposerFlowDelegate> _composerDelegate;
	FBComposerDestinationNavigator* _composerDestinationNavigator;
	FBComposerViewController* _composerViewController;
	NSString* _compositionID;
	FBComposerPerformanceUpdateContext* _performanceUpdateContext;
	FBComposerCompositionState* _currentCompositionState;
	FBComposerCompositionState* _originalCompositionState;
	FBComposerScope* _currentComposerScope;
	FBComposerDataUpdateManager* _dataUpdateManager;
	id<FBComposerPresentationHandler> _presentationHandler_DO_NOT_USE_ONLY_EXPOSED_FOR_AFTER_PARTY;
	unsigned long long _presentationMode;
	FBComposerCompositionListenerEventRelayer* _eventRelayer;
	BOOL _isDraftRecovered;
	FBComposerCrashRecoveryCache* _crashRecoveryCache;
	FBComposerDraftRecoveryMonitor* _draftRecoveryMonitor;
	FBComposerPublicationHandler* _publicationHandler;
	id<FBComposerActionSheetPresenter> _actionSheetPresenter;
	id<FBComposerAlertPresenter> _alertPresenter;
	FBComposerSongActivityFetcher* _songActivityFetcher;
	FBQuickPerformanceLogger* _performanceLogger;
	FBComposerPrivacySetting* _initialAudiencePrivacySetting;
	BOOL _audienceHasChanged;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setupWithExceptionHandler:(id)arg1 ;
-(BOOL)isComposerActive;
-(void)openComposerWithBootstrapContent:(id)arg1 presentationHandler:(id)arg2 startingStyleContext:(id)arg3 sourceView:(id)arg4 delegate:(id)arg5 animated:(BOOL)arg6 ;
-(void)composerCompletedWithResult:(id)arg1 ;
-(BOOL)shouldComposerAllowAttachRemoteMedia;
-(void)composerTappedAttachRemoteMedia;
-(void)composerCompositionStateChangedFromPreviousCompositionState:(id)arg1 toCurrentCompositionState:(id)arg2 ;
-(void)avatarPickerControllerDidFinishCanceled:(BOOL)arg1 withSelection:(id)arg2 ;
-(void)mediaPickerPermissionDenied:(id)arg1 ;
-(void)mediaPicker:(id)arg1 didSelectMediaAssetAttachments:(id)arg2 fromSource:(long long)arg3 currentPhotoAssetShown:(id)arg4 ;
-(void)mediaPicker:(id)arg1 didSelectMagicStoryCollection:(id)arg2 ;
-(void)mediaPicker:(id)arg1 navigateToMultiPhotoCreationTool:(unsigned long long)arg2 withPhotoAttachments:(id)arg3 ;
-(void)mediaPicker:(id)arg1 didSelectAssetWithID:(id)arg2 fromSource:(long long)arg3 wasSelected:(BOOL)arg4 ;
-(void)facecastViewControllerDidCancelRecordingSession:(id)arg1 ;
-(void)facecastViewControllerDidFinishRecordingSession:(id)arg1 ;
-(void)addedRemoteImageAttachments:(id)arg1 forCompositionID:(id)arg2 ;
-(void)dismissComposerAnimated:(BOOL)arg1 ;
-(void)presentAlert:(id)arg1 actionListener:(id)arg2 ;
-(void)cancellationCancelButtonPressed;
-(void)cancellationDiscardButtonPressed;
-(void)cancellationSaveAsDraftButtonPressed;
-(void)cancellationEditPostButtonPressed;
-(void)cancellationClearContentButtonPressed;
-(void)platformLoadedPayload:(id)arg1 forCompositionID:(id)arg2 ;
-(id)initWithUserSession:(id)arg1 publisherManager:(id)arg2 ;
-(void)provideDependenciesToDisplayer:(id)arg1 ;
-(void)handleComposerUpdate:(id)arg1 ;
-(void)didTapRemovePlaceAttachment:(id)arg1 ;
-(void)alertUserOfIncompleteCompositionStateIfNeeded:(id)arg1 ;
-(unsigned long long)currentDestination;
-(BOOL)showAudienceEducationIfNeededForPrivacy:(id)arg1 platform:(unsigned long long)arg2 ;
-(void)groupCommercePostInterceptControllerDidSelectUpsell:(id)arg1 ;
-(void)groupCommercePostInterceptControllerDidSelectPost:(id)arg1 ;
-(void)composerLocationPickerControllerDidFinishCanceled:(BOOL)arg1 ;
-(void)composerLocationPickerControllerDidChangeStateWith:(unsigned long long)arg1 ;
-(void)composerLocationPickerControllerRemovedPlace;
-(void)marketplacePostInterceptControllerDidSelectCrossPost:(id)arg1 ;
-(void)marketplacePostInterceptControllerDidSelectOnlyGroup:(id)arg1 ;
-(void)_composerFlowDidEnd;
-(void)_dismissComposerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_didDismissComposerWithCompositionID:(id)arg1 ;
-(void)_openComposerWithBootstrapContent:(id)arg1 presentationHandler:(id)arg2 startingStyleContext:(id)arg3 sourceView:(id)arg4 delegate:(id)arg5 animated:(BOOL)arg6 ;
-(void)_addAnalyticPayloadForComposerCancelsFromCancellationDialog;
-(void)_cancelAndWantsDraft;
-(void)handleComposerComposedResult:(id)arg1 ;
-(void)confirmCancellationWithUser;
-(BOOL)canDraftComposition:(id)arg1 ;
-(void)attemptToCloseComposerFlow;
-(void)_composerFlowCompletedWithComposedResult:(id)arg1 ;
-(void)_didSelectMagicStoryCollection:(id)arg1 ;
-(BOOL)_hasPresentedMainComposeView;
-(void)_PRIVATE_USECOMPOSERUPDATE_dismissCurrentDestinationAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)_dismissGroupCommercePostInterceptWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)clearCompositionAndSelectMediaAttachmentsInCameraRollDatasource:(id)arg1 ;
-(void)updateComposerStateWithMediaAttachmentsFromMagicStory:(id)arg1 magicStoryCollectionID:(id)arg2 ;
-(void)_configureComposerViewController:(BOOL)arg1 bootstrapContent:(id)arg2 bootstrapAnalyticsPayload:(id)arg3 ;
-(void)_composerFlowWillBeCancelled;
-(void)_cleanUpLocalResources;
-(void)_handleSharedLink:(id)arg1 ;
-(void)_handleMutationUpdate:(id)arg1 performanceUpdateHandlers:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_handleUpdateAction:(id)arg1 ;
-(void)_handleAnalyticsEvent:(id)arg1 ;
-(void)_handleDestinationUpdate:(id)arg1 performanceUpdateHandlers:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_handleFunnelEventUpdate:(id)arg1 ;
-(void)_PRIVATE_USECOMPOSERUPDATE_dismissCurrentDestinationThenNavigateToComposeViewDestinationWithPush:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)composerToolTipCoordinatorForMediaPickerController:(id)arg1 ;
-(void)linkShareControllerDidFetchLinkInformation:(id)arg1 ;
-(void)linkShareControllerDidFindSharedLink:(id)arg1 ;
-(void)linkShareController:(id)arg1 didFailFetchWithError:(id)arg2 ;
-(void)didTapStickerAttachmentForSticker:(id)arg1 ;
-(void)didTapRemoveStickerButtonForSticker:(id)arg1 ;
-(void)audienceSelectionFlowController:(id)arg1 didFinishCanceled:(BOOL)arg2 ;
-(void)audienceSelectionFlowControllerDidChangeSelectedAudience:(id)arg1 ;
-(void)didTapPostItem;
-(void)publicationHandlerFinishedPublishing:(id)arg1 ;
-(void)publicationHandlerReadyToPublish:(id)arg1 ;
-(void)publicationHandler:(id)arg1 startedPublishing:(id)arg2 ;
-(void)mediaPicker:(id)arg1 didFailToOpenInvalidAttachment:(id)arg2 ;
-(BOOL)canDismiss;
-(void)mediaPickerDidCancel:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
@end

