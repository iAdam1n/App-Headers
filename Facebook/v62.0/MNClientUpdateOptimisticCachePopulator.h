/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:39 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/MNThreadSummaryClientUpdateRunListening.h>
#import <Facebook/MNThreadSummarySingleUpdateListening.h>
#import <Facebook/MNThreadSummarySubscribing.h>
#import <Facebook/MNThreadSummaryNetworkFetchedListening.h>
#import <Facebook/FBMCustomDictionaryStoreDelegate.h>

@protocol OS_dispatch_queue, MNThreadSummaryOptimisticCacheUpdateListening;
@class NSObject, MNClientUpdateOptimisticCache, MNThreadUpdater, FBMCustomDictionaryStore, NSString;

@interface MNClientUpdateOptimisticCachePopulator : NSObject <MNThreadSummaryClientUpdateRunListening, MNThreadSummarySingleUpdateListening, MNThreadSummarySubscribing, MNThreadSummaryNetworkFetchedListening, FBMCustomDictionaryStoreDelegate> {

	NSObject*<OS_dispatch_queue> _updatingQueue;
	MNClientUpdateOptimisticCache* _optimisticCache;
	MNThreadUpdater* _threadUpdater;
	unsigned long long _optimisticCachePruningPolicy;
	FBMCustomDictionaryStore* _optimisticMarkDiskStore;
	id<MNThreadSummaryOptimisticCacheUpdateListening> _listener;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)didCompleteNetworkFetchOfThreadSummary:(id)arg1 ;
-(void)didApplyUpdates:(id)arg1 toThreadSummary:(id)arg2 ;
-(void)didDeleteThreadWithKey:(id)arg1 ;
-(void)didReplaceThreadSummary:(id)arg1 withThreadSummary:(id)arg2 forThreadKey:(id)arg3 ;
-(void)didPurgeSummary:(id)arg1 ;
-(void)didPurgeAllThreadSummaries;
-(void)customDictionaryStore:(id)arg1 didRestoreStateFromDisk:(id)arg2 ;
-(void)willBeginRunUpdate:(id)arg1 onThreadWithKey:(id)arg2 ;
-(void)didCompleteRunningUpdate:(id)arg1 onThreadWithKey:(id)arg2 ;
-(void)didFailRunningUpdate:(id)arg1 onThreadWithKey:(id)arg2 withError:(id)arg3 ;
-(id)initWithOptimisticCache:(id)arg1 threadUpdater:(id)arg2 optimisticCachePruningPolicy:(unsigned long long)arg3 listener:(id)arg4 updateListeningQueue:(id)arg5 ;
-(void)didApplyUpdate:(id)arg1 toThreadSummary:(id)arg2 ;
-(void)_pruneOptimisticUpdates:(id)arg1 newSummary:(id)arg2 ;
-(void)_removeAllOptimisticUpdatesForThreadWithKey:(id)arg1 ;
@end

