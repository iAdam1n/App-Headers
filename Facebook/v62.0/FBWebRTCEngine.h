/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:44 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBWebRTCVoipAudioSessionDelegate.h>

@protocol FBWebRTCEngineConfiguration, VideoRenderInfo, FBWebRTCLogger;
@class FBUserSession, FBWebRTCEngineListenerAnnouncer, FBWebRTCInCallEventListenerAnnouncer, FBWebRTCGameEventListenerAnnouncer, FBWebRTCDeviceCameras, FBWebRTCDevicePermissionManager, FBWebRTCVoipAudioSession, FBWebRTCCallProperties, FBWebRTCCallConnectionStatus, UIView, FBWebRTCPeerVideoView, FBWebRTCCallStateLogWriter, FBWebRTCRemoteVideoRenderStatusWatchdog, FBWebRTCTimeoutTimer, NSArray, RTCVideoCaptureSession, FBWebRTCCallModel, FBWebRTCRemoteVideoRenderStatus, NSString;

@interface FBWebRTCEngine : NSObject <FBWebRTCVoipAudioSessionDelegate> {

	unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine> >* _nativeEngine;
	id<FBWebRTCEngineConfiguration> _configuration;
	FBUserSession* _userSession;
	FBWebRTCEngineListenerAnnouncer* _announcer;
	FBWebRTCInCallEventListenerAnnouncer* _inCallEventAnnouncer;
	FBWebRTCGameEventListenerAnnouncer* _gameEventAnnouncer;
	BOOL _engineInitialized;
	int _videoWidth;
	int _videoHeight;
	int _frameRate;
	int _requestedVideoWidth;
	int _requestedVideoHeight;
	int _requestedFrameRate;
	BOOL _isRequestingLowResolution;
	FBWebRTCDeviceCameras* _supportedCameras;
	/*^block*/id _audioSessionFactory;
	/*^block*/id _videoCaptureSessionFactory;
	FBWebRTCDevicePermissionManager* _devicePermissionManager;
	FBWebRTCVoipAudioSession* _currentCallAudioSession;
	FBWebRTCCallProperties* _currentCallProperties;
	FBWebRTCCallConnectionStatus* _currentConnectionStatus;
	UIView*<VideoRenderInfo> _rendererWindow;
	FBWebRTCPeerVideoView* _activePeerVideoView;
	id<FBWebRTCLogger> _logger;
	FBWebRTCCallStateLogWriter* _callStateLogWriter;
	FBWebRTCRemoteVideoRenderStatusWatchdog* _remoteVideoRenderStatusWatchdog;
	FBWebRTCTimeoutTimer* _timeoutTimer;
	NSArray* _supportedCallTypes;
	RTCVideoCaptureSession* _videoCaptureSession;

}

@property (nonatomic,copy) NSArray * supportedCallTypes;                                               //@synthesize supportedCallTypes=_supportedCallTypes - In the implementation block
@property (nonatomic,readonly) RTCVideoCaptureSession * videoCaptureSession;                           //@synthesize videoCaptureSession=_videoCaptureSession - In the implementation block
@property (nonatomic,readonly) FBWebRTCCallModel * currentCall; 
@property (nonatomic,readonly) FBWebRTCCallConnectionStatus * currentConnectionStatus;                 //@synthesize currentConnectionStatus=_currentConnectionStatus - In the implementation block
@property (nonatomic,readonly) FBWebRTCRemoteVideoRenderStatus * remoteVideoRenderStatus; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)endCall:(int)arg1 ;
-(void)startPausedLiveWithCallWithBroadcastId:(id)arg1 callabilityStatus:(id)arg2 analyticsExtra:(id)arg3 ;
-(void)setSendData:(BOOL)arg1 ;
-(void)removeUsers:(id)arg1 ;
-(void)ringUsers:(id)arg1 ;
-(RTCVideoCaptureSession *)videoCaptureSession;
-(void)setActivePeerVideoView:(id)arg1 ;
-(void)acceptCall;
-(id)initWithUserSession:(id)arg1 voipVideoWidth:(int)arg2 voipVideoHeight:(int)arg3 frameRate:(int)arg4 ;
-(void)configureWithNativeEngine:(unique_ptr<WebRTCEngine, std::__1::default_delete<WebRTCEngine> >*)arg1 configuration:(id)arg2 logger:(id)arg3 ;
-(id)initWithUserSession:(id)arg1 audioSessionFactory:(/*^block*/id)arg2 videoCaptureSessionFactory:(/*^block*/id)arg3 devicePermissionManager:(id)arg4 timeoutTimer:(id)arg5 supportedCameras:(id)arg6 voipVideoWidth:(int)arg7 voipVideoHeight:(int)arg8 frameRate:(int)arg9 ;
-(id)_createCall:(long long)arg1 ;
-(FBWebRTCRemoteVideoRenderStatus *)remoteVideoRenderStatus;
-(void)addRemoteVideoRenderStatusListener:(id)arg1 ;
-(void)removeRemoteVideoRenderStatusListener:(id)arg1 ;
-(id)createPeerUsersInfo:(id)arg1 ;
-(BOOL)_isLocalVideoSupported;
-(void)_startCallWithPeerUser:(id)arg1 callTrigger:(id)arg2 isVideoCall:(BOOL)arg3 callabilityStatus:(id)arg4 ;
-(void)_initalizeCall:(/*^block*/id)arg1 promptForCamera:(BOOL)arg2 promptForMicrophone:(BOOL)arg3 andStartCall:(/*^block*/id)arg4 ;
-(void)_startConferenceCallRingingUsers:(id)arg1 callTrigger:(id)arg2 isVideoCall:(BOOL)arg3 serverInfoData:(id)arg4 ;
-(id)_currentCameraId;
-(void)_initializeEngineIfNeeded;
-(void)_resetCurrentCall;
-(void)_configureVideoCaptureForCall;
-(void)_notifyCallStarted:(id)arg1 ;
-(void)_processTimeoutsTransitioningFromCallState:(unsigned long long)arg1 toCallState:(unsigned long long)arg2 ;
-(void)_startAudioSessionOnComplete:(/*^block*/id)arg1 ;
-(void)_logAbortedOutgoingCallWithFailedDeviceRequest:(unsigned long long)arg1 ;
-(void)_notifyCallAbortedWithFailedDeviceRequest:(unsigned long long)arg1 ;
-(void)acceptCallWithMediaState:(id)arg1 ;
-(void)_acceptCallAfterPermissionChecks:(id)arg1 ;
-(void)_notifyCallTransitionAborted:(id)arg1 withFailedDeviceRequest:(unsigned long long)arg2 ;
-(void)_transitionToCallState:(unsigned long long)arg1 ;
-(void)_setLocalMediaState:(id)arg1 updateCallModel:(BOOL)arg2 ;
-(void)_updateCallModel:(id)arg1 ;
-(void)_updateIsSpeakerPhone:(BOOL)arg1 ;
-(void)_sendEscalationRequest:(BOOL)arg1 ;
-(void)_deEscalateVideo;
-(void)_sendEscalationResponse:(BOOL)arg1 ;
-(void)_setVideoOn:(BOOL)arg1 ;
-(void)_updateCallStateWithVideoOn:(BOOL)arg1 ;
-(void)_createRendererWindowIfNeeded;
-(BOOL)isCameraSupported:(unsigned long long)arg1 ;
-(void)_setUpCallWithCallTrigger:(id)arg1 isVideoCall:(BOOL)arg2 ;
-(void)_startAlreadyInitializedConferenceCallRingingUsers:(id)arg1 serverInfoData:(id)arg2 ;
-(void)initializeCall:(long long)arg1 peerId:(id)arg2 isOutboundCall:(BOOL)arg3 ;
-(void)switchToContacting;
-(unsigned long long)_connectedCallStateForMediaState;
-(void)_notifyCallEnded:(id)arg1 reason:(int)arg2 remoteEnded:(BOOL)arg3 callSummary:(id)arg4 ;
-(void)_startIncomingCallWithCollision:(BOOL)arg1 ;
-(void)switchToRinging;
-(void)_setRemoteMediaState:(id)arg1 updateCallModel:(BOOL)arg2 ;
-(void)setRemoteVideoSupported:(BOOL)arg1 callId:(long long)arg2 ;
-(BOOL)_isOneOnOneOverMultiway;
-(void)switchToStreaming:(BOOL)arg1 customCallType:(id)arg2 ;
-(void)setVideoOn:(BOOL)arg1 ;
-(void)setAudioOn:(BOOL)arg1 ;
-(void)onRemoteVideoEscalationResponse:(BOOL)arg1 ;
-(void)onRemoteVideoEscalationRequest:(BOOL)arg1 ;
-(void)removeRemoteVideoTrack:(unsigned)arg1 peerId:(id)arg2 cname:(id)arg3 ;
-(void)_sendEscalationSuccess;
-(void)_startCallTimeTracking;
-(void)_notifyCallConnectionStatusChangedFromConnectionStatus:(id)arg1 toConnectionStatus:(id)arg2 forCall:(id)arg3 ;
-(void)_notifyCallChangedFromState:(id)arg1 toState:(id)arg2 ;
-(void)_initializeVideoParameters;
-(void)_resetCameraToDefault;
-(BOOL)_isLiveWith;
-(void)_endCallTimeTracking;
-(void)_updateDefaultSpeakerMode;
-(void)_setAudioOutputRoute:(int)arg1 ;
-(void)onVideoEscalationTimeout;
-(void)handleBeginAudioInterrupt;
-(void)handleEndAudioInterrupt;
-(void)audioRouteChangedToSpeakerphone:(BOOL)arg1 ;
-(void)audioRouteUpdated:(long long)arg1 ;
-(void)audioVolumeChanged:(int)arg1 ;
-(void)setSupportedCallTypes:(NSArray *)arg1 ;
-(void)addInCallEventListener:(id)arg1 ;
-(void)removeInCallEventListener:(id)arg1 ;
-(void)addGameEventListener:(id)arg1 ;
-(void)removeGameEventListener:(id)arg1 ;
-(FBWebRTCCallModel *)currentCall;
-(void)startCallWithPeerUser:(id)arg1 callTrigger:(id)arg2 isVideoCall:(BOOL)arg3 callabilityStatus:(id)arg4 analyticsExtra:(id)arg5 ;
-(void)startCallWithPeerUserUsingMultiway:(id)arg1 callTrigger:(id)arg2 isVideoCall:(BOOL)arg3 callabilityStatus:(id)arg4 analyticsExtra:(id)arg5 ;
-(void)startCustomCallWithPeerUser:(id)arg1 peerAppId:(long long)arg2 peerDeviceId:(id)arg3 initialMediaState:(id)arg4 customCallType:(id)arg5 callTrigger:(id)arg6 callabilityStatus:(id)arg7 analyticsExtra:(id)arg8 ;
-(void)startConferenceCallWithThreadFbId:(id)arg1 participants:(id)arg2 userIdsToRing:(id)arg3 serverInfoData:(id)arg4 directVideo:(BOOL)arg5 callTrigger:(id)arg6 analyticsExtra:(id)arg7 ;
-(void)playAudioClip:(id)arg1 ;
-(BOOL)canSetSpeakerPhone:(BOOL)arg1 ;
-(void)setSpeakerPhone:(BOOL)arg1 ;
-(void)requestVideoEscalation;
-(void)cancelRequestVideoEscalation;
-(void)acceptVideoEscalation;
-(void)declineVideoEscalation;
-(void)setSpeakerOn:(BOOL)arg1 ;
-(void)setMediaState:(id)arg1 ;
-(BOOL)isVideoCallingSupported;
-(BOOL)hasMultipleCameras;
-(void)setVideoParametersWithCaptureWidth:(int)arg1 captureHeight:(int)arg2 captureFramerate:(int)arg3 requestedWidth:(int)arg4 requestedHeight:(int)arg5 requestedFramerate:(int)arg6 ;
-(void)updateRequestedResolutionForChatHead:(BOOL)arg1 ;
-(id)currentPeerId;
-(long long)currentCallId;
-(void)extendAudioSession:(/*^block*/id)arg1 ;
-(void)logApplicationMessage:(id)arg1 inContext:(id)arg2 ;
-(void)callEnded:(long long)arg1 reason:(int)arg2 remoteEnded:(BOOL)arg3 endCallSummary:(id)arg4 ;
-(void)startIncomingCall:(long long)arg1 peerUser:(id)arg2 isVideoCall:(BOOL)arg3 requestedCallType:(id)arg4 ;
-(void)startIncomingConferenceCall:(id)arg1 callId:(long long)arg2 ringType:(int)arg3 peerUsers:(id)arg4 ;
-(void)localMediaStateChanged:(WebRTCMediaState)arg1 ;
-(void)remoteMediaStateChanged:(WebRTCMediaState)arg1 ;
-(void)addRemoteVideoTrack:(unsigned)arg1 peerId:(id)arg2 cname:(id)arg3 ;
-(void)onCallJoined:(BOOL)arg1 ;
-(BOOL)trySubscribeToDominantSpeakerVideoStream;
-(BOOL)trySubscribeToRemoteVideoStream:(id)arg1 ;
-(void)onDominantSpeakerUpdate:(id)arg1 cname:(id)arg2 ;
-(void)onMediaStatusUpdate:(id)arg1 users:(id)arg2 cnames:(id)arg3 mediaTypes:(id)arg4 states:(id)arg5 ;
-(void)clearRendererWindows;
-(void)onRemoteVideoEscalationSuccess;
-(void)setIsConnected:(BOOL)arg1 isPoorAudioConnection:(BOOL)arg2 isPoorVideoConnection:(BOOL)arg3 connectionQuality:(unsigned long long)arg4 localVideoState:(unsigned long long)arg5 remoteVideoState:(unsigned long long)arg6 isH264Video:(BOOL)arg7 ;
-(void)updateParticipantStates:(id)arg1 isDirectVideoCall:(BOOL)arg2 ;
-(void)onThriftMessage:(id)arg1 withFBTraceMetadata:(id)arg2 withMessageSource:(id)arg3 ;
-(void)handleMultiwaySignalingMessage:(id)arg1 ;
-(void)onMessageSendSuccess:(long long)arg1 callId:(long long)arg2 ;
-(void)onMessageSendError:(long long)arg1 callId:(long long)arg2 errorDomain:(id)arg3 errorCode:(int)arg4 errorDescription:(id)arg5 ;
-(void)onMultiwayMessageSendSuccess:(id)arg1 conferenceName:(id)arg2 ;
-(void)onMultiwayMessageSendError:(id)arg1 conferenceName:(id)arg2 error:(id)arg3 ;
-(void)releaseNativeEngine;
-(void)onInputeAudioLevel:(unsigned long long)arg1 outputAudioLevel:(unsigned long long)arg2 ;
-(void)onActiveAudioLevels:(id)arg1 ;
-(void)onGameUpdate:(id)arg1 ;
-(void)sendGameCommand:(id)arg1 ;
-(NSArray *)supportedCallTypes;
-(FBWebRTCCallConnectionStatus *)currentConnectionStatus;
-(void)dealloc;
-(void)setCurrentCamera:(unsigned long long)arg1 ;
-(void)toggleCamera;
-(void)removeListener:(id)arg1 ;
-(void)setVideoOrientation:(int)arg1 ;
-(void)addListener:(id)arg1 ;
@end

