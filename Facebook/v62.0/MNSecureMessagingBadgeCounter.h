/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/MNSecureMessagingBadgeCounting.h>
#import <Facebook/MNSecureMessagingIncomingMessageListener.h>
#import <Facebook/MNSecureThreadSubscribing.h>
#import <Facebook/MNSecureMessagingStoreListener.h>

@protocol MNSecureMessagingBadgeCounterListening, OS_dispatch_queue;
@class MNBadgeCountSourceAdapter, MNSecureMessagingStore, MNBadgeCountUpdateService, NSObject, FBDelayer, NSString, NSSet;

@interface MNSecureMessagingBadgeCounter : NSObject <MNSecureMessagingBadgeCounting, MNSecureMessagingIncomingMessageListener, MNSecureThreadSubscribing, MNSecureMessagingStoreListener> {

	MNBadgeCountSourceAdapter* _badgeCountAdapter;
	MNSecureMessagingStore* _secureMessagingStore;
	MNBadgeCountUpdateService* _badgeCountUpdateService;
	id<MNSecureMessagingBadgeCounterListening> _listener;
	NSObject*<OS_dispatch_queue> _queue;
	FBDelayer* _delayer;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (copy,readonly) NSSet * unreadThreadKeys; 
-(void)didUpdateAllSecureThreads;
-(void)secureMessagingStoreDidFailToOpenWithError:(id)arg1 ;
-(void)secureMessagingStoreDidOpen;
-(void)didDeleteSecureThread:(id)arg1 ;
-(void)didUpdateSecureThread:(id)arg1 ;
-(void)didReceiveNewMessageForThreadWithKey:(id)arg1 timestamp:(unsigned long long)arg2 ;
-(NSSet *)unreadThreadKeys;
-(id)initWithBadgeCountUpdateService:(id)arg1 secureMessagingStore:(id)arg2 listener:(id)arg3 queue:(id)arg4 ;
-(void)_updateBadgeCountWithUnreadThreadKey:(id)arg1 timestamp:(unsigned long long)arg2 ;
-(void)_recomputeUnreadThreadsWithStoreOpen;
-(void)_updateStateWithNewThreadKeyInfo:(id)arg1 ;
@end

