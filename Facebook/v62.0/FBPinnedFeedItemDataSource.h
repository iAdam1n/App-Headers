/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:41 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/CKComponentProvider.h>
#import <Facebook/FBCollectionViewAggregatedDataSourceListener.h>
#import <Facebook/FBPinnedFeedItemPolicyEnforcerDelegate.h>
#import <Facebook/FBComponentCollectionViewDataSourceIndexPathMunger.h>
#import <Facebook/FBCollectionViewSectionDataSource.h>

@protocol FBCollectionViewMutating;
@class FBPinnedFeedItemPolicyEnforcer, FBFeedToolbox, FBComponentCollectionViewDataSource, FBComponentCollectionViewFlowLayoutDelegate, NSMutableArray, NSString;

@interface FBPinnedFeedItemDataSource : NSObject <CKComponentProvider, FBCollectionViewAggregatedDataSourceListener, FBPinnedFeedItemPolicyEnforcerDelegate, FBComponentCollectionViewDataSourceIndexPathMunger, FBCollectionViewSectionDataSource> {

	FBPinnedFeedItemPolicyEnforcer* _policyEnforcer;
	FBFeedToolbox* _toolbox;
	FBComponentCollectionViewDataSource* _dataSource;
	FBComponentCollectionViewFlowLayoutDelegate* _flowLayoutDelegate;
	NSMutableArray* _currentlyPinnedItems;
	id<FBCollectionViewMutating> _collectionViewMutator;

}

@property (assign,nonatomic,__weak) id<FBCollectionViewMutating> collectionViewMutator;              //@synthesize collectionViewMutator=_collectionViewMutator - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,getter=isActive,nonatomic) BOOL active; 
+(id)componentForModel:(id)arg1 context:(id)arg2 ;
-(void)registerClassWithReuseIdentifier;
-(void)setCollectionViewMutator:(id<FBCollectionViewMutating>)arg1 ;
-(id<FBCollectionViewMutating>)collectionViewMutator;
-(void)rootCollectionViewDataSourceDidChange:(id)arg1 ;
-(void)dataSource:(id)arg1 collectionView:(id)arg2 applyMutations:(const CollectionViewMutations*)arg3 ;
-(id)dataSource:(id)arg1 collectionView:(id)arg2 cellForItemAtIndexPath:(id)arg3 ;
-(id)dataSource:(id)arg1 collectionView:(id)arg2 dequeueReusableCellWithReuseIdentifier:(id)arg3 forIndexPath:(id)arg4 ;
-(id)dataSource:(id)arg1 layoutAttributesForItemAtIndexPath:(id)arg2 ;
-(id)dataSource:(id)arg1 absoluteIndexPathFor:(id)arg2 ;
-(void)policyEnforcerDidInsertModel:(id)arg1 withComponentProvider:(Class)arg2 ;
-(void)policyEnforcerDidUpdateOldModel:(id)arg1 withNewModel:(id)arg2 componentProvider:(Class)arg3 ;
-(void)policyEnforcerDidRemoveModel:(id)arg1 withComponentProvider:(Class)arg2 ;
-(id)initWithPinnedFeedItemProviders:(id)arg1 policy:(id)arg2 identifier:(id)arg3 toolbox:(id)arg4 ;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInCollectionView:(id)arg1 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3 ;
@end

