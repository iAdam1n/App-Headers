/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:34 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/CKComponentProvider.h>
#import <Facebook/FBCaptureManagerListener.h>

@protocol FBCameraComponentModelManagerFBCameraComponentModelManagerInternal, FBBackstageCameraControllerDelegate;
@class FBEventHandlerStore, FBCaptureManager, FBCameraComponentToolbox, FBCameraPermissionsRequester, CKComponentHostingView, NSString;

@interface FBBackstageCameraController : NSObject <CKComponentProvider, FBCaptureManagerListener> {

	FBEventHandlerStore* _eventHandlerStore;
	FBCaptureManager* _captureManager;
	FBCameraComponentToolbox* _toolbox;
	FBCameraPermissionsRequester* _permissionsRequester;
	id<FBCameraComponentModelManager><FBCameraComponentModelManagerInternal> _modelManager;
	CKComponentHostingView* _cameraView;
	BOOL _checkedForCameraAccess;
	id<FBBackstageCameraControllerDelegate> _delegate;

}

@property (nonatomic,readonly) CKComponentHostingView * cameraView;              //@synthesize cameraView=_cameraView - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)componentForModel:(id)arg1 context:(id)arg2 ;
-(void)captureManagerCapturedImage:(id)arg1 metadata:(id)arg2 cameraPosition:(long long)arg3 orientation:(long long)arg4 ;
-(void)captureManagerCapturedVideo:(id)arg1 thumbnail:(id)arg2 cameraPosition:(long long)arg3 ;
-(void)captureManagerDidFailToCaptureImage;
-(void)captureManagerDidFailToCaptureVideo;
-(void)captureManagerPreviewDidLoad:(id)arg1 ;
-(void)captureManagerHasFinishedLoadingAudioSession;
-(void)captureManagerDidFailToLoadAudioSessionWithError:(id)arg1 ;
-(void)captureManagerHasFinishedLoadingCaptureSession;
-(void)captureManagerHasEndedCaptureSession;
-(void)captureManagerUpdatedPreviousCaptureDevice:(id)arg1 toCurrentCaptureDevice:(id)arg2 ;
-(void)_createEventHandlersWithEventsFromToolbox:(id)arg1 ;
-(void)_mountCameraView;
-(void)_unmountCameraView;
-(id)initWithSession:(id)arg1 preferredCapturePosition:(long long)arg2 captureManager:(id)arg3 showsCloseButton:(BOOL)arg4 delegate:(id)arg5 ;
-(void)checkForCameraAccess;
-(void)captureManagerUpdatedCapturePosition:(long long)arg1 ;
-(id)videoSettingsToUseForCapture;
-(void)dealloc;
-(CKComponentHostingView *)cameraView;
@end

