/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:33 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIView.h>
#import <Facebook/CKComponentProvider.h>
#import <Facebook/CKComponentHostingViewDelegate.h>
#import <Facebook/FBMULightboxHScrollViewControllerDelegate.h>
#import <Facebook/FBMUPlayControlViewDelegate.h>
#import <Facebook/FBMULightboxTrackListViewControllerDelegate.h>
#import <Facebook/FBMusicPlayerListener.h>

@protocol FBQueriedActorFieldsProtocol, FBMUAnalyticsHelperProtocol, FBMULightboxViewDelegate;
@class NSArray, FBMemFeedStory, FBMemExternalMusicAlbum, FBFeedToolbox, FBMemModelObject, FBMUPlaybackManager, FBMULightboxMetrics, NSDictionary, UIButton, FBMarqueeLabel, UILabel, FBWebImageView, FBGradientView, FBMULightboxHScrollViewController, FBMULightboxTrackListViewController, FBMUPlayControlView, FBBouncyButton, FBMUPlayButton, CKComponentHostingView, NSString;

@interface FBMULightboxView : UIView <CKComponentProvider, CKComponentHostingViewDelegate, FBMULightboxHScrollViewControllerDelegate, FBMUPlayControlViewDelegate, FBMULightboxTrackListViewControllerDelegate, FBMusicPlayerListener> {

	NSArray* _songs;
	FBMemFeedStory* _story;
	FBMemExternalMusicAlbum* _albumMetadata;
	FBFeedToolbox* _toolbox;
	FBMemModelObject*<FBQueriedActorFieldsProtocol> _postOwner;
	FBMUPlaybackManager* _playbackManager;
	FBMULightboxMetrics* _lightboxMetrics;
	CGSize _screenSize;
	id<FBMUAnalyticsHelperProtocol> _analyticsHelper;
	NSDictionary* _analyticsExtraData;
	BOOL _isAlbumLightbox;
	BOOL _isTrackListDisplaying;
	BOOL _didAlreadyQueueTrackListAction;
	UIButton* _closeButton;
	UIButton* _pipButton;
	UIButton* _trackListButton;
	FBMarqueeLabel* _songNameLabel;
	FBMarqueeLabel* _musicianAndAlbumNameLabel;
	UILabel* _playingFromPartnerLabel;
	UILabel* _albumNameLabel;
	UILabel* _albumByMusicianLabel;
	double _singleSongImageSize;
	FBWebImageView* _songImage;
	FBGradientView* _songImageGradientView;
	FBMULightboxHScrollViewController* _hScrollViewController;
	FBMULightboxTrackListViewController* _trackListViewController;
	FBMUPlayControlView* _playControlBar;
	FBBouncyButton* _moreButton;
	FBMUPlayButton* _playButton;
	UIButton* _prevButton;
	UIButton* _nextButton;
	CKComponentHostingView* _CTAButton;
	UILabel* _postOwnerName;
	UILabel* _postDate;
	id<FBMULightboxViewDelegate> _delegate;
	CKComponentHostingView* _UFIBarView;
	unsigned long long _selectedSongIndex;
	unsigned long long _viewState;
	double _currentPlaybackTime;
	double _duration;

}

@property (assign,nonatomic,__weak) id<FBMULightboxViewDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) CKComponentHostingView * UFIBarView;                     //@synthesize UFIBarView=_UFIBarView - In the implementation block
@property (nonatomic,readonly) unsigned long long selectedSongIndex;                    //@synthesize selectedSongIndex=_selectedSongIndex - In the implementation block
@property (nonatomic,readonly) unsigned long long viewState;                            //@synthesize viewState=_viewState - In the implementation block
@property (nonatomic,readonly) double currentPlaybackTime;                              //@synthesize currentPlaybackTime=_currentPlaybackTime - In the implementation block
@property (nonatomic,readonly) double duration;                                         //@synthesize duration=_duration - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)componentForModel:(id)arg1 context:(id)arg2 ;
-(void)componentHostingViewDidInvalidateSize:(id)arg1 ;
-(void)_layoutHeader;
-(void)trackListButtonTapped;
-(double)_lightboxViewWidth;
-(double)_lightboxViewHeight;
-(void)didSelectTrackListRowAtIndex:(unsigned long long)arg1 ;
-(void)_didTapCallToAction:(id)arg1 ctaAction:(id)arg2 ;
-(void)_willStartAuthenticationFlowAction;
-(void)_pipButtonTapped;
-(void)_playPauseButtonTapped;
-(void)_moreButtonTapped;
-(void)_scrollToPrevSong;
-(void)_scrollToNextSong;
-(void)_setUpPostOwnerName;
-(void)_setUpPostDateInfo;
-(void)_setSelectedSongIndex:(unsigned long long)arg1 ;
-(void)_updatePlayButtonWithViewState:(unsigned long long)arg1 ;
-(id)_selectedSong;
-(void)_layoutArtworks;
-(void)_layoutPlayControlView;
-(void)_layoutCTAButton;
-(void)_layoutUFIBar;
-(void)_layoutMetaDataLabels;
-(void)_layoutTrackList;
-(void)_trackListButtonTapped;
-(void)_passHScrollViewportSongInfoToTrackList;
-(void)_passTrackListSelectedSongInfoToLightbox;
-(void)_updatehScrollViewFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 withCurrentMusicState:(unsigned long long)arg3 animated:(BOOL)arg4 ;
-(void)_resetTime;
-(void)_autoPlayTheNextSong;
-(void)_postOwnerNameTapped;
-(void)_updatePrevNextButtonWithNewSelectedSongIndex:(unsigned long long)arg1 ;
-(void)hscrollDidScrollToSongAtIndex:(unsigned long long)arg1 ;
-(void)didResume;
-(void)didPause;
-(void)musicPlayer:(id)arg1 beganBuffering:(id)arg2 ;
-(void)musicPlayer:(id)arg1 startedPlaying:(id)arg2 duration:(double)arg3 ;
-(void)musicPlayer:(id)arg1 isPlaying:(id)arg2 currentTime:(double)arg3 duration:(double)arg4 ;
-(void)musicPlayer:(id)arg1 pausedPlaying:(id)arg2 ;
-(void)musicPlayer:(id)arg1 resumedPlaying:(id)arg2 atTime:(double)arg3 duration:(double)arg4 ;
-(void)musicPlayer:(id)arg1 stoppedPlaying:(id)arg2 ;
-(void)musicPlayer:(id)arg1 completedPlaying:(id)arg2 ;
-(void)musicPlayer:(id)arg1 failedPlaying:(id)arg2 withError:(id)arg3 ;
-(BOOL)_isCurrentSelectedSongPlaying;
-(double)_expectedLabelHeightWithTextSize:(double)arg1 textWeight:(unsigned long long)arg2 ;
-(id)initWithFrame:(CGRect)arg1 songs:(id)arg2 story:(id)arg3 albumMetadata:(id)arg4 isMoreButtonHidden:(BOOL)arg5 shareAction:(SEL)arg6 commentAction:(SEL)arg7 countsAction:(SEL)arg8 analyticsExtraData:(id)arg9 toolbox:(id)arg10 ;
-(unsigned long long)selectedSongIndex;
-(CKComponentHostingView *)UFIBarView;
-(void)configureWithSelectedSongIndex:(unsigned long long)arg1 viewState:(unsigned long long)arg2 currentPlaybackTime:(double)arg3 duration:(double)arg4 ;
-(void)closeTrackListIfNeeded;
-(void)_closeButtonTapped;
-(void)setDelegate:(id<FBMULightboxViewDelegate>)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(id<FBMULightboxViewDelegate>)delegate;
-(double)duration;
-(void)openURL:(id)arg1 ;
-(void)_stop;
-(unsigned long long)viewState;
-(double)currentPlaybackTime;
-(id)playbackState;
-(void)_pause;
-(void)_resume;
-(void)_play;
@end

