/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:39 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/MNMessageSendQueueMutating.h>
#import <Facebook/MNMessageSendStateMachineListening.h>
#import <Facebook/MNMessageSendScheduling.h>
#import <Facebook/MNMessageSendQueueRestorationListening.h>
#import <Facebook/MNMessageSendClientTriggeredThreadDeletionListening.h>

@protocol MNMessageSendConfigurationFactory, MNMessageSendTimestampGenerating, MNMessageSendSchedulerListening, FBClock, OS_dispatch_queue, MNMessageSendStateMachineListening;
@class MNMessageSendRequestCoordinator, MNMessageSendStateStore, MNMessageSendQueueStore, NSObject, MNMessageSendCleaner, MNMessageSendStateMachineListeningAnnouncer, MNMessageSendQueueDiskHandler, NSString;

@interface MNMessageSendScheduler : NSObject <MNMessageSendQueueMutating, MNMessageSendStateMachineListening, MNMessageSendScheduling, MNMessageSendQueueRestorationListening, MNMessageSendClientTriggeredThreadDeletionListening> {

	MNMessageSendRequestCoordinator* _sendRequestCoordinator;
	MNMessageSendStateStore* _sendStateStore;
	MNMessageSendQueueStore* _sendQueueStore;
	id<MNMessageSendConfigurationFactory> _sendConfigurationFactory;
	id<MNMessageSendTimestampGenerating> _sendTimestampGenerator;
	id<MNMessageSendSchedulerListening> _messageSendListener;
	id<FBClock> _clock;
	NSObject*<OS_dispatch_queue> _queue;
	MNMessageSendCleaner* _messageSendCleaner;
	id<MNMessageSendStateMachineListening> _analyticsLoggerStateMachineListener;
	id<MNMessageSendStateMachineListening> _reliabilityLoggerStateMachineListener;
	MNMessageSendStateMachineListeningAnnouncer* _stateMachineAnnouncer;
	MNMessageSendQueueDiskHandler* _sendQueueDiskHandler;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)cancelMessageWithOfflineThreadingId:(id)arg1 ;
-(void)retryMessageWithOfflineThreadingId:(id)arg1 ;
-(void)retryAllMessagesForThreadKey:(id)arg1 ;
-(void)failQueuedMessagesForThreadKey:(id)arg1 ;
-(void)retryAllQueuedMessages;
-(void)messageDidSyncViaSyncProtocol:(id)arg1 messageId:(id)arg2 ;
-(void)messageDidSyncViaThreadFetch:(id)arg1 messageId:(id)arg2 ;
-(void)clientTriggeredThreadDeleteCompletedForThreadWithKey:(id)arg1 ;
-(void)messageSendStateMachine:(id)arg1 stateChangedFromState:(id)arg2 toState:(id)arg3 ;
-(void)messageSendStateMachine:(id)arg1 stateFailedToChangeFromState:(id)arg2 toState:(id)arg3 ;
-(void)didRestoreOutgoingMessagesWithSendStatesFromDisk:(id)arg1 ;
-(void)messageDidSyncViaOmnistore:(id)arg1 messageId:(id)arg2 ;
-(void)addMessageToSendQueue:(id)arg1 ;
-(void)_prepareSendingMessage:(id)arg1 initialSendState:(unsigned long long)arg2 ;
-(BOOL)_shouldRetryMessageWithOfflineThreadingId:(id)arg1 ;
-(void)_retryMessageWithOfflineThreadingId:(id)arg1 shouldMoveToEndOfSendQueue:(BOOL)arg2 ;
-(void)retryQueuedMessagesForThreadKey:(id)arg1 ;
-(void)_moveMessageToEndOfSendQueue:(id)arg1 ;
-(void)_sendFirstPendingMessageInSameQueueAsMessageIfNecessary:(id)arg1 willSendAnnounceBlock:(/*^block*/id)arg2 willNotSendAnnounceBlock:(/*^block*/id)arg3 ;
-(void)_updateSendStateForMessage:(id)arg1 sendState:(unsigned long long)arg2 ;
-(void)removeMessageFromSendQueue:(id)arg1 ;
-(unsigned long long)_initialMessageSendStateAfterRestoration:(id)arg1 ;
-(void)_didSendMessage:(id)arg1 ;
-(BOOL)_isMessageSent:(id)arg1 ;
-(id)initWithGraphRequestRunner:(id)arg1 attachmentPreparer:(id)arg2 photoQualityPreparer:(id)arg3 attachmentContextProvider:(id)arg4 mqttSender:(id)arg5 extensionSender:(id)arg6 reachabilityAnnouncer:(id)arg7 sendStateStore:(id)arg8 sendQueueStore:(id)arg9 sendConfigurationFactory:(id)arg10 sendTimestampGenerator:(id)arg11 messageSendListener:(id)arg12 attachmentProgressListener:(id)arg13 analyticsLogger:(id)arg14 reliabilityLogger:(id)arg15 attachmentCleaner:(id)arg16 sendQueueDiskHandler:(id)arg17 requestCoordinatorListener:(id)arg18 clock:(id)arg19 queue:(id)arg20 ;
-(void)sendMessage:(id)arg1 ;
@end

