/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:52 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIScrollView.h>
#import <Facebook/FBVideoFilmstripViewGeometryDelegate.h>
#import <Facebook/FBVideoFilmstripFrameViewDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <Facebook/FBVideoFilmstripThumbnailStoreSource.h>
#import <Facebook/FBVideoFilmstripScrubGestureRecognizerDelegate.h>

@protocol FBVideoFilmstripViewDataSource, FBVideoFilmstripViewDelegate;
@class NSMutableDictionary, NSMutableSet, FBVideoFilmstripViewGeometry, FBVideoFilmstripThumbnailStore, FBVideoFilmstripScrubGestureRecognizer, UIImage, NSString;

@interface FBVideoFilmstripView : UIScrollView <FBVideoFilmstripViewGeometryDelegate, FBVideoFilmstripFrameViewDelegate, UIScrollViewDelegate, FBVideoFilmstripThumbnailStoreSource, FBVideoFilmstripScrubGestureRecognizerDelegate> {

	BOOL _dirtyDataSource;
	NSMutableDictionary* _stripViews;
	NSMutableSet* _recycledViews;
	FBVideoFilmstripViewGeometry* _geometry;
	FBVideoFilmstripThumbnailStore* _thumbnailStore;
	FBVideoFilmstripScrubGestureRecognizer* _scrubRecognizer;
	composerAudiencePickerFlags _scrollState;
	delegateFlag _filmDelegateMethods;
	BOOL _shouldRequestFramesDuringZoom;
	BOOL _shouldRequestFramesDuringScroll;
	BOOL _shouldCrossfadeFramesDuringZoom;
	BOOL _shouldCrossfadeFramesDuringScroll;
	id<FBVideoFilmstripViewDataSource> _filmDataSource;
	id<FBVideoFilmstripViewDelegate> _filmDelegate;

}

@property (assign,nonatomic,__weak) id<FBVideoFilmstripViewDataSource> filmDataSource;              //@synthesize filmDataSource=_filmDataSource - In the implementation block
@property (assign,nonatomic,__weak) id<FBVideoFilmstripViewDelegate> filmDelegate;                  //@synthesize filmDelegate=_filmDelegate - In the implementation block
@property (nonatomic,retain) UIImage * placeholderThumbnail; 
@property (nonatomic,readonly) double effectivePointsPerSecond; 
@property (nonatomic,readonly) unsigned long long zoomLevel; 
@property (assign,nonatomic) BOOL shouldRequestFramesDuringZoom;                                    //@synthesize shouldRequestFramesDuringZoom=_shouldRequestFramesDuringZoom - In the implementation block
@property (assign,nonatomic) BOOL shouldRequestFramesDuringScroll;                                  //@synthesize shouldRequestFramesDuringScroll=_shouldRequestFramesDuringScroll - In the implementation block
@property (assign,nonatomic) BOOL shouldCrossfadeFramesDuringZoom;                                  //@synthesize shouldCrossfadeFramesDuringZoom=_shouldCrossfadeFramesDuringZoom - In the implementation block
@property (assign,nonatomic) BOOL shouldCrossfadeFramesDuringScroll;                                //@synthesize shouldCrossfadeFramesDuringScroll=_shouldCrossfadeFramesDuringScroll - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setFilmDelegate:(id<FBVideoFilmstripViewDelegate>)arg1 ;
-(void)setFilmDataSource:(id<FBVideoFilmstripViewDataSource>)arg1 ;
-(BOOL)isShowingFrames;
-(BOOL)isCurrentlyZoomingFilmstrip;
-(SCD_Struct_FB311)timeRangeForBounds;
-(SCD_Struct_FB311)timeRangeForRect:(CGRect)arg1 ;
-(double)xPositionForTime:(SCD_Struct_FB257)arg1 ;
-(void)reloadFilmstrip;
-(CGRect)filmstripRect;
-(BOOL)zoomToLevel:(unsigned long long)arg1 atPoint:(CGPoint)arg2 duration:(double)arg3 ;
-(CGRect)filmstripRectForOffset:(double)arg1 ;
-(BOOL)moveFilmstripByOffset:(double)arg1 ;
-(void)resetThumbnailCache;
-(BOOL)videoFilmstripFrameViewShouldCrossfade:(id)arg1 ;
-(BOOL)scrubGestureRecognizerShouldBegin:(id)arg1 ;
-(/*^block*/id)thumbnailStore:(id)arg1 fetchThumbnailAtTime:(SCD_Struct_FB257)arg2 queue:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)_initFilmStripView;
-(void)_scrubRecognizerDidUpdate:(id)arg1 ;
-(void)_pushFilmstripState;
-(id<FBVideoFilmstripViewDataSource>)filmDataSource;
-(void)_updateStripContentSize;
-(BOOL)_shouldRequestFrames;
-(id)_getStripFrameViewForKey:(id)arg1 created:(BOOL*)arg2 ;
-(void)_recycleStripFrameViewForKey:(id)arg1 ;
-(BOOL)_isSemanticallyScrolling;
-(BOOL)shouldRequestFramesDuringScroll;
-(BOOL)shouldRequestFramesDuringZoom;
-(BOOL)shouldCrossfadeFramesDuringScroll;
-(BOOL)shouldCrossfadeFramesDuringZoom;
-(void)_recycleStripFrameView:(id)arg1 ;
-(id)_makeStripFrameView;
-(BOOL)_shouldCrossfadeFrames;
-(id<FBVideoFilmstripViewDelegate>)filmDelegate;
-(void)_requestPlaceholderFrames;
-(CGRect)_boundsForFilmstripOffset:(double)arg1 ;
-(CGRect)_filmstripRectForOriginX:(double)arg1 ;
-(BOOL)_computeTimesForHorizontalPoints:(const double*)arg1 count:(unsigned long long)arg2 into:(SCD_Struct_FB257*)arg3 ;
-(double)effectivePointsPerSecond;
-(void)_recycleStripFrameViews;
-(SCD_Struct_FB257)_scrubberTimeForGestureRecognizer:(id)arg1 ;
-(BOOL)zoomToLevel:(unsigned long long)arg1 atNormalizedValue:(double)arg2 duration:(double)arg3 ;
-(void)setShouldRequestFramesDuringZoom:(BOOL)arg1 ;
-(void)setShouldRequestFramesDuringScroll:(BOOL)arg1 ;
-(void)setShouldCrossfadeFramesDuringZoom:(BOOL)arg1 ;
-(void)setShouldCrossfadeFramesDuringScroll:(BOOL)arg1 ;
-(void)filmStripViewGeometryDidBeginZoom:(id)arg1 ;
-(void)filmStripViewGeometryDidUpdateState:(id)arg1 ;
-(void)filmStripViewGeometryDidZoom:(id)arg1 bounds:(CGRect)arg2 ;
-(void)filmStripViewGeometryDidFinishZoom:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)layoutSubviews;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewWillBeginDecelerating:(id)arg1 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(unsigned long long)zoomLevel;
-(UIImage *)placeholderThumbnail;
-(void)setPlaceholderThumbnail:(UIImage *)arg1 ;
@end

