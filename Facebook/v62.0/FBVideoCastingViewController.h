/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:36 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIViewController.h>
#import <Facebook/FBTVCastingPickerControllerDelegate.h>
#import <Facebook/FBTVCastingPlaybackEventListener.h>
#import <Facebook/FBScenePathHolding.h>

@protocol FBVideoPlaybackLoggingDataProvider, FBCancelable, FBVideoCastingViewControllerDelegate, FBTVCastingPlaybackControlling;
@class FBVideoViewManager, FBVideoViewManagerContext, FBMemFeedStory, FBUserSession, FBMemVideo, FBTVCastingPickerController, PABlurView, FBCastingVideoSpinnerView, FBTVCastingDropdownPickerView, FBNetworkImageView, UIView, UISlider, FBVideoPlaybackItem, FBCircularPlaybackControlButton, FBVideoPlaybackScrubberController, NSString;

@interface FBVideoCastingViewController : UIViewController <FBTVCastingPickerControllerDelegate, FBTVCastingPlaybackEventListener, FBScenePathHolding> {

	FBVideoViewManager* _viewManager;
	FBVideoViewManagerContext* _originalViewManagerContext;
	FBMemFeedStory* _story;
	FBUserSession* _session;
	FBMemVideo* _video;
	double _originalVideoCornerRadius;
	BOOL _originalVideoMasksToBounds;
	FBTVCastingPickerController* _castingPickerController;
	PABlurView* _videoBlurView;
	FBCastingVideoSpinnerView* _spinnerView;
	FBTVCastingDropdownPickerView* _pickerView;
	FBNetworkImageView* _thumbnailImageView;
	UIView* _playbackControlsContainerView;
	UISlider* _volumeSlider;
	FBVideoPlaybackItem* _playbackItem;
	id<FBVideoPlaybackLoggingDataProvider> _loggingProvider;
	FBCircularPlaybackControlButton* _playPauseButton;
	id<FBCancelable> _showPlayPauseButtonAfterConnectDispatch;
	FBVideoPlaybackScrubberController* _scrubberController;
	/*^block*/id _didPauseLocalPlaybackBlock;
	id<FBVideoCastingViewControllerDelegate> _delegate;
	id<FBTVCastingPlaybackControlling> _castingPlaybackController;

}

@property (assign,nonatomic,__weak) id<FBVideoCastingViewControllerDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) id<FBTVCastingPlaybackControlling> castingPlaybackController;              //@synthesize castingPlaybackController=_castingPlaybackController - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CGRect)videoFrame;
-(BOOL)isCasting;
-(BOOL)_shouldShowCastingButton;
-(void)_clearCastingState;
-(void)tvVideoPlaybackControllerIsReady:(id)arg1 ;
-(void)tvVideoPlaybackControllerDidStartPlayback:(id)arg1 ;
-(void)tvVideoPlaybackControllerDidPausePlayback:(id)arg1 ;
-(void)tvVideoPlaybackControllerDidFinishPlayback:(id)arg1 ;
-(void)tvVideoPlaybackController:(id)arg1 didFailWithError:(unsigned long long)arg2 ;
-(void)tvCastingPickerController:(id)arg1 didPickDeviceWithPlaybackController:(id)arg2 ;
-(void)tvCastingPickerControllerDidDisconnect:(id)arg1 ;
-(void)tvCastingPickerControllerDevicesAvailable:(id)arg1 ;
-(void)tvCastingPickerController:(id)arg1 didSwitchFromPlaybackController:(id)arg2 toPlaybackController:(id)arg3 ;
-(void)tvCastingPickerControllerDevicesNoLongerAvailable:(id)arg1 ;
-(void)_volumeChanged;
-(void)_enterCastingState;
-(void)_arrangeSubviewsAfterAnimation;
-(void)_updateCastingButtonsState;
-(void)_playPauseTapped;
-(id)initWithViewManager:(id)arg1 castingPlaybackController:(id)arg2 story:(id)arg3 video:(id)arg4 session:(id)arg5 ;
-(void)configureVideoViewForDisplay;
-(void)configureVideoViewForDismissal;
-(void)willPresent;
-(id<FBTVCastingPlaybackControlling>)castingPlaybackController;
-(void)setDelegate:(id<FBVideoCastingViewControllerDelegate>)arg1 ;
-(id<FBVideoCastingViewControllerDelegate>)delegate;
-(void)viewWillLayoutSubviews;
-(void)viewDidLoad;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(id)videoView;
@end

