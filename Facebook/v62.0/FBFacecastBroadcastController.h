/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:35 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBScenePathHolding.h>
#import <Facebook/FBFlvRolloverWriterDelegate.h>
#import <Facebook/FBVideoBroadcastSessionDelegate.h>
#import <Facebook/FBFacecastBroadcastManagerDelegate.h>
#import <Facebook/FBRtmpSessionDelegate.h>

@protocol FBFacecastBroadcastControllerDelegate, FBFacecastBroadcastControllerDataSource;
@class FBUserSession, FBFacecastBroadcasterConfig, FBFacecastBroadcastManager, NSString, FBRtmpSession, FBFacecastBroadcastUpdater, FBScenePath, FBFacecastBroadcastLogger;

@interface FBFacecastBroadcastController : NSObject <FBScenePathHolding, FBFlvRolloverWriterDelegate, FBVideoBroadcastSessionDelegate, FBFacecastBroadcastManagerDelegate, FBRtmpSessionDelegate> {

	FBUserSession* _userSession;
	FBFacecastBroadcasterConfig* _broadcasterConfig;
	FBFacecastBroadcastManager* _broadcastManager;
	BOOL _logBroadcastStatusInFlight;
	double _lastRecordedSpeedTest;
	double _viewLoadedTime;
	NSString* _broadcastID;
	FBRtmpSession* _liveWithSpeedTestRtmpSession;
	BOOL _didLastSpeedTestPass;
	BOOL _hasFinishedSpeedTest;
	id<FBFacecastBroadcastControllerDelegate> _delegate;
	id<FBFacecastBroadcastControllerDataSource> _dataSource;
	FBFacecastBroadcastUpdater* _broadcastUpdater;
	FBScenePath* _scenePath;
	FBFacecastBroadcastLogger* _logger;

}

@property (assign,nonatomic,__weak) id<FBFacecastBroadcastControllerDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<FBFacecastBroadcastControllerDataSource> dataSource;              //@synthesize dataSource=_dataSource - In the implementation block
@property (nonatomic,readonly) FBFacecastBroadcastUpdater * broadcastUpdater;                            //@synthesize broadcastUpdater=_broadcastUpdater - In the implementation block
@property (nonatomic,readonly) FBFacecastBroadcastManager * broadcastManager;                            //@synthesize broadcastManager=_broadcastManager - In the implementation block
@property (nonatomic,readonly) BOOL didLastSpeedTestPass;                                                //@synthesize didLastSpeedTestPass=_didLastSpeedTestPass - In the implementation block
@property (nonatomic,readonly) BOOL hasFinishedSpeedTest;                                                //@synthesize hasFinishedSpeedTest=_hasFinishedSpeedTest - In the implementation block
@property (nonatomic,retain) FBScenePath * scenePath;                                                    //@synthesize scenePath=_scenePath - In the implementation block
@property (getter=isReadyToBroadcast,nonatomic,readonly) BOOL readyToBroadcast; 
@property (nonatomic,readonly) FBFacecastBroadcastLogger * logger;                                       //@synthesize logger=_logger - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(FBScenePath *)scenePath;
-(void)setScenePath:(FBScenePath *)arg1 ;
-(id)initWithUserSession:(id)arg1 scenePath:(id)arg2 broadcasterConfig:(id)arg3 ;
-(void)_didFetchBroadcastWithResponse:(id)arg1 ;
-(void)_didFailToFetchBroadcastWithError:(id)arg1 ;
-(void)createOrUpdateConfigWithResponse:(id)arg1 ;
-(void)_setupSpeedTestTimeout;
-(BOOL)_isSpeedTestEnabled;
-(void)_speedTestTimeout;
-(void)_speedTestRetryTimeout;
-(void)_logBroadcastSpeedTestResult:(FBNetworkSpeedTestStatus)arg1 ;
-(BOOL)_didPassSpeedTest:(FBNetworkSpeedTestStatus)arg1 ;
-(void)_updateBroadcastWithChunkNumber:(int)arg1 data:(id)arg2 ;
-(void)_logAndHandleSpeedTestResult:(FBNetworkSpeedTestStatus)arg1 ;
-(void)_speedTestFailedWithoutStatus;
-(void)_speedTestFinishedWithStatus:(FBNetworkSpeedTestStatus)arg1 ;
-(void)_disconnectSpeedTestSession;
-(void)finishedWritingChunk:(id)arg1 chunkNumber:(int)arg2 ;
-(void)broadcastSessionDidStart:(id)arg1 withSpeedTestStatus:(FBNetworkSpeedTestStatus)arg2 ;
-(void)broadcastSessionDidFinish:(id)arg1 withResult:(id)arg2 ;
-(void)broadcastSessionDidChangeBitrate:(shared_ptr<FBVideoBroadcastSessionStats>*)arg1 ;
-(void)broadcastSessionDidFail:(id)arg1 withError:(id)arg2 ;
-(void)broadcastSessionDidLoseConnection:(id)arg1 withError:(id)arg2 ;
-(void)broadcastSessionSendDidTimeout:(id)arg1 ;
-(void)broadcastSession:(id)arg1 didDropPackets:(shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame> > >*)arg2 dropReason:(id)arg3 ;
-(void)broadcastSession:(id)arg1 completedSpeedTestWithStatus:(FBNetworkSpeedTestStatus)arg2 ;
-(void)broadcastSession:(id)arg1 didUpdateStreamingInfo:(compressed_pair<NSString *__strong *, std::__1::allocator<NSString *> >)arg2 ;
-(void)broadcastManager:(id)arg1 processedAudioOfCumulativeDuration:(double)arg2 ;
-(void)broadcastManagerDidAddOutputs:(id)arg1 ;
-(void)broadcastManager:(id)arg1 didOutputProcessedVideoSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)rtmpSessionDidStart:(id)arg1 withSpeedTestStatus:(FBNetworkSpeedTestStatus)arg2 ;
-(void)rtmpSessionDidFinish:(id)arg1 sendEndOfStreamError:(id)arg2 ;
-(void)rtmpSessionDidFail:(id)arg1 withError:(id)arg2 ;
-(void)rtmpSessionWillReconnect:(id)arg1 dueToError:(id)arg2 ;
-(void)rtmpSessionWriteDidTimeout:(id)arg1 ;
-(void)rtmpSession:(id)arg1 didDropPackets:(shared_ptr<std::__1::vector<FBDroppedFrame, std::__1::allocator<FBDroppedFrame> > >*)arg2 dropReason:(id)arg3 ;
-(void)rtmpSession:(id)arg1 completedSpeedTestWithStatus:(FBNetworkSpeedTestStatus)arg2 ;
-(void)rtmpSession:(id)arg1 didUpdateStreamingInfo:(compressed_pair<NSString *__strong *, std::__1::allocator<NSString *> >)arg2 ;
-(id)initWithUserSession:(id)arg1 broadcasterConfig:(id)arg2 ;
-(BOOL)isReadyToBroadcast;
-(void)didChangeVideoOrientation:(long long)arg1 ;
-(void)fetchBroadcastWithTargetID:(id)arg1 targetType:(unsigned long long)arg2 ;
-(void)logBroadcastStatusWithClientStatus:(id)arg1 ;
-(FBFacecastBroadcastUpdater *)broadcastUpdater;
-(FBFacecastBroadcastManager *)broadcastManager;
-(BOOL)didLastSpeedTestPass;
-(BOOL)hasFinishedSpeedTest;
-(void)setDataSource:(id<FBFacecastBroadcastControllerDataSource>)arg1 ;
-(void)setDelegate:(id<FBFacecastBroadcastControllerDelegate>)arg1 ;
-(id<FBFacecastBroadcastControllerDataSource>)dataSource;
-(id<FBFacecastBroadcastControllerDelegate>)delegate;
-(FBFacecastBroadcastLogger *)logger;
@end

