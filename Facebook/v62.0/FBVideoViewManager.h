/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:41 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBVideoPlaybackEventListener.h>
#import <Facebook/QuartzCorePlaceholderDelegate.h>
#import <Facebook/FBVideoOverlayPluginEventListener.h>

@class NSMutableDictionary, VideoContainerView, FBVideoPluginEventListenerAnnouncer, FBVideoPlaybackController, UIView, NSString;

@interface FBVideoViewManager : NSObject <FBVideoPlaybackEventListener, QuartzCorePlaceholderDelegate, FBVideoOverlayPluginEventListener> {

	NSMutableDictionary* _plugins;
	VideoContainerView* _videoContainerView;
	FBVideoPluginEventListenerAnnouncer* _announcer;
	BOOL _hideAllPlugins;
	BOOL _isOpening;
	BOOL _showShadowWhenInline;
	FBVideoPlaybackController* _videoController;
	unsigned long long _videoPlayerSource;

}

@property (nonatomic,readonly) UIView * videoContainerView;                            //@synthesize videoContainerView=_videoContainerView - In the implementation block
@property (nonatomic,retain) FBVideoPlaybackController * videoController;              //@synthesize videoController=_videoController - In the implementation block
@property (assign,nonatomic) unsigned long long videoPlayerSource;                     //@synthesize videoPlayerSource=_videoPlayerSource - In the implementation block
@property (assign,nonatomic) BOOL isOpening;                                           //@synthesize isOpening=_isOpening - In the implementation block
@property (assign,nonatomic) BOOL showShadowWhenInline;                                //@synthesize showShadowWhenInline=_showShadowWhenInline - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(CGRect)videoFrameForController:(id)arg1 withContainerSize:(CGSize)arg2 ;
-(id)initWithVideoPlaybackController:(id)arg1 ;
-(UIView *)videoContainerView;
-(void)addPlugin:(id)arg1 forKey:(id)arg2 ;
-(void)removePluginForKey:(id)arg1 ;
-(void)videoPlaybackController:(id)arg1 didChangeVideoPlaybackItem:(id)arg2 ;
-(void)videoPlaybackControllerDidRequestPlayback:(id)arg1 ;
-(void)videoPlaybackControllerDidStartPlayback:(id)arg1 ;
-(void)videoPlaybackControllerDidPausePlayback:(id)arg1 ;
-(void)videoPlaybackControllerDidFinishPlayback:(id)arg1 ;
-(void)videoPlaybackController:(id)arg1 didFailWithError:(id)arg2 ;
-(void)videoDidManuallyPause;
-(void)videoDidManuallyResume;
-(id)pluginForKey:(id)arg1 ;
-(void)setIsOpening:(BOOL)arg1 ;
-(BOOL)isOpening;
-(void)bringPluginToFrontForKey:(id)arg1 ;
-(void)restoreContext:(id)arg1 ;
-(void)setVideoPlayerSource:(unsigned long long)arg1 ;
-(void)setAllPluginsHidden:(BOOL)arg1 ;
-(void)setVideoPlayerSource:(unsigned long long)arg1 withExtra:(id)arg2 ;
-(void)setVideoPlayerSourceWithoutLogging:(unsigned long long)arg1 ;
-(void)addOrReplacePlugin:(id)arg1 forKey:(id)arg2 ;
-(void)restoreVideoPlayerSourceFromContext:(id)arg1 ;
-(unsigned long long)videoPlayerSource;
-(void)setShowShadowWhenInline:(BOOL)arg1 ;
-(void)restoreVideoGravityFromContext:(id)arg1 ;
-(void)setVideoPlayerSource:(unsigned long long)arg1 debugReason:(unsigned long long)arg2 ;
-(void)_updatePluginVisibility;
-(void)setVideoPlayerSource:(unsigned long long)arg1 shouldLog:(BOOL)arg2 ;
-(void)setVideoPlayerSource:(unsigned long long)arg1 shouldLog:(BOOL)arg2 debugReason:(unsigned long long)arg3 extra:(id)arg4 ;
-(void)_configShadowOfVideoContainerView;
-(void)restoreRespectHardwareMuteSwitchFromContext:(id)arg1 ;
-(void)restoreMuteStateFromContext:(id)arg1 ;
-(unsigned long long)_currentPlayerSourceVisibilityOption;
-(void)_updateAccessibilityIdentifierForState:(long long)arg1 ;
-(BOOL)showShadowWhenInline;
-(FBVideoPlaybackController *)videoController;
-(void)setVideoController:(FBVideoPlaybackController *)arg1 ;
-(id)currentContext;
@end

