/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:52 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <libobjc.A.dylib/AVAsynchronousKeyValueLoading.h>
#import <Facebook/FNFAVAsset.h>
#import <Facebook/FNFAVPlayerItem.h>
#import <Facebook/FNFAssetForPlayer.h>
#import <Facebook/FNFDataLoaderDelegate.h>
#import <Facebook/FNFInfoForLoopableAsset.h>
#import <Facebook/FNFAtomManagerDelegate.h>
#import <Facebook/FNFLiveAVPlayerAsset.h>

@protocol FNFDataLoader, FNFAtomManager, OS_dispatch_queue;
@class FNFAssetErrorLog, NSArray, NSError, NSObject, NSString, AVAudioMix;

@interface FNFMp4Asset : NSObject <AVAsynchronousKeyValueLoading, FNFAVAsset, FNFAVPlayerItem, FNFAssetForPlayer, FNFDataLoaderDelegate, FNFInfoForLoopableAsset, FNFAtomManagerDelegate, FNFLiveAVPlayerAsset> {

	/*^block*/id _assetLoadedHandler;
	id<FNFDataLoader> _dataLoader;
	id<FNFAtomManager> _atomManager;
	SCD_Struct_FB257 _playbackTime;
	SCD_Struct_FB257 _startingPlaybackTime;
	/*^block*/id _playerCheckForStallCallback;
	FNFAssetErrorLog* _errorLog;
	BOOL _hasFailed;
	BOOL _isStalled;
	NSArray* _loadedTimeRanges;
	NSError* _loadingError;
	double _stallBufferSizeInSeconds;
	double _unstallBufferSizeInSeconds;
	double _firstFetchSizeInSeconds;
	double _fetchBufferSizeInSeconds;
	double _fetchMultiplier;
	double _unstallMultiplier;
	BOOL _shouldShowBroadcasterInterruptedMessage;
	BOOL _sentStreamDryNotification;
	BOOL _assetLoaded;
	BOOL _waitingOnLoad;
	BOOL _async;
	NSObject*<OS_dispatch_queue> _dispatchQueue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long status; 
@property (nonatomic,copy,readonly) NSArray * loadedTimeRanges; 
@property (nonatomic,copy,readonly) id<FNFAVPlayerItemErrorLog> errorLog; 
@property (nonatomic,copy) AVAudioMix * audioMix; 
@property (nonatomic,readonly) SCD_Struct_FB257 maxBufferTime; 
@property (nonatomic,readonly) SCD_Struct_FB257 minBufferTime; 
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 bitrate:(unsigned long long)arg3 ;
-(double)nextLiveAudioTimestamp;
-(BOOL)seekToPosition:(SCD_Struct_FB257)arg1 ;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 bitrate:(unsigned long long)arg3 fetchBufferSizeInSeconds:(double)arg4 unstallBufferSizeInSeconds:(double)arg5 stallBufferSizeInSeconds:(double)arg6 firstFetchSizeInSeconds:(double)arg7 fetchBufferMultiplier:(double)arg8 unstallBufferMultiplier:(double)arg9 ;
-(opaqueCMFormatDescriptionRef)formatDesc;
-(AudioStreamBasicDescription)asbd;
-(BOOL)containsTrack:(long long)arg1 ;
-(void)addErrorToLog:(id)arg1 shouldStopPlayback:(BOOL)arg2 ;
-(BOOL)trackHasMoreFrames:(long long)arg1 ;
-(FNFFrameMetadata)currentFrameMetadataForTrack:(long long)arg1 ;
-(const char*)currentFrameDataForTrack:(long long)arg1 ;
-(void)advanceFrameForTrack:(long long)arg1 ;
-(void)updatePlaybackTime:(SCD_Struct_FB257)arg1 ;
-(BOOL)shouldPauseForStallingWithNextCheckCallback:(/*^block*/id)arg1 ;
-(BOOL)shouldRestartAfterStalling;
-(BOOL)shouldBufferVideoAsSoonAsPossible;
-(BOOL)shouldSeek;
-(void)resetAssetToBeginningIfNeeded;
-(void)playbackPauseRequested;
-(SCD_Struct_FB257)timeAfterSeek;
-(id)debugDetails;
-(SCD_Struct_FB257)maxBufferTime;
-(SCD_Struct_FB257)minBufferTime;
-(id)representationId;
-(void)requestTimeLoadedUpdate;
-(unsigned long long)timescale;
-(void)resetDataForSeekBack;
-(void)parsingDidFailWithError:(id)arg1 ;
-(id)dataBlockDistributorForTrack:(long long)arg1 ;
-(unsigned long long)currentOffsetForTrack:(long long)arg1 ;
-(void)loadingDidFailWithError:(id)arg1 ;
-(void)dataWasReceivedForTrack:(long long)arg1 andIsComplete:(BOOL)arg2 ;
-(void)_forTestingMakeSynchronous;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 bitrate:(unsigned long long)arg3 fetchBufferSizeInSeconds:(double)arg4 unstallBufferSizeInSeconds:(double)arg5 stallBufferSizeInSeconds:(double)arg6 firstFetchSizeInSeconds:(double)arg7 fetchBufferMultiplier:(double)arg8 unstallBufferMultiplier:(double)arg9 async:(BOOL)arg10 ;
-(void)_potentiallyStartRequest;
-(BOOL)_fullyDownloaded;
-(void)_seekDataLoaderToTime:(SCD_Struct_FB257)arg1 offset:(unsigned long long)arg2 shouldUpdateOffset:(BOOL)arg3 track:(long long)arg4 ;
-(float)_timeLoadedInSeconds;
-(void)_sendDryNotificationIfApplicable;
-(void)_sendUndryNotificationIfApplicable;
-(void)_updateTimeLoaded;
-(void)_potentiallyStartRequestForTrack:(long long)arg1 ;
-(id)initWithAtomManager:(id)arg1 dataLoader:(id)arg2 fetchBufferSizeInSeconds:(double)arg3 unstallBufferSizeInSeconds:(double)arg4 stallBufferSizeInSeconds:(double)arg5 firstFetchSizeInSeconds:(double)arg6 fetchBufferMultiplier:(double)arg7 unstallBufferMultiplier:(double)arg8 shouldShowBroadcastInterrupt:(BOOL)arg9 ;
-(void)dealloc;
-(NSString *)description;
-(SCD_Struct_FB257)duration;
-(id)asset;
-(long long)status;
-(void)cancelLoading;
-(AVAudioMix *)audioMix;
-(void)_handleError:(id)arg1 ;
-(id<FNFAVPlayerItemErrorLog>)errorLog;
-(void)addOutput:(id)arg1 ;
-(NSArray *)loadedTimeRanges;
-(CGAffineTransform)preferredTransform;
-(void)setAudioMix:(AVAudioMix *)arg1 ;
-(id)resourceLoader;
-(id)accessLog;
-(SCD_Struct_FB257)currentTime;
-(SCD_Struct_FB257)videoDuration;
-(id)tracksWithMediaType:(id)arg1 ;
-(long long)statusOfValueForKey:(id)arg1 error:(id*)arg2 ;
-(void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isPlaybackLikelyToKeepUp;
-(BOOL)isPlaybackBufferFull;
-(void)playbackStarted;
-(id)dispatchQueue;
@end

