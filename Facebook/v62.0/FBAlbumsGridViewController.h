/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:32 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIViewController.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <Facebook/FBPhotosGridViewControllerDelegate.h>
#import <Facebook/FBComposerPublisherStatusListener.h>
#import <Facebook/FBComposerPublicationProgressDisplayListener.h>
#import <Facebook/FBAlbumGridCellDelegate.h>
#import <Facebook/FBGraphQLConnectionSyncStoreListener.h>
#import <Facebook/FBMediaSetCoverPhotoDownloaderListener.h>
#import <Facebook/FBAlbumsViewControllerProtocol.h>
#import <Facebook/FBComposerFlowDelegate.h>
#import <UIKit/UICollectionViewDelegateFlowLayout.h>

@protocol FBAlbumDeletionProtocol, FBMediaContainerProtocol, FBComposerPublicationProgressDisplayer, FBGraphQLConnectionSyncStoreProtocol, FBGraphQLConnectionSyncStoreRequestProvider, FBMediaSetCoverPhotoDownloaderRequestProvider;
@class NSString, FBUserSession, FBMemAlbum, NSMutableArray, FBFullscreenSpinnerController, FBViewStateManagerPerfLogger, FBAnimationPerformanceLogger, UICollectionView, NSMutableDictionary, FBPublisherManager, UIView, FBComposerPublisherStatusEventFilter, UIAlertView, FBMediaSetCoverPhotoDownloader, UIImage, FBAlbumsGridViewTraits, NSArray, FBConnectionStoreViewStateManager;

@interface FBAlbumsGridViewController : UIViewController <UICollectionViewDataSource, UIAlertViewDelegate, FBPhotosGridViewControllerDelegate, FBComposerPublisherStatusListener, FBComposerPublicationProgressDisplayListener, FBAlbumGridCellDelegate, FBGraphQLConnectionSyncStoreListener, FBMediaSetCoverPhotoDownloaderListener, FBAlbumsViewControllerProtocol, FBComposerFlowDelegate, UICollectionViewDelegateFlowLayout> {

	FBMemAlbum* _toDeleteAlbum;
	NSMutableArray* _pendingChanges;
	id<FBAlbumDeletionProtocol> _deletionController;
	FBFullscreenSpinnerController* _spinnerController;
	FBViewStateManagerPerfLogger* _viewStateManagerSpinnerLogger;
	FBAnimationPerformanceLogger* _apTracker;
	NSString* _ownerFBID;
	id<FBMediaContainerProtocol> _specialContainer;
	UICollectionView* _gridView;
	NSMutableDictionary* _publisherEventFiltersByComposerSessionID;
	FBPublisherManager* _publisherManager;
	UIView* _overlayView;
	id<FBComposerPublicationProgressDisplayer> _createAlbumPublicationProgressDisplayer;
	FBComposerPublisherStatusEventFilter* _createAlbumPublishingEventFilter;
	BOOL _isDisplayingAddAlbum;
	UIAlertView* _deleteAlbumAlertView;
	CGSize _albumSize;
	id<FBGraphQLConnectionSyncStoreProtocol> _albumStore;
	id<FBGraphQLConnectionSyncStoreRequestProvider> _requestProvider;
	FBMediaSetCoverPhotoDownloader* _photosOfXCoverPhotoDownloader;
	id<FBMediaSetCoverPhotoDownloaderRequestProvider> _coverPhotoRequestProvider;
	UIImage* _imageForEmptyView;
	NSString* _titleForEmpty;
	NSString* _titleForError;
	FBAlbumsGridViewTraits* _traits;
	NSArray* _familyNonUserMembers;
	FBUserSession* _session;
	FBConnectionStoreViewStateManager* _viewStateManager;

}

@property (nonatomic,retain) FBUserSession * session;                                           //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) FBConnectionStoreViewStateManager * viewStateManager;              //@synthesize viewStateManager=_viewStateManager - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * ownerFBID;                                       //@synthesize ownerFBID=_ownerFBID - In the implementation block
-(void)startedPublishingPublisherData:(id)arg1 ;
-(void)attemptedPublicationOfPublisherData:(id)arg1 ;
-(void)failedPublishingPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)failedPublishingAndWaitingForRetryPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)terminallyFailedPublishingPublisherData:(id)arg1 withError:(id)arg2 ;
-(void)startedServerProcessingForUploadedPublication:(id)arg1 ;
-(void)successfullyPublishedPublisherData:(id)arg1 withResponse:(id)arg2 ;
-(void)cancelledPublishingPublisherData:(id)arg1 ;
-(void)pausedPublishingPublisherData:(id)arg1 ;
-(void)retriedPublishingPublisherData:(id)arg1 ;
-(void)startedWaitingForConnectivityForPublicationOfPublisherData:(id)arg1 ;
-(void)scheduledPublicationOfPublisherData:(id)arg1 atDate:(id)arg2 ;
-(void)publicationProgressedWithProgress:(double)arg1 forPublisherData:(id)arg2 ;
-(void)startedUploadingItemOfType:(int)arg1 withThumbnailImage:(id)arg2 forPublisherData:(id)arg3 ;
-(void)canCancelPublishingOfPublisherData:(id)arg1 ;
-(void)cannotCancelPublishingOfPublisherData:(id)arg1 ;
-(id)analyticsModule;
-(FBConnectionStoreViewStateManager *)viewStateManager;
-(void)composerCompletedWithResult:(id)arg1 ;
-(NSString *)ownerFBID;
-(BOOL)analyticsRequiresNetworkContent;
-(void)_dismissPublicationProgressDisplay;
-(void)cancelButtonTappedForPublisherData:(id)arg1 withReason:(id)arg2 ;
-(void)dismissButtonTappedForPublisherData:(id)arg1 ;
-(void)retryButtonTappedForPublisherData:(id)arg1 ;
-(void)uploadViewUpdatedForCancellationOfPublicationForPublisherData:(id)arg1 ;
-(void)uploadViewUpdatedForTerminalFailureOfPublicationForPublisherData:(id)arg1 ;
-(void)uploadViewUpdatedForTransientFailureOfPublicationForPublisherData:(id)arg1 ;
-(void)uploadViewUpdatedForSuccessOfPublicationForPublisherData:(id)arg1 response:(id)arg2 ;
-(void)setViewStateManager:(FBConnectionStoreViewStateManager *)arg1 ;
-(id)initWithOwner:(id)arg1 specialContainer:(id)arg2 session:(id)arg3 ;
-(void)connectionSyncStore:(id)arg1 didAddNodesAtIndexes:(id)arg2 ;
-(void)connectionSyncStore:(id)arg1 didUpdateNodesAtIndexes:(id)arg2 ;
-(void)connectionSyncStore:(id)arg1 didRemoveNodesAtIndexes:(id)arg2 ;
-(BOOL)analyticsHasCachedNetworkContent;
-(void)deleteAlbumWithCell:(id)arg1 ;
-(BOOL)_isDisplayingAddAlbum;
-(id)initWithOwner:(id)arg1 specialContainer:(id)arg2 session:(id)arg3 albumSize:(CGSize)arg4 imageForEmptyView:(id)arg5 titleForEmpty:(id)arg6 titleForError:(id)arg7 traits:(id)arg8 ;
-(void)_unregisterAsListener;
-(void)_syncAlbums:(/*^block*/id)arg1 forceRefresh:(BOOL)arg2 ;
-(long long)_specialItemCount;
-(id)_mediaContainerForIndex:(long long)arg1 ;
-(void)_publisherDidFinishUploadingPublisherData:(id)arg1 shouldUpdate:(BOOL)arg2 ;
-(id)_specialMediaContainerForIndex:(long long)arg1 ;
-(void)mediaSetCoverPhotoDownloader:(id)arg1 didDownloadPhoto:(id)arg2 ;
-(void)_showPublicationWithIdentifier:(id)arg1 ;
-(void)composerFinishedPublishingWithResponse:(id)arg1 ;
-(void)showAddAlbumView:(id)arg1 ;
-(void)_handleFamilyNonUserMembers:(id)arg1 ;
-(void)_appDidEnterBackground;
-(void)photosGridViewController:(id)arg1 hasStartedDisplayingPublicationOfPublisherData:(id)arg2 ;
-(id)_convertToindexPathsFromIndexSet:(id)arg1 ;
-(void)photosGridViewControllerDidDeletePhotos:(id)arg1 ;
-(void)photosGridViewController:(id)arg1 didSelectPhoto:(id)arg2 photoView:(id)arg3 ;
-(void)dealloc;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInCollectionView:(id)arg1 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3 ;
-(unsigned long long)supportedInterfaceOrientations;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)viewDidLayoutSubviews;
-(void)setEditing:(BOOL)arg1 animated:(BOOL)arg2 ;
-(long long)preferredInterfaceOrientationForPresentation;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(FBUserSession *)session;
-(void)setSession:(FBUserSession *)arg1 ;
@end

