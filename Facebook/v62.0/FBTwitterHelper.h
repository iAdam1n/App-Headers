/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:38 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/FBServiceAuthHelper.h>

@interface FBTwitterHelper : FBServiceAuthHelper {

	long long _charactersPerMedia;
	long long _shortURLLength;
	long long _shortURLLengthHttps;
	long long _photoSizeLimit;

}

@property (assign,nonatomic) long long charactersPerMedia;               //@synthesize charactersPerMedia=_charactersPerMedia - In the implementation block
@property (assign,nonatomic) long long shortURLLength;                   //@synthesize shortURLLength=_shortURLLength - In the implementation block
@property (assign,nonatomic) long long shortURLLengthHttps;              //@synthesize shortURLLengthHttps=_shortURLLengthHttps - In the implementation block
@property (assign,nonatomic) long long photoSizeLimit;                   //@synthesize photoSizeLimit=_photoSizeLimit - In the implementation block
-(id)loginErrorMessageForError:(id)arg1 data:(id)arg2 ;
-(id)oAuthAuthorizeEndpointWithRequestToken:(id)arg1 consumer:(id)arg2 ;
-(id)extraParamsForOAuthAccessTokenRequestWithRedirectURLParameters:(id)arg1 consumer:(id)arg2 ;
-(long long)maxUsernameLength;
-(long long)shortURLLength;
-(long long)maxPostLength;
-(long long)maxMediaPerUpload;
-(long long)charactersPerMedia;
-(id)initWithSession:(id)arg1 serviceID:(id)arg2 ;
-(void)_refreshConfigAsync;
-(id)_oAuthAuthorizeEndpoint;
-(long long)shortURLLengthHttps;
-(long long)photoSizeLimit;
-(id)_oAuthRequestTokenEndpoint;
-(id)_oAuthCallbackURI;
-(id)_oAuthAccessTokenEndpoint;
-(id)_cookieURLString;
-(id)_parseResponseBody:(id)arg1 ;
-(void)setCharactersPerMedia:(long long)arg1 ;
-(void)setShortURLLength:(long long)arg1 ;
-(void)setShortURLLengthHttps:(long long)arg1 ;
-(void)setPhotoSizeLimit:(long long)arg1 ;
-(id)serviceName;
-(unsigned long long)type;
-(id)logo;
-(id)serviceID;
-(unsigned long long)authType;
@end

