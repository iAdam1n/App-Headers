/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:31 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBGraphQLConnectionControllerListener.h>
#import <Facebook/FBStreamListener.h>
#import <Facebook/FBGraphQLConnectionControllerLoadListener.h>
#import <Facebook/FBGraphQLConnectionControllerNetworkListener.h>
#import <Facebook/FBInvalidating.h>

@protocol FBMemFeedFetchControllerDelegate;
@class FBGraphQLConnectionController, FBFlattenedArrayController, FBMemFeedFetchControllerListenerAnnouncer, FBFeedFetchControllerQueue, NSString;

@interface FBMemFeedFetchController : NSObject <FBGraphQLConnectionControllerListener, FBStreamListener, FBGraphQLConnectionControllerLoadListener, FBGraphQLConnectionControllerNetworkListener, FBInvalidating> {

	FBGraphQLConnectionController* _connection;
	FBFlattenedArrayController* _models;
	BOOL _isBootstrapped;
	BOOL _shouldShowHeadStreamLoadGap;
	FBMemFeedFetchControllerListenerAnnouncer* _announcer;
	FBFeedFetchControllerQueue* _fetchControllerQueue;
	BOOL _valid;
	BOOL _isRestoringPersistedState;
	id<FBMemFeedFetchControllerDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<FBMemFeedFetchControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL isRestoringPersistedState;                                  //@synthesize isRestoringPersistedState=_isRestoringPersistedState - In the implementation block
@property (assign,nonatomic) BOOL allowUpdates; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isValid,nonatomic,readonly) BOOL valid;                                       //@synthesize valid=_valid - In the implementation block
-(void)graphQLConnectionControllerDidFinishAttemptingToRestoreFirstPersistedPage:(id)arg1 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byInsertingChunkAtIndex:(unsigned long long)arg3 userInfo:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byRemovingChunksAtIndexes:(id)arg3 userInfo:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byMergingChunkAtIndexWithPrecedingChunk:(unsigned long long)arg3 userInfo:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byInsertingEdgesAtIndexPaths:(id)arg3 userInfo:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byRemovingEdgesAtIndexPaths:(id)arg3 deletionReason:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byUpdatingEdgesAtIndexPaths:(id)arg3 userInfo:(id)arg4 ;
-(void)graphQLConnectionController:(id)arg1 didModifyPreviousState:(id)arg2 byUpdatingLocations:(id)arg3 userInfo:(id)arg4 ;
-(void)stream:(id)arg1 didFinishLoading:(unsigned long long)arg2 withResults:(id)arg3 requestAnalyticsUUID:(id)arg4 ;
-(void)stream:(id)arg1 didCancelLoading:(unsigned long long)arg2 requestAnalyticsUUID:(id)arg3 ;
-(void)graphQLConnectionController:(id)arg1 didBeginLoad:(id)arg2 ;
-(void)graphQLConnectionController:(id)arg1 didCompleteLoad:(id)arg2 ;
-(unsigned long long)numberOfEdges;
-(void)graphQLConnectionController:(id)arg1 didReceiveEdgesFromNetworkLoad:(id)arg2 ;
-(void)graphQLConnectionController:(id)arg1 didLoadEdgesFromNetworkLoad:(id)arg2 ;
-(BOOL)isRestoringPersistedState;
-(id)initWithConnection:(id)arg1 graphQLPagedDownloadingAnnouncingInterface:(id)arg2 ;
-(void)setAllowUpdates:(BOOL)arg1 ;
-(void)beginTrackingStore;
-(void)_bootstrap;
-(BOOL)_shouldShowLoadingGapFromStreamContext:(id)arg1 ;
-(void)_emitChange:(vector<FBFlattenedArrayControllerChange, std::__1::allocator<FBFlattenedArrayControllerChange> >*)arg1 shouldShowLoadingGap:(BOOL)arg2 source:(id)arg3 ;
-(void)_cleanUpHeadStreamLoadInCaseOfFailure:(unsigned long long)arg1 ;
-(BOOL)allowUpdates;
-(id)edgeAtIndex:(unsigned long long)arg1 ;
-(BOOL)anyEdgeInIndexesWouldBeDeletedOnPruning:(id)arg1 ;
-(BOOL)performFetchForNextPage;
-(void)setDelegate:(id<FBMemFeedFetchControllerDelegate>)arg1 ;
-(id<FBMemFeedFetchControllerDelegate>)delegate;
-(void)invalidate;
-(BOOL)isValid;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
@end

