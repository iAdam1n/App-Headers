/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/SBAssetDeleterDelegate.h>
#import <Facebook/FBInvalidating.h>
#import <Facebook/FBMediaUploadCache.h>
#import <Facebook/FBAppService.h>

@protocol OS_dispatch_queue;
@class FBUserSession, SBSyncPolicyManager, ALAssetsLibrary, FBAnalytics, SBSyncStatusNotifier, SBBatteryLevelMonitor, SBSyncOperation, NSMutableDictionary, SBMomentsAppDataSource, NSObject, SBSyncPreferences, SBSyncStore, SBCancelableBlockHandle, NSDate, SBSyncServiceData, SBAssetsIndexer, NSString;

@interface SBSyncService : NSObject <SBAssetDeleterDelegate, FBInvalidating, FBMediaUploadCache, FBAppService> {

	BOOL _invalidated;
	BOOL _canQueryExistingDevice;
	BOOL _started;
	BOOL _paused;
	BOOL _shouldRestart;
	FBUserSession* _session;
	SBSyncPolicyManager* _syncPolicyManager;
	ALAssetsLibrary* _library;
	FBAnalytics* _analytics;
	SBSyncStatusNotifier* _notifier;
	SBBatteryLevelMonitor* _batteryLevelMonitor;
	SBSyncOperation* _runningSyncOperation;
	NSMutableDictionary* _assetDeleters;
	unsigned long long _backgroundTaskID;
	id _appForegroundObserver;
	id _appBackgroundObserver;
	SBMomentsAppDataSource* _momentsAppDataSource;
	NSObject*<OS_dispatch_queue> _queue;
	SBSyncPreferences* _preferences;
	SBSyncStore* _store;
	SBCancelableBlockHandle* _localDeleteNotificationBlockHandle;
	SBCancelableBlockHandle* _performDelayedSyncOperationBlockHandle;
	NSDate* _backgroundTaskStartDate;
	SBSyncServiceData* _syncServiceData;
	SBAssetsIndexer* _indexer;

}

@property (nonatomic,retain) SBSyncOperation * runningSyncOperation;                                        //@synthesize runningSyncOperation=_runningSyncOperation - In the implementation block
@property (nonatomic,retain) SBCancelableBlockHandle * localDeleteNotificationBlockHandle;                  //@synthesize localDeleteNotificationBlockHandle=_localDeleteNotificationBlockHandle - In the implementation block
@property (nonatomic,retain) SBCancelableBlockHandle * performDelayedSyncOperationBlockHandle;              //@synthesize performDelayedSyncOperationBlockHandle=_performDelayedSyncOperationBlockHandle - In the implementation block
@property (nonatomic,retain) NSDate * backgroundTaskStartDate;                                              //@synthesize backgroundTaskStartDate=_backgroundTaskStartDate - In the implementation block
@property (nonatomic,retain,readonly) SBSyncServiceData * syncServiceData;                                  //@synthesize syncServiceData=_syncServiceData - In the implementation block
@property (nonatomic,retain,readonly) SBAssetsIndexer * indexer;                                            //@synthesize indexer=_indexer - In the implementation block
@property (readonly) BOOL isRunning; 
@property (nonatomic,readonly) SBSyncPreferences * preferences;                                             //@synthesize preferences=_preferences - In the implementation block
@property (nonatomic,readonly) FBUserSession * session;                                                     //@synthesize session=_session - In the implementation block
@property (nonatomic,readonly) SBMomentsAppDataSource * momentsAppDataSource;                               //@synthesize momentsAppDataSource=_momentsAppDataSource - In the implementation block
@property (nonatomic,readonly) SBSyncStore * store;                                                         //@synthesize store=_store - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isValid,nonatomic,readonly) BOOL valid; 
+(id)syncOperationParametersForSyncServiceData:(id)arg1 syncPreferences:(id)arg2 syncStore:(id)arg3 ;
-(void)startAppService;
-(void)stopAppService;
-(void)signalAppServiceToHandleInitialSessionIdle_DEPRECATED;
-(SBMomentsAppDataSource *)momentsAppDataSource;
-(void)refreshDeletedStateFromServerForAssetInfos:(id)arg1 ;
-(id)currentStatusInfo;
-(SBSyncServiceData *)syncServiceData;
-(void)openStoreAndIndexerWithCompletionBlock:(/*^block*/id)arg1 failureBlock:(/*^block*/id)arg2 ;
-(BOOL)shouldWarnUserToPlugInForSyncing;
-(void)syncNow;
-(void)markAssetAsDeletedFromLocalStorage:(id)arg1 ;
-(void)removeAssetFromSync:(id)arg1 completion:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(void)setSyncOlderAssets:(BOOL)arg1 ;
-(id)lastQuotaInfo;
-(void)persistQuotaInfo:(id)arg1 ;
-(void)logSyncPreferences;
-(void)logNUXEvent:(id)arg1 extraData:(id)arg2 ;
-(void)deleter:(id)arg1 failedWithError:(id)arg2 forAssetInfo:(id)arg3 ;
-(void)deleter:(id)arg1 succeededWithAssetInfo:(id)arg2 ;
-(id)initWithSession:(id)arg1 store:(id)arg2 assetsIndexer:(id)arg3 syncPolicyManager:(id)arg4 syncServiceData:(id)arg5 preferences:(id)arg6 batteryLevelMonitor:(id)arg7 analytics:(id)arg8 userDefaults:(id)arg9 ;
-(void)_startWithFailureBlock:(/*^block*/id)arg1 ;
-(void)_performSyncOperation;
-(void)_setupDeviceIfNecessaryWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)_setupAppStateObservers;
-(void)setPerformDelayedSyncOperationBlockHandle:(SBCancelableBlockHandle *)arg1 ;
-(void)_performForcedSyncOperation;
-(void)_resetSyncOlderAssetsTimestamps;
-(void)_postAssetRemovalNotification;
-(void)setLocalDeleteNotificationBlockHandle:(SBCancelableBlockHandle *)arg1 ;
-(void)_removeAssetDeleterAndResumeSyncIfNeeded:(id)arg1 withKey:(id)arg2 ;
-(void)_queryForExistingDeviceWithCompletion:(/*^block*/id)arg1 ;
-(id)_deviceIdentifier;
-(id)_vaultDeviceFromResponse:(id)arg1 ;
-(void)_onDeviceCreationFailure:(id)arg1 ;
-(void)_postSyncFailureNotification;
-(void)_scheduleDelayedSyncOperation:(double)arg1 ;
-(void)_resetSyncOperation;
-(void)setRunningSyncOperation:(SBSyncOperation *)arg1 ;
-(void)setBackgroundTaskStartDate:(NSDate *)arg1 ;
-(void)_applicationWillEnterBackground:(id)arg1 ;
-(void)fetchFBIDForAssetURL:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)disableQueryExistingDevice;
-(void)forceSyncNow;
-(void)logConfirmDisableSyncWithStatus:(id)arg1 ;
-(SBSyncOperation *)runningSyncOperation;
-(SBCancelableBlockHandle *)localDeleteNotificationBlockHandle;
-(SBCancelableBlockHandle *)performDelayedSyncOperationBlockHandle;
-(NSDate *)backgroundTaskStartDate;
-(SBSyncStore *)store;
-(BOOL)enabled;
-(void)dealloc;
-(void)invalidate;
-(void)_endBackgroundTask:(id)arg1 ;
-(BOOL)isValid;
-(void)setEnabled:(BOOL)arg1 ;
-(void)stop;
-(void)resume;
-(SBSyncPreferences *)preferences;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(BOOL)isRunning;
-(void)pause;
-(void)_resetState;
-(id)initWithSession:(id)arg1 ;
-(FBUserSession *)session;
-(BOOL)started;
-(SBAssetsIndexer *)indexer;
@end

