/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:49 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/ASImageNode.h>

@protocol ASImageCacheProtocolASImageCacheProtocolDeprecated, ASImageDownloaderProtocolASImageDownloaderProtocolDeprecated, ASMultiplexImageNodeDelegate, ASMultiplexImageNodeDataSource;
@class NSArray, NSOperation, PHImageManager;

@interface ASMultiplexImageNode : ASImageNode {

	id<ASImageCacheProtocol><ASImageCacheProtocolDeprecated> _cache;
	id<ASImageDownloaderProtocol><ASImageDownloaderProtocolDeprecated> _downloader;
	id<ASMultiplexImageNodeDelegate> _delegate;
	struct {
		unsigned downloadStart : 1;
		unsigned downloadProgress : 1;
		unsigned downloadFinish : 1;
		unsigned updatedImageDisplayFinish : 1;
		unsigned updatedImage : 1;
		unsigned displayFinish : 1;
	}  _delegateFlags;
	id<ASMultiplexImageNodeDataSource> _dataSource;
	struct {
		unsigned image : 1;
		unsigned URL : 1;
		unsigned asset : 1;
	}  _dataSourceFlags;
	BOOL _downloadsIntermediateImages;
	Mutex _imageIdentifiersLock;
	NSArray* _imageIdentifiers;
	id _loadedImageIdentifier;
	id _loadingImageIdentifier;
	id _displayedImageIdentifier;
	NSOperation* _phImageRequestOperation;
	RecursiveMutex _downloadIdentifierLock;
	id _downloadIdentifier;
	RecursiveMutex _propertyLock;
	BOOL _shouldRenderProgressImages;
	BOOL _downloaderSupportsNewProtocol;
	BOOL _downloaderImplementsSetProgress;
	BOOL _downloaderImplementsSetPriority;
	BOOL _cacheSupportsNewProtocol;
	BOOL _cacheSupportsClearing;
	PHImageManager* _imageManager;

}

@property (nonatomic,copy) id loadedImageIdentifier;                                            //@synthesize loadedImageIdentifier=_loadedImageIdentifier - In the implementation block
@property (nonatomic,copy) id loadingImageIdentifier;                                           //@synthesize loadingImageIdentifier=_loadingImageIdentifier - In the implementation block
@property (assign,nonatomic,__weak) id<ASMultiplexImageNodeDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<ASMultiplexImageNodeDataSource> dataSource;              //@synthesize dataSource=_dataSource - In the implementation block
@property (assign,nonatomic) BOOL downloadsIntermediateImages;                                  //@synthesize downloadsIntermediateImages=_downloadsIntermediateImages - In the implementation block
@property (nonatomic,copy) NSArray * imageIdentifiers; 
@property (nonatomic,readonly) id<NSCopying><NSObject> displayedImageIdentifier;                //@synthesize displayedImageIdentifier=_displayedImageIdentifier - In the implementation block
@property (assign,nonatomic) BOOL shouldRenderProgressImages; 
@property (nonatomic,retain) PHImageManager * imageManager;                                     //@synthesize imageManager=_imageManager - In the implementation block
-(void)_staticInitialize;
-(id)initWithImageDownloader:(id)arg1 ;
-(void)_clearImage;
-(id)initWithCache:(id)arg1 downloader:(id)arg2 ;
-(void)setImageIdentifiers:(NSArray *)arg1 ;
-(NSArray *)imageIdentifiers;
-(id<NSCopying><NSObject>)displayedImageIdentifier;
-(void)displayWillStart;
-(void)displayDidFinish;
-(void)clearContents;
-(void)_setDisplayedImageIdentifier:(id)arg1 withImage:(id)arg2 ;
-(void)_setDownloadIdentifier:(id)arg1 ;
-(id)loadedImageIdentifier;
-(void)_loadImageIdentifiers;
-(id)_bestImmediatelyAvailableImageFromDataSource:(id*)arg1 ;
-(void)_finishedLoadingImage:(id)arg1 forIdentifier:(id)arg2 error:(id)arg3 ;
-(id)_nextImageIdentifierToDownload;
-(void)setLoadingImageIdentifier:(id)arg1 ;
-(id)loadingImageIdentifier;
-(void)_loadALAssetWithIdentifier:(id)arg1 URL:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_loadPHAssetWithRequest:(id)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_downloadImageWithIdentifier:(id)arg1 URL:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_fetchImageWithIdentifierFromCache:(id)arg1 URL:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setLoadedImageIdentifier:(id)arg1 ;
-(void)_loadNextImage;
-(void)reloadImageIdentifierSources;
-(BOOL)downloadsIntermediateImages;
-(void)setDownloadsIntermediateImages:(BOOL)arg1 ;
-(void)_updateProgressImageBlockOnDownloaderIfNeeded;
-(void)visibleStateDidChange:(BOOL)arg1 ;
-(void)clearFetchedData;
-(void)setShouldRenderProgressImages:(BOOL)arg1 ;
-(BOOL)shouldRenderProgressImages;
-(BOOL)placeholderShouldPersist;
-(void)setDataSource:(id<ASMultiplexImageNodeDataSource>)arg1 ;
-(void)setDelegate:(id<ASMultiplexImageNodeDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<ASMultiplexImageNodeDataSource>)dataSource;
-(id<ASMultiplexImageNodeDelegate>)delegate;
-(void)fetchData;
-(void)setImageManager:(PHImageManager *)arg1 ;
-(PHImageManager *)imageManager;
@end

