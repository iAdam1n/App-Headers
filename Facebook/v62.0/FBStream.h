/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:44 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/FBPollingDelegate.h>
#import <Facebook/FBStreamLoadDelegate.h>

@protocol FBScenePathProviding;
@class FBStreamConfiguration, FBStreamPagingInfo, NSMutableDictionary, FBUserSession, NSString, FBScenePath, NSError, FBStreamAnalytics;

@interface FBStream : NSObject <FBPollingDelegate, FBStreamLoadDelegate> {

	FBStreamConfiguration* _configuration;
	BOOL _shouldRestartStreamingOnForeground;
	id<FBScenePathProviding> _scenePathProvider;
	FBStreamPagingInfo* _cachedPagingInfo;
	NSMutableDictionary* _errors;
	NSMutableDictionary* _streamLoads;
	BOOL _canLoadTail;
	BOOL _canLoadHead;
	BOOL _streamAsNeckLoad;
	BOOL _enabled;
	BOOL _loadingHead;
	BOOL _loadingTail;
	FBUserSession* _session;
	NSString* _targetID;

}

@property (assign,nonatomic) BOOL loadingHead;                                     //@synthesize loadingHead=_loadingHead - In the implementation block
@property (assign,nonatomic) BOOL loadingTail;                                     //@synthesize loadingTail=_loadingTail - In the implementation block
@property (assign,nonatomic) BOOL canLoadHead;                                     //@synthesize canLoadHead=_canLoadHead - In the implementation block
@property (assign,nonatomic) BOOL canLoadTail;                                     //@synthesize canLoadTail=_canLoadTail - In the implementation block
@property (nonatomic,readonly) FBStreamConfiguration * configuration;              //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) FBUserSession * session;                            //@synthesize session=_session - In the implementation block
@property (nonatomic,readonly) FBScenePath * scenePath; 
@property (nonatomic,readonly) BOOL loading; 
@property (nonatomic,readonly) BOOL loadingInitial; 
@property (nonatomic,readonly) NSError * lastHeadLoadError; 
@property (nonatomic,readonly) NSError * lastTailLoadError; 
@property (assign,nonatomic) BOOL streamAsNeckLoad;                                //@synthesize streamAsNeckLoad=_streamAsNeckLoad - In the implementation block
@property (nonatomic,copy,readonly) NSString * targetID;                           //@synthesize targetID=_targetID - In the implementation block
@property (readonly) FBStreamAnalytics * analytics; 
@property (assign,nonatomic) BOOL enabled;                                         //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic) double refreshInterval; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)isTailishLoadType:(unsigned long long)arg1 ;
+(BOOL)isHeadishLoadType:(unsigned long long)arg1 ;
+(void)enumerateLoadTypesUsingBlock:(/*^block*/id)arg1 ;
-(FBScenePath *)scenePath;
-(BOOL)loadingHead;
-(void)loadTail;
-(void)_applicationDidFinishEnteringForegroundAndIsNowIdle:(id)arg1 ;
-(void)startStreaming;
-(void)loadHead;
-(BOOL)canLoadHead;
-(BOOL)canLoadTail;
-(void)streamLoadResponseHandlerWillProcessResponseWithLoadType:(unsigned long long)arg1 loadRequestUUID:(id)arg2 loadRequestPriority:(long long)arg3 responseUUID:(id)arg4 responseStatus:(id)arg5 timestamp:(double)arg6 currentResponseChunkIndex:(unsigned long long)arg7 expectedResponseChunks:(unsigned long long)arg8 ;
-(void)streamLoadResponseHandlerDidProcessResponseWithLoadType:(unsigned long long)arg1 loadRequestUUID:(id)arg2 loadRequestPriority:(long long)arg3 rawResponse:(id)arg4 responseUUID:(id)arg5 responseStatus:(id)arg6 timestamp:(double)arg7 responseChunkResults:(id)arg8 expectedResponseChunks:(unsigned long long)arg9 userInfo:(id)arg10 ;
-(void)streamLoadDidEnqueueDownloadRequestWithBeforeCursor:(id)arg1 afterCursor:(id)arg2 analyticsUUID:(id)arg3 refreshMode:(unsigned long long)arg4 userInfo:(id)arg5 ;
-(void)streamLoadDidStartDownloadRequestWithBeforeCursor:(id)arg1 afterCursor:(id)arg2 retryCount:(unsigned long long)arg3 analyticsUUID:(id)arg4 ;
-(void)streamLoadDidCancelDownloadRequestWithAnalyticsUUID:(id)arg1 ;
-(void)streamLoadDidReceiveSuccessfulResponseForDownloadRequestWithAnalyticsUUID:(id)arg1 ;
-(void)streamLoadDidReceiveFailingResponseForDownloadRequestWithAnalyticsUUID:(id)arg1 error:(id)arg2 status:(id)arg3 userInfo:(id)arg4 ;
-(id)initWithStreamConfiguration:(id)arg1 ;
-(void)loadHeadWithRefreshMode:(unsigned long long)arg1 userInfo:(id)arg2 ;
-(BOOL)loadingTail;
-(void)pollingSourceDidFire:(id)arg1 ;
-(id)resetPagingInfo;
-(NSError *)lastHeadLoadError;
-(BOOL)loadingInitial;
-(NSError *)lastTailLoadError;
-(BOOL)_canLoad:(unsigned long long)arg1 ;
-(void)loadNeck;
-(void)setCanLoadTail:(BOOL)arg1 ;
-(void)_cancelRequestsAndResetLoadState;
-(FBStreamAnalytics *)analytics;
-(void)setStreamAsNeckLoad:(BOOL)arg1 ;
-(BOOL)_getHeadPaginationInfo:(id)arg1 ;
-(void)_loadHeadIfPollingTimerIsOverdue;
-(BOOL)_streamLoadExistsForLoadType:(unsigned long long)arg1 ;
-(id)_lastErrorForLoadType:(unsigned long long)arg1 ;
-(id)_streamLoadForLoadType:(unsigned long long)arg1 ;
-(BOOL)streamAsNeckLoad;
-(BOOL)_automaticNeckLoadEnabled;
-(BOOL)_nextPollingSourceFireDateIsInFuture;
-(void)_setLoadInfo:(id)arg1 streamLoadType:(unsigned long long)arg2 ;
-(id)_sortResults:(id)arg1 streamLoadType:(unsigned long long)arg2 ;
-(void)_setLastError:(id)arg1 forLoadType:(unsigned long long)arg2 ;
-(void)_setStreamLoad:(id)arg1 forLoadType:(unsigned long long)arg2 ;
-(void)_load:(unsigned long long)arg1 refreshMode:(unsigned long long)arg2 userInfo:(id)arg3 ;
-(id)_pagingInfo;
-(void)setCanLoadHead:(BOOL)arg1 ;
-(id)_streamLoadForLoadType:(unsigned long long)arg1 refreshMode:(unsigned long long)arg2 userInfo:(id)arg3 cursor:(id)arg4 includeRecentVPVds:(BOOL)arg5 includeBatteryInfo:(BOOL)arg6 includeCachedLocation:(BOOL)arg7 hardTimeout:(unsigned long long)arg8 ;
-(void)streamLoadDidFinishLoading:(id)arg1 ;
-(void)_resetCachedPagingInfo:(id)arg1 ;
-(void)setLoadingHead:(BOOL)arg1 ;
-(void)setLoadingTail:(BOOL)arg1 ;
-(BOOL)enabled;
-(void)dealloc;
-(NSString *)description;
-(void)setEnabled:(BOOL)arg1 ;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(FBStreamConfiguration *)configuration;
-(NSString *)targetID;
-(BOOL)streaming;
-(void)stopStreaming;
-(BOOL)loading;
-(double)refreshInterval;
-(FBUserSession *)session;
-(void)setRefreshInterval:(double)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
-(void)setStreaming:(BOOL)arg1 ;
@end

