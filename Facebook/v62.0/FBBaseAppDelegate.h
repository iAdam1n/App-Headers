/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:37 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <Facebook/POPAnimatorDelegate.h>
#import <Facebook/FBURLSessionNotificationPresenting.h>
#import <UIKit/UIApplicationDelegate.h>

@protocol FBEventListener, FBBackgroundURLSessionHandlingListener;
@class UIWindow, FBExceptionHandler, FBDependencyManager, FBSafeModeChecker, NSNotificationCenter, FBAnalyticsPerfLogger, FBBaseAppNotificationsHandler, NSArray, NSDictionary, FBApplicationAnalyticsCoordinator, FBApplicationActivityMonitorCoordinator, FBUsageTimeMonitor, FBPushEventListenerAnnouncer, NSString;

@interface FBBaseAppDelegate : NSObject <UIGestureRecognizerDelegate, UINavigationControllerDelegate, POPAnimatorDelegate, FBURLSessionNotificationPresenting, UIApplicationDelegate> {

	FBExceptionHandler* _exceptionHandler;
	FBDependencyManager* _dependencyManager;
	FBSafeModeChecker* _safeModeChecker;
	NSNotificationCenter* _notificationCenter;
	FBAnalyticsPerfLogger* _analyticsPerfLogger;
	id<FBEventListener> _timeSpentListener;
	BOOL _backgroundInit;
	UIWindow* _window;
	FBBaseAppNotificationsHandler* _appNotificationsHandler;
	NSArray* _uiapplicationSendEventListeners;
	NSDictionary* _launchOptions;
	BOOL _didColdStart;
	FBApplicationAnalyticsCoordinator* _analyticsCoordinator;
	FBApplicationActivityMonitorCoordinator* _activityMonitorCoordinator;
	FBUsageTimeMonitor* _usageTimeMonitor;
	id<FBBackgroundURLSessionHandlingListener> _backgroundURLSessionAnnouncer;
	FBPushEventListenerAnnouncer* _pushEventAnnouncer;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) UIWindow * window; 
+(void)setSafeModeChecker:(id)arg1 ;
+(void)setExceptionHandlerFactory:(id)arg1 ;
+(void)setSafeModeCheckerFactory:(id)arg1 ;
+(void)setSplashScreenProvider:(/*^block*/id)arg1 ;
+(void)setExceptionHandler:(id)arg1 ;
-(id)initWithExceptionHandler:(id)arg1 safeModeChecker:(id)arg2 notificationCenter:(id)arg3 analyticsPerfLogger:(id)arg4 ;
-(void)_initUsageTimeMonitor:(BOOL)arg1 application:(id)arg2 ;
-(void)_completeStartupForApplication:(id)arg1 withOptions:(id)arg2 ;
-(id)backgroundTaskHandler;
-(void)_initialUsageTimeMonitorIfNeeded:(id)arg1 ;
-(void)animatorWillAnimate:(id)arg1 ;
-(void)animatorDidAnimate:(id)arg1 ;
-(void)presentNotificationWithTitle:(id)arg1 message:(id)arg2 ;
-(UIWindow *)window;
-(id)init;
-(BOOL)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2 ;
-(BOOL)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 performFetchWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)application:(id)arg1 didReceiveLocalNotification:(id)arg2 ;
-(void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(BOOL)application:(id)arg1 willContinueUserActivityWithType:(id)arg2 ;
-(void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2 ;
-(void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2 ;
-(void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2 ;
@end

