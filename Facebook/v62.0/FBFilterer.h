/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:42 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class FBGLFilter, EAGLContext;

@interface FBFilterer : NSObject {

	unsigned _srcTextureIndex;
	int _vertexAttrib;
	int _texCoordAttrib;
	int _imgSizeUniformLocation;
	unsigned _colorRenderbuffer;
	unsigned _framebuffer;
	int _bufferWidth;
	int _bufferHeight;
	FBGLFilter* _activatedFilter;
	unsigned _vertexBuffer;
	int _imageWidth;
	int _imageHeight;
	unsigned _renderToTextureFrameBuffer;
	int _preppedImageHandle;
	unsigned* _imageData;
	EAGLContext* _context;

}

@property (assign,nonatomic) unsigned renderToTextureFrameBuffer;              //@synthesize renderToTextureFrameBuffer=_renderToTextureFrameBuffer - In the implementation block
@property (nonatomic,retain) EAGLContext * context;                            //@synthesize context=_context - In the implementation block
@property (assign,nonatomic) int preppedImageHandle;                           //@synthesize preppedImageHandle=_preppedImageHandle - In the implementation block
@property (nonatomic,readonly) int imageWidth;                                 //@synthesize imageWidth=_imageWidth - In the implementation block
@property (nonatomic,readonly) int imageHeight;                                //@synthesize imageHeight=_imageHeight - In the implementation block
@property (assign,nonatomic) unsigned* imageData;                              //@synthesize imageData=_imageData - In the implementation block
+(unsigned*)createImageDataFromImage:(id)arg1 ;
+(unsigned)createTextureFromImageData:(unsigned*)arg1 width:(unsigned)arg2 height:(unsigned)arg3 intoTextureUnit:(unsigned)arg4 ;
+(unsigned)loadTextureFromImage:(id)arg1 ;
+(unsigned)createTexture:(void*)arg1 width:(unsigned)arg2 height:(unsigned)arg3 format:(unsigned)arg4 intoTextureUnit:(unsigned)arg5 ;
+(unsigned)createTextureIntoTextureUnit:(unsigned)arg1 withMapCountAndMaps:(int)arg2 ;
-(void)prepForImage:(id)arg1 ;
-(id)newFilteredImage:(id)arg1 derivedContext:(id)arg2 ;
-(void)setupContextWithWidth:(int)arg1 height:(int)arg2 ;
-(void)freeImageData;
-(void)tearDownContext;
-(void)setRenderBufferWidth:(int)arg1 height:(int)arg2 ;
-(void)setAttributeIndices:(unsigned)arg1 ;
-(void)drawWithFilterPasses:(id)arg1 derivedContext:(id)arg2 ;
-(id)newImageFromBuffer;
-(unsigned)createTextureForRendering;
-(void)activateFilterIfNeeded:(id)arg1 derivedContext:(id)arg2 ;
-(void)drawWithFilter:(id)arg1 derivedContext:(id)arg2 ;
-(unsigned)renderToTextureFrameBuffer;
-(void)setRenderToTextureFrameBuffer:(unsigned)arg1 ;
-(int)preppedImageHandle;
-(void)setPreppedImageHandle:(int)arg1 ;
-(unsigned)createProgramWithString:(id)arg1 ;
-(void)dealloc;
-(EAGLContext *)context;
-(void)setContext:(EAGLContext *)arg1 ;
-(void)setImageData:(unsigned*)arg1 ;
-(int)imageWidth;
-(int)imageHeight;
-(id)initWithSourceImage:(id)arg1 ;
-(unsigned*)imageData;
-(void)makeCurrentContext;
@end

