/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:35 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <UIKit/UIViewController.h>
#import <Facebook/FBStreamListViewDelegate.h>
#import <Facebook/FBStreamListViewStateManagerDelegate.h>
#import <Facebook/FBComponentTableViewDataSourceCellConfigProvider.h>
#import <Facebook/FBComponentTableViewDataSourceSelectionEventListener.h>
#import <Facebook/FBComposerCustomAudienceViewControllerDelegate.h>
#import <Facebook/FBTokenizerContainingDelegate.h>
#import <Facebook/FBEntityPickerTextFieldDelegate.h>
#import <Facebook/FBComposerAudiencePickerController.h>

@protocol FBComposerCustomAudienceConfigDelegate, FBComposerAudiencePickerControllerDelegate;
@class FBUserSession, FBStreamListViewStateManager, FBPrivacyPickerView, FBComponentTableViewDataSource, FBPrivacyPickerDataSource, FBComposerCustomAudienceViewController, FBMutableTaggableCollection, NSString;

@interface FBPrivacyPickerViewController : UIViewController <FBStreamListViewDelegate, FBStreamListViewStateManagerDelegate, FBComponentTableViewDataSourceCellConfigProvider, FBComponentTableViewDataSourceSelectionEventListener, FBComposerCustomAudienceViewControllerDelegate, FBTokenizerContainingDelegate, FBEntityPickerTextFieldDelegate, FBComposerAudiencePickerController> {

	FBUserSession* _session;
	FBStreamListViewStateManager* _viewStateManager;
	FBPrivacyPickerView* _pickerView;
	FBComponentTableViewDataSource* _componentDataSource;
	FBPrivacyPickerDataSource* _dataSource;
	FBComposerCustomAudienceViewController* _customAudienceController;
	id<FBComposerCustomAudienceConfigDelegate> _customAudienceConfigDelegate;
	FBMutableTaggableCollection* _taggableCollection;
	id<FBComposerAudiencePickerControllerDelegate> _delegate;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic,__weak) id<FBComposerAudiencePickerControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(void)dataSource:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(FBComponentTableViewDataSourceCellConfig)configForTableCellInDataSource:(id)arg1 ;
-(void)_didTapCancel:(id)arg1 ;
-(void)streamListViewDidScrollToBottom:(id)arg1 ;
-(void)streamListViewDidScrollToTop:(id)arg1 ;
-(void)viewStateManagerDidTriggerReload:(id)arg1 ;
-(void)_didTapDone:(id)arg1 ;
-(void)showContentState;
-(void)configureWithAvailablePrivacySettings:(id)arg1 selectedAudience:(id)arg2 showTagExpansionOptions:(BOOL)arg3 ;
-(void)activateFBComposerAudienceDataSourceWithTaggableCollection:(id)arg1 ;
-(void)availablePrivacySettingsChanged:(id)arg1 audienceTouchedByUser:(BOOL)arg2 ;
-(void)compositionAudienceChanged:(id)arg1 ;
-(void)taggedAndMentionedUsersChanged:(id)arg1 ;
-(void)pickerControllerWasDismissedByTappingOutsidePopover;
-(void)toggleTagExpansion:(id)arg1 withPrivacy:(id)arg2 ;
-(void)_updateTokenizerWithSelectedSetting:(id)arg1 ;
-(void)_updateDataSourceAndTokenizerWithComposingSet:(id)arg1 ;
-(void)_showCustomWithPrivacy:(id)arg1 forConfigType:(unsigned long long)arg2 ;
-(void)tokenizer:(id)arg1 willChangeHeight:(double)arg2 ;
-(void)accessoryViewWasTappedForTokenizer:(id)arg1 ;
-(void)nonInteractiveAudienceViewWasTapped;
-(void)textField:(id)arg1 searchTextChanged:(id)arg2 ;
-(void)textField:(id)arg1 userWillDeleteObjectByTyping:(id)arg2 ;
-(void)customAudienceControllerDidCancel;
-(void)customAudienceControllerDidUpdateWithNewPrivacySetting:(id)arg1 previousSeedPrivacySetting:(id)arg2 overwriteSeedPrivacySetting:(BOOL)arg3 isFinished:(BOOL)arg4 ;
-(void)setDelegate:(id<FBComposerAudiencePickerControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<FBComposerAudiencePickerControllerDelegate>)delegate;
-(unsigned long long)supportedInterfaceOrientations;
-(void)loadView;
-(long long)preferredInterfaceOrientationForPresentation;
-(void)viewDidLoad;
-(id)initWithSession:(id)arg1 ;
@end

