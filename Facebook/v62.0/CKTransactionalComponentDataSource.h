/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:53 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/CKComponentStateListener.h>

@protocol OS_dispatch_queue;
@class CKTransactionalComponentDataSourceState, CKTransactionalComponentDataSourceListenerAnnouncer, NSMutableArray, NSObject, NSString;

@interface CKTransactionalComponentDataSource : NSObject <CKComponentStateListener> {

	CKTransactionalComponentDataSourceState* _state;
	CKTransactionalComponentDataSourceListenerAnnouncer* _announcer;
	unordered_map<int, std::__1::unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > > > > >* _pendingAsynchronousStateUpdates;
	unordered_map<int, std::__1::unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::unordered_multimap<int, id ()(id), std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, id ()(id)> > > > > >* _pendingSynchronousStateUpdates;
	NSMutableArray* _pendingAsynchronousModifications;
	NSObject*<OS_dispatch_queue> _workQueue;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> workQueue;              //@synthesize workQueue=_workQueue - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)componentScopeHandleWithIdentifier:(int)arg1 rootIdentifier:(int)arg2 didReceiveStateUpdate:(/*^block*/id)arg3 mode:(unsigned long long)arg4 ;
-(void)applyChangeset:(id)arg1 mode:(unsigned long long)arg2 userInfo:(id)arg3 ;
-(void)updateConfiguration:(id)arg1 mode:(unsigned long long)arg2 userInfo:(id)arg3 ;
-(void)reloadWithMode:(unsigned long long)arg1 userInfo:(id)arg2 ;
-(void)_enqueueModification:(id)arg1 ;
-(id)_cancelEnqueuedModificationsOfType:(Class)arg1 ;
-(void)_synchronouslyApplyChange:(id)arg1 ;
-(void)_processStateUpdates;
-(void)_startFirstAsynchronousModification;
-(id)state;
-(id)initWithConfiguration:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)addListener:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)workQueue;
@end

