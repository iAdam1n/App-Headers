/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:43 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FBNetworkerRequestDelegate.h>
#import <Facebook/FBVideoDownloaderThrottlerDelegate.h>

@protocol FBBlockDataCache, OS_dispatch_queue, FBNetworkDispatch, FBVideoDownloaderDelegate;
@class NSObject, FBVideoNetworkerLogger, FBScenePath, FBVideoPrefetchManager, FBVideoDownloaderThrottler, NSMutableData, NSURL, NSString, NSMutableArray, FBNetworkerRangeRequest;

@interface FBVideoDownloader : NSObject <FBNetworkerRequestDelegate, FBVideoDownloaderThrottlerDelegate> {

	id<FBBlockDataCache> _blockDataCache;
	NSObject*<OS_dispatch_queue> _queue;
	id<FBNetworkDispatch> _networker;
	NSObject*<OS_dispatch_queue> _performer;
	FBVideoNetworkerLogger* _logger;
	unsigned long long _offset;
	FBScenePath* _scenePath;
	FBScenePath* _originalScenePath;
	BOOL _isPlaying;
	long long _priority;
	FBVideoPrefetchManager* _prefetchManager;
	double _requestStartTime;
	unsigned long long _bytesDownloaded;
	unsigned long long _requestStartOffset;
	unsigned long long _requestLastOffsetWithThrottling;
	FBVideoDownloaderThrottler* _throttler;
	NSMutableData* _bufferedDataForBlock;
	unsigned long long _blockSize;
	unsigned long long _networkFetchBlockSize;
	unsigned long long _bufferedDataBlockIndex;
	BOOL _cancelNetworkOnDirectCancel;
	BOOL _truncateCacheOnContinuation;
	unsigned long long _cancelTimeout;
	BOOL _prefetchedFirstChunk;
	double _shutdownRequestTimestamp;
	SCD_Struct_FB505 _videoBasicData;
	BOOL _limitRequestLength;
	BOOL _retryNetworkRequests;
	BOOL _bypassCaching;
	BOOL _isAudio;
	BOOL _enableCDNCacheStatusQuery;
	id<FBVideoDownloaderDelegate> _delegate;
	NSURL* _URL;
	NSURL* _prefetchURL;
	NSString* _dataKey;
	NSString* _videoID;
	NSMutableArray* _listeners;
	FBNetworkerRangeRequest* _request;
	unsigned long long _totalLength;

}

@property (nonatomic,readonly) NSMutableArray * listeners;                                   //@synthesize listeners=_listeners - In the implementation block
@property (nonatomic,retain) FBNetworkerRangeRequest * request;                              //@synthesize request=_request - In the implementation block
@property (assign,nonatomic) unsigned long long totalLength;                                 //@synthesize totalLength=_totalLength - In the implementation block
@property (assign,nonatomic,__weak) id<FBVideoDownloaderDelegate> delegate;                  //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSURL * URL;                                                  //@synthesize URL=_URL - In the implementation block
@property (nonatomic,readonly) NSURL * prefetchURL;                                          //@synthesize prefetchURL=_prefetchURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * dataKey;                                      //@synthesize dataKey=_dataKey - In the implementation block
@property (nonatomic,copy,readonly) NSString * videoID;                                      //@synthesize videoID=_videoID - In the implementation block
@property (assign,nonatomic) BOOL enableCDNCacheStatusQuery;                                 //@synthesize enableCDNCacheStatusQuery=_enableCDNCacheStatusQuery - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isCurrentlyDownloading,nonatomic,readonly) BOOL downloading; 
@property (nonatomic,readonly) unsigned long long totalVideoByteLength; 
@property (nonatomic,readonly) unsigned long long bytesDownloadedInLastRequest; 
-(void)networkerRequestDidStart:(id)arg1 ;
-(void)networkerRequest:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didReceiveData:(id)arg2 ;
-(void)networkerRequest:(id)arg1 didSucceed:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didFail:(id)arg2 status:(id)arg3 ;
-(void)networkerRequest:(id)arg1 didCancelWithStatus:(id)arg2 ;
-(NSString *)videoID;
-(void)updateScenePath:(id)arg1 priority:(long long)arg2 ;
-(void)assignThrottlingDelegate:(id)arg1 ;
-(void)_refreshOutgoingNetworkRequestRestartIfNeeded;
-(void)_startShutdownWithError:(id)arg1 delayNetworkCancel:(BOOL)arg2 ;
-(void)_updateIfEmptyListener:(id)arg1 ;
-(void)_processVideoLength:(unsigned long long)arg1 ;
-(void)_handleBufferingToCache:(id)arg1 offset:(unsigned long long)arg2 ;
-(void)_flushBufferedDataToCacheAndReset:(BOOL)arg1 ;
-(id)_getPrefetchDataAndPossiblyCancelInProgressPrefetchWithListener:(id)arg1 ;
-(id)_readDataFromCache:(NSRange)arg1 expectedContentLength:(unsigned long long)arg2 dataKey:(id)arg3 ;
-(unsigned long long)_truncateOffsetForAlignment:(unsigned long long)arg1 ;
-(unsigned long long)_calculateMaximumOffsetToFetch;
-(void)_shutdownDownloaderWithError:(id)arg1 ;
-(id)_readDataFromBuffer:(NSRange)arg1 dataKey:(id)arg2 ;
-(void)_forwardDataToAllListeners:(id)arg1 range:(NSRange)arg2 ;
-(void)_redirectURLIfPossible:(id)arg1 ;
-(void)_finishListeners;
-(id)initWithURL:(id)arg1 prefetchURL:(id)arg2 dataKey:(id)arg3 videoID:(id)arg4 blockDataCache:(id)arg5 queue:(id)arg6 networker:(id)arg7 logger:(id)arg8 scenePath:(id)arg9 priority:(long long)arg10 experimentManager:(id)arg11 prefetchManager:(id)arg12 disableThrottling:(BOOL)arg13 limitRequestLength:(BOOL)arg14 bypassCaching:(BOOL)arg15 isAudio:(BOOL)arg16 ;
-(void)markRequestAsPlaying:(BOOL)arg1 ;
-(void)playRequested;
-(void)throttleTrafficWithVideoThrottler:(id)arg1 ;
-(void)cancelWithoutRedirect;
-(NSURL *)prefetchURL;
-(BOOL)enableCDNCacheStatusQuery;
-(void)setEnableCDNCacheStatusQuery:(BOOL)arg1 ;
-(BOOL)isCurrentlyDownloading;
-(unsigned long long)totalVideoByteLength;
-(void)pauseDownloadFromThrottler:(id)arg1 ;
-(void)resumeDownloadFromThrottler:(id)arg1 ;
-(unsigned long long)bytesDownloadedInLastRequest;
-(void)addRangedDataListener:(id)arg1 ;
-(void)cancelGracefullyAndKeepDownloader;
-(void)resetRequestAndFlushBufferIfNeededWithOffset:(unsigned long long)arg1 ;
-(BOOL)shouldForwardDataToListener:(id)arg1 ;
-(void)refreshOutgoingNetworkRequestRestartIfNeeded;
-(void)removeRangedDataListener:(id)arg1 cancelImmediately:(BOOL)arg2 ;
-(id)videoDataKey;
-(id)videoDataKeyForListener:(id)arg1 ;
-(id)videoURLForListener:(id)arg1 ;
-(unsigned long long)totalLengthForListener:(id)arg1 ;
-(id)generateNewRangeRequestWithURL:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 ;
-(unsigned long long)calculateThrottlingOffsetForOffset:(unsigned long long)arg1 ;
-(unsigned long long)calculateMinimalOffsetToFetch;
-(BOOL)shouldRefreshPartialRequest;
-(void)setDelegate:(id<FBVideoDownloaderDelegate>)arg1 ;
-(id<FBVideoDownloaderDelegate>)delegate;
-(FBNetworkerRangeRequest *)request;
-(NSURL *)URL;
-(void)setRequest:(FBNetworkerRangeRequest *)arg1 ;
-(NSString *)dataKey;
-(id)videoURL;
-(void)setTotalLength:(unsigned long long)arg1 ;
-(unsigned long long)totalLength;
-(NSMutableArray *)listeners;
@end

