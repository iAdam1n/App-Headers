/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:52 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/Facebook-Structs.h>
#import <Facebook/FNFRtmpPlaybackSessionDelegate.h>
#import <Facebook/FBReachabilityListener.h>
#import <Facebook/FNFAVAsset.h>
#import <Facebook/FNFAVPlayerItem.h>
#import <Facebook/FNFAssetForPlayer.h>
#import <Facebook/FNFLiveAVPlayerAsset.h>

@protocol OS_dispatch_queue, FNFRtmpDataLogger, OS_dispatch_source;
@class FNFRtmpPlaybackSession, NSObject, FNFAssetErrorLog, NSArray, NSError, NSString, AVAudioMix;

@interface FNFRtmpAsset : NSObject <FNFRtmpPlaybackSessionDelegate, FBReachabilityListener, FNFAVAsset, FNFAVPlayerItem, FNFAssetForPlayer, FNFLiveAVPlayerAsset> {

	FNFRtmpPlaybackSession* _rtmpSession;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	FNFRtmpAssetConfig _config;
	FNFAssetErrorLog* _errorLog;
	id<FNFRtmpDataLogger> _datalogger;
	BOOL _async;
	deque<FNFRtmpFrame, std::__1::allocator<FNFRtmpFrame> >* _videoFrames;
	deque<FNFRtmpFrame, std::__1::allocator<FNFRtmpFrame> >* _audioFrames;
	int _framerate;
	opaqueCMFormatDescriptionRef _formatDesc;
	AudioStreamBasicDescription _asbd;
	SCD_Struct_FB257 _loadedDuration;
	NSArray* _loadedTimeRanges;
	BOOL _firstAudioFrameAfterPause;
	BOOL _firstVideoFrameAfterPause;
	BOOL _foundKeyFrameAfterFlush;
	long long _initialTime;
	long long _initialDTSTime;
	unsigned long long _maxTimeValueEnqueued;
	BOOL _firstFrameServed;
	unsigned long long _firstFrameDelay;
	BOOL _assetLoaded;
	/*^block*/id _assetLoadedHandler;
	BOOL _streamEnded;
	BOOL _streamFailed;
	NSError* _loadingError;
	BOOL _streamDriedOut;
	BOOL _sentStreamDriedNotification;
	int _connectRetryCount;
	NSObject*<OS_dispatch_source> _retryTimer;
	BOOL _rtmpConnectionIsPaused;
	BOOL _connectivityChangeCausedDisconnect;
	BOOL _waitingOnConnectivityToReconnect;
	int _rtmpState;
	BOOL _ignoreReachability;
	double _timeOfNextTimeUpdate;
	SCD_Struct_FB257 _playbackTime;
	double _connectionRequestStartTime;
	double _resumeRequestStartTime;
	double _firstInvalidPacketReceivedDurationMS;
	double _loadRequestTime;
	BOOL _waitingOnFirstPacket;
	/*^block*/id _playerCheckForStallCallback;
	BOOL _assetStartedPlaying;
	BOOL _fireServerPauseIfBuffersGetsTooLarge;
	BOOL _loadValuesAlreadyCalled;
	int _lastVideoPts;
	int _lastAudioPts;
	double _retryTimeIntervalInitialS;
	double _retryTimeIntervalMaximumS;
	double _retryTimeIntervalS;

}

@property (assign,nonatomic) double retryTimeIntervalS;                                //@synthesize retryTimeIntervalS=_retryTimeIntervalS - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long status; 
@property (nonatomic,copy,readonly) NSArray * loadedTimeRanges; 
@property (nonatomic,copy,readonly) id<FNFAVPlayerItemErrorLog> errorLog; 
@property (nonatomic,copy) AVAudioMix * audioMix; 
@property (nonatomic,readonly) SCD_Struct_FB257 maxBufferTime; 
@property (nonatomic,readonly) SCD_Struct_FB257 minBufferTime; 
-(void)reachabilityStateChangedTo:(unsigned long long)arg1 from:(unsigned long long)arg2 ;
-(double)nextLiveAudioTimestamp;
-(BOOL)seekToPosition:(SCD_Struct_FB257)arg1 ;
-(void)_applicationDidBackground;
-(id)initWithRtmpSession:(id)arg1 dataLogger:(id)arg2 config:(FNFRtmpAssetConfig)arg3 ;
-(double)loadRequestedTime;
-(BOOL)broadcastHasEnded;
-(opaqueCMFormatDescriptionRef)formatDesc;
-(AudioStreamBasicDescription)asbd;
-(BOOL)containsTrack:(long long)arg1 ;
-(void)addErrorToLog:(id)arg1 shouldStopPlayback:(BOOL)arg2 ;
-(BOOL)trackHasMoreFrames:(long long)arg1 ;
-(FNFFrameMetadata)currentFrameMetadataForTrack:(long long)arg1 ;
-(const char*)currentFrameDataForTrack:(long long)arg1 ;
-(void)advanceFrameForTrack:(long long)arg1 ;
-(void)updatePlaybackTime:(SCD_Struct_FB257)arg1 ;
-(BOOL)shouldPauseForStallingWithNextCheckCallback:(/*^block*/id)arg1 ;
-(BOOL)shouldRestartAfterStalling;
-(BOOL)shouldBufferVideoAsSoonAsPossible;
-(BOOL)shouldSeek;
-(void)resetAssetToBeginningIfNeeded;
-(void)playbackPauseRequested;
-(SCD_Struct_FB257)timeAfterSeek;
-(id)debugDetails;
-(SCD_Struct_FB257)maxBufferTime;
-(SCD_Struct_FB257)minBufferTime;
-(void)requestTimeLoadedUpdate;
-(id)initWithRtmpSession:(id)arg1 dataLogger:(id)arg2 config:(FNFRtmpAssetConfig)arg3 async:(BOOL)arg4 ;
-(void)_cancelRetryTimer;
-(void)_setStateAfterPause;
-(void)_resumeRTMPSessionThenPauseIfNecessary;
-(void)_endStream;
-(void)_reconnectAfterDelay;
-(void)_updateLoadedTimeRange;
-(void)_setFirstActualPacketReceived;
-(void)_maybeAssetLoaded;
-(void)_updateLoadedDuration;
-(void)_logFirstDataReceived;
-(void)_syncAudioFramesOnVideo;
-(void)_pauseRTMPSessionIfServerPauseStillTrue;
-(void)_sessionMaybeUndried;
-(id)assetDebugStatus;
-(void)_pauseRTMPSessionIfPlaybackHasntStarted;
-(void)rtmpPlaybackSessionDidRequestConnection:(id)arg1 preconnectDelay:(double)arg2 ;
-(void)rtmpPlaybackSessionDidStart:(id)arg1 didPreconnect:(BOOL)arg2 ;
-(void)rtmpPlaybackSessionDidFail:(id)arg1 withError:(id)arg2 ;
-(void)rtmpPlaybackSessionDidFinish:(id)arg1 isEndOfStream:(BOOL)arg2 ;
-(void)rtmpPlaybackSessionDidSendPause:(BOOL)arg1 session:(id)arg2 ;
-(void)rtmpPlaybackSessionDidDryOut:(id)arg1 ;
-(void)rtmpPlaybackSession:(id)arg1 didReceiveAudioData:(id)arg2 timestamp:(unsigned)arg3 ;
-(void)rtmpPlaybackSession:(id)arg1 didReceiveVideoData:(id)arg2 isKeyFrame:(BOOL)arg3 pts:(unsigned)arg4 dts:(unsigned)arg5 ;
-(void)rtmpPlaybackSession:(id)arg1 didReceiveStreamParameters:(RTMPStreamParams*)arg2 ;
-(void)ignoreReachability;
-(void)dropAudioFrameForTesting;
-(double)retryTimeIntervalS;
-(void)setRetryTimeIntervalS:(double)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(SCD_Struct_FB257)duration;
-(id)asset;
-(long long)status;
-(void)cancelLoading;
-(AVAudioMix *)audioMix;
-(id<FNFAVPlayerItemErrorLog>)errorLog;
-(void)addOutput:(id)arg1 ;
-(NSArray *)loadedTimeRanges;
-(CGAffineTransform)preferredTransform;
-(void)setAudioMix:(AVAudioMix *)arg1 ;
-(id)accessLog;
-(SCD_Struct_FB257)currentTime;
-(id)tracksWithMediaType:(id)arg1 ;
-(long long)statusOfValueForKey:(id)arg1 error:(id*)arg2 ;
-(void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isPlaybackLikelyToKeepUp;
-(BOOL)isPlaybackBufferFull;
-(void)playbackStarted;
@end

