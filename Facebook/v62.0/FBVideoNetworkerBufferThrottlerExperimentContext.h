/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:39:43 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/C3C2BD9F-C9D4-4E48-9EC0-40E7F1350599/Facebook.app/Facebook
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Facebook/FBExperimentContext.h>

@interface FBVideoNetworkerBufferThrottlerExperimentContext : FBExperimentContext {

	BOOL _stallOnlyWhenLoaded;
	BOOL _stallOnlyWhenPlayerLikelyToStallToo;
	BOOL _allowPrepare;
	BOOL _shouldCancelDownloadsDirectly;
	BOOL _shouldCancelAssetLoading;
	BOOL _cancelNetworkOnDirectCancel;
	BOOL _truncateCacheOnContinuation;
	BOOL _alignLengthToBlockBoundaryOnThrottling;
	int _throttlerType;
	double _ratio;
	double _fileSizeAtomCompensationBuffer;
	long long _bytesAtomCompensationBuffer;
	double _vbrTimeCompensationBuffer;
	double _maxVbrTimeCompensationBuffer;
	double _singleFetchMultiplier;
	long long _stallPredictionThreshold;
	long long _secondsFetchedBeforePlaying;
	long long _secondsFetchedBeforePlayingCell;
	long long _aggressiveCancellationMaxState;
	unsigned long long _closeTimeout;
	long long _minSingleNetworkFetchByteSize;

}

@property (nonatomic,readonly) double ratio;                                             //@synthesize ratio=_ratio - In the implementation block
@property (nonatomic,readonly) double fileSizeAtomCompensationBuffer;                    //@synthesize fileSizeAtomCompensationBuffer=_fileSizeAtomCompensationBuffer - In the implementation block
@property (nonatomic,readonly) long long bytesAtomCompensationBuffer;                    //@synthesize bytesAtomCompensationBuffer=_bytesAtomCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double vbrTimeCompensationBuffer;                         //@synthesize vbrTimeCompensationBuffer=_vbrTimeCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double maxVbrTimeCompensationBuffer;                      //@synthesize maxVbrTimeCompensationBuffer=_maxVbrTimeCompensationBuffer - In the implementation block
@property (nonatomic,readonly) double singleFetchMultiplier;                             //@synthesize singleFetchMultiplier=_singleFetchMultiplier - In the implementation block
@property (nonatomic,readonly) int throttlerType;                                        //@synthesize throttlerType=_throttlerType - In the implementation block
@property (nonatomic,readonly) long long stallPredictionThreshold;                       //@synthesize stallPredictionThreshold=_stallPredictionThreshold - In the implementation block
@property (nonatomic,readonly) long long secondsFetchedBeforePlaying;                    //@synthesize secondsFetchedBeforePlaying=_secondsFetchedBeforePlaying - In the implementation block
@property (nonatomic,readonly) long long secondsFetchedBeforePlayingCell;                //@synthesize secondsFetchedBeforePlayingCell=_secondsFetchedBeforePlayingCell - In the implementation block
@property (nonatomic,readonly) BOOL stallOnlyWhenLoaded;                                 //@synthesize stallOnlyWhenLoaded=_stallOnlyWhenLoaded - In the implementation block
@property (nonatomic,readonly) BOOL stallOnlyWhenPlayerLikelyToStallToo;                 //@synthesize stallOnlyWhenPlayerLikelyToStallToo=_stallOnlyWhenPlayerLikelyToStallToo - In the implementation block
@property (nonatomic,readonly) BOOL allowPrepare;                                        //@synthesize allowPrepare=_allowPrepare - In the implementation block
@property (nonatomic,readonly) long long aggressiveCancellationMaxState;                 //@synthesize aggressiveCancellationMaxState=_aggressiveCancellationMaxState - In the implementation block
@property (nonatomic,readonly) BOOL shouldCancelDownloadsDirectly;                       //@synthesize shouldCancelDownloadsDirectly=_shouldCancelDownloadsDirectly - In the implementation block
@property (nonatomic,readonly) BOOL shouldCancelAssetLoading;                            //@synthesize shouldCancelAssetLoading=_shouldCancelAssetLoading - In the implementation block
@property (nonatomic,readonly) BOOL cancelNetworkOnDirectCancel;                         //@synthesize cancelNetworkOnDirectCancel=_cancelNetworkOnDirectCancel - In the implementation block
@property (nonatomic,readonly) unsigned long long closeTimeout;                          //@synthesize closeTimeout=_closeTimeout - In the implementation block
@property (nonatomic,readonly) BOOL truncateCacheOnContinuation;                         //@synthesize truncateCacheOnContinuation=_truncateCacheOnContinuation - In the implementation block
@property (nonatomic,readonly) BOOL alignLengthToBlockBoundaryOnThrottling;              //@synthesize alignLengthToBlockBoundaryOnThrottling=_alignLengthToBlockBoundaryOnThrottling - In the implementation block
@property (nonatomic,readonly) long long minSingleNetworkFetchByteSize;                  //@synthesize minSingleNetworkFetchByteSize=_minSingleNetworkFetchByteSize - In the implementation block
+(id)universeName;
+(id)parameterConfigurations;
-(BOOL)allowPrepare;
-(int)throttlerType;
-(unsigned long long)closeTimeout;
-(BOOL)cancelNetworkOnDirectCancel;
-(BOOL)truncateCacheOnContinuation;
-(double)fileSizeAtomCompensationBuffer;
-(double)vbrTimeCompensationBuffer;
-(long long)stallPredictionThreshold;
-(long long)minSingleNetworkFetchByteSize;
-(BOOL)stallOnlyWhenLoaded;
-(BOOL)stallOnlyWhenPlayerLikelyToStallToo;
-(long long)bytesAtomCompensationBuffer;
-(long long)aggressiveCancellationMaxState;
-(double)maxVbrTimeCompensationBuffer;
-(double)singleFetchMultiplier;
-(BOOL)alignLengthToBlockBoundaryOnThrottling;
-(long long)secondsFetchedBeforePlaying;
-(long long)secondsFetchedBeforePlayingCell;
-(BOOL)shouldCancelDownloadsDirectly;
-(BOOL)shouldCancelAssetLoading;
-(double)ratio;
@end

