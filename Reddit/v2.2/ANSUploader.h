/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:34:07 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/3DFA7E95-0979-4D86-B373-C986386EF259/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionDelegate.h>

@protocol ANSUploaderDelegate;
@class NSURLSession, NSOperationQueue, NSString;

@interface ANSUploader : NSObject <NSURLSessionDelegate> {

	NSURLSession* _session;
	id<ANSUploaderDelegate> _delegate;
	double _defaultUploadTimeout;
	double _lowPowerUploadTimeout;
	NSOperationQueue* _operationQueue;

}

@property (nonatomic,readonly) NSOperationQueue * operationQueue;                  //@synthesize operationQueue=_operationQueue - In the implementation block
@property (nonatomic,readonly) BOOL lowPowerMode; 
@property (assign,nonatomic,__weak) id<ANSUploaderDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) BOOL supportsBackgroundRequests; 
@property (assign,nonatomic) double defaultUploadTimeout;                          //@synthesize defaultUploadTimeout=_defaultUploadTimeout - In the implementation block
@property (assign,nonatomic) double lowPowerUploadTimeout;                         //@synthesize lowPowerUploadTimeout=_lowPowerUploadTimeout - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)attemptToReconnectBackgroundSessionWithCompletionBlock:(/*^block*/id)arg1 ;
-(BOOL)supportsBackgroundRequests;
-(void)checkForExistingTaskMatchingDescription:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)handleTaskDescription:(id)arg1 completedWithError:(id)arg2 ;
-(BOOL)taskArray:(id)arg1 hasTaskMatchingDescription:(id)arg2 ;
-(void)checkSession:(id)arg1 forTasksMatchingDescription:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)restartTask:(id)arg1 ;
-(void)handleTask:(id)arg1 completedWithError:(id)arg2 ;
-(double)defaultUploadTimeout;
-(double)lowPowerUploadTimeout;
-(BOOL)supportsPowerStateNotifications;
-(void)powerStageChanged:(id)arg1 ;
-(BOOL)shouldUseBackgroundRequests;
-(Class)urlSessionConfigurationClass;
-(BOOL)lowPowerMode;
-(id)createBackgroundSessionConfiguration;
-(Class)urlSessionClass;
-(void)startNewUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3 ;
-(id)errorUserInfoWithFilePath:(id)arg1 uniqueName:(id)arg2 ;
-(void)startUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3 ;
-(void)setDefaultUploadTimeout:(double)arg1 ;
-(void)setLowPowerUploadTimeout:(double)arg1 ;
-(void)setDelegate:(id<ANSUploaderDelegate>)arg1 ;
-(id<ANSUploaderDelegate>)delegate;
-(NSOperationQueue *)operationQueue;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)initWithQueue:(id)arg1 delegate:(id)arg2 ;
-(id)errorWithCode:(long long)arg1 userInfo:(id)arg2 ;
-(id)session;
@end

