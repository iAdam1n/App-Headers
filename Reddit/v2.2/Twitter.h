/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:34:07 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/3DFA7E95-0979-4D86-B373-C986386EF259/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Reddit/Reddit-Structs.h>
#import <Reddit/FABKit.h>
#import <Reddit/TWTRUserSessionVerifierDelegate.h>

@class TWTRSessionStore, TWTRAuthConfig, TWTRWebAuthenticationFlow, NSDictionary, TWTRScribeSink, TWTRScribeService, TWTRUserSessionVerifier, TWTRImageLoader, NSString;

@interface Twitter : NSObject <FABKit, TWTRUserSessionVerifierDelegate> {

	BOOL _initialized;
	TWTRSessionStore* _sessionStore;
	TWTRAuthConfig* _authConfig;
	TWTRWebAuthenticationFlow* _webAuthenticationFlow;
	NSDictionary* _kitInfo;
	TWTRScribeSink* _scribeSink;
	TWTRScribeService* _scribeService;
	TWTRUserSessionVerifier* _userSessionVerifier;
	TWTRImageLoader* _imageLoader;

}

@property (nonatomic,retain) TWTRWebAuthenticationFlow * webAuthenticationFlow;              //@synthesize webAuthenticationFlow=_webAuthenticationFlow - In the implementation block
@property (nonatomic,retain) NSDictionary * kitInfo;                                         //@synthesize kitInfo=_kitInfo - In the implementation block
@property (nonatomic,retain) TWTRScribeSink * scribeSink;                                    //@synthesize scribeSink=_scribeSink - In the implementation block
@property (nonatomic,readonly) TWTRScribeService * scribeService;                            //@synthesize scribeService=_scribeService - In the implementation block
@property (nonatomic,readonly) TWTRUserSessionVerifier * userSessionVerifier;                //@synthesize userSessionVerifier=_userSessionVerifier - In the implementation block
@property (getter=isInitialized,nonatomic,readonly) BOOL initialized;                        //@synthesize initialized=_initialized - In the implementation block
@property (nonatomic,retain) TWTRAuthConfig * authConfig;                                    //@synthesize authConfig=_authConfig - In the implementation block
@property (nonatomic,readonly) TWTRImageLoader * imageLoader;                                //@synthesize imageLoader=_imageLoader - In the implementation block
@property (nonatomic,copy,readonly) NSString * version; 
@property (nonatomic,readonly) TWTRSessionStore * sessionStore;                              //@synthesize sessionStore=_sessionStore - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)kitDisplayVersion;
+(void)initializeIfNeeded;
+(void)assertValidTwitterCoreVersion;
+(id)sharedInstance;
+(id)bundleIdentifier;
+(id)allocWithZone:(NSZone*)arg1 ;
+(void)resetSharedInstance;
-(TWTRSessionStore *)sessionStore;
-(TWTRAuthConfig *)authConfig;
-(void)userSessionVerifierNeedsSessionVerification:(id)arg1 ;
-(TWTRScribeSink *)scribeSink;
-(TWTRImageLoader *)imageLoader;
-(TWTRScribeService *)scribeService;
-(void)startWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 ;
-(void)startWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 accessGroup:(id)arg3 ;
-(void)ensureResourcesBundleExists;
-(void)setupAPIServiceConfigs;
-(void)setupScribeSink;
-(void)setupImageLoaderWithCacheDir:(id)arg1 ;
-(void)setupNetworkingSessionStackWithAccessGroup:(id)arg1 ;
-(void)populateScribeService;
-(void)initializeDigitsKitWithConsumerKey:(id)arg1 consumerSecret:(id)arg2 ;
-(void)kitDidFinishStarting;
-(void)assertTwitterKitInitialized;
-(TWTRUserSessionVerifier *)userSessionVerifier;
-(void)pingVerifySessionForAuthSession:(id)arg1 ;
-(id)scribeStoreURL;
-(void)removeScribeDocumentFromDocumentsDirectory;
-(void)logInWithMethods:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)logInWithViewController:(id)arg1 methods:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)shouldShowWebBasedLogin:(id)arg1 ;
-(void)performWebBasedLogin:(id)arg1 forcingLogin:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)setWebAuthenticationFlow:(TWTRWebAuthenticationFlow *)arg1 ;
-(TWTRWebAuthenticationFlow *)webAuthenticationFlow;
-(id)applicationSupportDirectory;
-(id)applicationDocumentsDirectory;
-(void)logInWithCompletion:(/*^block*/id)arg1 ;
-(void)logInWithViewController:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)performWithScribeSink:(id)arg1 action:(/*^block*/id)arg2 ;
-(void)setAuthConfig:(TWTRAuthConfig *)arg1 ;
-(NSDictionary *)kitInfo;
-(void)setKitInfo:(NSDictionary *)arg1 ;
-(void)setScribeSink:(TWTRScribeSink *)arg1 ;
-(BOOL)isInitialized;
-(void)dealloc;
-(BOOL)application:(id)arg1 openURL:(id)arg2 options:(id)arg3 ;
-(id)bundleIdentifier;
-(void)start;
-(NSString *)version;
@end

