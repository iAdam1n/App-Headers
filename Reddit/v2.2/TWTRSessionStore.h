/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:34:06 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/3DFA7E95-0979-4D86-B373-C986386EF259/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Reddit/TWTRSessionStore_Private.h>
#import <Reddit/TWTRSessionStore.h>
@class TWTRAuthConfig;


@protocol TWTRSessionStore <TWTRUserSessionStore,TWTRGuestSessionStore,TWTRSessionRefreshingStore>
@property (nonatomic,readonly) TWTRAuthConfig * authConfig; 
@required
-(TWTRAuthConfig *)authConfig;

@end


@protocol TWTRErrorLogger, TWTRAPIServiceConfig;
@class TWTRGuestSession, TWTRAuthConfig, NSURLSession, NSMutableArray, NSArray, NSString;

@interface TWTRSessionStore : NSObject <TWTRSessionStore_Private, TWTRSessionStore> {

	TWTRAuthConfig* _authConfig;
	TWTRGuestSession* _guestSession;
	NSURLSession* _URLSession;
	NSMutableArray* _authSessionCache;
	NSArray* _refreshStrategies;
	NSString* _accessGroup;
	id<TWTRErrorLogger> _errorLogger;
	id<TWTRAPIServiceConfig> _APIServiceConfig;
	/*^block*/id _userLogoutHook;
	/*^block*/id _userSessionSavedCompletion;

}

@property (nonatomic,readonly) NSURLSession * URLSession;                              //@synthesize URLSession=_URLSession - In the implementation block
@property (nonatomic,retain) NSMutableArray * authSessionCache;                        //@synthesize authSessionCache=_authSessionCache - In the implementation block
@property (nonatomic,copy,readonly) NSArray * refreshStrategies;                       //@synthesize refreshStrategies=_refreshStrategies - In the implementation block
@property (nonatomic,copy,readonly) NSString * accessGroup;                            //@synthesize accessGroup=_accessGroup - In the implementation block
@property (nonatomic,readonly) id<TWTRErrorLogger> errorLogger;                        //@synthesize errorLogger=_errorLogger - In the implementation block
@property (nonatomic,readonly) id<TWTRAPIServiceConfig> APIServiceConfig;              //@synthesize APIServiceConfig=_APIServiceConfig - In the implementation block
@property (nonatomic,copy) id userLogoutHook;                                          //@synthesize userLogoutHook=_userLogoutHook - In the implementation block
@property (nonatomic,copy) id userSessionSavedCompletion;                              //@synthesize userSessionSavedCompletion=_userSessionSavedCompletion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) TWTRAuthConfig * authConfig;                            //@synthesize authConfig=_authConfig - In the implementation block
@property (nonatomic,retain) TWTRGuestSession * guestSession;                          //@synthesize guestSession=_guestSession - In the implementation block
+(id)concurrentSessionQueue;
-(TWTRAuthConfig *)authConfig;
-(id)existingUserSessions;
-(id<TWTRAPIServiceConfig>)APIServiceConfig;
-(void)setGuestSession:(TWTRGuestSession *)arg1 ;
-(void)logOutUserID:(id)arg1 ;
-(id)initWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 refreshStrategies:(id)arg3 URLSession:(id)arg4 errorLogger:(id)arg5 accessGroup:(id)arg6 ;
-(void)primeWriteThroughCaches;
-(void)saveSession:(id)arg1 withVerification:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)storeSession:(id)arg1 ;
-(id)allUserSessions;
-(id<TWTRErrorLogger>)errorLogger;
-(void)removeSessionWithSessionID:(id)arg1 ;
-(id)userLogoutHook;
-(TWTRGuestSession *)guestSession;
-(id)sessionRefreshStrategyForSessionClass:(Class)arg1 ;
-(void)refreshGuestSessionWithStrategy:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)refreshAuthSessionID:(id)arg1 withStrategy:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)isExpiredSession:(id)arg1 response:(id)arg2 error:(id)arg3 ;
-(NSArray *)refreshStrategies;
-(id)namespacedServiceNameWithName:(id)arg1 ;
-(void)unsafeSetGuestSession:(id)arg1 ;
-(void)unsafePersistGuestSession:(id)arg1 ;
-(void)unsafeDeleteGuestSession;
-(id)guestSessionServiceName;
-(id)unsafeCachedSessionWithSessionID:(id)arg1 ;
-(void)unsafePurgeCachedSessionWithSessionID:(id)arg1 ;
-(void)unsafeDeleteUserSessionWithSessionID:(id)arg1 ;
-(id)userSessionSavedCompletion;
-(void)unsafeCacheSession:(id)arg1 ;
-(void)unsafePersistAuthSession:(id)arg1 ;
-(id)unsafeAllCachedUserSessions;
-(id)userSessionServiceName;
-(void)unsafePrimeGuestSessionCache;
-(void)unsafePrimeUserSessionCache;
-(id)unsafeLoadGuestSession;
-(id)unsafeLoadAllUserSessions;
-(NSMutableArray *)authSessionCache;
-(long long)indexOfCachedSessionWithSessionID:(id)arg1 ;
-(void)unsafePersistSession:(id)arg1 service:(id)arg2 sessionID:(id)arg3 ;
-(void)saveKeychainItem:(id)arg1 ;
-(void)unsafeDeleteSessionForService:(id)arg1 sessionID:(id)arg2 ;
-(id)userSessionQueryWithID:(id)arg1 ;
-(id)unsafeLoadSessionsWithQuery:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)guestSessionQuery;
-(id)keychainItemsMatchingQuery:(id)arg1 ;
-(void)updateKeychainItemsAccessGroupIfNeeded:(id)arg1 ;
-(id)transformedKeychainItems:(id)arg1 passingTest:(/*^block*/id)arg2 ;
-(id)sessionForUserID:(id)arg1 ;
-(void)logInWithSystemAccountsCompletion:(/*^block*/id)arg1 ;
-(void)saveSession:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)saveSessionWithAuthToken:(id)arg1 authTokenSecret:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchGuestSessionWithCompletion:(/*^block*/id)arg1 ;
-(void)refreshSessionClass:(Class)arg1 sessionID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)isExpiredSession:(id)arg1 response:(id)arg2 ;
-(BOOL)isExpiredSession:(id)arg1 error:(id)arg2 ;
-(id)initWithAuthConfig:(id)arg1 APIServiceConfig:(id)arg2 refreshStrategies:(id)arg3 URLSession:(id)arg4 errorLogger:(id)arg5 ;
-(void)reloadSessionStore;
-(id)sessionWithSessionID:(id)arg1 ;
-(void)destroyAllSessions;
-(void)setAuthSessionCache:(NSMutableArray *)arg1 ;
-(void)setUserLogoutHook:(id)arg1 ;
-(void)setUserSessionSavedCompletion:(id)arg1 ;
-(NSURLSession *)URLSession;
-(id)session;
-(NSString *)accessGroup;
@end

