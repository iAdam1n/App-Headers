/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:34:06 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/3DFA7E95-0979-4D86-B373-C986386EF259/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Reddit/Reddit-Structs.h>
#import <Reddit/BaseViewController.h>
#import <Reddit/FloatingHeaderCallbackProtocol.h>
#import <Reddit/ListingNetworkSourceDelegate.h>
#import <Reddit/ListingViewBatchUpdateProtocol.h>

@class NSMutableArray, FloatingHeaderManager, NSArray, ListingNetworkSource, UIActivityIndicatorView, RefreshControl, AnimatedSpinner, EmptyDogeView, NSString;

@interface ListingViewController : BaseViewController <FloatingHeaderCallbackProtocol, ListingNetworkSourceDelegate, ListingViewBatchUpdateProtocol> {

	BOOL isUpdateQueueBusy;
	BOOL _isCurrentQueueBusy;
	BOOL _hasStartedObservingScrollViewOffset;
	BOOL _allowObservingScrollViewContentOffset;
	FloatingHeaderManager* _floatingHeaderManager;
	NSArray* _currentObjects;
	NSMutableArray* _currentUpdateQueue;
	ListingNetworkSource* _listingNetworkSource;
	UIActivityIndicatorView* _bottomSpinner;
	RefreshControl* _refreshControl;
	AnimatedSpinner* _firstLoadSpinner;
	EmptyDogeView* _emptyView;

}

@property (nonatomic,retain) UIActivityIndicatorView * bottomSpinner;                    //@synthesize bottomSpinner=_bottomSpinner - In the implementation block
@property (nonatomic,retain) RefreshControl * refreshControl;                            //@synthesize refreshControl=_refreshControl - In the implementation block
@property (nonatomic,retain) AnimatedSpinner * firstLoadSpinner;                         //@synthesize firstLoadSpinner=_firstLoadSpinner - In the implementation block
@property (nonatomic,retain) FloatingHeaderManager * floatingHeaderManager;              //@synthesize floatingHeaderManager=_floatingHeaderManager - In the implementation block
@property (assign,nonatomic) BOOL hasStartedObservingScrollViewOffset;                   //@synthesize hasStartedObservingScrollViewOffset=_hasStartedObservingScrollViewOffset - In the implementation block
@property (assign,nonatomic) BOOL allowObservingScrollViewContentOffset;                 //@synthesize allowObservingScrollViewContentOffset=_allowObservingScrollViewContentOffset - In the implementation block
@property (nonatomic,retain) EmptyDogeView * emptyView;                                  //@synthesize emptyView=_emptyView - In the implementation block
@property (nonatomic,copy) NSArray * currentObjects;                                     //@synthesize currentObjects=_currentObjects - In the implementation block
@property (assign,nonatomic) BOOL isCurrentQueueBusy;                                    //@synthesize isCurrentQueueBusy=_isCurrentQueueBusy - In the implementation block
@property (nonatomic,copy) NSMutableArray * currentUpdateQueue;                          //@synthesize currentUpdateQueue=_currentUpdateQueue - In the implementation block
@property (nonatomic,retain) ListingNetworkSource * listingNetworkSource;                //@synthesize listingNetworkSource=_listingNetworkSource - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL isUpdateQueueBusy; 
-(void)layoutViewsForFrame:(CGRect)arg1 ;
-(void)updateContentViewsForData:(id)arg1 ;
-(void)updateContentViewsForData:(id)arg1 changeKeyPath:(id)arg2 oldValue:(id)arg3 newValue:(id)arg4 ;
-(void)contentScrollViewContentInsetsDidChange;
-(AnimatedSpinner *)firstLoadSpinner;
-(double)maxFloatingTransformY;
-(void)willMoveFloatingHeaderViewWithTransformY:(double)arg1 ;
-(void)setListingNetworkSource:(ListingNetworkSource *)arg1 ;
-(NSArray *)currentObjects;
-(id)majorContentScrollView;
-(void)updateContentViewsWhenReloadFinishes;
-(void)updateContentViewsWhenLoadingMoreFinishes;
-(EmptyDogeView *)emptyView;
-(FloatingHeaderManager *)floatingHeaderManager;
-(void)setCurrentObjects:(NSArray *)arg1 ;
-(void)listingNetworkSourceDidParseNewData:(id)arg1 ;
-(ListingNetworkSource *)listingNetworkSource;
-(void)notifyPossibleCellsAboutViewDisappearing;
-(double)initialFloatingResistanceDistance;
-(id)majorContentView;
-(void)listingNetworkSourceDidFetchData:(id)arg1 ;
-(void)listingNetworkSourceDidFetchMoreData:(id)arg1 ;
-(void)listingNetworkSourceDidFail:(id)arg1 ;
-(void)listingNetworkSourceDidStartFetching:(id)arg1 ;
-(void)handleAppDidEnterForeground;
-(void)floatingHeaderShouldMove:(id)arg1 ;
-(void)reloadContentFromNetworkSource;
-(BOOL)shouldScrollContentViewToTop;
-(void)handleAppDidEnterBackground;
-(void)setFirstLoadSpinner:(AnimatedSpinner *)arg1 ;
-(void)setFloatingHeaderManager:(FloatingHeaderManager *)arg1 ;
-(void)removeEmptyWelcomeView;
-(void)reloadDataSafelyWithObjects:(id)arg1 ;
-(void)markQueueAsFreeAndTriggerNextUpdate;
-(void)queueNewObjects:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)reloadDataSafely;
-(BOOL)hasStartedObservingScrollViewOffset;
-(void)fetchDataInExtraConditions;
-(void)updateContentScrollViewInsets;
-(void)notifyPossibleCellsAboutViewAppearing;
-(UIActivityIndicatorView *)bottomSpinner;
-(void)setHasStartedObservingScrollViewOffset:(BOOL)arg1 ;
-(void)setAllowObservingScrollViewContentOffset:(BOOL)arg1 ;
-(void)didPullToRefresh:(id)arg1 ;
-(NSMutableArray *)currentUpdateQueue;
-(void)triggerDeferredViewUpdates;
-(void)setIsCurrentQueueBusy:(BOOL)arg1 ;
-(BOOL)isCurrentQueueBusy;
-(void)displayEmptyWelcomeView;
-(void)updateBottomSpinner;
-(BOOL)allowObservingScrollViewContentOffset;
-(void)fetchMoreContentIfNecessary;
-(void)setCurrentUpdateQueue:(NSMutableArray *)arg1 ;
-(BOOL)isUpdateQueueBusy;
-(void)setIsUpdateQueueBusy:(BOOL)arg1 ;
-(void)setBottomSpinner:(UIActivityIndicatorView *)arg1 ;
-(void)setEmptyView:(EmptyDogeView *)arg1 ;
-(void)dealloc;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)viewDidLayoutSubviews;
-(void)setRefreshControl:(RefreshControl *)arg1 ;
-(RefreshControl *)refreshControl;
-(void)viewDidLoad;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
@end

