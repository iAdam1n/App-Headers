/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:34:06 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/3DFA7E95-0979-4D86-B373-C986386EF259/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol TWTRNetworkingResponseValidating, OS_dispatch_queue;
@class NSObject, NSError, NSOperationQueue, NSURLSession, NSMapTable, NSHashTable, NSMutableSet;

@interface TWTRNetworkingPipelineQueue : NSObject {

	BOOL _fetchingSession;
	BOOL _logNetworkRequest;
	long long _queueType;
	id<TWTRNetworkingResponseValidating> _responseValidator;
	NSObject*<OS_dispatch_queue> _serialAccessQueue;
	NSObject*<OS_dispatch_queue> _cancellationSupportQueue;
	id _session;
	NSError* _sessionFetchError;
	NSOperationQueue* _operationQueue;
	NSURLSession* _URLSession;
	NSMapTable* _inFlightTasks;
	NSHashTable* _invokedPackages;
	NSMutableSet* _pendingCancellations;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> serialAccessQueue;                      //@synthesize serialAccessQueue=_serialAccessQueue - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> cancellationSupportQueue;               //@synthesize cancellationSupportQueue=_cancellationSupportQueue - In the implementation block
@property (assign,getter=isFetchingSession,nonatomic) BOOL fetchingSession;                         //@synthesize fetchingSession=_fetchingSession - In the implementation block
@property (nonatomic,retain) id session;                                                            //@synthesize session=_session - In the implementation block
@property (nonatomic,retain) NSError * sessionFetchError;                                           //@synthesize sessionFetchError=_sessionFetchError - In the implementation block
@property (nonatomic,readonly) NSOperationQueue * operationQueue;                                   //@synthesize operationQueue=_operationQueue - In the implementation block
@property (nonatomic,readonly) NSURLSession * URLSession;                                           //@synthesize URLSession=_URLSession - In the implementation block
@property (nonatomic,readonly) NSMapTable * inFlightTasks;                                          //@synthesize inFlightTasks=_inFlightTasks - In the implementation block
@property (nonatomic,readonly) NSHashTable * invokedPackages;                                       //@synthesize invokedPackages=_invokedPackages - In the implementation block
@property (nonatomic,readonly) NSMutableSet * pendingCancellations;                                 //@synthesize pendingCancellations=_pendingCancellations - In the implementation block
@property (nonatomic,readonly) BOOL logNetworkRequest;                                              //@synthesize logNetworkRequest=_logNetworkRequest - In the implementation block
@property (nonatomic,readonly) long long queueType;                                                 //@synthesize queueType=_queueType - In the implementation block
@property (nonatomic,readonly) id<TWTRNetworkingResponseValidating> responseValidator;              //@synthesize responseValidator=_responseValidator - In the implementation block
+(id)fetchCancelledErrorForPackage:(id)arg1 ;
+(id)sessionFetchFailureError;
+(id)guestPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2 ;
+(id)userPipelineQueueWithURLSession:(id)arg1 responseValidator:(id)arg2 ;
-(BOOL)validateResponse:(id)arg1 data:(id)arg2 error:(id*)arg3 ;
-(id)initWithType:(long long)arg1 URLSession:(id)arg2 responseValidator:(id)arg3 ;
-(void)markPackageAsCancelled:(id)arg1 ;
-(void)fetchSessionIfNeededForPackage:(id)arg1 ;
-(id)requestSigningOperationWithPackage:(id)arg1 ;
-(/*^block*/id)requestSigningSuccessBlock:(id)arg1 ;
-(/*^block*/id)requestSigningCancelBlock:(id)arg1 ;
-(id)guestRequestSigningOperationWithPackage:(id)arg1 successBlock:(/*^block*/id)arg2 cancelBlock:(/*^block*/id)arg3 ;
-(id)userRequestSigningOperationWithPackage:(id)arg1 successBlock:(/*^block*/id)arg2 cancelBlock:(/*^block*/id)arg3 ;
-(void)sendRequestForPackage:(id)arg1 withSignedRequest:(id)arg2 ;
-(void)invokeCancelCallbackForPackage:(id)arg1 ;
-(BOOL)isFetchingSession;
-(void)beginFetchingOrRefreshingSession;
-(void)fetchSessionForPackage:(id)arg1 ;
-(void)setSessionFetchError:(NSError *)arg1 ;
-(void)handleSessionStoreResponse:(id)arg1 error:(id)arg2 ;
-(id)enqueuePipelinePackage:(id)arg1 ;
-(void)cancelAllPendingRequests;
-(void)endFetchingOrRefreshingSession;
-(void)setFetchingSession:(BOOL)arg1 ;
-(NSMapTable *)inFlightTasks;
-(void)withCancellationSupportQueueAsync:(/*^block*/id)arg1 ;
-(NSMutableSet *)pendingCancellations;
-(void)invokeCallbackForPackage:(id)arg1 withData:(id)arg2 response:(id)arg3 error:(id)arg4 ;
-(void)withCancellationSupportQueueSync:(/*^block*/id)arg1 ;
-(NSObject*<OS_dispatch_queue>)cancellationSupportQueue;
-(BOOL)isPackageCancelled:(id)arg1 shouldRemoveIfNecessary:(BOOL)arg2 ;
-(void)syncLocalTime:(id)arg1 ;
-(void)packageRequest:(id)arg1 session:(id)arg2 didReceiveError:(id)arg3 ;
-(void)packageRequest:(id)arg1 session:(id)arg2 didReceiveResponse:(id)arg3 data:(id)arg4 ;
-(void)appendInFlightTask:(id)arg1 forPackage:(id)arg2 ;
-(void)refreshSession:(id)arg1 forPackage:(id)arg2 ;
-(NSError *)sessionFetchError;
-(NSHashTable *)invokedPackages;
-(id<TWTRNetworkingResponseValidating>)responseValidator;
-(BOOL)logNetworkRequest;
-(NSOperationQueue *)operationQueue;
-(void)setSession:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)serialAccessQueue;
-(NSURLSession *)URLSession;
-(long long)queueType;
-(id)session;
@end

