/*
* This header is generated by classdump-dyld 1.0
* on Friday, September 2, 2016 at 11:33:35 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/B5820A38-022A-49BE-9A80-72DC946299E2/Reddit.app/Reddit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Reddit/MPRewardedVideoAdManagerDelegate.h>

@protocol MPRewardedVideoDelegate;
@class NSMutableDictionary, NSString;

@interface MPRewardedVideo : NSObject <MPRewardedVideoAdManagerDelegate> {

	NSMutableDictionary* _rewardedVideoAdManagers;
	id<MPRewardedVideoDelegate> _delegate;

}

@property (nonatomic,retain) NSMutableDictionary * rewardedVideoAdManagers;              //@synthesize rewardedVideoAdManagers=_rewardedVideoAdManagers - In the implementation block
@property (assign,nonatomic,__weak) id<MPRewardedVideoDelegate> delegate;                //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)loadRewardedVideoAdWithAdUnitID:(id)arg1 withMediationSettings:(id)arg2 ;
+(BOOL)hasAdAvailableForAdUnitID:(id)arg1 ;
+(void)presentRewardedVideoAdForAdUnitID:(id)arg1 fromViewController:(id)arg2 ;
+(void)initializeWithDelegate:(id)arg1 ;
+(id)sharedInstance;
-(void)rewardedVideoDidLoadForAdManager:(id)arg1 ;
-(void)rewardedVideoDidFailToPlayForAdManager:(id)arg1 error:(id)arg2 ;
-(void)rewardedVideoDidFailToLoadForAdManager:(id)arg1 error:(id)arg2 ;
-(void)rewardedVideoDidExpireForAdManager:(id)arg1 ;
-(void)rewardedVideoWillAppearForAdManager:(id)arg1 ;
-(void)rewardedVideoDidAppearForAdManager:(id)arg1 ;
-(void)rewardedVideoWillDisappearForAdManager:(id)arg1 ;
-(void)rewardedVideoDidDisappearForAdManager:(id)arg1 ;
-(void)rewardedVideoDidReceiveTapEventForAdManager:(id)arg1 ;
-(void)rewardedVideoWillLeaveApplicationForAdManager:(id)arg1 ;
-(void)rewardedVideoShouldRewardUserForAdManager:(id)arg1 reward:(id)arg2 ;
-(NSMutableDictionary *)rewardedVideoAdManagers;
-(void)setRewardedVideoAdManagers:(NSMutableDictionary *)arg1 ;
-(void)setDelegate:(id<MPRewardedVideoDelegate>)arg1 ;
-(id)init;
-(id<MPRewardedVideoDelegate>)delegate;
@end

