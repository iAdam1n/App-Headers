/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:28 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol FlurryHttpAsyncTaskDelegate;
@class NSMutableData, NSHTTPURLResponse, FlurryHttpAsyncTask, NSError;

@interface FlurryConnectionDelegate : NSObject {

	NSMutableData* _body;
	NSHTTPURLResponse* _response;
	id<FlurryHttpAsyncTaskDelegate> _httpTaskDelegate;
	FlurryHttpAsyncTask* _httpTask;
	NSError* _error;
	BOOL _done;

}

@property (nonatomic,readonly) NSHTTPURLResponse * response;                                //@synthesize response=_response - In the implementation block
@property (nonatomic,readonly) NSMutableData * body;                                        //@synthesize body=_body - In the implementation block
@property (nonatomic,readonly) NSError * error;                                             //@synthesize error=_error - In the implementation block
@property (nonatomic,retain) id<FlurryHttpAsyncTaskDelegate> httpTaskDelegate;              //@synthesize httpTaskDelegate=_httpTaskDelegate - In the implementation block
@property (nonatomic,retain) FlurryHttpAsyncTask * httpTask;                                //@synthesize httpTask=_httpTask - In the implementation block
-(void)setHttpTaskDelegate:(id<FlurryHttpAsyncTaskDelegate>)arg1 ;
-(void)setHttpTask:(FlurryHttpAsyncTask *)arg1 ;
-(id<FlurryHttpAsyncTaskDelegate>)httpTaskDelegate;
-(FlurryHttpAsyncTask *)httpTask;
-(id)constructResponse;
-(id)initWithTaskDelegate:(id)arg1 taskParent:(id)arg2 ;
-(void)connectionCanceled;
-(void)dealloc;
-(id)init;
-(NSMutableData *)body;
-(NSHTTPURLResponse *)response;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(NSError *)error;
-(BOOL)isDone;
-(id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3 ;
-(id)connection:(id)arg1 willCacheResponse:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 ;
-(void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2 ;
@end

