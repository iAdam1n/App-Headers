/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:26 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <SportyTrader/SportyTrader-Structs.h>
#import <UIKit/UIView.h>
#import <SportyTrader/AdMarvelFullScreenDelegate.h>

@protocol AdMarvelDelegate, AdMarvelFullScreenDelegate;
@class MPMoviePlayerController, UIWindow, UIView, UIToolbar, NSObject, NSURL, UIActivityIndicatorView, UIImageView, NSArray, UILabel, NSString, AdMarvelFullScreenController, NSTimer, NSNumber, NSMutableArray, NSMutableDictionary, AdMarvelMovieViewToolBarItem, UIColor;

@interface AdMarvelMovieView : UIView <AdMarvelFullScreenDelegate> {

	MPMoviePlayerController* moviePlayer;
	UIWindow* moviePlayerWindow;
	UIView* moviePlayerView;
	UIView* backgroundView;
	UIToolbar* overlayToolBar;
	BOOL overlayToolBarAnimating;
	NSObject*<AdMarvelDelegate> adMarvelDelegate;
	NSObject*<AdMarvelFullScreenDelegate> callbackObject;
	NSURL* movieURL;
	long long initialStatusBarOrientation;
	BOOL initialStatusBarHiddenState;
	UIActivityIndicatorView* movieLoadingIndicator;
	UIImageView* loadingImageView;
	NSArray* loadingImageDisplayEvents;
	UILabel* adSkipTimerNotificationLabel;
	NSString* adSkipLabelFormat;
	AdMarvelFullScreenController* fullScreenController;
	long long scalingMode;
	BOOL displayOverlayView;
	BOOL isPlaying;
	BOOL forceQuit;
	BOOL playAfterLoad;
	BOOL loading;
	BOOL fadingIn;
	BOOL playAfterFadeIn;
	BOOL toggleToolbar;
	NSString* videoOpenURLBehavior;
	BOOL openURLTapped;
	NSTimer* doneButtonDisplayTimer;
	NSNumber* videoDuration;
	NSMutableArray* pixelFireItemsForProgress;
	NSMutableDictionary* pixelFireItemsForEvents;
	NSTimer* moviePlayerCurrentPlaybackTimeCallbackTimer;
	NSMutableDictionary* toggleBarButtonItemsDictionary;
	AdMarvelMovieViewToolBarItem* videoTimerToolbarItem;
	dispatch_queue_sRef secondaryQueueForPixelFiring;
	NSTimer* videoTimer;
	NSNumber* originalVolume;
	long long delayInDisplayingDoneButton;
	NSTimer* hideToolbarTimer;
	NSString* initialMute;
	BOOL muteVideoOnStartUp;
	int desiredInterfaceOrientation;
	int moviePlayerStatus;
	BOOL moviePlayerNotificationsAreSet;
	BOOL applicationStateChangeNotificationAreSet;
	BOOL pauseVideoAfterPlay;
	double currentPlaybackTime;
	BOOL toolbarShouldBeInitiallyVisible;
	BOOL pauseVideoWhenAppEntersBackground;
	BOOL forceQuitOnInAppBrowserClose;
	NSTimer* displayToolbarWhenStuckTimer;
	NSTimer* displayQuitButtonTimer;
	int bufferTime;
	int maxBufferTime;
	UIColor* toolbarTintColor;
	int _playerMuteStatus;

}

@property (nonatomic,retain) NSTimer * hideToolbarTimer; 
@property (nonatomic,retain) NSTimer * displayToolbarWhenStuckTimer; 
@property (nonatomic,retain) NSTimer * displayQuitButtonTimer; 
@property (nonatomic,retain) NSNumber * originalVolume; 
@property (nonatomic,retain) UIColor * toolbarTintColor; 
@property (assign,nonatomic) int playerMuteStatus;                                //@synthesize playerMuteStatus=_playerMuteStatus - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setAdMarvelDelegate:(id)arg1 ;
-(void)handleFullScreenModalViewClosedNotification;
-(void)closeFullScreenViewFinished;
-(void)openFullScreenViewFinished;
-(void)fullScreenControllerViewDidAppear;
-(void)fullScreenControllerViewDidDisappear;
-(id)videoOpenURLBehavior;
-(void)firePixelWithCurrentTime:(double)arg1 andEvent:(id)arg2 ;
-(void)setAdMarvelFullScreenDelegate:(id)arg1 ;
-(int)convertInterfaceOrientationStringToUIInterfaceOrientation:(id)arg1 ;
-(void)overlayDoneButtonPress:(id)arg1 ;
-(void)rotateToolBar:(long long)arg1 ;
-(void)setPlayerMuteStatus:(int)arg1 ;
-(void)overlaySheetPresented:(id)arg1 ;
-(void)overlaySheetDismissed:(id)arg1 ;
-(NSTimer *)hideToolbarTimer;
-(void)setHideToolbarTimer:(NSTimer *)arg1 ;
-(void)setOriginalVolume:(NSNumber *)arg1 ;
-(NSTimer *)displayToolbarWhenStuckTimer;
-(void)setDisplayToolbarWhenStuckTimer:(NSTimer *)arg1 ;
-(NSTimer *)displayQuitButtonTimer;
-(void)setDisplayQuitButtonTimer:(NSTimer *)arg1 ;
-(void)releaseToolbarTimer;
-(void)releaseVideoTimer;
-(void)removeMovieNotifications;
-(void)overlayQuitButtonPress:(id)arg1 ;
-(void)hideToolbarAnimated;
-(void)stopPlayback:(BOOL)arg1 ;
-(void)pausePlayback:(BOOL)arg1 firePauseEventPixels:(BOOL)arg2 ;
-(BOOL)loadMovie:(id)arg1 ;
-(void)fadeIntoView:(BOOL)arg1 ;
-(void)updateVideoTimeCallback;
-(void)setupMovieNotifications;
-(void)setApplicationStateChangeNotifications;
-(void)setMoviePlayerSettings;
-(void)setAudioRouteChangeListener;
-(int)playerMuteStatus;
-(void)muteAudio;
-(void)toggleAllMuteItems;
-(void)removeAudioRouteChangeListener;
-(void)setupBackgroundView;
-(BOOL)toolbarHasDoneButton;
-(void)displayQuitButton;
-(void)toggleAllPauseItems:(BOOL)arg1 stopItemsToo:(BOOL)arg2 ;
-(void)closeFullScreen:(BOOL)arg1 ;
-(void)toggleAllResumeItems:(BOOL)arg1 replayItemsToo:(BOOL)arg2 ;
-(void)moviePlayBackDidFinish:(id)arg1 ;
-(void)moviePlayerLoadStateDidChange:(id)arg1 ;
-(void)movieScalingModeDidChange:(id)arg1 ;
-(void)moviePlaybackStateDidChange:(id)arg1 ;
-(void)applicationFailedToHandleRequest:(id)arg1 ;
-(void)moviePlayerCurrentPlaybackTimeCallback;
-(id)createToolBarItemFromXMLDetails:(id)arg1 ;
-(void)parseURLTrackingXML:(id)arg1 ;
-(void)overlayOpenURLPress:(id)arg1 ;
-(void)overlayPlayNewMoviePress:(id)arg1 ;
-(void)overlayReplayPress:(id)arg1 ;
-(void)overlayStopPress:(id)arg1 ;
-(void)overlayPausePress:(id)arg1 ;
-(void)overlayResumePress:(id)arg1 ;
-(void)overlayMutePress:(id)arg1 ;
-(void)overlayUnmutePress:(id)arg1 ;
-(id)returnFormattedTimeForVideoTimer:(int)arg1 withPrefix:(id)arg2 ;
-(id)createToolBarItemFromItemAttributes:(id)arg1 withType:(id)arg2 action:(id)arg3 tracking:(id)arg4 ;
-(id)returnPixelsArrayFromPixelsData:(id)arg1 ;
-(void)closeFullScreenWithAnimations:(BOOL)arg1 ;
-(NSNumber *)originalVolume;
-(void)removeApplicationStateChangeNotifications;
-(void)updateVideoTimer:(int)arg1 withPrefix:(id)arg2 ;
-(void)startMoviePlaying;
-(void)displayToolbar;
-(void)moviePreloadDidFinish:(id)arg1 ;
-(void)showToolbarAnimated;
-(void)rotateMoviePlayerWindow:(long long)arg1 ;
-(void)changeVideoPlayingStateBasedOnVideoOpenURLBehavior;
-(void)resumePlayback:(BOOL)arg1 fireResumeEventPixels:(BOOL)arg2 ;
-(void)rotateWindowForLockOrientation:(int)arg1 shouldRotateMovieView:(BOOL)arg2 ;
-(void)resetToolbarHidingTimer;
-(void)removeAllTrackers;
-(void)closeVideoInterstitial;
-(void)firePixelsForTappedEvent:(id)arg1 ;
-(void)toggleItemIfNeeded:(id)arg1 ;
-(void)unhideTimerItemIfPresent;
-(void)removeAllEventTrackersExceptClose;
-(BOOL)playAnotherMovie:(id)arg1 ;
-(void)hideTimerItemIfPresent;
-(void)toggleAllUnmuteItems;
-(id)initWithWithAdMarvelDelegate:(id)arg1 callbackHandler:(id)arg2 ;
-(void)hideOverlay:(BOOL)arg1 ;
-(BOOL)loadAndPlayMovie:(id)arg1 ;
-(void)playMovie;
-(BOOL)parseCustomAdXMLData:(id)arg1 ofType:(id)arg2 ;
-(void)initializeEventTrackingItems:(id)arg1 ;
-(void)setForceQuit:(BOOL)arg1 ;
-(void)rotationHandler:(id)arg1 ;
-(void)removeAllTrackersAndResetForForceFullClose;
-(void)closeVideoInterstitialForcefullyWithAnimations:(BOOL)arg1 ;
-(void)eventEditViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(void)play;
-(void)dealloc;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)setToolbarTintColor:(UIColor *)arg1 ;
-(void)pause;
-(void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3 ;
-(void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2 ;
-(void)showDoneButton;
-(UIColor *)toolbarTintColor;
@end

