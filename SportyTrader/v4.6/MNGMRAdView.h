/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:29 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <SportyTrader/SportyTrader-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UIWebViewDelegate.h>
#import <SportyTrader/MNGAdDestinationDisplayAgentDelegate.h>
#import <SportyTrader/MNGMRCalendarManagerDelegate.h>
#import <SportyTrader/MNGMRPictureManagerDelegate.h>
#import <SportyTrader/MNGMRVideoPlayerManagerDelegate.h>

@protocol MRAdViewDelegate, MNGAdAlertManagerProtocol;
@class UIWebView, UIButton, NSMutableData, MNGMRAdViewDisplayController, MNGAdDestinationDisplayAgent, MNGMRCalendarManager, MNGMRPictureManager, MNGMRVideoPlayerManager, MNGMRJavaScriptEventEmitter, UITapGestureRecognizer, NSString;

@interface MNGMRAdView : UIView <UIGestureRecognizerDelegate, UIWebViewDelegate, MNGAdDestinationDisplayAgentDelegate, MNGMRCalendarManagerDelegate, MNGMRPictureManagerDelegate, MNGMRVideoPlayerManagerDelegate> {

	id<MRAdViewDelegate> _delegate;
	UIWebView* _webView;
	UIButton* _closeButton;
	NSMutableData* _data;
	MNGMRAdViewDisplayController* _displayController;
	BOOL _isLoading;
	long long _modalViewCount;
	BOOL _usesCustomCloseButton;
	unsigned long long _closeButtonStyle;
	BOOL _allowsExpansion;
	BOOL _expanded;
	unsigned long long _placementType;
	unsigned long long _adType;
	BOOL _userTappedWebView;
	MNGAdDestinationDisplayAgent* _destinationDisplayAgent;
	MNGMRCalendarManager* _calendarManager;
	MNGMRPictureManager* _pictureManager;
	MNGMRVideoPlayerManager* _videoPlayerManager;
	MNGMRJavaScriptEventEmitter* _jsEventEmitter;
	id<MNGAdAlertManagerProtocol> _adAlertManager;
	UITapGestureRecognizer* _tapRecognizer;

}

@property (assign,nonatomic) id<MRAdViewDelegate> delegate;                                       //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL usesCustomCloseButton;                                          //@synthesize usesCustomCloseButton=_usesCustomCloseButton - In the implementation block
@property (assign,nonatomic) BOOL expanded;                                                       //@synthesize expanded=_expanded - In the implementation block
@property (nonatomic,retain) MNGMRAdViewDisplayController * displayController;                    //@synthesize displayController=_displayController - In the implementation block
@property (assign,nonatomic) unsigned long long adType;                                           //@synthesize adType=_adType - In the implementation block
@property (nonatomic,retain) NSMutableData * data;                                                //@synthesize data=_data - In the implementation block
@property (nonatomic,retain) MNGAdDestinationDisplayAgent * destinationDisplayAgent;              //@synthesize destinationDisplayAgent=_destinationDisplayAgent - In the implementation block
@property (nonatomic,retain) MNGMRCalendarManager * calendarManager;                              //@synthesize calendarManager=_calendarManager - In the implementation block
@property (nonatomic,retain) MNGMRPictureManager * pictureManager;                                //@synthesize pictureManager=_pictureManager - In the implementation block
@property (nonatomic,retain) MNGMRVideoPlayerManager * videoPlayerManager;                        //@synthesize videoPlayerManager=_videoPlayerManager - In the implementation block
@property (nonatomic,retain) MNGMRJavaScriptEventEmitter * jsEventEmitter;                        //@synthesize jsEventEmitter=_jsEventEmitter - In the implementation block
@property (nonatomic,retain) id<MNGAdAlertManagerProtocol> adAlertManager;                        //@synthesize adAlertManager=_adAlertManager - In the implementation block
@property (assign,nonatomic) BOOL userTappedWebView;                                              //@synthesize userTappedWebView=_userTappedWebView - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * tapRecognizer;                              //@synthesize tapRecognizer=_tapRecognizer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setAdType:(unsigned long long)arg1 ;
-(void)adDidLoad;
-(id)viewControllerForPresentingModalView;
-(void)adWillClose;
-(void)adDidClose;
-(BOOL)isViewable;
-(void)setCalendarManager:(MNGMRCalendarManager *)arg1 ;
-(MNGMRCalendarManager *)calendarManager;
-(void)adAlertManagerDidTriggerAlert:(id)arg1 ;
-(id)viewControllerForPresentingMailVC;
-(void)displayAgentWillPresentModal;
-(void)displayAgentDidDismissModal;
-(void)displayAgentWillLeaveApplication;
-(void)setDestinationDisplayAgent:(MNGAdDestinationDisplayAgent *)arg1 ;
-(void)setAdAlertManager:(id<MNGAdAlertManagerProtocol>)arg1 ;
-(id<MNGAdAlertManagerProtocol>)adAlertManager;
-(MNGAdDestinationDisplayAgent *)destinationDisplayAgent;
-(void)initAdAlertManager;
-(void)performActionForMoPubSpecificURL:(id)arg1 ;
-(void)layoutCloseButton;
-(id)initWithFrame:(CGRect)arg1 allowsExpansion:(BOOL)arg2 closeButtonStyle:(unsigned long long)arg3 placementType:(unsigned long long)arg4 ;
-(void)loadCreativeWithHTMLString:(id)arg1 baseURL:(id)arg2 ;
-(void)setTapRecognizer:(UITapGestureRecognizer *)arg1 ;
-(void)setUserTappedWebView:(BOOL)arg1 ;
-(BOOL)userTappedWebView;
-(BOOL)safeHandleDisplayDestinationForURL:(id)arg1 ;
-(id)MRAIDScriptPath;
-(void)adDidFailToLoad;
-(id)HTMLWithJavaScriptBridge:(id)arg1 ;
-(BOOL)HTMLStringIsMRAIDFragment:(id)arg1 ;
-(id)fullHTMLFromMRAIDFragment:(id)arg1 ;
-(MNGMRPictureManager *)pictureManager;
-(MNGMRVideoPlayerManager *)videoPlayerManager;
-(BOOL)handleUserInteractionRequiredMRAIDCommand:(id)arg1 parameters:(id)arg2 ;
-(BOOL)shouldExecuteMRCommand:(id)arg1 ;
-(MNGMRJavaScriptEventEmitter *)jsEventEmitter;
-(void)handleCommandWithURL:(id)arg1 ;
-(void)initializeJavascriptState;
-(void)adWillPresentModalView;
-(void)adDidDismissModalView;
-(void)appShouldSuspend;
-(void)appShouldResume;
-(id)viewControllerForPresentingCalendarEditor;
-(void)calendarManagerWillPresentCalendarEditor:(id)arg1 ;
-(void)calendarManagerDidDismissCalendarEditor:(id)arg1 ;
-(void)calendarManager:(id)arg1 didFailToCreateCalendarEventWithErrorMessage:(id)arg2 ;
-(void)pictureManager:(id)arg1 didFailToStorePictureWithErrorMessage:(id)arg2 ;
-(id)viewControllerForPresentingVideoPlayer;
-(void)videoPlayerManagerWillPresentVideo:(id)arg1 ;
-(void)videoPlayerManagerDidDismissVideo:(id)arg1 ;
-(void)videoPlayerManager:(id)arg1 didFailToPlayVideoWithErrorMessage:(id)arg2 ;
-(void)setUsesCustomCloseButton:(BOOL)arg1 ;
-(void)loadCreativeFromURL:(id)arg1 ;
-(id)placementType;
-(void)handleMRAIDOpenCallForURL:(id)arg1 ;
-(void)adWillExpandToFrame:(CGRect)arg1 ;
-(void)adDidExpandToFrame:(CGRect)arg1 ;
-(void)adDidRequestCustomCloseEnabled:(BOOL)arg1 ;
-(void)adViewableDidChange:(BOOL)arg1 ;
-(BOOL)usesCustomCloseButton;
-(void)setPictureManager:(MNGMRPictureManager *)arg1 ;
-(void)setVideoPlayerManager:(MNGMRVideoPlayerManager *)arg1 ;
-(void)setJsEventEmitter:(MNGMRJavaScriptEventEmitter *)arg1 ;
-(void)setDisplayController:(MNGMRAdViewDisplayController *)arg1 ;
-(MNGMRAdViewDisplayController *)displayController;
-(void)dealloc;
-(void)setDelegate:(id<MRAdViewDelegate>)arg1 ;
-(id<MRAdViewDelegate>)delegate;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(NSMutableData *)data;
-(void)setData:(NSMutableData *)arg1 ;
-(void)setExpanded:(BOOL)arg1 ;
-(BOOL)expanded;
-(void)rotateToOrientation:(long long)arg1 ;
-(void)loadRequest:(id)arg1 ;
-(void)loadHTMLString:(id)arg1 baseURL:(id)arg2 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)connection:(id)arg1 didFailWithError:(id)arg2 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(void)connectionDidFinishLoading:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveResponse:(id)arg2 ;
-(void)handleTap:(id)arg1 ;
-(unsigned long long)adType;
-(UITapGestureRecognizer *)tapRecognizer;
@end

