/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:26 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@protocol NMSPTransactionSystemDelegate;
#import <SportyTrader/SportyTrader-Structs.h>
@class NSMutableArray, NMSPTransaction, NSString, NSURL, NSObject, NSError, AVAudioPlayer;

@interface NMSPTransactionSystem : NSObject {

	nmsp_Manager_Ref manager;
	nmsp_Calllog_Ref callog;
	nmsp_calllog_SessionEvent_Ref speechKitLog;
	nmsp_calllog_SessionEvent_Ref appLog;
	nmsp_NmasResource_Ref nmas_resource;
	nmsp_Resource_Ref nmsp_resource;
	NSMutableArray* activeTransactions;
	NMSPTransaction* currentUiTransaction;
	nmsp_audio_Recorder_Ref main_recorder;
	id current_trans;
	BOOL audioSystemInitialized;
	NSString* sessionID;
	BOOL isConnected;
	NSURL* audioDataListening;
	NSURL* audioDataDoneListening;
	NSURL* audioDataError;
	NSString* appVersion;
	NSString* appID;
	NSString* host;
	long long port;
	NSString* subscriberID;
	NSObject*<NMSPTransactionSystemDelegate> delegate;
	NSError* errListen;
	NSError* errDone;
	NSError* errError;
	AVAudioPlayer* earconStartPlayer;
	AVAudioPlayer* earconStopPlayer;
	AVAudioPlayer* earconCancelPlayer;
	BOOL ssl_enabled;
	BOOL destroying;
	int commandType;
	unsigned savedAudioCategory;
	char* _appKey;

}

@property (nonatomic,readonly) NSString * sessionID; 
@property (nonatomic,readonly) BOOL isConnected; 
@property (assign,nonatomic) BOOL destroying; 
+(id)currentUiTransaction;
+(void)setEarcon:(id)arg1 forType:(unsigned long long)arg2 ;
+(void)initializeInstanceWithID:(id)arg1 appVersion:(id)arg2 host:(id)arg3 port:(long long)arg4 useSSL:(BOOL)arg5 appKey:(const char*)arg6 appKeyLen:(int)arg7 subscriberId:(id)arg8 delegate:(id)arg9 cmdtype:(int)arg10 ;
+(BOOL)isCurrentTransaction:(id)arg1 ;
+(void)destroy;
+(void)reconnect;
+(id)version;
+(BOOL)isInitialized;
+(id)instance;
-(id)earconStartPlayer;
-(id)earconStopPlayer;
-(id)earconCancelPlayer;
-(void)restartRecorder;
-(void)destroyCommand:(nmsp_nmas_Command_Ref)arg1 ;
-(nmsp_nmas_Command_Ref)createCommand:(id)arg1 forTransaction:(id)arg2 withDictionary:(id)arg3 ;
-(nmsp_audio_Player_Ref)createAudioPlayer:(const /*function pointer*/void*)arg1 params:(const nmsp_Vector_Ref)arg2 userData:(void*)arg3 ;
-(nmsp_NmasResource_Ref)get_nmas_resource;
-(nmsp_nmas_Parameter_Ref)createAudioParameter:(id)arg1 ;
-(nmsp_audio_Recorder_Ref)getAudioRecorderWithSink:(void*)arg1 ;
-(float)energyLevel;
-(id)initWithID:(id)arg1 appVersion:(id)arg2 host:(id)arg3 port:(long long)arg4 useSSL:(BOOL)arg5 appKey:(const char*)arg6 appKeyLen:(int)arg7 subscriberId:(id)arg8 delegate:(id)arg9 cmdtype:(int)arg10 ;
-(void)setDestroying:(BOOL)arg1 ;
-(void)disconnectManager;
-(void)connectManagerForSelectedServer;
-(id)currentUiTransaction;
-(void)setEarcon:(id)arg1 forType:(unsigned long long)arg2 ;
-(void)initAudioSession;
-(void)createSpeechKitRecorder;
-(nmsp_audio_Recorder_Ref)createAudioRecorderUsingSink:(nmsp_general_AudioSink*)arg1 callback:(const /*function pointer*/void*)arg2 recordTime:(long long)arg3 params:(const nmsp_Vector_Ref)arg4 userData:(void*)arg5 ;
-(void)setCmdType:(int)arg1 ;
-(void)logToServer:(id)arg1 withValue:(id)arg2 ;
-(id)createForegroundTransaction:(id)arg1 ;
-(id)createBackgroundTransaction:(id)arg1 ;
-(void)deregister:(id)arg1 ;
-(void)handleManagerEvent:(int)arg1 forSession:(const char*)arg2 ;
-(id)getTransaction;
-(void)handleNmasResourceEvent:(int)arg1 ;
-(BOOL)destroying;
-(void)dealloc;
-(void)releaseAudioSession;
-(NSString *)sessionID;
-(BOOL)isConnected;
-(id)current;
-(int)commandType;
@end

