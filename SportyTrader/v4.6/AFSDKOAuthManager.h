/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:27 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <SportyTrader/SportyTrader-Structs.h>
#import <SportyTrader/AFSDKOAuthRequestDelegate.h>

@class NSRecursiveLock, NSMutableArray, AFSDKWeakTimer, AFAdUnitOAuth2Client, AFAdUnitOAuthCredential, NSString;

@interface AFSDKOAuthManager : NSObject <AFSDKOAuthRequestDelegate> {

	BOOL _authorizeForcedNewAttempt;
	NSRecursiveLock* _lock;
	dispatch_queue_sRef _mainQueue;
	NSMutableArray* _requestsList;
	AFSDKWeakTimer* _requestsFlushRetryTimer;
	AFAdUnitOAuth2Client* _credentialRequest;
	AFAdUnitOAuthCredential* _credentialData;
	unsigned long long _credentialRequestFailsNumber;
	AFSDKWeakTimer* _credentialRequestRetryTimer;

}

@property (nonatomic,retain) NSRecursiveLock * lock;                                       //@synthesize lock=_lock - In the implementation block
@property (assign,nonatomic) dispatch_queue_sRef mainQueue;                                //@synthesize mainQueue=_mainQueue - In the implementation block
@property (nonatomic,retain) NSMutableArray * requestsList;                                //@synthesize requestsList=_requestsList - In the implementation block
@property (retain) AFSDKWeakTimer * requestsFlushRetryTimer;                               //@synthesize requestsFlushRetryTimer=_requestsFlushRetryTimer - In the implementation block
@property (nonatomic,retain) AFAdUnitOAuth2Client * credentialRequest;                     //@synthesize credentialRequest=_credentialRequest - In the implementation block
@property (nonatomic,retain) AFAdUnitOAuthCredential * credentialData;                     //@synthesize credentialData=_credentialData - In the implementation block
@property (assign,nonatomic) unsigned long long credentialRequestFailsNumber;              //@synthesize credentialRequestFailsNumber=_credentialRequestFailsNumber - In the implementation block
@property (retain) AFSDKWeakTimer * credentialRequestRetryTimer;                           //@synthesize credentialRequestRetryTimer=_credentialRequestRetryTimer - In the implementation block
@property (assign,nonatomic) BOOL authorizeForcedNewAttempt;                               //@synthesize authorizeForcedNewAttempt=_authorizeForcedNewAttempt - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)startRequestWithPath:(id)arg1 method:(id)arg2 parameters:(id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 ;
+(id)startRequestWithPath:(id)arg1 method:(id)arg2 parameters:(id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 properties:(id)arg6 ;
+(id)sharedInstance;
+(void)cancelRequest:(id)arg1 ;
-(void)setMainQueue:(dispatch_queue_sRef)arg1 ;
-(void)setRequestsList:(NSMutableArray *)arg1 ;
-(void)setRequestsFlushRetryTimer:(AFSDKWeakTimer *)arg1 ;
-(void)setCredentialData:(AFAdUnitOAuthCredential *)arg1 ;
-(void)setCredentialRequest:(AFAdUnitOAuth2Client *)arg1 ;
-(void)setCredentialRequestFailsNumber:(unsigned long long)arg1 ;
-(void)setCredentialRequestRetryTimer:(AFSDKWeakTimer *)arg1 ;
-(void)setAuthorizeForcedNewAttempt:(BOOL)arg1 ;
-(id)_startRequestWithPath:(id)arg1 method:(id)arg2 parameters:(id)arg3 success:(/*^block*/id)arg4 failure:(/*^block*/id)arg5 properties:(id)arg6 ;
-(NSMutableArray *)requestsList;
-(void)_flushPendingRequests;
-(AFSDKWeakTimer *)requestsFlushRetryTimer;
-(AFAdUnitOAuthCredential *)credentialData;
-(void)_retrieveAccessToken;
-(AFSDKWeakTimer *)credentialRequestRetryTimer;
-(AFAdUnitOAuth2Client *)credentialRequest;
-(void)_handleAccessTokenRetrievalWithObject:(id)arg1 ;
-(unsigned long long)credentialRequestFailsNumber;
-(BOOL)authorizeForcedNewAttempt;
-(void)oauthRequestAsksToRefreshAccessToken:(id)arg1 ;
-(void)oauthRequestCanBeDisposedOf:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(dispatch_queue_sRef)mainQueue;
-(NSRecursiveLock *)lock;
-(void)setLock:(NSRecursiveLock *)arg1 ;
-(void)_cancelRequest:(id)arg1 ;
@end

