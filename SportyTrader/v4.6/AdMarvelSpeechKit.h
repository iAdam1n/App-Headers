/*
* This header is generated by classdump-dyld 0.7
* on Friday, August 21, 2015 at 1:49:26 AM British Summer Time
* Operating System: Version 8.4 (Build 12H143)
* Image Source: /private/var/mobile/Containers/Bundle/Application/FACE73A7-54D9-4209-946C-91D556037309/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <SportyTrader/SKVocalizerDelegate.h>
#import <SportyTrader/SKGenericCommandDelegate.h>
#import <SportyTrader/SKRecognizerDelegate.h>
#import <SportyTrader/SKDataUploadDelegate.h>
#import <SportyTrader/SpeechKitDelegate.h>
#import <SportyTrader/AVAudioPlayerDelegate.h>

@class SKRecognizer, SKVocalizer, SKGenericCommand, SKDataUpload, NSString, UIWebView, AVAudioPlayer, NSTimer;

@interface AdMarvelSpeechKit : NSObject <SKVocalizerDelegate, SKGenericCommandDelegate, SKRecognizerDelegate, SKDataUploadDelegate, SpeechKitDelegate, AVAudioPlayerDelegate> {

	BOOL samplingBGNoise;
	float averageBGNoiseLevel;
	int bgNoiseLevelSampleCount;
	SKRecognizer* skRecognizer;
	SKVocalizer* skVocalizer;
	SKGenericCommand* genericCommand;
	SKDataUpload* dataUpload;
	int customWordAction;
	int skState;
	NSString* nuance_transaction_session_id;
	int genericCommandTransactionState;
	UIWebView* webView;
	NSString* jsonresultsstring;
	NSString* appId;
	NSString* server;
	NSString* port;
	NSString* appKey;
	NSString* adSessionId;
	NSString* adId;
	AVAudioPlayer* audioPlayer;
	NSTimer* audioPosUpdateTimer;
	NSString* voiceStateChangeEventCallbackFn;
	NSString* recognitionResultEventCallbackFn;
	NSString* backgroundAudioLevelEventCallbackFn;
	NSString* voiceErrorEventCallbackFn;
	NSString* audioLevelChangeEventCallbackFn;
	NSString* customVoiceWordsAddedEventCallbackFn;
	NSString* customVoiceWordsDeletedEventCallbackFn;
	NSString* audioStartedEventCallbackFn;
	NSString* audioCompletedEventCallbackFn;
	NSString* audioPositionChangeEventCallbackFn;
	NSString* _appVersion;

}

@property (nonatomic,retain) AVAudioPlayer * audioPlayer; 
@property (nonatomic,retain) NSTimer * audioPosUpdateTimer; 
@property (assign,nonatomic) UIWebView * webView; 
@property (nonatomic,retain) NSString * jsonresultsstring; 
@property (readonly) BOOL hasRecognitionResults; 
@property (readonly) BOOL connected; 
@property (nonatomic,retain) NSString * appId; 
@property (nonatomic,retain) NSString * appVersion;                                          //@synthesize appVersion=_appVersion - In the implementation block
@property (nonatomic,retain) NSString * server; 
@property (nonatomic,retain) NSString * port; 
@property (nonatomic,retain) NSString * appKey; 
@property (nonatomic,retain) NSString * adSessionId; 
@property (nonatomic,retain) NSString * adId; 
@property (nonatomic,retain) NSString * voiceStateChangeEventCallbackFn; 
@property (nonatomic,retain) NSString * recognitionResultEventCallbackFn; 
@property (nonatomic,retain) NSString * backgroundAudioLevelEventCallbackFn; 
@property (nonatomic,retain) NSString * voiceErrorEventCallbackFn; 
@property (nonatomic,retain) NSString * audioLevelChangeEventCallbackFn; 
@property (nonatomic,retain) NSString * customVoiceWordsAddedEventCallbackFn; 
@property (nonatomic,retain) NSString * customVoiceWordsDeletedEventCallbackFn; 
@property (nonatomic,retain) NSString * audioStartedEventCallbackFn; 
@property (nonatomic,retain) NSString * audioCompletedEventCallbackFn; 
@property (nonatomic,retain) NSString * audioPositionChangeEventCallbackFn; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(NSString *)appKey;
-(void)setAppKey:(NSString *)arg1 ;
-(void)setAdId:(NSString *)arg1 ;
-(NSString *)adId;
-(void)onError:(id)arg1 ;
-(void)setAdSessionId:(NSString *)arg1 ;
-(void)playAudio:(id)arg1 autoPlay:(BOOL)arg2 controls:(BOOL)arg3 loop:(BOOL)arg4 position:(BOOL)arg5 startStyle:(id)arg6 stopStyle:(id)arg7 positionUpdatePeriodMs:(int)arg8 ;
-(void)skrelease;
-(void)skstartRecordingWithLanguage:(id)arg1 ;
-(void)skendRecording;
-(NSString *)jsonresultsstring;
-(id)getSpeechStateString;
-(void)sktextToSpeech:(id)arg1 language:(id)arg2 ;
-(float)getNormalizedAudioLevelAsFloat;
-(long long)getAudioPositionInMS;
-(void)sksampleBackgroundAudioLevel;
-(BOOL)updateCustomWordsAction:(int)arg1 words:(id)arg2 ;
-(void)registerCallback:(id)arg1 forEvent:(id)arg2 ;
-(void)unRegisterCallbackForEvent:(id)arg1 ;
-(void)setCallback:(id)arg1 forEvent:(id)arg2 ;
-(void)setVoiceStateChangeEventCallbackFn:(NSString *)arg1 ;
-(void)setAudioLevelChangeEventCallbackFn:(NSString *)arg1 ;
-(void)setRecognitionResultEventCallbackFn:(NSString *)arg1 ;
-(void)setAudioCompletedEventCallbackFn:(NSString *)arg1 ;
-(void)setVoiceErrorEventCallbackFn:(NSString *)arg1 ;
-(void)setAudioStartedEventCallbackFn:(NSString *)arg1 ;
-(void)setAudioPositionChangeEventCallbackFn:(NSString *)arg1 ;
-(void)setBackgroundAudioLevelEventCallbackFn:(NSString *)arg1 ;
-(void)setCustomVoiceWordsAddedEventCallbackFn:(NSString *)arg1 ;
-(void)setCustomVoiceWordsDeletedEventCallbackFn:(NSString *)arg1 ;
-(const char*)hexToBytes:(id)arg1 ;
-(void)updateVUMeter;
-(void)cleanupAudioPlayer;
-(void)cleanupRecognizer;
-(void)cleanupVocalizer;
-(void)cleanupDataUpload;
-(NSString *)voiceStateChangeEventCallbackFn;
-(id)usingWebView:(id)arg1 executeJavascript:(id)arg2 ;
-(void)connectSpeechKit;
-(void)changeToState:(int)arg1 ;
-(BOOL)hasRecognitionResults;
-(NSString *)recognitionResultEventCallbackFn;
-(void)setJsonresultsstring:(NSString *)arg1 ;
-(id)indexKeyedDictionaryFromArray:(id)arg1 scores:(id)arg2 ;
-(BOOL)getRecognitionResultsJSONStringFromArray:(id)arg1 ;
-(BOOL)logEventWithAdNetworkId:(id)arg1 deviceId:(id)arg2 publisherId:(id)arg3 ;
-(void)notifyRecognitionResults;
-(NSString *)backgroundAudioLevelEventCallbackFn;
-(NSString *)voiceErrorEventCallbackFn;
-(NSString *)audioLevelChangeEventCallbackFn;
-(void)updateAudioSampleLevel:(float)arg1 ;
-(float)normalizeAudioLevel:(float)arg1 ;
-(id)usingWebView:(id)arg1 executeJavascript:(id)arg2 withVarArgs:(char*)arg3 ;
-(void)cleanupGenericCommand;
-(NSString *)adSessionId;
-(NSString *)customVoiceWordsAddedEventCallbackFn;
-(NSString *)customVoiceWordsDeletedEventCallbackFn;
-(void)notifyCustomWordResult;
-(NSString *)audioStartedEventCallbackFn;
-(void)updateAudioPos;
-(void)setAudioPosUpdateTimer:(NSTimer *)arg1 ;
-(NSString *)audioCompletedEventCallbackFn;
-(NSString *)audioPositionChangeEventCallbackFn;
-(NSTimer *)audioPosUpdateTimer;
-(void)recognizer:(id)arg1 didFinishWithError:(id)arg2 suggestion:(id)arg3 ;
-(void)recognizerDidFinishRecording:(id)arg1 ;
-(void)recognizer:(id)arg1 didFinishWithResults:(id)arg2 ;
-(void)recognizerDidBeginRecording:(id)arg1 ;
-(void)vocalizer:(id)arg1 didFinishSpeakingString:(id)arg2 withError:(id)arg3 ;
-(void)vocalizer:(id)arg1 willBeginSpeakingString:(id)arg2 ;
-(void)genericCommand:(id)arg1 didFinishWithError:(id)arg2 suggestion:(id)arg3 ;
-(void)genericCommand:(id)arg1 didFinishWithResults:(id)arg2 ;
-(void)dataupload:(id)arg1 didFinishWithError:(id)arg2 suggestion:(id)arg3 ;
-(void)dataupload:(id)arg1 didFinishWithResults:(id)arg2 ;
-(void)dealloc;
-(id)init;
-(NSString *)server;
-(void)reset;
-(UIWebView *)webView;
-(void)setWebView:(UIWebView *)arg1 ;
-(NSString *)port;
-(AVAudioPlayer *)audioPlayer;
-(void)setAudioPlayer:(AVAudioPlayer *)arg1 ;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)setPort:(NSString *)arg1 ;
-(void)setServer:(NSString *)arg1 ;
-(void)destroyed;
-(void)stopAudio;
-(NSString *)appId;
-(void)setAppId:(NSString *)arg1 ;
-(NSString *)appVersion;
-(void)setAppVersion:(NSString *)arg1 ;
-(BOOL)connected;
@end

