/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 10:10:00 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/4C83B32D-E9D7-434B-B0B8-8A6C2C13527D/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SportyTrader/BaseContentViewController.h>

@class Pays, TournamentWithMatches, Match, NSArray, FicheMatchOngletVC, UIView, UILabel, UIButton, UIActivityIndicatorView, UIImageView, UIScrollView, UISegmentedControl, NSString, RequestAndTimerHolder, NSURL;

@interface FicheMatchVC : BaseContentViewController {

	Pays* _matchCountry;
	TournamentWithMatches* _matchTournament;
	Match* currentMatch;
	NSArray* typeSubviewArray;
	long long selectedTabIdentifier;
	FicheMatchOngletVC* selectedSubviewController;
	UIView* infoMatchHolderView;
	UILabel* matchNameLabel;
	UIButton* matchFavoriteButton;
	UILabel* tournamentNameLabel;
	UILabel* matchStateLabel;
	UIActivityIndicatorView* activityIndicator;
	UIImageView* team1LogoImageView;
	UILabel* team1NameLabel;
	UIButton* team1FavoriteButton;
	UIImageView* team2LogoImageView;
	UILabel* team2NameLabel;
	UIButton* team2FavoriteButton;
	UILabel* scoreLabel;
	UIView* segmentedControlContainerView;
	UIScrollView* tabScrollView;
	UISegmentedControl* tabSegmentedControl;
	UIImageView* flecheGaucheImageView;
	UIImageView* flecheDroiteImageView;
	UIScrollView* contentScrollView;
	NSString* nomImagePub;
	NSString* urlPub;
	UIButton* pubButton;
	RequestAndTimerHolder* requestHolder;
	long long preferredRefreshTime;
	BOOL isRefreshing;
	BOOL _comesFromStatsSubview;
	NSArray* _topBannerTexts;
	NSURL* _topBannerLinkURL;

}

@property (nonatomic,retain) Pays * matchCountry;                                         //@synthesize matchCountry=_matchCountry - In the implementation block
@property (nonatomic,retain) TournamentWithMatches * matchTournament;                     //@synthesize matchTournament=_matchTournament - In the implementation block
@property (nonatomic,retain) Match * currentMatch; 
@property (nonatomic,retain) NSArray * typeSubviewArray; 
@property (assign,nonatomic) long long selectedTabIdentifier; 
@property (nonatomic,retain) FicheMatchOngletVC * selectedSubviewController; 
@property (nonatomic,retain) UIView * infoMatchHolderView; 
@property (nonatomic,retain) UILabel * matchNameLabel; 
@property (nonatomic,retain) UIButton * matchFavoriteButton; 
@property (nonatomic,retain) UILabel * tournamentNameLabel; 
@property (nonatomic,retain) UILabel * matchStateLabel; 
@property (nonatomic,retain) UIActivityIndicatorView * activityIndicator; 
@property (nonatomic,retain) UIImageView * team1LogoImageView; 
@property (nonatomic,retain) UILabel * team1NameLabel; 
@property (nonatomic,retain) UIButton * team1FavoriteButton; 
@property (nonatomic,retain) UIImageView * team2LogoImageView; 
@property (nonatomic,retain) UILabel * team2NameLabel; 
@property (nonatomic,retain) UIButton * team2FavoriteButton; 
@property (nonatomic,retain) UILabel * scoreLabel; 
@property (nonatomic,retain) UIView * segmentedControlContainerView; 
@property (nonatomic,retain) UIScrollView * tabScrollView; 
@property (nonatomic,retain) UISegmentedControl * tabSegmentedControl; 
@property (nonatomic,retain) UIImageView * flecheGaucheImageView; 
@property (nonatomic,retain) UIImageView * flecheDroiteImageView; 
@property (nonatomic,retain) UIScrollView * contentScrollView; 
@property (nonatomic,retain) NSString * nomImagePub; 
@property (nonatomic,retain) NSString * urlPub; 
@property (nonatomic,retain) UIButton * pubButton; 
@property (nonatomic,retain) NSArray * topBannerTexts;                                    //@synthesize topBannerTexts=_topBannerTexts - In the implementation block
@property (nonatomic,retain) NSURL * topBannerLinkURL;                                    //@synthesize topBannerLinkURL=_topBannerLinkURL - In the implementation block
@property (nonatomic,retain) RequestAndTimerHolder * requestHolder; 
@property (assign,nonatomic) long long preferredRefreshTime; 
@property (assign,nonatomic) BOOL comesFromStatsSubview;                                  //@synthesize comesFromStatsSubview=_comesFromStatsSubview - In the implementation block
-(void)setRequestHolder:(RequestAndTimerHolder *)arg1 ;
-(void)setSelectedTabIdentifier:(long long)arg1 ;
-(void)swipeGestureToLeft;
-(void)swipeGestureToRight;
-(void)viewWillAppearRoutine;
-(void)reloadTabAndSubview;
-(RequestAndTimerHolder *)requestHolder;
-(id)getDateLastRequest;
-(void)dataUpdateRequest;
-(UISegmentedControl *)tabSegmentedControl;
-(UIScrollView *)tabScrollView;
-(void)setupTimer;
-(long long)selectedTabIdentifier;
-(FicheMatchOngletVC *)selectedSubviewController;
-(id)getURLForRequest;
-(void)requestSucceededWithData:(id)arg1 ;
-(void)requestFailedWithError:(id)arg1 ;
-(void)updateLastRequestDate;
-(void)updateSegmentedControl;
-(void)selectNewTab:(int)arg1 ;
-(void)setSelectedSubviewController:(FicheMatchOngletVC *)arg1 ;
-(id)flurryTag;
-(void)switchTab:(id)arg1 ;
-(void)setTabScrollView:(UIScrollView *)arg1 ;
-(void)setTabSegmentedControl:(UISegmentedControl *)arg1 ;
-(void)setCurrentMatch:(Match *)arg1 ;
-(UILabel *)tournamentNameLabel;
-(void)setTournamentNameLabel:(UILabel *)arg1 ;
-(UILabel *)team1NameLabel;
-(void)setTeam1NameLabel:(UILabel *)arg1 ;
-(UILabel *)team2NameLabel;
-(void)setTeam2NameLabel:(UILabel *)arg1 ;
-(void)setupFirstDisplay;
-(UILabel *)matchNameLabel;
-(Match *)currentMatch;
-(UILabel *)matchStateLabel;
-(UIView *)infoMatchHolderView;
-(UIView *)segmentedControlContainerView;
-(UILabel *)scoreLabel;
-(void)setupDisplayOfFavoriteButton:(unsigned long long)arg1 ;
-(UIImageView *)team1LogoImageView;
-(UIImageView *)team2LogoImageView;
-(void)favoriteChange:(id)arg1 ;
-(UIButton *)team1FavoriteButton;
-(UIButton *)team2FavoriteButton;
-(void)updateStateLabel;
-(void)updateScoreLabels;
-(void)setImagesEquipes;
-(BOOL)comesFromStatsSubview;
-(void)adjustContentSizeForCurrentTab;
-(void)getAdditionalData;
-(void)saveAdditionalData;
-(void)setScoreLabel:(UILabel *)arg1 ;
-(void)publishOnFacebook;
-(NSString *)nomImagePub;
-(NSString *)urlPub;
-(void)setNomImagePub:(NSString *)arg1 ;
-(void)setUrlPub:(NSString *)arg1 ;
-(void)setTopBannerTexts:(NSArray *)arg1 ;
-(NSArray *)topBannerTexts;
-(void)setMatchCountry:(Pays *)arg1 ;
-(void)setMatchTournament:(TournamentWithMatches *)arg1 ;
-(void)setComesFromStatsSubview:(BOOL)arg1 ;
-(void)pushFicheMatchSecondaire:(id)arg1 ;
-(void)setupSegmentedControlDisplay;
-(UIImageView *)flecheGaucheImageView;
-(UIImageView *)flecheDroiteImageView;
-(void)setSegmentedControlContainerView:(UIView *)arg1 ;
-(void)setFlecheGaucheImageView:(UIImageView *)arg1 ;
-(void)setFlecheDroiteImageView:(UIImageView *)arg1 ;
-(NSURL *)topBannerLinkURL;
-(id)getSubviewControllerOfType:(int)arg1 ;
-(void)setTopBannerLinkURL:(NSURL *)arg1 ;
-(void)updateAllFavoriteButtons;
-(NSArray *)typeSubviewArray;
-(UIButton *)pubButton;
-(void)setPreferredRefreshTime:(long long)arg1 ;
-(void)setTypeSubviewArray:(NSArray *)arg1 ;
-(void)loadTopBannerTexts:(id)arg1 andURL:(id)arg2 ;
-(long long)preferredRefreshTime;
-(void)setImagePub;
-(void)facebookButtonPressed:(id)arg1 ;
-(Pays *)matchCountry;
-(TournamentWithMatches *)matchTournament;
-(void)setInfoMatchHolderView:(UIView *)arg1 ;
-(void)setMatchNameLabel:(UILabel *)arg1 ;
-(UIButton *)matchFavoriteButton;
-(void)setMatchFavoriteButton:(UIButton *)arg1 ;
-(void)setMatchStateLabel:(UILabel *)arg1 ;
-(void)setTeam1LogoImageView:(UIImageView *)arg1 ;
-(void)setTeam1FavoriteButton:(UIButton *)arg1 ;
-(void)setTeam2LogoImageView:(UIImageView *)arg1 ;
-(void)setTeam2FavoriteButton:(UIButton *)arg1 ;
-(void)setPubButton:(UIButton *)arg1 ;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)didReceiveMemoryWarning;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(UIScrollView *)contentScrollView;
-(void)viewDidLoad;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(UIActivityIndicatorView *)activityIndicator;
-(void)setActivityIndicator:(UIActivityIndicatorView *)arg1 ;
-(void)setContentScrollView:(UIScrollView *)arg1 ;
-(void)refreshView;
@end

