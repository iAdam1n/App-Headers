/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 10:10:01 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/4C83B32D-E9D7-434B-B0B8-8A6C2C13527D/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SportyTrader/SportyTrader-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIWebViewDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>

@protocol SASNativeParallaxWebViewDelegate;
@class UIWebView, WKWebView, NSDate, NSString;

@interface SASNativeParallaxWebView : UIView <UIWebViewDelegate, WKNavigationDelegate> {

	BOOL _webViewLoaded;
	id<SASNativeParallaxWebViewDelegate> _delegate;
	UIWebView* _legacyWebView;
	WKWebView* _webView;
	NSDate* _lastParallaxWindowRectEventUpdate;
	long long _webViewLoadCount;

}

@property (assign,nonatomic,__weak) id<SASNativeParallaxWebViewDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) UIWebView * legacyWebView;                                         //@synthesize legacyWebView=_legacyWebView - In the implementation block
@property (nonatomic,retain) WKWebView * webView;                                               //@synthesize webView=_webView - In the implementation block
@property (nonatomic,retain) NSDate * lastParallaxWindowRectEventUpdate;                        //@synthesize lastParallaxWindowRectEventUpdate=_lastParallaxWindowRectEventUpdate - In the implementation block
@property (assign,nonatomic) BOOL webViewLoaded;                                                //@synthesize webViewLoaded=_webViewLoaded - In the implementation block
@property (assign,nonatomic) long long webViewLoadCount;                                        //@synthesize webViewLoadCount=_webViewLoadCount - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)instanciateWebViewWithFrame:(CGRect)arg1 ;
-(void)instanciateLegacyWebViewWithFrame:(CGRect)arg1 ;
-(UIWebView *)legacyWebView;
-(NSDate *)lastParallaxWindowRectEventUpdate;
-(void)executeJavascriptOnWebView:(id)arg1 ;
-(BOOL)canSendParallaxWindowRectEvent;
-(void)setLastParallaxWindowRectEventUpdate:(NSDate *)arg1 ;
-(void)dispatchWebViewLoaded;
-(void)webViewDidStartLoad;
-(void)webViewDidFinishLoad;
-(void)webViewDidFailToLoad:(id)arg1 ;
-(BOOL)webViewShouldStartNavigation:(id)arg1 navigationType:(unsigned long long)arg2 ;
-(void)enableJavascriptAPI;
-(void)executeVisibilityJavascriptEvent:(BOOL)arg1 ;
-(void)executeParallaxWindowEvent:(CGRect)arg1 ;
-(void)loadCreativeScript:(id)arg1 baseURL:(id)arg2 ;
-(void)setLegacyWebView:(UIWebView *)arg1 ;
-(BOOL)webViewLoaded;
-(void)setWebViewLoaded:(BOOL)arg1 ;
-(long long)webViewLoadCount;
-(void)setWebViewLoadCount:(long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setDelegate:(id<SASNativeParallaxWebViewDelegate>)arg1 ;
-(void)setFrame:(CGRect)arg1 ;
-(id<SASNativeParallaxWebViewDelegate>)delegate;
-(WKWebView *)webView;
-(void)setWebView:(WKWebView *)arg1 ;
-(void)loadRequest:(id)arg1 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)stopLoading;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
@end

