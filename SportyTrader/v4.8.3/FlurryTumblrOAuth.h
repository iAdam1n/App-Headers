/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 10:10:01 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/4C83B32D-E9D7-434B-B0B8-8A6C2C13527D/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, FlurryKeychainWrapper;

@interface FlurryTumblrOAuth : NSObject {

	NSString* _OAuthToken;
	NSString* _OAuthConsumerKey;
	NSString* _OAuthConsumerSecret;
	NSString* _OAuthTokenSecret;
	NSString* _OAuthRequestToken;
	FlurryKeychainWrapper* _keychainWrapper;

}

@property (nonatomic,retain) NSString * OAuthConsumerKey;                          //@synthesize OAuthConsumerKey=_OAuthConsumerKey - In the implementation block
@property (nonatomic,retain) NSString * OAuthConsumerSecret;                       //@synthesize OAuthConsumerSecret=_OAuthConsumerSecret - In the implementation block
@property (nonatomic,retain) NSString * OAuthTokenSecret;                          //@synthesize OAuthTokenSecret=_OAuthTokenSecret - In the implementation block
@property (nonatomic,retain) NSString * OAuthToken;                                //@synthesize OAuthToken=_OAuthToken - In the implementation block
@property (nonatomic,retain) NSString * OAuthRequestToken;                         //@synthesize OAuthRequestToken=_OAuthRequestToken - In the implementation block
@property (nonatomic,retain) FlurryKeychainWrapper * keychainWrapper;              //@synthesize keychainWrapper=_keychainWrapper - In the implementation block
+(id)commonHeaderParametersWithConsumerKey:(id)arg1 oauthToken:(id)arg2 ;
+(id)generateBaseStringwithBaseURL:(id)arg1 method:(id)arg2 headers:(id)arg3 postParameters:(id)arg4 ;
+(id)signWithBaseString:(id)arg1 consumerSecret:(id)arg2 tokenSecret:(id)arg3 ;
+(id)headerStringFromHeaderParameters:(id)arg1 ;
+(id)HMACSHA1WithDataString:(id)arg1 keyString:(id)arg2 ;
+(id)sharedInstance;
-(void)setKeychainWrapper:(FlurryKeychainWrapper *)arg1 ;
-(void)setOAuthTokenSecret:(NSString *)arg1 ;
-(void)setOAuthToken:(NSString *)arg1 ;
-(void)setOAuthRequestToken:(NSString *)arg1 ;
-(void)signWithRequestTokenRequest:(id)arg1 withParameters:(id)arg2 ;
-(void)signWithAccessTokenRequest:(id)arg1 withParameters:(id)arg2 ;
-(NSString *)OAuthTokenSecret;
-(NSString *)OAuthToken;
-(NSString *)OAuthRequestToken;
-(FlurryKeychainWrapper *)keychainWrapper;
-(void)setOAuthConsumerKey:(NSString *)arg1 ;
-(void)setOAuthConsumerSecret:(NSString *)arg1 ;
-(id)headerForURL:(id)arg1 method:(id)arg2 postParameters:(id)arg3 token:(id)arg4 tokenSecret:(id)arg5 ;
-(NSString *)OAuthConsumerKey;
-(NSString *)OAuthConsumerSecret;
-(id)init;
-(void)clearState;
@end

