/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 10:10:02 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/4C83B32D-E9D7-434B-B0B8-8A6C2C13527D/SportyTrader.app/SportyTrader
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

typedef struct __SCNetworkReachability* SCNetworkReachabilityRef;

typedef struct _NSZone* NSZoneRef;

typedef struct CGSize {
	double width;
	double height;
} CGSize;

typedef struct CGPoint {
	double x;
	double y;
} CGPoint;

typedef struct z_stream_s {
	char* next_in;
	unsigned avail_in;
	unsigned long long total_in;
	char* next_out;
	unsigned avail_out;
	unsigned long long total_out;
	char* msg;
	internal_state state;
	/*function pointer*/void* zalloc;
	/*function pointer*/void* zfree;
	void opaque;
	int data_type;
	unsigned long long adler;
	unsigned long long reserved;
} z_stream_s;

typedef struct __CFHTTPMessage* CFHTTPMessageRef;

typedef struct _CFHTTPAuthentication* CFHTTPAuthenticationRef;

typedef struct __SecIdentity* SecIdentityRef;

typedef struct __SecRandom* SecRandomRef;

typedef struct CGPath* CGPathRef;

typedef struct {
	long long field1;
	long long field2;
	long long field3;
} SCD_Struct_FB10;

typedef struct {
	long long field1;
	int field2;
	unsigned field3;
	long long field4;
} SCD_Struct_Fl11;

typedef struct dispatch_queue_s* dispatch_queue_sRef;

typedef struct CGRect {
	CGPoint origin;
	CGSize size;
} CGRect;

typedef struct CGAffineTransform {
	double a;
	double b;
	double c;
	double d;
	double tx;
	double ty;
} CGAffineTransform;

typedef struct _darwin_sigaltstack {
	void ss_sp;
	unsigned long long ss_size;
	int ss_flags;
} darwin_sigaltstack;

typedef struct __CFUUID* CFUUIDRef;

typedef struct timeval {
	long long tv_sec;
	int tv_usec;
} timeval;

typedef struct PLCrashHostInfoVersion {
	unsigned long long major;
	unsigned long long minor;
	unsigned long long revision;
} PLCrashHostInfoVersion;

typedef struct {
	unsigned long long field1;
	id field2;
	unsigned long long field3;
	unsigned long long field4[5];
} SCD_Struct_Fl19;

typedef struct plcrash_mach_exception_port_set {
	unsigned count;
	unsigned masks[14];
	unsigned ports[14];
	int behaviors[14];
	int flavors[14];
} plcrash_mach_exception_port_set;

typedef struct UIEdgeInsets {
	double top;
	double left;
	double bottom;
	double right;
} UIEdgeInsets;

typedef struct CGContext* CGContextRef;

typedef struct {
	long long value;
	int timescale;
	unsigned flags;
	long long epoch;
} SCD_Struct_SA23;

typedef struct {
	double field1;
	double field2;
	double field3;
} SCD_Struct_SA24;

typedef struct {
	double x;
	double y;
	double z;
} SCD_Struct_SA25;

typedef struct FBAdSize {
	CGSize size;
} FBAdSize;

typedef struct FBAdStarRating {
	double value;
	long long scale;
} FBAdStarRating;

typedef struct GADAdSize {
	CGSize size;
	unsigned long long flags;
} GADAdSize;

typedef struct __CFBinaryHeap* CFBinaryHeapRef;

typedef struct __CFDictionary* CFDictionaryRef;

typedef struct CGVector {
	double dx;
	double dy;
} CGVector;

typedef struct {
	long long majorVersion;
	long long minorVersion;
	long long patchVersion;
} SCD_Struct_GA32;

typedef struct CGImage* CGImageRef;

typedef struct nmsp_nmas_Parameter_* nmsp_nmas_Parameter_Ref;

typedef struct nmsp_nmas_Command_* nmsp_nmas_Command_Ref;

typedef struct nmsp_audio_Recorder_* nmsp_audio_Recorder_Ref;

typedef struct nmsp_audio_Player_* nmsp_audio_Player_Ref;

typedef struct nmsp_Vector_* nmsp_Vector_Ref;

typedef struct {
	int field1;
	nmsp_core_Dictionary_ field2;
} SCD_Struct_NM39;

typedef struct nmsp_Manager_* nmsp_Manager_Ref;

typedef struct nmsp_Calllog_* nmsp_Calllog_Ref;

typedef struct nmsp_calllog_SessionEvent_* nmsp_calllog_SessionEvent_Ref;

typedef struct nmsp_NmasResource_* nmsp_NmasResource_Ref;

typedef struct nmsp_Resource_* nmsp_Resource_Ref;

typedef struct nmsp_core_Sequence_* nmsp_core_Sequence_Ref;

typedef struct nmsp_core_Dictionary_* nmsp_core_Dictionary_Ref;

typedef struct nmsp_dr_DictationResult_* nmsp_dr_DictationResult_Ref;

typedef struct nmsp_dr_Sentence_* nmsp_dr_Sentence_Ref;

typedef struct nmsp_dr_Token_* nmsp_dr_Token_Ref;

typedef struct nmsp_dr_Alternatives_* nmsp_dr_Alternatives_Ref;

typedef struct nmsp_dr_Alternative_* nmsp_dr_Alternative_Ref;

typedef struct SpeexBits {
	char* chars;
	int nbBits;
	int charPtr;
	int bitPtr;
	int owner;
	int overflow;
	int buf_size;
	int reserved1;
	void reserved2;
} SpeexBits;

typedef struct __SecKey* SecKeyRef;

typedef struct __SecCertificate* SecCertificateRef;

typedef struct __SecPolicy* SecPolicyRef;

typedef struct __SecTrust* SecTrustRef;

