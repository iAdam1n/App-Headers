/*
* This header is generated by classdump-dyld 0.7
* on Monday, November 2, 2015 at 10:04:58 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/6EA2C334-4708-4A2A-9290-87A765CA9E42/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/


@class WAAutoBackupSettings, WACloudStatus, NSError, NSDate, NSNumber;

@interface WABackupErrorManager : NSObject {

	int _autoBackupCode;
	BOOL _badge;
	int _mask;
	/*^block*/id _formatSize;
	WAAutoBackupSettings* _autoBackupSettings;
	WACloudStatus* _cloudStatus;
	id _cloudStatusListener;
	long long _expirationDateMultiplier;

}

@property (assign,nonatomic) BOOL badge;                                             //@synthesize badge=_badge - In the implementation block
@property (nonatomic,readonly) NSError * error; 
@property (nonatomic,readonly) NSDate * autoBackupStartDate; 
@property (nonatomic,copy) id formatSize;                                            //@synthesize formatSize=_formatSize - In the implementation block
@property (nonatomic,retain) WAAutoBackupSettings * autoBackupSettings;              //@synthesize autoBackupSettings=_autoBackupSettings - In the implementation block
@property (nonatomic,retain) WACloudStatus * cloudStatus;                            //@synthesize cloudStatus=_cloudStatus - In the implementation block
@property (nonatomic,retain) id cloudStatusListener;                                 //@synthesize cloudStatusListener=_cloudStatusListener - In the implementation block
@property (nonatomic,readonly) NSError * cloudStatusError; 
@property (nonatomic,readonly) BOOL uploadErrorBadge; 
@property (nonatomic,readonly) NSDate * uploadErrorBadgeDate; 
@property (nonatomic,retain) NSDate * badgeMutedDate; 
@property (getter=isBadgeMuted,nonatomic,readonly) BOOL badgeMuted; 
@property (assign,nonatomic) int mask;                                               //@synthesize mask=_mask - In the implementation block
@property (nonatomic,readonly) int code; 
@property (nonatomic,retain) NSNumber * spaceNeeded; 
@property (nonatomic,readonly) NSDate * autoBackupExpirationDate; 
@property (nonatomic,readonly) long long expirationDateMultiplier;                   //@synthesize expirationDateMultiplier=_expirationDateMultiplier - In the implementation block
@property (nonatomic,retain) NSDate * customDateMarker; 
+(long long)expirationDateMultiplierForInterval:(unsigned long long)arg1 ;
+(unsigned long long)sortValueForFrequency:(unsigned long long)arg1 ;
-(WAAutoBackupSettings *)autoBackupSettings;
-(void)unmuteBadge;
-(void)setAutoBackupSettings:(WAAutoBackupSettings *)arg1 ;
-(void)reportSpaceNeeded:(unsigned long long)arg1 ;
-(void)setFormatSize:(id)arg1 ;
-(void)setCloudStatusListener:(id)arg1 ;
-(id)cloudStatusListener;
-(void)hideTransientErrors;
-(void)muteBadge;
-(void)clearError:(int)arg1 ;
-(NSDate *)autoBackupStartDate;
-(id)formatSize;
-(NSNumber *)spaceNeeded;
-(void)scheduleBadgeUnmute;
-(void)setCustomDateMarker:(NSDate *)arg1 ;
-(void)willChangeAutoBackupInterval;
-(void)didChangeAutoBackupInterval;
-(void)checkForErrorUpdate:(int)arg1 ;
-(BOOL)isBadgeMuted;
-(BOOL)uploadErrorBadge;
-(void)sendBadgeUpdatedNotification;
-(void)setOrRemoveObject:(id)arg1 forKey:(id)arg2 ;
-(void)setBadgeMutedDate:(NSDate *)arg1 ;
-(NSDate *)badgeMutedDate;
-(id)expirationForDate:(id)arg1 requiresAutoBackup:(BOOL)arg2 ;
-(NSDate *)customDateMarker;
-(void)set:(BOOL)arg1 error:(int)arg2 ;
-(void)setSpaceNeeded:(NSNumber *)arg1 ;
-(void)updateError;
-(void)reportCodeToFieldStats:(int)arg1 ;
-(void)reportErrorWithObject:(id)arg1 ;
-(NSDate *)autoBackupExpirationDate;
-(void)sendErrorUpdatedNotification;
-(NSError *)cloudStatusError;
-(void)updateUploadErrorBadge;
-(void)listenToCloudStatus;
-(void)refreshUploadErrorBadge;
-(NSDate *)uploadErrorBadgeDate;
-(void)tryToSetUploadMarker;
-(void)clearUploadMarker;
-(void)uploadErrorChanged;
-(void)useErrorsFromCloudStatus:(id)arg1 ;
-(long long)expirationDateMultiplier;
-(NSError *)error;
-(void)save;
-(void)dealloc;
-(id)init;
-(void)reset;
-(int)code;
-(int)mask;
-(void)setMask:(int)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(id)initWithSettings:(id)arg1 ;
-(BOOL)badge;
-(void)setBadge:(BOOL)arg1 ;
-(void)setCloudStatus:(WACloudStatus *)arg1 ;
-(WACloudStatus *)cloudStatus;
-(void)reportError:(int)arg1 ;
-(void)refresh;
-(id)errorForCode:(int)arg1 ;
-(void)updateBadge;
-(void)restore;
@end

