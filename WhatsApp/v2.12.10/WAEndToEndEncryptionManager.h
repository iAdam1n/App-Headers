/*
* This header is generated by classdump-dyld 0.7
* on Monday, November 2, 2015 at 10:04:53 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/6EA2C334-4708-4A2A-9290-87A765CA9E42/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <WhatsApp/WAAxolotlStoreDelegate.h>

@protocol OS_dispatch_group;
@class WAAxolotlCryptoProvider, NSObject, NSMutableSet, WAAxolotlStore, NSString;

@interface WAEndToEndEncryptionManager : NSObject <WAAxolotlStoreDelegate> {

	WAAxolotlCryptoProvider* _cryptoProvider;
	axolotl_store_contextRef store_context;
	ratchet_identity_key_pairRef _identityKeyPair;
	NSObject*<OS_dispatch_group> _registrationDispatchGroup;
	BOOL _needServerRegistration;
	BOOL _digestCheckPending;
	NSMutableSet* _pendingKeyRequestJids;
	WAAxolotlStore* _axolotlStore;
	unsigned _registrationId;
	axolotl_contextRef _globalContext;

}

@property (assign) unsigned registrationId;                         //@synthesize registrationId=_registrationId - In the implementation block
@property (assign) axolotl_contextRef globalContext;                //@synthesize globalContext=_globalContext - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
-(void)xmppConnectionStateDidChange:(id)arg1 ;
-(BOOL)shouldEncryptMessage:(id)arg1 ;
-(void)requestNewKeyForJid:(id)arg1 ;
-(void)clearIdentity;
-(id)e2eMessageForMessage:(id)arg1 errorReason:(int*)arg2 ;
-(void)checkSessionForJID:(id)arg1 registrationId:(int)arg2 ;
-(void)serverRejectRetryForReceipt:(id)arg1 registrationId:(int)arg2 fromJID:(id)arg3 participanr:(id)arg4 ;
-(BOOL)loadIdentity;
-(void)setRegistrationId:(unsigned)arg1 ;
-(void)regenerateIdentity;
-(long long)recepientIdForJid:(id)arg1 ;
-(id)e2eMessageForMessage:(id)arg1 ;
-(id)hashForParticipants:(id)arg1 ;
-(unsigned long long)sessionStatusForJid:(id)arg1 ;
-(void)generatePreKeys;
-(void)registerWithServerWithCompletion:(/*^block*/id)arg1 ;
-(unsigned)registrationId;
-(void)sendMorePreKeys;
-(void)checkServerDigest;
-(id)keychainIdentityQuery;
-(BOOL)createIdentity;
-(void)axolotlFailedWithError:(id)arg1 ;
-(id)decryptedE2eMessageForVersion:(int)arg1 jid:(id)arg2 participant:(id)arg3 stanzaId:(id)arg4 cypherType:(id)arg5 encryptedData:(id)arg6 retryCount:(int)arg7 errorReason:(int*)arg8 ;
-(void)beginProcessingIncomingMessages;
-(void)endProcessingIncomingMessages;
-(void)checkPreKeysCount;
-(void)setGlobalContext:(axolotl_contextRef)arg1 ;
-(void)dealloc;
-(id)init;
-(axolotl_contextRef)globalContext;
@end

