/*
* This header is generated by classdump-dyld 0.7
* on Monday, November 2, 2015 at 10:04:53 AM Greenwich Mean Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /private/var/mobile/Containers/Bundle/Application/6EA2C334-4708-4A2A-9290-87A765CA9E42/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2014 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <WhatsApp/WAWebClientDelegate.h>
#import <WhatsApp/WASyncManagerDelegate.h>
#import <WhatsApp/WAChatStorageDelegate.h>
#import <WhatsApp/WAContactsStorageDelegate.h>
#import <WhatsApp/XMPPConnectionDelegate.h>

@protocol OS_dispatch_queue;
@class NSMutableDictionary, WABlockBasedAlertView, NSObject, WAWebClient, NSLock, NSMutableOrderedSet, NSMutableSet, NSString, WAChatDatabaseStatsManager, WASyncManager, NSMutableArray, NSDate, CLLocation;

@interface ChatManager : NSObject <WAWebClientDelegate, WASyncManagerDelegate, WAChatStorageDelegate, WAContactsStorageDelegate, XMPPConnectionDelegate> {

	NSMutableDictionary* _lastNotificationTimeForChat;
	WABlockBasedAlertView* _networkUnavailableAlertView;
	NSMutableDictionary* _outgoingChatStates;
	NSObject*<OS_dispatch_queue> _addressBookQueue;
	BOOL _needsReloadAddressBook;
	BOOL _needsRefreshChats;
	BOOL _isContactsSyncScheduled;
	BOOL _changeNumberIQRequired;
	BOOL _changeNumberIQInProgress;
	BOOL _usingSilentPush;
	WAWebClient* _webClient;
	NSLock* _timelockParametesLock;
	NSMutableOrderedSet* _outgoingMessagesToMerge;
	NSMutableSet* _pendingOfflineContactUpdates;
	BOOL _verificationInProgress;
	BOOL _popupMenuVisible;
	BOOL _timelocked;
	BOOL _addressBookReloadingInProgress;
	void* _sharedAddressBook;
	NSString* _registrationURL;
	NSString* _codeRequestURL;
	NSString* _sameDeviceCheckURL;
	NSString* _phoneNumber;
	NSString* _countryCode;
	NSString* _currentStatus;
	WAChatDatabaseStatsManager* _statsManager;
	WASyncManager* _syncManager;
	NSMutableArray* _statusList;
	NSMutableSet* _navigationBarHintHistory;
	NSMutableSet* _placeCache;
	NSDate* _gOverQueryLimitDate;
	CLLocation* _lastKnownLocation;
	NSDate* _timelockStartDate;
	NSDate* _timelockedUntil;
	NSDate* _timelockRetryDate;
	long long _timelockReasonCode;
	NSDate* _connectionDisconnectDate;
	double _addressBookReloadingStartTime;
	NSString* _statusPendingUpdate;

}

@property (nonatomic,copy,readonly) NSString * phoneNumber;                            //@synthesize phoneNumber=_phoneNumber - In the implementation block
@property (nonatomic,copy,readonly) NSString * countryCode;                            //@synthesize countryCode=_countryCode - In the implementation block
@property (nonatomic,copy) NSString * currentStatus;                                   //@synthesize currentStatus=_currentStatus - In the implementation block
@property (nonatomic,readonly) WAChatDatabaseStatsManager * statsManager;              //@synthesize statsManager=_statsManager - In the implementation block
@property (nonatomic,readonly) WASyncManager * syncManager;                            //@synthesize syncManager=_syncManager - In the implementation block
@property (nonatomic,readonly) void* sharedAddressBook;                                //@synthesize sharedAddressBook=_sharedAddressBook - In the implementation block
@property (nonatomic,readonly) NSMutableArray * statusList;                            //@synthesize statusList=_statusList - In the implementation block
@property (nonatomic,readonly) NSMutableSet * navigationBarHintHistory;                //@synthesize navigationBarHintHistory=_navigationBarHintHistory - In the implementation block
@property (assign,nonatomic) BOOL verificationInProgress;                              //@synthesize verificationInProgress=_verificationInProgress - In the implementation block
@property (assign,nonatomic) BOOL popupMenuVisible;                                    //@synthesize popupMenuVisible=_popupMenuVisible - In the implementation block
@property (nonatomic,readonly) NSMutableSet * placeCache;                              //@synthesize placeCache=_placeCache - In the implementation block
@property (nonatomic,retain) NSDate * gOverQueryLimitDate;                             //@synthesize gOverQueryLimitDate=_gOverQueryLimitDate - In the implementation block
@property (nonatomic,retain) CLLocation * lastKnownLocation;                           //@synthesize lastKnownLocation=_lastKnownLocation - In the implementation block
@property (assign,getter=isTimelocked,nonatomic) BOOL timelocked;                      //@synthesize timelocked=_timelocked - In the implementation block
@property (nonatomic,retain) NSDate * timelockStartDate;                               //@synthesize timelockStartDate=_timelockStartDate - In the implementation block
@property (nonatomic,retain) NSDate * timelockedUntil;                                 //@synthesize timelockedUntil=_timelockedUntil - In the implementation block
@property (nonatomic,retain) NSDate * timelockRetryDate;                               //@synthesize timelockRetryDate=_timelockRetryDate - In the implementation block
@property (assign,nonatomic) long long timelockReasonCode;                             //@synthesize timelockReasonCode=_timelockReasonCode - In the implementation block
@property (nonatomic,readonly) NSDate * connectionDisconnectDate;                      //@synthesize connectionDisconnectDate=_connectionDisconnectDate - In the implementation block
@property (assign,nonatomic) BOOL usingSilentPush;                                     //@synthesize usingSilentPush=_usingSilentPush - In the implementation block
@property (nonatomic,readonly) BOOL addressBookReloadingInProgress;                    //@synthesize addressBookReloadingInProgress=_addressBookReloadingInProgress - In the implementation block
@property (nonatomic,readonly) double addressBookReloadingStartTime;                   //@synthesize addressBookReloadingStartTime=_addressBookReloadingStartTime - In the implementation block
@property (nonatomic,readonly) NSLock * addressBookMutationLock; 
@property (nonatomic,copy,readonly) NSString * statusPendingUpdate;                    //@synthesize statusPendingUpdate=_statusPendingUpdate - In the implementation block
@property (nonatomic,readonly) NSString * registrationURL;                             //@synthesize registrationURL=_registrationURL - In the implementation block
@property (nonatomic,readonly) NSString * codeRequestURL;                              //@synthesize codeRequestURL=_codeRequestURL - In the implementation block
@property (nonatomic,readonly) NSString * sameDeviceCheckURL;                          //@synthesize sameDeviceCheckURL=_sameDeviceCheckURL - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedManager;
-(void)chatStorage:(id)arg1 didFailWithError:(id)arg2 ;
-(void)chatStorage:(id)arg1 didInsertChatSessions:(id)arg2 ;
-(void)chatStorage:(id)arg1 didDeleteChatSessions:(id)arg2 ;
-(void)chatStorage:(id)arg1 didUpdateChatSessions:(id)arg2 ;
-(void)chatStorage:(id)arg1 didSetAllChatSessionsArchived:(BOOL)arg2 notifyWebClient:(BOOL)arg3 ;
-(void)chatStorage:(id)arg1 didUpdateArchiveStateOfChatSession:(id)arg2 notifyWebClient:(BOOL)arg3 ;
-(void)chatStorage:(id)arg1 didAddMessages:(id)arg2 notifyWebClient:(BOOL)arg3 ;
-(void)chatStorage:(id)arg1 didReceiveMessage:(id)arg2 ;
-(BOOL)findContactInContext:(id)arg1 forChatSession:(id)arg2 ;
-(void)chatStorage:(id)arg1 didUpdateStatusOfMessage:(id)arg2 from:(unsigned long long)arg3 ;
-(void)chatStorage:(id)arg1 didUpdateMessage:(id)arg2 changedKeyPaths:(id)arg3 ;
-(void)chatStorage:(id)arg1 willDeleteChatSession:(id)arg2 fromWebClient:(BOOL)arg3 ;
-(void)chatStorageDidDeleteAllChatSessions:(id)arg1 ;
-(void)chatStorageDidClearAllChatSessions:(id)arg1 ;
-(void)chatStorage:(id)arg1 didDeleteAllMessagesInChatSession:(id)arg2 ;
-(void)chatStorage:(id)arg1 willDeleteMessages:(id)arg2 inChatSession:(id)arg3 ;
-(void)chatStorage:(id)arg1 didDeleteMessages:(id)arg2 inChatSession:(id)arg3 ;
-(void)markChatSession:(id)arg1 read:(BOOL)arg2 onWebClient:(BOOL)arg3 allowBadgeCountDecrements:(BOOL)arg4 ;
-(void)resetAuthInfo;
-(BOOL)isTimelocked;
-(void)reloadAddressBookIfNeeded;
-(void)initializeChat;
-(void)resetTimelockRetryDate;
-(void)setVerificationInProgress:(BOOL)arg1 ;
-(void)postPhoneNumberChangedNotification;
-(void)resetStatusMessages;
-(void)setNeedsReloadAddressBook;
-(void)contactsStorageDidGenerateFavorites:(id)arg1 ;
-(void)contactsStorageDidFailToGenerateFavorites:(id)arg1 ;
-(BOOL)addressBookReloadingInProgress;
-(void)reloadFavorites;
-(double)addressBookReloadingStartTime;
-(void)contactsStorageDidUpdateStatus:(id)arg1 ;
-(void)contactsStorageDidUpdateContacts:(id)arg1 ;
-(NSLock *)addressBookMutationLock;
-(id)fullPhoneNumber;
-(id)addContactFromABRecord:(void*)arg1 addressBook:(void*)arg2 whatsAppID:(id)arg3 ;
-(BOOL)isWebClientSupported;
-(id)allSavedWebClientSessionDataObjects;
-(void)beginNewWebClientSessionWithQRCode:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)mapsURLsForAddress:(id)arg1 ;
-(void)performSameDeviceCheckForPhone:(id)arg1 countryCode:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)setCountryCode:(id)arg1 phoneNumber:(id)arg2 ;
-(void)requestAuthCodeUsingMethod:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)registerUsingAuthCode:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(NSString *)statusPendingUpdate;
-(NSMutableArray *)statusList;
-(void)saveStatusList;
-(void)deleteAllStatusMessages;
-(void)enableContactsSync;
-(id)reloadDataFromABRecord:(void*)arg1 whatsAppID:(id)arg2 ;
-(id)mapsURLsForCoordinate:(CGSize)arg1 placeName:(id)arg2 ;
-(id)routeURLsForSourceLocation:(id)arg1 destLocation:(id)arg2 ;
-(long long)timelockReasonCode;
-(NSDate *)timelockedUntil;
-(NSDate *)timelockStartDate;
-(void)checkTimelockExpiration;
-(void)xmppConnection:(id)arg1 stateChanged:(unsigned long long)arg2 ;
-(void)xmppConnectionDidChangeNetworkStateDuringCall:(id)arg1 ;
-(void)xmppConnection:(id)arg1 networkStatusChanged:(unsigned long long)arg2 ;
-(void)xmppConnection:(id)arg1 statusChanged:(unsigned long long)arg2 forOutgoingMessagesWithStanzaIDs:(id)arg3 fromJID:(id)arg4 participantJID:(id)arg5 userData:(id)arg6 ;
-(void)xmppConnection:(id)arg1 serverTimeShiftChanged:(double)arg2 ;
-(void)xmppConnectionDidConnect:(id)arg1 ;
-(void)xmppConnectionDidAuthenticate:(id)arg1 ;
-(void)xmppConnectionDidNotAuthenticate:(id)arg1 lockDuration:(double)arg2 retryAfter:(double)arg3 reasonCode:(long long)arg4 ;
-(void)xmppConnection:(id)arg1 didReceiveCallOfferReceipt:(id)arg2 ;
-(void)xmppConnection:(id)arg1 didReceiveServerErrorForOutgoingMessagesWithStanzaIDs:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 ;
-(void)xmppConnection:(id)arg1 didReceiveOfflineReceiptWithStanzaIDs:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 ;
-(void)xmppConnection:(id)arg1 didReceiveRetryReceiptForStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 registrationId:(int)arg5 retryCount:(int)arg6 ;
-(void)xmppConnectionDidReceiveOfflineMarker:(id)arg1 ;
-(void)xmppConnectionDidDisconnect:(id)arg1 ;
-(id)localizedChatActivityStringForJID:(id)arg1 ;
-(NSDate *)timelockRetryDate;
-(void)loadStatusMessages;
-(void)loadTimelockParameters;
-(void)menuControllerDidShowMenu:(id)arg1 ;
-(void)menuControllerDidHideMenu:(id)arg1 ;
-(void)callDidBecomeActive:(id)arg1 ;
-(void)callWillEnd:(id)arg1 ;
-(id)fullPhoneNumber:(BOOL)arg1 ;
-(id)serviceExpirationDate;
-(void)reloadAddressBook;
-(id)refreshChatSessionsForKnownContacts:(id)arg1 ;
-(id)refreshChatSessionsForUnknownContacts:(id)arg1 ;
-(id)allABIDsInChatSessions:(id)arg1 ;
-(id)allWhatsAppIDsInChatSessions:(id)arg1 ;
-(id)refreshChatSessionsAfterAddressBookReloadWithContext:(id)arg1 ;
-(void)chatStorage:(id)arg1 didUpdateParticipantsOfChatSession:(id)arg2 ;
-(NSString *)sameDeviceCheckURL;
-(void)processVerificationServerResponse:(id)arg1 error:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)getOrGenerateRecoveryToken:(id)arg1 ;
-(void)performSameDeviceCheckForPhone:(id)arg1 countryCode:(id)arg2 rcToken:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
-(NSString *)codeRequestURL;
-(NSString *)registrationURL;
-(id)statusListFilePath;
-(void)markMessagesAsReadFromIndex:(unsigned long long)arg1 readCount:(long long)arg2 inChatSession:(id)arg3 onWebClient:(BOOL)arg4 allowBadgeCountDecrements:(BOOL)arg5 ;
-(void)sendReadReceiptsForUnreadMessagesFromIndex:(unsigned long long)arg1 inChatSession:(id)arg2 ;
-(void)setJID:(id)arg1 mutedUntil:(id)arg2 notifyWebClient:(BOOL)arg3 updateAllContactPhones:(BOOL)arg4 ;
-(void)updateChatStateIfNeededForJID:(id)arg1 ;
-(unsigned long long)outgoingChatStateForJID:(id)arg1 ;
-(id)localizedChatActivityStringForContactWithJID:(id)arg1 ;
-(id)localizedChatActivityStringForGroupWithJID:(id)arg1 ;
-(void)saveTimelockParameters;
-(void)didUpdateMessage:(id)arg1 ;
-(void)failedUploadNotifyForMessage:(id)arg1 ;
-(void)sendLocalNotificationForMessage:(id)arg1 fromUser:(id)arg2 ;
-(void)refreshChats;
-(void)showNetworkUnavailableAlert;
-(void)networkStatusChanged:(unsigned long long)arg1 ;
-(void)requestChangeNumberIfNecessary;
-(void)requestFreshServerProps;
-(id)outgoingMessagesInSharedItemOutboxes;
-(void)resetTimelock;
-(void)setTimelockedUntil:(id)arg1 retryDate:(id)arg2 withReasonCode:(long long)arg3 ;
-(BOOL)verificationInProgress;
-(void)getNewPasswordFinishedWithResult:(id)arg1 ;
-(void)changeNumberFailedWithError:(id)arg1 ;
-(void)changeNumberFinishedWithAccountInfo:(id)arg1 ;
-(void)sendLocalNotificationForMessage:(id)arg1 fromUser:(id)arg2 numberOfAttempts:(int)arg3 ;
-(BOOL)usingSilentPush;
-(BOOL)messageShouldBeMuted:(id)arg1 ;
-(void)saveNotificationTimeForMessage:(id)arg1 ;
-(void)setPopupMenuVisible:(BOOL)arg1 ;
-(void)reloadUnknownChatsWithWAContact:(id)arg1 ;
-(void)updateStatus:(id)arg1 webClientRequestID:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)setJID:(id)arg1 mutedUntil:(id)arg2 notifyWebClient:(BOOL)arg3 ;
-(id)webClient:(id)arg1 messagesInJID:(id)arg2 beforeMessageID:(id)arg3 count:(unsigned long long)arg4 ;
-(id)webClient:(id)arg1 JIDToChatSessionMapWithJIDs:(id)arg2 ;
-(id)webClient:(id)arg1 messagesInChatSession:(id)arg2 afterMessageID:(id)arg3 count:(unsigned long long)arg4 countExceeded:(out BOOL*)arg5 ;
-(id)webClient:(id)arg1 memberJIDsInBroadcastList:(id)arg2 ;
-(id)recentlyRelevantMessagesInChatsForWebClient:(id)arg1 ;
-(id)webClient:(id)arg1 outgoingMessagesAndPTTWithOrAfterMessageID:(id)arg2 inChatSession:(id)arg3 ;
-(id)webClient:(id)arg1 infoForOutgoingMessageWithStanzaID:(id)arg2 inJID:(id)arg3 ;
-(void)webClient:(id)arg1 didSubscribeToJID:(id)arg2 ;
-(void)webClient:(id)arg1 didChangeOutgoingChatStateToJID:(id)arg2 ;
-(id)webClient:(id)arg1 existingOutgoingMessageWithStanzaID:(id)arg2 inJID:(id)arg3 ;
-(id)webClient:(id)arg1 chatSessionForJID:(id)arg2 ;
-(void)webClient:(id)arg1 didRelayMessageStanza:(id)arg2 ;
-(void)webClient:(id)arg1 didRequestResendMessage:(id)arg2 ;
-(unsigned long long)webClient:(id)arg1 didReadUntilMessageID:(id)arg2 inChatWithJID:(id)arg3 readCount:(long long)arg4 ;
-(void)webClient:(id)arg1 didUpdateStatus:(id)arg2 requestInfo:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)webClient:(id)arg1 didPlayIncomingMessageWithStanzaID:(id)arg2 participant:(id)arg3 inChatWithJID:(id)arg4 ;
-(unsigned long long)webClient:(id)arg1 didDeleteChatWithJID:(id)arg2 messageID:(id)arg3 ;
-(unsigned long long)webClient:(id)arg1 didClearChatWithJID:(id)arg2 messageID:(id)arg3 ;
-(unsigned long long)webClient:(id)arg1 didDeleteMessageIDs:(id)arg2 inChatWithJID:(id)arg3 ;
-(unsigned long long)webClient:(id)arg1 didSetArchivedState:(BOOL)arg2 ofChatWithJID:(id)arg3 messageID:(id)arg4 ;
-(unsigned long long)webClient:(id)arg1 didSetMuteDate:(id)arg2 fromMuteDate:(id)arg3 ofChatWithJID:(id)arg4 ;
-(void)webClient:(id)arg1 didSetPicture:(id)arg2 thumbnail:(id)arg3 forChatWithJID:(id)arg4 requestInfo:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)webClient:(id)arg1 didDeletePictureForChatWithJID:(id)arg2 requestInfo:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)webClient:(id)arg1 didRequestMediaUploadForMessageID:(id)arg2 inChatWithJID:(id)arg3 requestID:(id)arg4 ;
-(void)webClient:(id)arg1 didRemoveParticipants:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)webClient:(id)arg1 didAddParticipants:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)webClient:(id)arg1 didPromoteParticipantWithJID:(id)arg2 inChatWithJID:(id)arg3 requestInfo:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)webClient:(id)arg1 didLeaveGroupWithJID:(id)arg2 requestInfo:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)webClient:(id)arg1 didChangeSubjectOfGroupWithJID:(id)arg2 to:(id)arg3 requestInfo:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)webClient:(id)arg1 didCreateGroupWithSubject:(id)arg2 participants:(id)arg3 requestInfo:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)webClient:(id)arg1 didSetBlockedState:(BOOL)arg2 ofUserWithJID:(id)arg3 reason:(id)arg4 requestInfo:(id)arg5 completion:(/*^block*/id)arg6 ;
-(id)allChatSessionsInWebClient:(id)arg1 ;
-(id)allGroupChatsInWebClient:(id)arg1 ;
-(id)allBroadcastListsInWebClient:(id)arg1 ;
-(id)allWhatsAppablePhonesInWebClient:(id)arg1 ;
-(void)syncManager:(id)arg1 didFinishSyncWithResult:(int)arg2 failureReason:(int)arg3 ;
-(void)chatStorage:(id)arg1 mediaUploadDidFinishForMessage:(id)arg2 ;
-(void)chatStorage:(id)arg1 mediaUploadDidFailForMessage:(id)arg2 ;
-(void)chatStorage:(id)arg1 mediaDownloadDidFailForMessage:(id)arg2 withError:(id)arg3 autodownload:(BOOL)arg4 ;
-(void)chatStorage:(id)arg1 didGenerateNotificationMessage:(id)arg2 fromParticipant:(id)arg3 ;
-(void)contactsStorageDidUpdateFavorites:(id)arg1 ;
-(void)contactsStorage:(id)arg1 didAddOrUpdateContacts:(id)arg2 didRemoveJIDs:(id)arg3 removeMissingJIDs:(BOOL)arg4 ;
-(void)xmppConnection:(id)arg1 statusChanged:(unsigned long long)arg2 forIncomingMessageWithStanzaID:(id)arg3 fromJID:(id)arg4 participantJID:(id)arg5 ;
-(void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2 ;
-(void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2 forJID:(id)arg3 ;
-(void)xmppConnection:(id)arg1 chatStateChanged:(unsigned long long)arg2 forJID:(id)arg3 participantJID:(id)arg4 ;
-(void)xmppConnection:(id)arg1 didReceiveMessages:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)xmppConnection:(id)arg1 groupSubjectChanged:(id)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 participantsAdded:(id)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 participantsRemoved:(id)arg2 groupSubject:(id)arg3 notification:(id)arg4 ;
-(void)xmppConnection:(id)arg1 participantsPromoted:(id)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 participantsDemoted:(id)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 userModified:(id)arg2 toJID:(id)arg3 inGroupWithJID:(id)arg4 timestamp:(id)arg5 ;
-(void)xmppConnection:(id)arg1 groupCreated:(id)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 groupDeletedNotification:(id)arg2 ;
-(void)xmppConnection:(id)arg1 groupLockStateChanged:(BOOL)arg2 notification:(id)arg3 ;
-(void)xmppConnection:(id)arg1 dirtyFlagsReceived:(id)arg2 timestamp:(id)arg3 ;
-(BOOL)xmppConnection:(id)arg1 startLocationSharingForGroup:(id)arg2 duration:(int)arg3 ;
-(void)xmppConnectionStopGroupLocationSharing:(id)arg1 ;
-(void)xmppConnection:(id)arg1 profilePictureChangedFor:(id)arg2 identifier:(id)arg3 author:(id)arg4 name:(id)arg5 timestamp:(id)arg6 ;
-(void)xmppConnection:(id)arg1 profilePictureUploadRequestFor:(id)arg2 timestamp:(id)arg3 ;
-(void)xmppConnection:(id)arg1 statusChanged:(id)arg2 ;
-(void)xmppConnection:(id)arg1 contactAddedWithHash:(id)arg2 ;
-(void)xmppConnection:(id)arg1 contactRemoved:(id)arg2 ;
-(void)xmppConnection:(id)arg1 contactsSyncRequest:(id)arg2 timestamp:(id)arg3 ;
-(void)xmppConnection:(id)arg1 contactUpdated:(id)arg2 offlineStorage:(BOOL)arg3 ;
-(void)xmppConnection:(id)arg1 accountChangedWithAccountInfo:(id)arg2 receitInfo:(id)arg3 offlineStorage:(BOOL)arg4 ;
-(void)xmppConnection:(id)arg1 capabilityChangedForJID:(id)arg2 callability:(int)arg3 encryption:(int)arg4 encryptionV2:(int)arg5 ;
-(void)xmppConnection:(id)arg1 callStanzaDidTimeOut:(id)arg2 ;
-(void)xmppConnection:(id)arg1 didReceiveIncomingCallStanza:(id)arg2 ;
-(void)xmppConnection:(id)arg1 didReceiveCallAck:(id)arg2 ;
-(void)xmppConnection:(id)arg1 didReceiveServerErrorAckForIncomingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 ;
-(void)xmppConnection:(id)arg1 didRequestDownloadOfMediaInMessage:(id)arg2 ;
-(void)xmppConnection:(id)arg1 didReceiveServerRejectRetryForReceipt:(id)arg2 registrationId:(int)arg3 fromJID:(id)arg4 participanr:(id)arg5 ;
-(id)localizedServicePrice;
-(BOOL)allowServicePurchase;
-(void)setUserInteractionEnabled;
-(void)getNewPasswordFailedWithError:(id)arg1 ;
-(void)prepareWAChatSession:(id)arg1 subscribeToGroups:(BOOL)arg2 ;
-(void)changeNameOfList:(id)arg1 to:(id)arg2 ;
-(void)changeOutgoingChatState:(unsigned long long)arg1 forJID:(id)arg2 ;
-(void)disconnectAndUnloadChatDatabaseWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)reconnectAndLoadChatDatabaseWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)isWebClientAvailable;
-(BOOL)hasActiveWebClientSession;
-(void)removeWebClientSessionWithData:(id)arg1 ;
-(WAChatDatabaseStatsManager *)statsManager;
-(NSMutableSet *)navigationBarHintHistory;
-(BOOL)popupMenuVisible;
-(NSMutableSet *)placeCache;
-(NSDate *)gOverQueryLimitDate;
-(void)setGOverQueryLimitDate:(NSDate *)arg1 ;
-(void)setTimelocked:(BOOL)arg1 ;
-(void)setTimelockStartDate:(NSDate *)arg1 ;
-(void)setTimelockedUntil:(NSDate *)arg1 ;
-(void)setTimelockRetryDate:(NSDate *)arg1 ;
-(void)setTimelockReasonCode:(long long)arg1 ;
-(NSDate *)connectionDisconnectDate;
-(void)setUsingSilentPush:(BOOL)arg1 ;
-(id)storage;
-(void)dealloc;
-(id)init;
-(void)reset;
-(NSString *)phoneNumber;
-(id)connection;
-(void)updateStatus:(id)arg1 ;
-(WASyncManager *)syncManager;
-(void)setLastKnownLocation:(CLLocation *)arg1 ;
-(CLLocation *)lastKnownLocation;
-(unsigned long long)accountType;
-(void)setCurrentStatus:(NSString *)arg1 ;
-(NSString *)currentStatus;
-(NSString *)countryCode;
-(unsigned long long)serviceType;
-(void*)sharedAddressBook;
@end

