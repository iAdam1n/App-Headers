/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:47:03 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/342EE397-EC3B-4D13-968C-80EF1D13592D/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <WhatsApp/AVAudioRecorderDelegate.h>

@protocol WAPttRecorderDelegate;
@class AVAudioRecorder, NSString;

@interface WAPttRecorder : NSObject <AVAudioRecorderDelegate> {

	opusEncodingInfo* _opusInfo;
	BOOL _pttRecordingIsActive;
	id _pttRecAudioActivity;
	double _pttRecordedTime;
	OpaqueAudioQueueRef _audioQueueRef;
	AVAudioRecorder* _pttAudioRecorder;
	BOOL _idleTimerDisabled;
	id<WAPttRecorderDelegate> _delegate;
	NSString* _pathToAudioRecording;

}

@property (nonatomic,copy) NSString * pathToAudioRecording;                          //@synthesize pathToAudioRecording=_pathToAudioRecording - In the implementation block
@property (assign,nonatomic,__weak) id<WAPttRecorderDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)audioSessionInterrupted:(id)arg1 ;
-(void)handleRecordingFailed;
-(int)writeOggOpusFirstPages;
-(void)pushToTalkStartRecording;
-(double)inProgressRecordTime;
-(int)cleanupState;
-(void)handleAudioRecordingDidFinishRecordingSuccessfully:(BOOL)arg1 audioFilePath:(id)arg2 ;
-(NSString *)pathToAudioRecording;
-(void)deactivateAudioSession;
-(int)finalOpusCleanup;
-(void)handleAudioSessionInterrupted;
-(void)audioRecorderEncodeErrorDidOccur:(id)arg1 error:(id)arg2 ;
-(void)setPathToAudioRecording:(NSString *)arg1 ;
-(void)setDelegate:(id<WAPttRecorderDelegate>)arg1 ;
-(void)dealloc;
-(id)init;
-(id<WAPttRecorderDelegate>)delegate;
-(double)duration;
-(BOOL)isActive;
-(void)stopRecording;
-(void)audioRecorderDidFinishRecording:(id)arg1 successfully:(BOOL)arg2 ;
-(void)audioRecorderBeginInterruption:(id)arg1 ;
-(void)audioRecorderEndInterruption:(id)arg1 ;
-(void)record;
-(void)cancelRecording;
@end

