/*
* This header is generated by classdump-dyld 1.0
* on Thursday, August 25, 2016 at 11:47:04 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/342EE397-EC3B-4D13-968C-80EF1D13592D/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <UIKit/UIScrollView.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol WAEditableImageScrollViewEditingDelegate;
@class WAEditableImageCompositeView, UITapGestureRecognizer, UIView, UIImage, WAPaintCanvas, WAPaintCanvasView, NSString;

@interface WAEditableImageScrollView : UIScrollView <UIScrollViewDelegate, UIGestureRecognizerDelegate> {

	double _fillToBoundsScale;
	BOOL _needsAdjustZoomScale;
	BOOL _needsSetZoomScale;
	BOOL _isScrollingInteractively;
	WAEditableImageCompositeView* _compositeView;
	UITapGestureRecognizer* _doubleTapGesture;
	BOOL _paintingEnabled;
	BOOL _receivesTouchesBeyondBounds;
	BOOL _expandsToBounds;
	BOOL _resetsZoomScaleOnBoundsChange;
	id<WAEditableImageScrollViewEditingDelegate> _editingDelegate;
	double _targetZoomScale;
	UIEdgeInsets _contentInsetForZoomScaleCalculation;

}

@property (assign,nonatomic,__weak) id<WAEditableImageScrollViewEditingDelegate> editingDelegate;              //@synthesize editingDelegate=_editingDelegate - In the implementation block
@property (nonatomic,readonly) UIView * compositeView;                                                         //@synthesize compositeView=_compositeView - In the implementation block
@property (nonatomic,readonly) UIImage * compositeViewSnapshotImage; 
@property (nonatomic,retain) UIImage * image; 
@property (nonatomic,retain) UIImage * overlayImage; 
@property (nonatomic,retain) WAPaintCanvas * paintCanvas; 
@property (nonatomic,readonly) WAPaintCanvasView * paintCanvasView; 
@property (assign,getter=isPaintingEnabled,nonatomic) BOOL paintingEnabled;                                    //@synthesize paintingEnabled=_paintingEnabled - In the implementation block
@property (assign,nonatomic) double targetZoomScale;                                                           //@synthesize targetZoomScale=_targetZoomScale - In the implementation block
@property (assign,nonatomic) BOOL receivesTouchesBeyondBounds;                                                 //@synthesize receivesTouchesBeyondBounds=_receivesTouchesBeyondBounds - In the implementation block
@property (assign,nonatomic) BOOL expandsToBounds;                                                             //@synthesize expandsToBounds=_expandsToBounds - In the implementation block
@property (assign,nonatomic) BOOL resetsZoomScaleOnBoundsChange;                                               //@synthesize resetsZoomScaleOnBoundsChange=_resetsZoomScaleOnBoundsChange - In the implementation block
@property (assign,nonatomic) UIEdgeInsets contentInsetForZoomScaleCalculation;                                 //@synthesize contentInsetForZoomScaleCalculation=_contentInsetForZoomScaleCalculation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(WAPaintCanvas *)paintCanvas;
-(void)setPaintCanvas:(WAPaintCanvas *)arg1 ;
-(WAPaintCanvasView *)paintCanvasView;
-(void)setResetsZoomScaleOnBoundsChange:(BOOL)arg1 ;
-(UIView *)compositeView;
-(void)setContentInsetForZoomScaleCalculation:(UIEdgeInsets)arg1 ;
-(UIImage *)compositeViewSnapshotImage;
-(void)setPaintingEnabled:(BOOL)arg1 ;
-(BOOL)isPaintingEnabled;
-(BOOL)receivesTouchesBeyondBounds;
-(void)setNeedsAdjustZoomScale;
-(void)configureZooming;
-(CGRect)zoomRectForScale:(float)arg1 withCenter:(CGPoint)arg2 ;
-(void)relayoutAlongsideLayerAnimation;
-(UIEdgeInsets)contentInsetForZoomScaleCalculation;
-(BOOL)expandsToBounds;
-(double)targetZoomScale;
-(void)calculateFillToBoundsScale:(out double*)arg1 minimumZoomScale:(out double*)arg2 maximumZoomScale:(out double*)arg3 forImageSize:(CGSize)arg4 ;
-(BOOL)resetsZoomScaleOnBoundsChange;
-(void)toggleZoomInOutAtPoint:(CGPoint)arg1 ;
-(void)setTargetZoomScale:(double)arg1 ;
-(void)setReceivesTouchesBeyondBounds:(BOOL)arg1 ;
-(void)setExpandsToBounds:(BOOL)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setImage:(UIImage *)arg1 ;
-(BOOL)pointInside:(CGPoint)arg1 withEvent:(id)arg2 ;
-(void)setFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setBounds:(CGRect)arg1 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewDidZoom:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id)viewForZoomingInScrollView:(id)arg1 ;
-(void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2 ;
-(void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(UIImage *)image;
-(void)setEditingDelegate:(id<WAEditableImageScrollViewEditingDelegate>)arg1 ;
-(id<WAEditableImageScrollViewEditingDelegate>)editingDelegate;
-(UIImage *)overlayImage;
-(void)handleDoubleTap:(id)arg1 ;
-(void)setOverlayImage:(UIImage *)arg1 ;
@end

