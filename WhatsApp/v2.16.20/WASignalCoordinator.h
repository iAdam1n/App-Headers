/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:50:47 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/F01A5503-B253-4A30-B0BC-B7B5406FD725/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <WhatsApp/WhatsApp-Structs.h>
@class WASignalKeyStore;

@interface WASignalCoordinator : NSObject {

	signal_contextRef _signal_global_context;
	signal_protocol_store_contextRef _signal_store_context;
	WASignalKeyStore* _keyStore;

}

@property (nonatomic,readonly) BOOL localKeysAvailable; 
+(int)signalPublicKey:(out ec_public_key*)arg1 fromKeyData:(id)arg2 withKeyType:(unsigned char)arg3 context:(signal_contextRef)arg4 ;
+(signal_contextRef)createGlobalContext;
+(id)rawKeyDataFromSerializedSignalKeyBuffer:(signal_bufferRef)arg1 ;
+(BOOL)validateSignatureForKeyBundle:(id)arg1 ;
+(id)rawKeyDataFromSerializedSignalKeyData:(id)arg1 ;
-(signal_protocol_store_contextRef)signal_store_context;
-(BOOL)hasOutgoingSenderKeyStateForSignalAddress:(id)arg1 ;
-(signal_contextRef)signal_global_context;
-(int)encryptForGroupAddress:(signal_protocol_sender_key_name*)arg1 plaintextData:(id)arg2 ciphertextData:(out id*)arg3 ciphertextType:(out unsigned long long*)arg4 ;
-(int)encryptForIndividualAddress:(signal_protocol_address*)arg1 plaintextData:(id)arg2 ciphertextData:(out id*)arg3 ciphertextType:(out unsigned long long*)arg4 ;
-(int)decryptPreKeyCiphertextData:(id)arg1 signalAddress:(signal_protocol_address*)arg2 plaintextData:(out id*)arg3 ;
-(int)decryptRegularCiphertextData:(id)arg1 signalAddress:(signal_protocol_address*)arg2 plaintextData:(out id*)arg3 ;
-(int)decryptSenderKeyCiphertextData:(id)arg1 senderKeyName:(signal_protocol_sender_key_name*)arg2 plaintextData:(out id*)arg3 ;
-(BOOL)senderKeyDistributionMessageData:(out id*)arg1 forSignalAddress:(id)arg2 didCreateNewSenderKey:(BOOL*)arg3 error:(out id*)arg4 ;
-(BOOL)encryptPlaintextData:(id)arg1 forSignalAddress:(id)arg2 maxPkcs7PaddingLength:(unsigned char)arg3 ciphertextData:(out id*)arg4 ciphertextType:(out unsigned long long*)arg5 error:(out id*)arg6 ;
-(BOOL)decryptCiphertextData:(id)arg1 withCiphertextType:(unsigned long long)arg2 forSignalAddress:(id)arg3 unpadPkcs7:(BOOL)arg4 plaintextData:(out id*)arg5 error:(out id*)arg6 ;
-(BOOL)processSenderKeyDistributionMessageData:(id)arg1 forSignalAddress:(id)arg2 error:(out id*)arg3 ;
-(BOOL)processPreKeyBundle:(id)arg1 forSignalAddress:(id)arg2 error:(out id*)arg3 ;
-(BOOL)generateFingerprintForSignalAddress:(id)arg1 localStableIdentifier:(id)arg2 remoteStableIdentifier:(id)arg3 signalFingerprint:(out id*)arg4 error:(out id*)arg5 ;
-(BOOL)createAndSaveIdentity;
-(BOOL)localKeysAvailable;
-(id)prekeyForSerializedRecord:(id)arg1 ;
-(NSRange)createAndStorePreKeysWithIdRange:(NSRange)arg1 ;
-(BOOL)regenerateKeyStore;
-(BOOL)digestCheckForPrekeyIds:(id)arg1 againstHash:(id)arg2 withLocalKeyBundleForHashInit:(id)arg3 ;
-(id)fetchUnsentPrekeys:(unsigned long long)arg1 ;
-(BOOL)trickleGeneratePrekeysIfNecessaryWithDesiredCount:(unsigned long long)arg1 ;
-(BOOL)fetchRegistrationId:(out id*)arg1 forUserJid:(id)arg2 error:(out id*)arg3 ;
-(BOOL)fetchSessionBaseKeyData:(out id*)arg1 forUserJid:(id)arg2 error:(out id*)arg3 ;
-(void)removeSessionForUserJid:(id)arg1 shouldClearIdentity:(BOOL)arg2 ;
-(signal_protocol_store_contextRef)createAndSetupStoreContextFromGlobalContext:(signal_contextRef)arg1 withKeyStore:(id)arg2 ;
-(id)fetchLocalKeyBundle;
-(id)fetchIdentityPublicKey;
-(int)fetchSignedPrekeyId:(out unsigned*)arg1 keyData:(out id*)arg2 signatureData:(out id*)arg3 ;
-(id)initWithKeyStore:(id)arg1 ;
-(BOOL)createNewSignedPrekey:(out id*)arg1 signature:(out id*)arg2 serializedSignedPrekey:(out id*)arg3 error:(out id*)arg4 ;
-(BOOL)saveSerializedSignedPrekey:(id)arg1 error:(out id*)arg2 ;
-(void)dealloc;
-(id)keyStore;
@end

