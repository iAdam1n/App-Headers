/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:50:48 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/F01A5503-B253-4A30-B0BC-B7B5406FD725/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/WhatsApp-Structs.h>
#import <WhatsApp/WAEditableItemView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <WhatsApp/WAAutoPlayVideoPlayerPlaybackDelegate.h>
#import <WhatsApp/WAGIFToggleViewDelegate.h>
#import <WhatsApp/WAMediaPlayerDelegate.h>
#import <WhatsApp/WAVideoScrubberDelegate.h>

@class WAVideoScrubberContainerView, WAGIFToggleView, WAVideoScrubber, UITapGestureRecognizer, WAMultiSendEditableVideo, NSString;

@interface WAEditableVideoItemView : WAEditableItemView <UIGestureRecognizerDelegate, WAAutoPlayVideoPlayerPlaybackDelegate, WAGIFToggleViewDelegate, WAMediaPlayerDelegate, WAVideoScrubberDelegate> {

	WAVideoScrubberContainerView* _videoScrubberContainerView;
	WAGIFToggleView* _GIFToggleView;
	WAVideoScrubber* _videoScrubber;
	BOOL _needsUpdateThumbnailOnTimeChange;
	SCD_Struct_WA8 _sourceTimeToSeekOnPlayerLoad;
	UITapGestureRecognizer* _tapGesture;
	BOOL _needsRegenerateThumbnails;
	BOOL _mediaPlaybackPaused;

}

@property (assign,getter=isMediaPlaybackPaused,nonatomic) BOOL mediaPlaybackPaused;              //@synthesize mediaPlaybackPaused=_mediaPlaybackPaused - In the implementation block
@property (nonatomic,readonly) WAMultiSendEditableVideo * currentMediaItem; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setNeedsRegenerateThumbnails;
-(void)updateMediaPlayerPlaybackTimeRange;
-(void)viewTapped:(id)arg1 ;
-(void)updateThumb;
-(void)mediaPlayerStatusDidChange:(id)arg1 ;
-(void)mediaPlayerDidChangeCurrentTime:(id)arg1 ;
-(void)mediaPlayerDidFinishLoading:(id)arg1 ;
-(void)mediaPlayerDidPlayToEndTime:(id)arg1 ;
-(void)mediaPlayerDidRequestPlaybackStart:(id)arg1 ;
-(void)mediaPlayerDidBeginScrubbing:(id)arg1 ;
-(void)mediaPlayerDidEndScrubbing:(id)arg1 ;
-(void)videoScrubberDidChangeTrimmedTimeRange:(id)arg1 ;
-(void)videoScrubberDidChangeSlowMotionTimeRange:(id)arg1 ;
-(void)videoScrubberDidBeginScrubbing:(id)arg1 pausePlayback:(BOOL)arg2 ;
-(void)videoScrubberDidChangeCurrentTime:(id)arg1 ;
-(void)videoScrubberDidEndScrubbing:(id)arg1 ;
-(void)videoScrubber:(id)arg1 videoFramesAtTimes:(id)arg2 size:(CGSize)arg3 tolerance:(SCD_Struct_WA8)arg4 block:(/*^block*/id)arg5 ;
-(CGSize)videoScrubberThumbnailAspectRatio:(id)arg1 ;
-(void)configureWithItem:(id)arg1 ;
-(void)setCropping:(BOOL)arg1 ;
-(void)didChangeMediaItemCrop;
-(void)editableImageScrollViewDidReceiveSingleTap:(id)arg1 ;
-(void)autoPlayVideoPlayerDidUpdateContentSize:(id)arg1 ;
-(void)autoPlayVideoPlayerDidChangeCurrentTime:(id)arg1 ;
-(void)GIFToggleViewDidChangeState:(id)arg1 ;
-(void)setKeyboardHidden:(BOOL)arg1 ;
-(void)stopPresentation;
-(void)updatePreviewInterfaceLayout;
-(void)willBeginEditingTextItem;
-(void)didEndEditingTextItem;
-(void)destroyPlayerElements;
-(BOOL)isMediaPlaybackPaused;
-(void)setMediaPlaybackPaused:(BOOL)arg1 ;
-(double)isDurationTrimable:(SCD_Struct_WA8)arg1 ;
-(void)createPlayerElementsIfNeeded;
-(void)updateMediaPlayerSuppressPlayButtonState;
-(void)updateGIFButtonAnimated:(BOOL)arg1 ;
-(void)updateAutoPlayDisabledState;
-(void)regenerateThumbnailsIfNeeded;
-(SCD_Struct_WA8)clampTimeToValidRange:(SCD_Struct_WA8)arg1 ;
-(void)updateCurrentTimeForSourceTime:(SCD_Struct_WA8)arg1 ;
-(BOOL)isGIFSupported;
-(void)toggleGIF;
-(void)setScrolling:(BOOL)arg1 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)dealloc;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)prepareForReuse;
-(void)didScroll;
@end

