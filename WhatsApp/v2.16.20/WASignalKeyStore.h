/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:50:47 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/F01A5503-B253-4A30-B0BC-B7B5406FD725/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol WASignalKeyStoreDelegate;
#import <WhatsApp/WhatsApp-Structs.h>
@class NSPersistentStoreCoordinator, NSPersistentStore, NSManagedObjectContext, NSURL, NSData;

@interface WASignalKeyStore : NSObject {

	NSPersistentStoreCoordinator* _persistentStoreCoordinator;
	NSPersistentStore* _persistentStore;
	NSManagedObjectContext* _managedObjectContext;
	NSURL* _urlToDatabase;
	BOOL _storeLoaded;
	NSData* _identityKeypairData;
	NSData* _registrationIdData;
	id<WASignalKeyStoreDelegate> _delegate;

}

@property (nonatomic,readonly) NSData * identityKeypairData;                            //@synthesize identityKeypairData=_identityKeypairData - In the implementation block
@property (nonatomic,readonly) NSData * registrationIdData;                             //@synthesize registrationIdData=_registrationIdData - In the implementation block
@property (nonatomic,readonly) BOOL storeLoaded;                                        //@synthesize storeLoaded=_storeLoaded - In the implementation block
@property (assign,nonatomic,__weak) id<WASignalKeyStoreDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
+(id)baseKeychainQuery;
-(void)setMetadata:(id)arg1 forKey:(id)arg2 ;
-(id)metadataForKey:(id)arg1 ;
-(BOOL)loadPersistentStore;
-(void)deleteSenderKeyForSignalAddress:(id)arg1 ;
-(id)fetchIdentityPublicKeyDataForUserJid:(id)arg1 ;
-(void)clearPersistentStore;
-(id)sortedPrekeyRecordsForIds:(id)arg1 ;
-(int)lastPreKeyId;
-(int)lastSentPreKeyId;
-(void)setLastPreKeyId:(int)arg1 ;
-(id)unsentPreKeyRecords:(unsigned long long)arg1 ;
-(BOOL)saveEphemeralPrekeys:(id)arg1 ;
-(void)setIdentityKeypairData:(id)arg1 registrationIdData:(id)arg2 ;
-(void)markUserJid:(id)arg1 didReceiveLocalSenderKey:(BOOL)arg2 forGroup:(id)arg3 ;
-(id)containsSessionsForJids:(id)arg1 ;
-(BOOL)checkBaseKey:(id)arg1 forMessageWithStanzaId:(id)arg2 chatJid:(id)arg3 participantJid:(id)arg4 ;
-(void)saveMessageBaseKey:(id)arg1 forMessageWithStanzaId:(id)arg2 chatJid:(id)arg3 participantJid:(id)arg4 createIfNecessary:(BOOL)arg5 ;
-(void)updateGroup:(id)arg1 withActiveParticipants:(id)arg2 ;
-(id)jidsNeedingLocalSenderKeyForGroup:(id)arg1 ;
-(BOOL)loadKeychainStore;
-(BOOL)loadCoreDataStore;
-(void)dropKeychainStore;
-(void)clearCoreDataStore;
-(void)clearKeychainStore;
-(int)saveToKeychainIdentityKeypairData:(id)arg1 registrationIdData:(id)arg2 ;
-(id)createNewManagedObjectContext;
-(BOOL)saveContextImpl:(id)arg1 ;
-(void)dropCoreDataStore;
-(int)fetchFromKeychainIdentityKeypairData:(out id*)arg1 registrationIdData:(out id*)arg2 ;
-(int)performKeychainMigration;
-(int)clearKeychain;
-(int)fetchFromKeychainIdentityKeypairData:(out id*)arg1 registrationIdData:(out id*)arg2 withBaseKeychainQuery:(id)arg3 ;
-(void)fetchIdentityKeypairData:(out id*)arg1 registrationIdData:(out id*)arg2 ;
-(void)beginDeferringStoreSaves;
-(void)endDeferringStoreSaves;
-(void)setLastSentPreKeyId:(int)arg1 ;
-(double)signedPrekeyRotationInterval;
-(id)activeSignedPrekeyId;
-(void)setActiveSignedPrekeyId:(int)arg1 ;
-(BOOL)keyChainAccessible;
-(NSData *)identityKeypairData;
-(NSData *)registrationIdData;
-(BOOL)storeLoaded;
-(void)activeSignedPrekeyData:(out id*)arg1 creationDate:(id*)arg2 ;
-(id)preKeyRecordForId:(int)arg1 ;
-(BOOL)storePreKeyRecord:(id)arg1 id:(int)arg2 ;
-(BOOL)containsPreKeyRecordWithId:(int)arg1 ;
-(BOOL)removePreKeyRecordWithId:(int)arg1 ;
-(id)signedPreKeyRecordForId:(int)arg1 ;
-(BOOL)storeSignedPreKeyRecord:(id)arg1 prekeyId:(int)arg2 creationDate:(id)arg3 ;
-(BOOL)containsSignedPreKeyRecordWithId:(int)arg1 ;
-(BOOL)removeSignedPreKeyRecordWithId:(int)arg1 ;
-(id)sessionRecordForRecipient:(const signal_protocol_address*)arg1 ;
-(BOOL)storeSessionRecord:(id)arg1 recipient:(const signal_protocol_address*)arg2 ;
-(BOOL)containsSessionForRecipient:(const signal_protocol_address*)arg1 ;
-(int)deleteSessionForRecipient:(const signal_protocol_address*)arg1 ;
-(int)deleteAllSessionsForRecipientName:(const char*)arg1 length:(unsigned long long)arg2 ;
-(BOOL)storeIdentity:(id)arg1 recipientName:(const char*)arg2 length:(unsigned long long)arg3 ;
-(BOOL)isTrustedIdentity:(id)arg1 recipientName:(const char*)arg2 length:(unsigned long long)arg3 ;
-(BOOL)storeSenderKey:(id)arg1 senderKeyName:(const signal_protocol_sender_key_name*)arg2 ;
-(id)senderKeyRecordForName:(const signal_protocol_sender_key_name*)arg1 ;
-(void)clearIdentityForRecipientId:(long long)arg1 ;
-(void)signedPrekeyRecord:(out id*)arg1 creationDate:(out id*)arg2 forPrekeyId:(int)arg3 ;
-(id)timeForSessionWithRecipientId:(long long)arg1 deviceId:(int)arg2 ;
-(id)identityKeyForRecipientName:(const char*)arg1 length:(unsigned long long)arg2 ;
-(int)deleteSenderKeyRecordForName:(const signal_protocol_sender_key_name*)arg1 ;
-(void)clearOldSignedPreKeys;
-(void)clearOldMessageBaseKeys;
-(void)clearOldDecryptJournalData;
-(BOOL)needsSignedPrekeyRotation;
-(BOOL)saveToDecryptJournalData:(id)arg1 journalId:(id)arg2 ;
-(id)fetchDecryptJournalDataForJournalId:(id)arg1 ;
-(void)deleteJournaledDataForJournalId:(id)arg1 ;
-(id)fetchWASenderKeysForGroup:(id)arg1 inContext:(id)arg2 ;
-(id)decryptJournalForJournalId:(id)arg1 inContext:(id)arg2 ;
-(void)markAllSenderKeysForGroup:(id)arg1 didReceiveLocalSenderKey:(BOOL)arg2 ;
-(void)deleteMessageBaseKeyForMessageWithStanzaId:(id)arg1 chatJid:(id)arg2 participantJid:(id)arg3 ;
-(void)setDelegate:(id<WASignalKeyStoreDelegate>)arg1 ;
-(id<WASignalKeyStoreDelegate>)delegate;
-(id)initWithURL:(id)arg1 ;
-(BOOL)saveContext:(id)arg1 ;
@end

