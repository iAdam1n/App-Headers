/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:50:46 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/F01A5503-B253-4A30-B0BC-B7B5406FD725/WhatsApp.app/WhatsApp
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <WhatsApp/XMPPStanza.h>

@class NSDate, NSString, NSData;

@interface XMPPMessageStanza : XMPPStanza {

	NSDate* _timeOfArrival;

}

@property (nonatomic,readonly) BOOL broadcast; 
@property (nonatomic,readonly) BOOL multicast; 
@property (assign,nonatomic) unsigned long long type; 
@property (nonatomic,readonly) BOOL hasEdit; 
@property (assign,nonatomic) long long edit; 
@property (nonatomic,copy) NSString * text; 
@property (nonatomic,readonly) NSString * nickname; 
@property (assign,nonatomic) unsigned long long xmppMediaType; 
@property (nonatomic,readonly) unsigned long long mediaOrigin; 
@property (nonatomic,copy) NSString * mediaURL; 
@property (nonatomic,readonly) NSString * mediaHostIp; 
@property (nonatomic,copy) NSString * mediaName; 
@property (assign,nonatomic) long long mediaDuration; 
@property (nonatomic,copy) NSData * thumbnailData; 
@property (assign,nonatomic) int fileSize; 
@property (assign,nonatomic) long long pageCount; 
@property (nonatomic,copy) NSString * fileHash; 
@property (nonatomic,copy) NSString * vCardStringValue; 
@property (nonatomic,copy) NSString * vCardContactName; 
@property (nonatomic,copy) NSString * locationLatitude; 
@property (nonatomic,copy) NSString * locationLongitude; 
@property (nonatomic,copy) NSString * locationName; 
@property (nonatomic,copy) NSString * mediaTitle; 
@property (nonatomic,copy) NSString * mediaCollectionName; 
@property (nonatomic,copy) NSString * mediaAuthorName; 
@property (nonatomic,copy) NSString * mediaCaption; 
@property (nonatomic,copy) NSString * mediaReason; 
@property (nonatomic,copy) NSString * mediaMatchedText; 
@property (nonatomic,copy) NSString * mediaDescription; 
@property (nonatomic,copy) NSString * mediaCanonicalURL; 
@property (nonatomic,readonly) BOOL containsValidWebPageMessage; 
@property (nonatomic,copy) NSData * mediaKey; 
@property (nonatomic,copy) NSString * mimeType; 
@property (assign,nonatomic) unsigned mediaWidth; 
@property (assign,nonatomic) unsigned mediaHeight; 
@property (nonatomic,retain) NSDate * timeOfArrival;                          //@synthesize timeOfArrival=_timeOfArrival - In the implementation block
@property (nonatomic,copy,readonly) NSString * uniqueKey; 
+(int)messageTypeFromXMPPMediaType:(unsigned long long)arg1 ;
+(id)stringsForTypes;
+(unsigned long long)mediaTypeForString:(id)arg1 ;
+(id)stringForMediaType:(unsigned long long)arg1 ;
+(id)outgoingMessageStanzaToJid:(id)arg1 messageId:(id)arg2 participant:(id)arg3 messageType:(int)arg4 mediaOrigin:(int)arg5 phash:(id)arg6 retryCount:(unsigned long long)arg7 multicast:(BOOL)arg8 broadcastListName:(id)arg9 broadcastListParticipants:(id)arg10 withFanoutCiphertextPayload:(id)arg11 commonCiphertextPayload:(id)arg12 ;
+(void)xmppMessageType:(out unsigned long long*)arg1 xmppMediaType:(out unsigned long long*)arg2 fromWAMessageType:(int)arg3 mediaOrigin:(int)arg4 ;
+(id)encNodeForCiphertextPayload:(id)arg1 withMediaType:(unsigned long long)arg2 retryCount:(unsigned long long)arg3 ;
+(id)stringForCiphertextType:(unsigned long long)arg1 ;
+(unsigned long long)xmppMediaTypeFromMessageType:(int)arg1 mediaOrigin:(int)arg2 ;
+(id)createMessageTo:(id)arg1 ;
+(id)outgoingMessageStanzaForSharedItem:(id)arg1 withFanoutCiphertextPayload:(id)arg2 commonCiphertextPayload:(id)arg3 ;
+(id)outgoingMessageStanzaForWAMessage:(id)arg1 withParticipant:(id)arg2 retryCount:(unsigned long long)arg3 qCount:(unsigned long long)arg4 withFanoutCiphertextPayload:(id)arg5 commonCiphertextPayload:(id)arg6 ;
+(id)ciphertextTypeForString:(id)arg1 ;
+(id)stringForType:(unsigned long long)arg1 ;
+(unsigned long long)typeForString:(id)arg1 ;
-(unsigned long long)xmppMediaType;
-(NSString *)mediaHostIp;
-(NSString *)mediaAuthorName;
-(NSString *)mediaCollectionName;
-(NSString *)mediaCaption;
-(unsigned)mediaWidth;
-(unsigned)mediaHeight;
-(void)setMediaWidth:(unsigned)arg1 ;
-(void)setMediaHeight:(unsigned)arg1 ;
-(void)setMediaKey:(NSData *)arg1 ;
-(unsigned long long)mediaOrigin;
-(void)setMediaOrigin:(unsigned long long)arg1 ;
-(NSString *)vCardContactName;
-(NSString *)vCardStringValue;
-(void)setMulticast:(BOOL)arg1 ;
-(id)vcard;
-(NSString *)mediaMatchedText;
-(id)initWithFromJID:(id)arg1 toJID:(id)arg2 type:(unsigned long long)arg3 ;
-(BOOL)multicast;
-(BOOL)hasEdit;
-(long long)edit;
-(void)setEdit:(long long)arg1 ;
-(void)setXmppMediaType:(unsigned long long)arg1 ;
-(NSString *)mediaDescription;
-(void)setMediaDescription:(NSString *)arg1 ;
-(NSString *)mediaCanonicalURL;
-(void)setMediaCanonicalURL:(NSString *)arg1 ;
-(void)setMediaMatchedText:(NSString *)arg1 ;
-(void)setVCardStringValue:(NSString *)arg1 ;
-(void)setVCardContactName:(NSString *)arg1 ;
-(NSString *)mediaReason;
-(void)setMediaReason:(NSString *)arg1 ;
-(BOOL)containsValidWebPageMessage;
-(void)setMediaTitle:(NSString *)arg1 ;
-(void)setMediaAuthorName:(NSString *)arg1 ;
-(void)setMediaCollectionName:(NSString *)arg1 ;
-(void)setMediaCaption:(NSString *)arg1 ;
-(void)addBroadcastListInfoWithName:(id)arg1 recipientJIDs:(id)arg2 ;
-(NSDate *)timeOfArrival;
-(void)setTimeOfArrival:(NSDate *)arg1 ;
-(void)setType:(unsigned long long)arg1 ;
-(unsigned long long)type;
-(NSString *)text;
-(void)setText:(NSString *)arg1 ;
-(id)body;
-(id)log;
-(NSString *)mimeType;
-(long long)pageCount;
-(void)setPageCount:(long long)arg1 ;
-(int)fileSize;
-(NSString *)locationName;
-(NSString *)fileHash;
-(void)setFileHash:(NSString *)arg1 ;
-(void)setFileSize:(int)arg1 ;
-(NSString *)mediaTitle;
-(NSData *)thumbnailData;
-(void)setThumbnailData:(NSData *)arg1 ;
-(NSString *)nickname;
-(void)setMediaURL:(NSString *)arg1 ;
-(NSString *)mediaURL;
-(void)setLocationLatitude:(NSString *)arg1 ;
-(void)setLocationLongitude:(NSString *)arg1 ;
-(void)setMimeType:(NSString *)arg1 ;
-(id)media;
-(NSData *)mediaKey;
-(void)setMediaDuration:(long long)arg1 ;
-(long long)mediaDuration;
-(void)setLocationName:(NSString *)arg1 ;
-(BOOL)broadcast;
-(void)setMediaName:(NSString *)arg1 ;
-(NSString *)mediaName;
-(NSString *)uniqueKey;
-(NSString *)locationLatitude;
-(NSString *)locationLongitude;
@end

