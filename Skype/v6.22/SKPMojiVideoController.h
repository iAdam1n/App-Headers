/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:44:42 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/BCB8F06C-D639-4947-A2BF-415A0A66C023/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class AVAsset, AVPlayerLayer, AVPlayer, SKPActivityToken, SKPMojiAudioSessionManagerClient;

@interface SKPMojiVideoController : NSObject {

	BOOL _playerItemDidReachEnd;
	BOOL _isObservingPlayerItem;
	BOOL _isObservingPlayerLayer;
	BOOL _readForDisplayFlagReceived;
	BOOL _observingPlaybackInterrupters;
	unsigned long long _status;
	AVAsset* _asset;
	AVPlayerLayer* _playerLayer;
	AVPlayer* _player;
	SKPActivityToken* _activityToken;
	SKPMojiAudioSessionManagerClient* _audioSessionManagerClient;

}

@property (assign,nonatomic) unsigned long long status;                                                              //@synthesize status=_status - In the implementation block
@property (nonatomic,retain) AVAsset * asset;                                                                        //@synthesize asset=_asset - In the implementation block
@property (nonatomic,retain) AVPlayerLayer * playerLayer;                                                            //@synthesize playerLayer=_playerLayer - In the implementation block
@property (nonatomic,retain) AVPlayer * player;                                                                      //@synthesize player=_player - In the implementation block
@property (assign,nonatomic) BOOL isObservingPlayerItem;                                                             //@synthesize isObservingPlayerItem=_isObservingPlayerItem - In the implementation block
@property (assign,nonatomic) BOOL isObservingPlayerLayer;                                                            //@synthesize isObservingPlayerLayer=_isObservingPlayerLayer - In the implementation block
@property (assign,nonatomic) BOOL readForDisplayFlagReceived;                                                        //@synthesize readForDisplayFlagReceived=_readForDisplayFlagReceived - In the implementation block
@property (nonatomic,retain) SKPActivityToken * activityToken;                                                       //@synthesize activityToken=_activityToken - In the implementation block
@property (nonatomic,retain) SKPMojiAudioSessionManagerClient * audioSessionManagerClient;                           //@synthesize audioSessionManagerClient=_audioSessionManagerClient - In the implementation block
@property (assign,getter=isObservingPlaybackInterrupters,nonatomic) BOOL observingPlaybackInterrupters;              //@synthesize observingPlaybackInterrupters=_observingPlaybackInterrupters - In the implementation block
@property (assign,nonatomic) BOOL playerItemDidReachEnd;                                                             //@synthesize playerItemDidReachEnd=_playerItemDidReachEnd - In the implementation block
-(void)setPlayerLayer:(AVPlayerLayer *)arg1 ;
-(void)applicationWillResignActiveNotification:(id)arg1 ;
-(void)replay;
-(id)initWithVideoFilePath:(id)arg1 playerLayer:(id)arg2 ;
-(BOOL)playerItemDidReachEnd;
-(void)setActivityToken:(SKPActivityToken *)arg1 ;
-(id)assetForFilePath:(id)arg1 ;
-(void)setIsObservingPlayerItem:(BOOL)arg1 ;
-(BOOL)isObservingPlayerItem;
-(BOOL)isObservingPlayerLayer;
-(SKPMojiAudioSessionManagerClient *)audioSessionManagerClient;
-(void)stopObservingPlaybackInterrupters;
-(void)setIsObservingPlayerLayer:(BOOL)arg1 ;
-(BOOL)readForDisplayFlagReceived;
-(void)setReadForDisplayFlagReceived:(BOOL)arg1 ;
-(void)requestAudioSession;
-(BOOL)isObservingPlaybackInterrupters;
-(void)setObservingPlaybackInterrupters:(BOOL)arg1 ;
-(void)mojiWillStartPlaying:(id)arg1 ;
-(void)setPlayerItemDidReachEnd:(BOOL)arg1 ;
-(void)startObservingPlaybackInterrupters;
-(void)setAudioSessionManagerClient:(SKPMojiAudioSessionManagerClient *)arg1 ;
-(void)dealloc;
-(void)stop;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(AVAsset *)asset;
-(void)setAsset:(AVAsset *)arg1 ;
-(unsigned long long)status;
-(void)setStatus:(unsigned long long)arg1 ;
-(SKPActivityToken *)activityToken;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(void)play;
-(AVPlayer *)player;
-(void)playerItemDidReachEnd:(id)arg1 ;
-(AVPlayerLayer *)playerLayer;
@end

