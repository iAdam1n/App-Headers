/*
* This header is generated by classdump-dyld 1.0
* on Friday, August 26, 2016 at 5:44:44 PM British Summer Time
* Operating System: Version 9.3.3 (Build 13G34)
* Image Source: /var/containers/Bundle/Application/BCB8F06C-D639-4947-A2BF-415A0A66C023/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <UIKit/UISplitViewControllerDelegate.h>

@class UISplitViewController, MKAdaptiveSplitViewControllerStylesheet, UIView, UIViewController, NSArray;

@interface MKAdaptiveSplitViewController : UIViewController <UISplitViewControllerDelegate> {

	BOOL _presentsWithGesture;
	BOOL _shouldShownOverlayForDetailViewController;
	UISplitViewController* _internalSplitViewController;
	MKAdaptiveSplitViewControllerStylesheet* _stylesheet;
	long long _preferredDisplayMode;
	UIView* _detailOverlayView;

}

@property (nonatomic,readonly) UISplitViewController * internalSplitViewController;                  //@synthesize internalSplitViewController=_internalSplitViewController - In the implementation block
@property (nonatomic,retain) UIViewController * primaryViewController; 
@property (nonatomic,retain) UIViewController * secondaryViewController; 
@property (nonatomic,retain) UIView * detailOverlayView;                                             //@synthesize detailOverlayView=_detailOverlayView - In the implementation block
@property (assign,nonatomic,__weak) id<MKAdaptiveSplitViewControllerDelegate> delegate; 
@property (nonatomic,retain) MKAdaptiveSplitViewControllerStylesheet * stylesheet;                   //@synthesize stylesheet=_stylesheet - In the implementation block
@property (nonatomic,copy) NSArray * viewControllers; 
@property (assign,nonatomic) BOOL presentsWithGesture;                                               //@synthesize presentsWithGesture=_presentsWithGesture - In the implementation block
@property (assign,nonatomic) BOOL shouldShownOverlayForDetailViewController;                         //@synthesize shouldShownOverlayForDetailViewController=_shouldShownOverlayForDetailViewController - In the implementation block
@property (getter=isCollapsed,nonatomic,readonly) BOOL collapsed; 
@property (assign,nonatomic) long long preferredDisplayMode;                                         //@synthesize preferredDisplayMode=_preferredDisplayMode - In the implementation block
@property (nonatomic,readonly) long long displayMode; 
+(Class)navigationBarForSecondaryViewControllerClass;
-(id)skp_childObjects:(BOOL)arg1 invokedFromClass:(Class)arg2 ;
-(void)setShouldShownOverlayForDetailViewController:(BOOL)arg1 ;
-(UISplitViewController *)internalSplitViewController;
-(UIView *)detailOverlayView;
-(UIViewController *)secondaryViewController;
-(void)setViewControllerIfPossible:(id)arg1 atIndex:(unsigned long long)arg2 ;
-(id)wrapControllerInNavigationControllerIfNecessary:(id)arg1 ;
-(BOOL)shouldShownOverlayForDetailViewController;
-(void)dismissDetailViewControllerWithViewControllerForExpandedSplitViewController:(id)arg1 ;
-(void)setSecondaryViewController:(UIViewController *)arg1 ;
-(void)setDetailOverlayView:(UIView *)arg1 ;
-(void)setDelegate:(id<MKAdaptiveSplitViewControllerDelegate>)arg1 ;
-(id)init;
-(void)traitCollectionDidChange:(id)arg1 ;
-(id<MKAdaptiveSplitViewControllerDelegate>)delegate;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(void)viewDidLayoutSubviews;
-(void)dismissViewControllerAnimated:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)viewDidLoad;
-(id)childViewControllerForStatusBarStyle;
-(id)childViewControllerForStatusBarHidden;
-(void)showViewController:(id)arg1 sender:(id)arg2 ;
-(void)showDetailViewController:(id)arg1 sender:(id)arg2 ;
-(NSArray *)viewControllers;
-(void)setViewControllers:(NSArray *)arg1 ;
-(long long)displayMode;
-(BOOL)splitViewController:(id)arg1 shouldHideViewController:(id)arg2 inOrientation:(long long)arg3 ;
-(long long)preferredDisplayMode;
-(BOOL)isCollapsed;
-(BOOL)presentsWithGesture;
-(void)setPresentsWithGesture:(BOOL)arg1 ;
-(void)setPreferredDisplayMode:(long long)arg1 ;
-(UIViewController *)primaryViewController;
-(void)setPrimaryViewController:(UIViewController *)arg1 ;
-(MKAdaptiveSplitViewControllerStylesheet *)stylesheet;
-(void)setStylesheet:(MKAdaptiveSplitViewControllerStylesheet *)arg1 ;
@end

