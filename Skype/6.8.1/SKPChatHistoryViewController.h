//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SKPViewController.h"

#import "EKEventEditViewDelegate.h"
#import "SKPChatCellDelegate.h"
#import "SKPChatHistoryViewDelegate.h"
#import "SKPChatMessageHeartsViewControllerDelegate.h"
#import "SKPEmptyChatViewDelegate.h"
#import "SKPSelecting.h"
#import "SKPViewModelArrayControllerDelegate.h"
#import "UIGestureRecognizerDelegate.h"
#import "UIViewControllerPreviewingDelegate.h"

@class NSAttributedString, NSDate, NSMutableArray, NSMutableIndexSet, NSString, NSTimer, SKPChatHeadTypingController, SKPChatHistoryView, SKPConversation, SKPDebugTimer, SKPSelection, SKPViewModelArrayController, UIImage, UITapGestureRecognizer;

@interface SKPChatHistoryViewController : SKPViewController <SKPChatHistoryViewDelegate, SKPViewModelArrayControllerDelegate, SKPChatCellDelegate, SKPEmptyChatViewDelegate, UIGestureRecognizerDelegate, UIViewControllerPreviewingDelegate, SKPChatMessageHeartsViewControllerDelegate, EKEventEditViewDelegate, SKPSelecting>
{
    _Bool _isConference;
    _Bool _applicationIsInBackground;
    _Bool _loadingHistory;
    _Bool _pendingDidLoadHistoryWhenFlushIsComplete;
    _Bool _hasReceivedUpdatesDuringLoadHistory;
    _Bool _showLiveCallControlItem;
    _Bool _showLargeEmoticons;
    _Bool _hasSentRating;
    _Bool _shouldScrollToSelectionWhenAvailable;
    _Bool _animatingRotation;
    SKPChatHistoryView *_chatHistoryView;
    NSString *_chatDataCacheName;
    SKPDebugTimer *_debugTimer;
    UIImage *_joinLiveCallIconImage;
    SKPSelection *_selection;
    long long _keyboardDismissMode;
    id <SKPChatHistoryViewControllerDelegate> _delegate;
    SKPConversation *_conversation;
    NSString *_conversationIdentity;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSString *_metaDataCacheName;
    NSAttributedString *_displayNameAttributedString;
    id _applicationDidEnterBackgroundNotificationObserver;
    id _applicationWillEnterForegroundNotificationObserver;
    long long _migrationState;
    SKPViewModelArrayController *_controller;
    SKPChatHeadTypingController *_typingController;
    NSMutableArray *_indexPathsToAdd;
    NSMutableArray *_indexPathsToMove;
    NSMutableArray *_indexPathsToRemove;
    NSMutableIndexSet *_sectionsToAdd;
    long long _emptyPageState;
    NSDate *_callQualityFeedbackTimestamp;
    unsigned long long _callRating;
    NSTimer *_ratingDefaultTimer;
    double _ratingGracePeriod;
    double _autoRateInterval;
    unsigned long long _selectedMessageObjectId;
    NSMutableArray *_coalescingDurationStack;
    id <UIViewControllerPreviewing> _previewingContext;
}

+ (id)synchronouslyFetchConversationForIdentity:(id)arg1;
+ (long long)basicChatLayoutOptionsForViewModel:(id)arg1;
+ (id)chatDataCacheNameForConversationWithIdentity:(id)arg1;
+ (id)conversationKeyPaths;
+ (id)metaDataCacheNameForConversationWithIdentity:(id)arg1;
@property(retain, nonatomic) id <UIViewControllerPreviewing> previewingContext; // @synthesize previewingContext=_previewingContext;
@property(retain, nonatomic) NSMutableArray *coalescingDurationStack; // @synthesize coalescingDurationStack=_coalescingDurationStack;
@property(nonatomic, getter=isAnimatingRotation) _Bool animatingRotation; // @synthesize animatingRotation=_animatingRotation;
@property(nonatomic) _Bool shouldScrollToSelectionWhenAvailable; // @synthesize shouldScrollToSelectionWhenAvailable=_shouldScrollToSelectionWhenAvailable;
@property(nonatomic) unsigned long long selectedMessageObjectId; // @synthesize selectedMessageObjectId=_selectedMessageObjectId;
@property(nonatomic) double autoRateInterval; // @synthesize autoRateInterval=_autoRateInterval;
@property(nonatomic) double ratingGracePeriod; // @synthesize ratingGracePeriod=_ratingGracePeriod;
@property(retain, nonatomic) NSTimer *ratingDefaultTimer; // @synthesize ratingDefaultTimer=_ratingDefaultTimer;
@property(nonatomic) unsigned long long callRating; // @synthesize callRating=_callRating;
@property(nonatomic) _Bool hasSentRating; // @synthesize hasSentRating=_hasSentRating;
@property(retain, nonatomic) NSDate *callQualityFeedbackTimestamp; // @synthesize callQualityFeedbackTimestamp=_callQualityFeedbackTimestamp;
@property(nonatomic) _Bool showLargeEmoticons; // @synthesize showLargeEmoticons=_showLargeEmoticons;
@property(nonatomic) _Bool showLiveCallControlItem; // @synthesize showLiveCallControlItem=_showLiveCallControlItem;
@property(nonatomic) _Bool hasReceivedUpdatesDuringLoadHistory; // @synthesize hasReceivedUpdatesDuringLoadHistory=_hasReceivedUpdatesDuringLoadHistory;
@property(nonatomic) _Bool pendingDidLoadHistoryWhenFlushIsComplete; // @synthesize pendingDidLoadHistoryWhenFlushIsComplete=_pendingDidLoadHistoryWhenFlushIsComplete;
@property(nonatomic, getter=isLoadingHistory) _Bool loadingHistory; // @synthesize loadingHistory=_loadingHistory;
@property(nonatomic) long long emptyPageState; // @synthesize emptyPageState=_emptyPageState;
@property(retain, nonatomic) NSMutableIndexSet *sectionsToAdd; // @synthesize sectionsToAdd=_sectionsToAdd;
@property(retain, nonatomic) NSMutableArray *indexPathsToRemove; // @synthesize indexPathsToRemove=_indexPathsToRemove;
@property(retain, nonatomic) NSMutableArray *indexPathsToMove; // @synthesize indexPathsToMove=_indexPathsToMove;
@property(retain, nonatomic) NSMutableArray *indexPathsToAdd; // @synthesize indexPathsToAdd=_indexPathsToAdd;
@property(retain, nonatomic) SKPChatHeadTypingController *typingController; // @synthesize typingController=_typingController;
@property(retain, nonatomic) SKPViewModelArrayController *controller; // @synthesize controller=_controller;
@property(nonatomic) long long migrationState; // @synthesize migrationState=_migrationState;
@property(retain, nonatomic) id applicationWillEnterForegroundNotificationObserver; // @synthesize applicationWillEnterForegroundNotificationObserver=_applicationWillEnterForegroundNotificationObserver;
@property(retain, nonatomic) id applicationDidEnterBackgroundNotificationObserver; // @synthesize applicationDidEnterBackgroundNotificationObserver=_applicationDidEnterBackgroundNotificationObserver;
@property(nonatomic) _Bool applicationIsInBackground; // @synthesize applicationIsInBackground=_applicationIsInBackground;
@property(nonatomic) _Bool isConference; // @synthesize isConference=_isConference;
@property(copy, nonatomic) NSAttributedString *displayNameAttributedString; // @synthesize displayNameAttributedString=_displayNameAttributedString;
@property(retain, nonatomic) NSString *metaDataCacheName; // @synthesize metaDataCacheName=_metaDataCacheName;
@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(copy, nonatomic) NSString *conversationIdentity; // @synthesize conversationIdentity=_conversationIdentity;
@property(retain, nonatomic) SKPConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) __weak id <SKPChatHistoryViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long keyboardDismissMode; // @synthesize keyboardDismissMode=_keyboardDismissMode;
@property(retain, nonatomic) SKPSelection *selection; // @synthesize selection=_selection;
@property(retain, nonatomic) UIImage *joinLiveCallIconImage; // @synthesize joinLiveCallIconImage=_joinLiveCallIconImage;
@property(retain, nonatomic) NSString *chatDataCacheName; // @synthesize chatDataCacheName=_chatDataCacheName;
@property(retain, nonatomic) SKPChatHistoryView *chatHistoryView; // @synthesize chatHistoryView=_chatHistoryView;
- (void).cxx_destruct;
- (void)eventEditViewController:(id)arg1 didCompleteWithAction:(long long)arg2;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (void)controllerDidChangeAllContent:(id)arg1;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didMoveSectionAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)controller:(id)arg1 didInsertSectionsAtIndexes:(id)arg2;
- (void)controller:(id)arg1 didDeleteSectionsAtIndexes:(id)arg2;
- (void)controller:(id)arg1 didMoveObjectAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (void)controller:(id)arg1 didInsertObjectsAtIndexPaths:(id)arg2;
- (void)controller:(id)arg1 didDeleteObjectsAtIndexPaths:(id)arg2;
- (void)controllerWillChangeContent:(id)arg1;
- (void)controller:(id)arg1 didUpdateObjectAtIndexPath:(id)arg2 updateType:(long long)arg3;
- (void)chatCell:(id)arg1 didTapImageWithURL:(id)arg2 context:(id)arg3;
- (void)chatCell:(id)arg1 didLongTapURL:(id)arg2 context:(id)arg3;
- (void)chatCell:(id)arg1 didTapTypeDetected:(id)arg2;
- (void)chatCell:(id)arg1 didTapURL:(id)arg2 context:(id)arg3;
- (void)openPhoneNumber:(id)arg1 onCell:(id)arg2;
- (void)openAddress:(id)arg1 onCell:(id)arg2;
- (void)openDate:(id)arg1 onCell:(id)arg2;
- (void)createEventWithDate:(id)arg1;
- (void)openURL:(id)arg1;
- (void)chatMessageHeartsViewControllerDidCancel:(id)arg1;
- (void)chatMessageHeartsViewController:(id)arg1 didSelectAnnotation:(id)arg2;
- (void)showMessageHeartsViewControllerForMessage:(id)arg1;
- (void)reportStatisticsForPictureOpenInContext:(id)arg1;
- (void)reportStatisticsForLinkOpen:(id)arg1 longTapped:(_Bool)arg2 context:(id)arg3;
- (void)forwardMessage:(id)arg1 sender:(id)arg2;
- (void)collectionView:(id)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(id)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(id)arg1 shouldShowMenuForItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldShowTimeDividerBeforeItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldDisplayAsPartOfGroupChatAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 layout:(id)arg2 typeOfItemAtIndexPath:(id)arg3;
- (double)additionalHeightForItemWithViewModel:(id)arg1 constrainedToWidth:(double)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3 constrainedToWidth:(double)arg4;
- (_Bool)collectionViewLayout:(id)arg1 shouldShowMessageStatusForCellAtIndexPath:(id)arg2;
- (_Bool)collectionViewLayout:(id)arg1 shouldShowDeliveryStatusForCellAtIndexPath:(id)arg2;
- (_Bool)collectionViewLayout:(id)arg1 shouldShowHeartForCellAtIndexPath:(id)arg2;
- (_Bool)collectionViewLayout:(id)arg1 shouldShowHeartColumnForCellAtIndexPath:(id)arg2;
- (_Bool)collectionViewLayout:(id)arg1 shouldShowTimestampForCellAtIndexPath:(id)arg2;
- (_Bool)collectionViewLayoutShouldDisplayAsGroupChat:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)configureChatMessageDelivery:(id)arg1;
- (void)configureChatHeartColumnSupplementaryView:(id)arg1;
- (void)configureChatHeartSupplementaryView:(id)arg1;
- (void)configureChatAuthorLabel:(id)arg1;
- (void)configureFloatingChatAvatarView:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)joinLiveConversation:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)askForAppStoreRating;
- (void)finalizeRating:(id)arg1;
- (void)cancelRatingFinalization:(id)arg1;
- (void)sendPendingRatingIfAvailable;
- (void)onRatingDefaultTimerFired:(id)arg1;
@property(readonly, nonatomic) SKPDebugTimer *debugTimer; // @synthesize debugTimer=_debugTimer;
- (void)didLoadHistory;
- (void)chatHistoryViewDidRequestLoadHistory:(id)arg1;
- (void)updateRefreshControlState;
- (void)chatViewIsRevealingTimestamps:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (void)updateLiveCallControlState;
- (void)updateMigrationState;
- (void)emptyChatViewDeclineContactRequest;
- (void)emptyChatViewAcceptContactRequest;
- (void)emptyChatViewSendContactRequestWithMessage:(id)arg1;
- (void)refreshConsumedHorizonIfNecessary;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
- (void)onMessageNotification:(id)arg1;
- (void)updateShouldShowEmptyPageState;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handleTapChatGesture:(id)arg1;
- (id)collectionView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)asynchronouslyLoadConversationWithIdentity:(id)arg1 orContactObjectId:(unsigned long long)arg2;
- (unsigned long long)metaDataCacheVersion;
- (void)loadMetaData;
- (id)indexPathOfItemWithObjectId:(unsigned long long)arg1;
- (_Bool)canMakeSelection:(id)arg1;
- (void)cancelContentOffsetAnimation;
- (void)scrollToTheBottom;
- (void)scrollToTheBottomIfNeeded;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)popCoalesingDuration;
- (void)pushCoalesingDuration:(double)arg1;
- (void)unregisterForPreviewing;
- (void)registerForPreviewing;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (void)save;
- (id)initWithConversationIdentity:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

