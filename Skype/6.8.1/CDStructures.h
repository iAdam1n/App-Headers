//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AVFoundationVideoSourceProviderImpl {
    id _field1;
    struct IVideoSourceProviderCb *_field2;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
    struct CheckedMutex _field4;
};

struct AccessSession;

struct AccessSessionWrapper {
    struct AccessSession *_field1;
};

struct Account;

struct AccountWrapper {
    struct Account *_field1;
};

struct Alert;

struct AlertWrapper {
    struct Alert *_field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamIn;

struct AudioStreamOut;

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct BITCrashManagerCallbacks {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
};

struct BufferInfo;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct Callback {
    CDUnknownFunctionPointerType *_field1;
};

struct CallbackList<dl::video::IDeviceManagerCallback> {
    struct CheckedMutex m_callbacksLock;
    struct vector<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>, std::__1::allocator<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>>> m_callbacks;
};

struct CaptureCapabilities {
    unsigned int _field1;
    struct CaptureFormat _field2[128];
    unsigned long long _field3;
};

struct CaptureFormat {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct CaptureParameters {
    unsigned int fields;
    unsigned int fourcc;
    unsigned int width;
    unsigned int height;
    unsigned int framerate;
};

struct CaptureStats {
    unsigned int fields;
    unsigned int dataTimeStamp;
    unsigned int dataValidityInterval;
    unsigned int captureFrameWidth;
    unsigned int captureFrameHeight;
    unsigned int captureColorSpace;
    unsigned int requestedFrameRate;
    _Bool hardwareEncoding;
    _Bool autoZoom;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> histResolutionAndroid;
    int srMinRate;
    int srMaxRate;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> histOfSrRate;
};

struct CapturedFramePool {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct IImageConverter *_field3;
    struct set<void *, std::__1::less<void *>, std::__1::allocator<void *>> _field4;
    struct set<void *, std::__1::less<void *>, std::__1::allocator<void *>> _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct CheckedMutex _field9;
};

struct CheckedMutex {
    struct MutexCoreImp *m_imp;
    long long m_reserved1;
};

struct Conference {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> ConferenceUri;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> DomainName;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> UriScheme;
};

struct Contact;

struct ContactGroup;

struct ContactGroupWrapper {
    struct ContactGroup *_field1;
};

struct ContactSearch;

struct ContactSearchWrapper {
    struct ContactSearch *_field1;
};

struct ContactWrapper {
    struct Contact *_field1;
};

struct ContentItem;

struct ContentItemWrapper {
    struct ContentItem *_field1;
};

struct Conversation;

struct ConversationWrapper {
    struct Conversation *_field1;
};

struct CoreVideoFrame {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct __CVBuffer *_field3;
    struct ImageInfo _field4;
    int _field5;
    struct RoiOf<float> _field6;
    struct RectSize _field7;
    _Bool _field8;
    char *_field9;
    int _field10;
    unsigned int _field11;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field12;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field13;
    int _field14;
};

struct DYNOVERLAY {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
};

struct DataBuffer<char, 8192> {
    unsigned long long _field1;
    unsigned long long _field2;
    char *_field3;
};

struct DtorBase;

struct DummyCapturer {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct CheckedMutex _field4;
    struct ICapturerCb *_field5;
    struct ICapturerListener *_field6;
    struct CaptureCapabilities _field7;
    struct CaptureParameters _field8;
    struct CaptureStats _field9;
    _Bool _field10;
    char *_field11;
    void *_field12;
    int _field13;
    struct ImageConverter _field14;
    struct CapturedFramePool _field15;
    void *_field16;
};

struct EcsClientConfig {
    unsigned int version;
    int max_retry_attempts;
    unsigned int max_server_retry_attempts;
    int first_delay;
    int next_delay_factor;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> servers;
    unsigned long long default_reload_interval;
    unsigned int default_reload_interval_limit;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> ui_version;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> skype_token;
    _Bool disable_experiments;
    unsigned int token_update_delay_ms;
};

struct EcsClientDependencies {
    unsigned int version;
    struct IHttpStack *httpstack;
};

struct Endpoint {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> EndpointValue;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> EndpointType;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> HashedEndpoint;
};

struct ExceptionInfo {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Type;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Message;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> FullInfo;
};

struct FileMetadataValue {
    _Bool isPII;
    int ScrubType;
    int piiKind;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> value;
};

struct FileUploadItem {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> source;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> filePath;
    struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>>> metadata;
};

struct GI;

struct GIWrapper {
    struct GI *_field1;
};

struct GLEFFECT {
    char *name;
    struct GLPROGRAM *program1;
    struct GLPROGRAM *program2;
};

struct GLPROGRAM {
    unsigned int program;
    int uniforms[14];
};

struct IAppleRendererBinding;

struct IAudioSessionManagerCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct ICallbackObject {
    CDUnknownFunctionPointerType *_field1;
};

struct ICameraSwitchBinding;

struct ICapturer {
    CDUnknownFunctionPointerType *_field1;
};

struct ICapturerCb {
    CDUnknownFunctionPointerType *_field1;
};

struct ICapturerListener {
    CDUnknownFunctionPointerType *_field1;
};

struct IDebugger {
    CDUnknownFunctionPointerType *_field1;
};

struct IDeviceManagerCallback {
    CDUnknownFunctionPointerType *_field1;
};

struct IDnsRequest {
    CDUnknownFunctionPointerType *_field1;
};

struct IEcsCallback__ {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct IEcsClient;

struct IEffectProcessor {
    CDUnknownFunctionPointerType *_field1;
};

struct IFileTransferCallback__ {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct IFrameSinkCallback<dl::video::PlatformFrameTuple> {
    CDUnknownFunctionPointerType *_field1;
};

struct IHostResolver {
    CDUnknownFunctionPointerType *_field1;
};

struct IHttpReadStream {
    CDUnknownFunctionPointerType *_field1;
};

struct IHttpStack;

struct IImageConverter;

struct ILHProxyCallbackObject {
    CDUnknownFunctionPointerType *_field1;
};

struct ILogLinePrefix;

struct ILogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IOSAudioWrapper {
    struct Mutex _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    struct ScopedPtr<SendThread> _field5;
    struct ScopedPtr<BufferInfo> _field6;
    struct ScopedPtr<BufferInfo> _field7;
    struct OpaqueAudioComponentInstance *_field8;
    struct AudioStreamBasicDescription _field9;
    struct AudioStreamIn *_field10;
    struct AudioStreamOut *_field11;
    double _field12;
    id _field13;
};

struct IOSFrameConverter {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15[3];
    unsigned int _field16;
    unsigned int _field17[4];
    float _field18;
    float _field19;
    void *_field20;
    void *_field21;
    struct CheckedMutex _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
};

struct IProxyCallbackObject {
    CDUnknownFunctionPointerType *_field1;
};

struct IRefCount;

struct IRequest {
    CDUnknownFunctionPointerType *_field1;
};

struct ISSLCertSettings {
    CDUnknownFunctionPointerType *_field1;
};

struct ISslCertSettings {
    CDUnknownFunctionPointerType *_field1;
};

struct ITelemetryCallback__ {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct IVideoBindingRenderer;

struct IVideoFrame {
    CDUnknownFunctionPointerType *_field1;
};

struct IVideoPlatformCb {
    CDUnknownFunctionPointerType *_field1;
};

struct IVideoSourceProviderCb;

struct ImageConverter {
    CDUnknownFunctionPointerType *_field1;
    struct ImageMemBuffer _field2;
    struct ImageMemBuffer _field3;
    void *_field4;
    struct CheckedMutex _field5;
};

struct ImageInfo {
    struct PixelFormat _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct {
        struct Plane _field1;
        struct Plane _field2;
        struct Plane _field3;
    } _field6;
};

struct ImageMemBuffer {
    unsigned long long _field1;
    char *_field2;
};

struct IntrusivePtr<dl::video::apple::PreviewControlApple> {
    struct PreviewControlApple *_field1;
};

struct LibInstance {
    struct auto_ptr<IngestionLib_v7::LibInstance::LibInstanceObjects> _field1;
};

struct LibInstanceObjects;

struct LimitedDataBuffer<char, 8192> {
    unsigned long long _field1;
    unsigned long long _field2;
    char *_field3;
    unsigned long long _field4;
};

struct Listener;

struct ListenerWrapper {
    struct Listener *_field1;
};

struct LogLevelConfig {
    int maxLogLevel;
    _Bool overwriteDefaultLogLevel;
};

struct MKHorizontalMargin {
    long long _field1;
    long long _field2;
};

struct MKSwipeAnimationData {
    double from;
    double to;
    double duration;
    double start;
};

struct MKVerticalMargin {
    long long _field1;
    long long _field2;
};

struct MediaDocument;

struct MediaDocumentWrapper {
    struct MediaDocument *_field1;
};

struct Message;

struct MessageAnnotation;

struct MessageAnnotationWrapper {
    struct MessageAnnotation *_field1;
};

struct MessageWrapper {
    struct Message *_field1;
};

struct Metatag;

struct MetatagWrapper {
    struct Metatag *_field1;
};

struct Mutex {
    void *_field1;
};

struct MutexCoreImp;

struct ObjectInterface;

struct ObjectInterfaceWrapper {
    struct ObjectInterface *_field1;
};

struct OpaqueAudioComponentInstance;

struct PLCrashHostInfoVersion {
    unsigned long long major;
    unsigned long long minor;
    unsigned long long revision;
};

struct PLCrashReporterCallbacks {
    unsigned short _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
};

struct Participant;

struct ParticipantWrapper {
    struct Participant *_field1;
};

struct PixelFormat {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
};

struct Plane {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct PreviewControlApple {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    struct WeakAuxiliary *_field4;
    struct ILogLinePrefix *_field5;
    unsigned long long _field6;
    int _field7;
    id _field8;
    id _field9;
    id _field10;
    long long _field11;
};

struct PreviewVideoCameraSwitchBindingEvent {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct ICameraSwitchBinding *_field3;
    _Bool _field4;
};

struct PreviewVideoRenderedBindingEvent {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct IAppleRendererBinding *_field3;
    _Bool _field4;
};

struct PriceQuote;

struct PriceQuoteWrapper {
    struct PriceQuote *_field1;
};

struct Property;

struct Proptable;

struct ProptableWrapper {
    struct Proptable *_field1;
};

struct Pstn {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> PstnNumber;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> HashedPstn;
};

struct Record {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Id;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> Context;
    long long Timestamp;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> ConfigurationIds;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Type;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> EventType;
    int ResultCode;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> ResultDetail;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> ResultValue;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> InitiatingUser;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> InitiatingUserEndpoint;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> TargetUsers;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> Extension;
    long long SampleTimestamp;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> SampleRate;
    struct map<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>>> SamplingData;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> InitiatingUiVersion;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> PstnNumbers;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> ContextIds;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> InitiatingUserEndpointType;
    struct UserV1 DeprecatedInitiatingUserComposite;
    struct vector<clienttelemetry::data::v3::UserV1, std::__1::allocator<clienttelemetry::data::v3::UserV1>> DeprecatedTargetUsersComposite;
    struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>>> PstnNumbersComposite;
    int RecordType;
    struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> ExtensionInt64;
    struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _reserved;
    struct Conference ConferenceComposite;
    struct ExceptionInfo ExceptionInfo;
    struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::PII, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::PII>>> PIIExtensions;
    struct User InitiatingUserComposite;
    struct vector<clienttelemetry::data::v3::User, std::__1::allocator<clienttelemetry::data::v3::User>> TargetUsersComposite;
};

struct RectSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct RefCount<AsyncMedia::cm::TransportResponse> {
    struct TransportResponse *_field1;
    unsigned int _field2;
};

struct RefCount<libhttp::TransportResponse> {
    struct TransportResponse *_field1;
    int _field2;
};

struct RefCountPtr<AsyncMedia::cm::ICallbackObject> {
    struct ICallbackObject *m_ptr;
};

struct RefCountPtr<AsyncMedia::cm::ILogger> {
    struct ILogger *m_ptr;
};

struct RefCountPtr<AsyncMedia::cm::IRequest> {
    struct IRequest *m_ptr;
};

struct RefCountPtr<AsyncMedia::cm::TransportResponse> {
    struct TransportResponse *m_ptr;
};

struct RefCountPtr<IDnsRequest> {
    CDUnknownFunctionPointerType *_field1;
    struct IRefCount *_field2;
    struct IDnsRequest *_field3;
};

struct RefCountPtr<libhttp::ICallbackObject> {
    CDUnknownFunctionPointerType *_vptr$RefCountPtrBase;
    struct IRefCount *m_ref;
    struct ICallbackObject *m_value;
};

struct RefCountPtr<libhttp::IDebugger> {
    CDUnknownFunctionPointerType *_vptr$RefCountPtrBase;
    struct IRefCount *m_ref;
    struct IDebugger *m_value;
};

struct RefCountPtr<libhttp::TransportResponse> {
    CDUnknownFunctionPointerType *_vptr$RefCountPtrBase;
    struct IRefCount *m_ref;
    struct TransportResponse *m_value;
};

struct ResourceManager;

struct Roi {
    unsigned int xOffset;
    unsigned int yOffset;
    unsigned int width;
    unsigned int height;
};

struct RoiOf<float> {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SKPGLProcessorDynamicOverlay {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
};

struct SKPGLProcessorEffect {
    char *name;
    struct SKPGLProcessorProgram *program1;
    struct SKPGLProcessorProgram *program2;
};

struct SKPGLProcessorProgram {
    unsigned int program;
    int uniforms[16];
};

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct ScopedPtr<BufferInfo> {
    struct BufferInfo *_field1;
    struct DtorBase *_field2;
};

struct ScopedPtr<SendThread> {
    struct SendThread *_field1;
    struct DtorBase *_field2;
};

struct Search;

struct SearchWrapper {
    struct Search *_field1;
};

struct SendThread;

struct SensorData {
    double timestampCamera;
    float rotx;
    float roty;
    float rotxNoExp;
    float rotyNoExp;
    float mvx;
    float mvy;
    float mvxNoExp;
    float mvyNoExp;
    float shutterSpeedValue;
};

struct Setup;

struct SetupWrapper {
    struct Setup *_field1;
};

struct SkyLib;

struct SkyLibWrapper {
    struct SkyLib *_field1;
};

struct Sms;

struct SmsWrapper {
    struct Sms *_field1;
};

struct Stabilizer {
    CDUnknownFunctionPointerType *_field1;
};

struct TelemetryConfig {
    unsigned int version;
    char *collectorUrl;
    unsigned int bufferTimeInMillis;
    unsigned int maxPackageSize;
    int transimissionProtocol;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> uiVersion;
    char *offlineStoragePath;
    unsigned int offlineStorageSizeLimitInBytes;
    char *collectorTenantId;
    char *fileCollectorUrl;
    struct LogLevelConfig logConfig;
    char *fileUploadOfflineStoragePath;
    unsigned int fileUploadOfflineStorageSizeLimitInBytes;
    unsigned int daemonRunIntervalInSeconds;
    char *collectorWriteToken;
};

struct TelemetryDependencies {
    unsigned int version;
    struct IHttpStack *httpstack;
    struct IEcsClient *ecsClient;
    struct IEcsClient *ecsClientInstance;
    struct ResourceManager *resourceManager;
};

struct TelemetryEvent {
    unsigned int version;
    struct Record record;
};

struct Term;

struct TermWrapper {
    struct Term *_field1;
};

struct Transfer;

struct TransferWrapper {
    struct Transfer *_field1;
};

struct Translator;

struct TranslatorWrapper {
    struct Translator *_field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct User {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Username;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Prefix;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> UiVersion;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Endpoint;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> EndpointType;
    struct Pstn Pstn;
    struct Endpoint EndpointComposite;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> UserExtension;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Email;
};

struct UserV1 {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Username;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Prefix;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> UiVersion;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> Endpoint;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> EndpointType;
    struct Pstn Pstn;
    struct Endpoint EndpointComposite;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> UserExtension;
};

struct Video;

struct VideoCapturerApple {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    int _field3;
    struct WeakAuxiliary *_field4;
    struct ILogLinePrefix *_field5;
    unsigned long long _field6;
    id _field7;
    struct IntrusivePtr<dl::video::apple::PreviewControlApple> _field8;
    id _field9;
};

struct VideoMessage;

struct VideoMessageWrapper {
    struct VideoMessage *_field1;
};

struct VideoRendererFeedback {
    unsigned int srcWidth;
    unsigned int srcHeight;
    struct Roi srcRoi;
    unsigned int renderedWidthPx;
    unsigned int renderedHeightPx;
    unsigned int screenWidthPx;
    unsigned int screenHeightPx;
    unsigned int maxFps;
    unsigned int screenWidthPh;
    unsigned int screenHeightPh;
};

struct VideoRenderer__ {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct IVideoBindingRenderer *_field3;
    _Bool _field4;
    struct VideoRendererFeedback _field5;
    _Bool _field6;
};

struct VideoWrapper {
    struct Video *_field1;
};

struct Voicemail;

struct VoicemailWrapper {
    struct Voicemail *_field1;
};

struct WeakAuxiliary;

struct WeakIntrusivePtr<dl::video::IDeviceManagerCallback>;

struct WeakIntrusivePtr<dl::video::apple::VideoCapturerApple> {
    struct WeakAuxiliary *m_aux;
    struct VideoCapturerApple *m_ptr;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PLCrashReportDecoder {
    struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
    struct _ProtobufCMessage _field1;
    struct _Plcrash__CrashReport__SystemInfo *_field2;
    struct _Plcrash__CrashReport__ApplicationInfo *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread **_field5;
    unsigned long long _field6;
    struct _Plcrash__CrashReport__BinaryImage **_field7;
    struct _Plcrash__CrashReport__Exception *_field8;
    struct _Plcrash__CrashReport__Signal *_field9;
    struct _Plcrash__CrashReport__ProcessInfo *_field10;
    struct _Plcrash__CrashReport__MachineInfo *_field11;
    struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__ApplicationInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    char *_field4;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    struct _Plcrash__CrashReport__Processor *_field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    unsigned int _field6;
    int _field7;
    int _field8;
    unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
    struct _ProtobufCMessage _field1;
    char *_field2;
    char *_field3;
    unsigned long long _field4;
    struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
    struct _ProtobufCMessage _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    unsigned long long _field5;
};

struct _Plcrash__CrashReport__SystemInfo {
    struct _ProtobufCMessage _field1;
    int _field2;
    int _field3;
    char *_field4;
    int _field5;
    long long _field6;
    char *_field7;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
    struct _ProtobufCMessage _field1;
    unsigned long long _field2;
    struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
    struct _ProtobufCMessageDescriptor *_field1;
    unsigned int _field2;
    struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct auto_ptr<IngestionLib_v7::LibInstance::LibInstanceObjects> {
    struct LibInstanceObjects *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::FileMetadataValue>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::PII, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::PII>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::PII>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, clienttelemetry::data::v3::Pstn>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, double, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, double>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, double>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, long long, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, long long>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, long long>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, long long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, long long>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<long long, std::__1::allocator<long long>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct plcrash_exception_server_context {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    CDUnknownFunctionPointerType _field5;
    void *_field6;
    struct _opaque_pthread_mutex_t {
        long long _field1;
        char _field2[56];
    } _field7;
    struct _opaque_pthread_cond_t {
        long long _field1;
        char _field2[40];
    } _field8;
    unsigned int _field9;
    _Bool _field10;
};

struct plcrash_mach_exception_port_set {
    unsigned int count;
    unsigned int masks[14];
    unsigned int ports[14];
    int behaviors[14];
    int flavors[14];
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_node<std::__1::basic_string<char>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
    struct __tree<void *, std::__1::less<void *>, std::__1::allocator<void *>> {
        struct __tree_node<void *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<void *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<void *>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<IngestionLib_v7::Property *, std::__1::allocator<IngestionLib_v7::Property>> {
        struct Property *_field1;
    } _field3;
};

struct vector<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>, std::__1::allocator<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>>> {
    struct WeakIntrusivePtr<dl::video::IDeviceManagerCallback> *__begin_;
    struct WeakIntrusivePtr<dl::video::IDeviceManagerCallback> *__end_;
    struct __compressed_pair<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>*, std::__1::allocator<auf_v18::WeakIntrusivePtr<dl::video::IDeviceManagerCallback>>> {
        struct WeakIntrusivePtr<dl::video::IDeviceManagerCallback> *__first_;
    } __end_cap_;
};

struct vector<clienttelemetry::data::v3::User, std::__1::allocator<clienttelemetry::data::v3::User>> {
    struct User *__begin_;
    struct User *__end_;
    struct __compressed_pair<clienttelemetry::data::v3::User *, std::__1::allocator<clienttelemetry::data::v3::User>> {
        struct User *__first_;
    } __end_cap_;
};

struct vector<clienttelemetry::data::v3::UserV1, std::__1::allocator<clienttelemetry::data::v3::UserV1>> {
    struct UserV1 *__begin_;
    struct UserV1 *__end_;
    struct __compressed_pair<clienttelemetry::data::v3::UserV1 *, std::__1::allocator<clienttelemetry::data::v3::UserV1>> {
        struct UserV1 *__first_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__begin_;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *__first_;
    } __end_cap_;
};

struct vector<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>, std::__1::allocator<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>>> {
    vector_6acb3a7a *_field1;
    vector_6acb3a7a *_field2;
    struct __compressed_pair<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>*, std::__1::allocator<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>>> {
        vector_6acb3a7a *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} CDStruct_cc4e5495;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    void *_field1;
    char *_field2;
    char *_field3;
    unsigned int _field4;
    unsigned long long *_field5;
} CDStruct_3098c0ae;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    CDStruct_cc4e5495 _field9;
    CDStruct_cc4e5495 _field10;
    CDStruct_cc4e5495 _field11;
} CDStruct_ba31b9ca;

typedef struct {
    double position;
    double height;
    struct CGRect referenceFrame;
} CDStruct_c4519bd4;

// Template types
typedef struct IFrameSinkCallback<dl::video::PlatformFrameTuple> {
    CDUnknownFunctionPointerType *_field1;
} IFrameSinkCallback_56c8ac71;

typedef struct vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>> {
    struct Property *_field1;
    struct Property *_field2;
    struct __compressed_pair<IngestionLib_v7::Property *, std::__1::allocator<IngestionLib_v7::Property>> {
        struct Property *_field1;
    } _field3;
} vector_6acb3a7a;

typedef struct vector<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>, std::__1::allocator<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>>> {
    vector_6acb3a7a *_field1;
    vector_6acb3a7a *_field2;
    struct __compressed_pair<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>*, std::__1::allocator<std::__1::vector<IngestionLib_v7::Property, std::__1::allocator<IngestionLib_v7::Property>>>> {
        vector_6acb3a7a *_field1;
    } _field3;
} vector_075c9133;

#pragma mark Named Unions

union _GLKQuaternion {
    struct {
        union _GLKVector3 v;
        float s;
    } ;
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    float q[4];
};

union _GLKVector3 {
    struct {
        float x;
        float y;
        float z;
    } ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

