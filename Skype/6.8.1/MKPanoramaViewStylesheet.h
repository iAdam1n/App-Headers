//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKGlobalStylesheet.h"

@class UIColor;

@interface MKPanoramaViewStylesheet : MKGlobalStylesheet
{
}

- (double)ratioForContractingCloudsForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)ratioForContractingCloudsForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double ratioForContractingClouds;
- (id)circleColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)circleColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *circleColor;
- (id)backgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundColor;
- (double)badgeSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)badgeSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double badgeSize;
- (double)topPaddingBadgeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topPaddingBadgeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topPaddingBadge;
- (double)marginBetweenLogoAndBadgeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)marginBetweenLogoAndBadgeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double marginBetweenLogoAndBadge;
- (double)topPaddingAvatarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topPaddingAvatarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topPaddingAvatar;
- (double)rightPaddingAvatarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)rightPaddingAvatarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double rightPaddingAvatar;
- (double)topPaddingLogoForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topPaddingLogoForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topPaddingLogo;
- (double)leftPaddingLogoForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)leftPaddingLogoForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double leftPaddingLogo;
- (double)logoHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)logoHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double logoHeight;
- (double)logoWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)logoWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double logoWidth;
- (double)originYForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)originYForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double originY;
- (double)heightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double height;

@end

