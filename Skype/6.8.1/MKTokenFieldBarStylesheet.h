//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKGlobalStylesheet.h"

@class UIColor, UIFont;

@interface MKTokenFieldBarStylesheet : MKGlobalStylesheet
{
}

- (id)rightButtonHighlightedColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)rightButtonHighlightedColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *rightButtonHighlightedColor;
- (id)rightButtonNormalColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)rightButtonNormalColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *rightButtonNormalColor;
- (double)counterOffsetForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)counterOffsetForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double counterOffset;
- (id)counterLabelColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)counterLabelColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *counterLabelColor;
- (id)counterLabelFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)counterLabelFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *counterLabelFont;
- (id)maxCounterLabelColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)maxCounterLabelColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *maxCounterLabelColor;
- (id)maxCounterLabelFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)maxCounterLabelFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *maxCounterLabelFont;
- (id)prefixLabelFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)prefixLabelFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *prefixLabelFont;
- (id)prefixLabelColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)prefixLabelColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *prefixLabelColor;
- (double)paddingTokenFieldForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)paddingTokenFieldForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double paddingTokenField;
- (double)separatorMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorMargin;
- (double)separatorAlphaActiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorAlphaActiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorAlphaActive;
- (id)separatorColorActiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)separatorColorActiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *separatorColorActive;
- (double)separatorAlphaForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorAlphaForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorAlpha;
- (id)separatorColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)separatorColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *separatorColor;
- (double)minimumSizeBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)minimumSizeBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double minimumSizeBar;
- (double)separatorHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorHeight;
- (id)backgroundTokenFieldBarInactiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundTokenFieldBarInactiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundTokenFieldBarInactive;
- (id)backgroundTokenFieldBarActiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundTokenFieldBarActiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundTokenFieldBarActive;
- (double)innerRightMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)innerRightMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double innerRightMargin;
- (double)innerLeftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)innerLeftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double innerLeftMargin;
- (double)rightMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)rightMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double rightMargin;
- (double)leftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)leftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double leftMargin;

@end

