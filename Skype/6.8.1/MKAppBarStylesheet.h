//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKGlobalStylesheet.h"

@class UIColor;

@interface MKAppBarStylesheet : MKGlobalStylesheet
{
}

- (id)iconSelectedColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)iconSelectedColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *iconSelectedColor;
- (id)iconColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)iconColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *iconColor;
- (double)blueBackgroundStyleForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)blueBackgroundStyleForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double blueBackgroundStyle;
- (id)backgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundColor;
- (double)iconsContainerWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconsContainerWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconsContainerWidth;
- (double)iconBottomMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconBottomMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconBottomMargin;
- (double)iconTopMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconTopMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconTopMargin;
- (double)iconMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconMargin;
- (double)baselineHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)baselineHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double baselineHeight;
- (double)alphaOverflowShownForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)alphaOverflowShownForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double alphaOverflowShown;
- (double)alphaForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)alphaForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double alpha;
- (double)heightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double height;

@end

