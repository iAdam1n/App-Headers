//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKGlobalStylesheet.h"

@class UIColor, UIFont;

@interface MKHeaderNavigationBarStylesheet : MKGlobalStylesheet
{
}

- (double)bannerMaxNumberOfLinesForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerMaxNumberOfLinesForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerMaxNumberOfLines;
- (double)bannerHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerHeight;
- (id)bannerFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)bannerFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *bannerFont;
- (double)bannerBackgroundTransparencyForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerBackgroundTransparencyForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerBackgroundTransparency;
- (double)bannerContentLeftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerContentLeftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerContentLeftMargin;
- (double)bannerIconHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerIconHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerIconHeight;
- (double)bannerIconWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)bannerIconWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double bannerIconWidth;
- (double)chevronLeftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)chevronLeftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double chevronLeftMargin;
- (double)chevronTopMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)chevronTopMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double chevronTopMargin;
- (double)chevronBackgroundSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)chevronBackgroundSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double chevronBackgroundSize;
- (double)chevronFontSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)chevronFontSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double chevronFontSize;
- (id)highlightedColorDarkGrayBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)highlightedColorDarkGrayBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *highlightedColorDarkGrayBar;
- (id)fgColorDarkGrayBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)fgColorDarkGrayBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *fgColorDarkGrayBar;
- (id)bgColorDarkGrayBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)bgColorDarkGrayBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *bgColorDarkGrayBar;
- (id)highlightedColorBlueBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)highlightedColorBlueBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *highlightedColorBlueBar;
- (id)fgColorBlueBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)fgColorBlueBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *fgColorBlueBar;
- (id)bgColorBlueBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)bgColorBlueBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *bgColorBlueBar;
- (id)highlightedColorWhiteBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)highlightedColorWhiteBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *highlightedColorWhiteBar;
- (id)fgColorWhiteBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)fgColorWhiteBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *fgColorWhiteBar;
- (id)bgColorWhiteBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)bgColorWhiteBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *bgColorWhiteBar;
- (id)captionFontLandscapeiPhoneForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)captionFontLandscapeiPhoneForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *captionFontLandscapeiPhone;
- (id)titleFontLandscapeiPhoneForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)titleFontLandscapeiPhoneForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *titleFontLandscapeiPhone;
- (id)captionFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)captionFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *captionFont;
- (id)titleFontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)titleFontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *titleFont;
- (id)defaultHighlightedColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)defaultHighlightedColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *defaultHighlightedColor;
- (id)defaultForegroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)defaultForegroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *defaultForegroundColor;
- (id)defaultBackgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)defaultBackgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *defaultBackgroundColor;
- (id)captionTextColorWhiteBarForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)captionTextColorWhiteBarForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *captionTextColorWhiteBar;
- (double)scaleLandscapeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)scaleLandscapeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double scaleLandscape;
- (double)scaleBadgeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)scaleBadgeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double scaleBadge;
- (id)colorBackgroundProtectionForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)colorBackgroundProtectionForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *colorBackgroundProtection;
- (double)alphaBackgroundProtectionForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)alphaBackgroundProtectionForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double alphaBackgroundProtection;
- (double)marginStatusAndTitleForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)marginStatusAndTitleForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double marginStatusAndTitle;
- (double)statusSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)statusSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double statusSize;
- (double)positioningOffsetForStatusForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)positioningOffsetForStatusForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double positioningOffsetForStatus;
- (double)positioningOffsetForBadgeLSForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)positioningOffsetForBadgeLSForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double positioningOffsetForBadgeLS;
- (double)positioningOffsetForIconLSForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)positioningOffsetForIconLSForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double positioningOffsetForIconLS;
- (double)positioningOffsetForBadgeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)positioningOffsetForBadgeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double positioningOffsetForBadge;
- (double)positioningOffsetForIconForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)positioningOffsetForIconForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double positioningOffsetForIcon;
- (double)gapBetweenLabelsLandscapeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)gapBetweenLabelsLandscapeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double gapBetweenLabelsLandscape;
- (double)gapBetweenLabelsForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)gapBetweenLabelsForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double gapBetweenLabels;
- (double)topMarginTitleLabelDLLandScapeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topMarginTitleLabelDLLandScapeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topMarginTitleLabelDLLandScape;
- (double)topMarginTitleLabelSLLandScapeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topMarginTitleLabelSLLandScapeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topMarginTitleLabelSLLandScape;
- (double)topMarginTitleLabelDLForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topMarginTitleLabelDLForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topMarginTitleLabelDL;
- (double)topMarginTitleLabelSLForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)topMarginTitleLabelSLForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double topMarginTitleLabelSL;
- (double)separatorLineAlphaForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorLineAlphaForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorLineAlpha;
- (id)separatorLineColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)separatorLineColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *separatorLineColor;
- (double)separatorLineWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorLineWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorLineWidth;
- (double)offsetLabelsPositioningForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)offsetLabelsPositioningForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double offsetLabelsPositioning;
- (double)rightMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)rightMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double rightMargin;
- (double)leftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)leftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double leftMargin;
- (double)rightViewWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)rightViewWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double rightViewWidth;
- (double)leftViewWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)leftViewWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double leftViewWidth;
- (double)heightLandscapeDoubleLineForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightLandscapeDoubleLineForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double heightLandscapeDoubleLine;
- (double)heightLandscapeSingleLineForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightLandscapeSingleLineForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double heightLandscapeSingleLine;
- (double)heightPortraitDoubleLineForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightPortraitDoubleLineForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double heightPortraitDoubleLine;
- (double)heightPortraitSingleLineForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightPortraitSingleLineForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double heightPortraitSingleLine;

@end

