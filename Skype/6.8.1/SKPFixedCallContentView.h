//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SKPCallStateMachineModelView.h"

#import "SKPOutboundFullscreenCallVideoViewDelegate.h"
#import "SKPVideoStageControllerDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegateFlowLayout.h"
#import "UIGestureRecognizerDelegate.h"

@class MKGroupVideoCollectionViewLayout, NSString, SKPCallWatermarkView, SKPOutboundFullscreenCallVideoView, SKPVideoStageController, UICollectionView, UICollectionViewFlowLayout, UILongPressGestureRecognizer, UIPinchGestureRecognizer, UITapGestureRecognizer;

@interface SKPFixedCallContentView : SKPCallStateMachineModelView <SKPOutboundFullscreenCallVideoViewDelegate, SKPVideoStageControllerDelegate, UICollectionViewDataSource, UIGestureRecognizerDelegate, UICollectionViewDelegateFlowLayout>
{
    _Bool _shouldShowCameraSwitchButton;
    _Bool _prefersNavigationBarHidden;
    _Bool _shouldShowControls;
    _Bool _receivingVideo;
    _Bool _pipOnStage;
    _Bool _conference;
    id <SKPFixedCallContentViewDelegate> _delegate;
    SKPCallWatermarkView *_watermarkView;
    UICollectionView *_inboundVideoCollectionView;
    SKPOutboundFullscreenCallVideoView *_outboundVideoView;
    unsigned long long _callControls;
    SKPVideoStageController *_videoStageController;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    long long _currentVideoStageLayout;
    MKGroupVideoCollectionViewLayout *_splitVideoStageLayout;
    UICollectionViewFlowLayout *_flowVideoStageLayout;
}

+ (_Bool)requiresConstraintBasedLayout;
+ (id)observedCallStateMachineKeyPaths;
@property(retain, nonatomic) UICollectionViewFlowLayout *flowVideoStageLayout; // @synthesize flowVideoStageLayout=_flowVideoStageLayout;
@property(retain, nonatomic) MKGroupVideoCollectionViewLayout *splitVideoStageLayout; // @synthesize splitVideoStageLayout=_splitVideoStageLayout;
@property(nonatomic) long long currentVideoStageLayout; // @synthesize currentVideoStageLayout=_currentVideoStageLayout;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
@property(nonatomic, getter=isConference) _Bool conference; // @synthesize conference=_conference;
@property(retain, nonatomic) SKPVideoStageController *videoStageController; // @synthesize videoStageController=_videoStageController;
@property(nonatomic, getter=isPipOnStage) _Bool pipOnStage; // @synthesize pipOnStage=_pipOnStage;
@property(nonatomic, getter=isReceivingVideo) _Bool receivingVideo; // @synthesize receivingVideo=_receivingVideo;
@property(nonatomic) _Bool shouldShowControls; // @synthesize shouldShowControls=_shouldShowControls;
@property(nonatomic) unsigned long long callControls; // @synthesize callControls=_callControls;
@property(retain, nonatomic) SKPOutboundFullscreenCallVideoView *outboundVideoView; // @synthesize outboundVideoView=_outboundVideoView;
@property(retain, nonatomic) UICollectionView *inboundVideoCollectionView; // @synthesize inboundVideoCollectionView=_inboundVideoCollectionView;
@property(readonly, nonatomic) SKPCallWatermarkView *watermarkView; // @synthesize watermarkView=_watermarkView;
@property(nonatomic) _Bool prefersNavigationBarHidden; // @synthesize prefersNavigationBarHidden=_prefersNavigationBarHidden;
@property(readonly, nonatomic) _Bool shouldShowCameraSwitchButton; // @synthesize shouldShowCameraSwitchButton=_shouldShowCameraSwitchButton;
@property(nonatomic) __weak id <SKPFixedCallContentViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)configureCell:(id)arg1;
- (void)videoStageControllerDidChangeStageLayout:(id)arg1;
- (void)videoStageController:(id)arg1 hasParticipantWithScreenSharingEnabled:(_Bool)arg2;
- (void)videoStageController:(id)arg1 didChangeNumberOfOptimalRemoteVideos:(unsigned long long)arg2;
- (void)videoStageController:(id)arg1 didChangeParticipantInRibbon:(id)arg2;
- (void)videoStageController:(id)arg1 didChangeListOfActiveVideoItems:(id)arg2;
- (void)outboundFullscreenCallVideoViewFullScreenPipDidTap:(id)arg1;
- (void)outboundFullscreenCallVideoView:(id)arg1 shouldShowSwitchCameraButton:(_Bool)arg2;
- (id)viewConstraints;
- (void)updateConstraints;
- (void)traitCollectionDidChange:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)updateVideoCollectionViewVisibility;
- (void)updateNavigationBar;
- (void)updateVideoItems;
- (void)setShouldShowCameraSwitchButton:(_Bool)arg1;
- (_Bool)shouldShowVideoMaximizedForParticipantItem:(id)arg1;
- (_Bool)shouldShowDisplayNameInVideo;
- (long long)numberOfVideoInTheStage;
- (id)participantItemAtLocation:(struct CGPoint)arg1;
- (void)doubleTapGestureRecognized:(id)arg1;
- (void)pinchGestureRecognized:(id)arg1;
- (void)longPressGestureRecognized:(id)arg1;
- (void)refreshDueToChangeInCallStateMachineProperty:(id)arg1;
- (void)setCallStateMachine:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

