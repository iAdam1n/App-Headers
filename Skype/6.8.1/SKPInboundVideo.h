//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SKPALEMappedObject.h"

#import "SKPOpenGLVideo.h"
#import "SKPOpenGLVideoSourceInterfaceDelegate.h"

@class NSPointerArray, NSString, SKPFPSCalculator, SKPOpenGLVideoSourceInterface;

@interface SKPInboundVideo : SKPALEMappedObject <SKPOpenGLVideoSourceInterfaceDelegate, SKPOpenGLVideo>
{
    _Bool _running;
    long long _errorCode;
    NSString *_error;
    NSString *_debugName;
    unsigned long long _framesPerSecond;
    long long _status;
    long long _mediaType;
    long long _bindingState;
    id _circularReferenceToSelf;
    SKPOpenGLVideoSourceInterface *_openGLVideo;
    NSPointerArray *_videoTargets;
    SKPFPSCalculator *_fpsCalculator;
}

+ (id)keyPathsForValuesAffectingAvailableToStartStream;
+ (id)keyPathsForValuesAffectingVideoCallHint;
+ (id)keyPathsForValuesAffectingVideoState;
+ (id)keyPathsForValuesAffectingAvailableForRendering;
+ (id)keyPathsForValuesAffectingAvailable;
+ (id)keyPathsForValuesAffectingHasVideoFrames;
+ (id)propertyMapping;
+ (Class)associatedALEClass;
@property(readonly, nonatomic) SKPFPSCalculator *fpsCalculator; // @synthesize fpsCalculator=_fpsCalculator;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(readonly, nonatomic) NSPointerArray *videoTargets; // @synthesize videoTargets=_videoTargets;
@property(readonly, nonatomic) SKPOpenGLVideoSourceInterface *openGLVideo; // @synthesize openGLVideo=_openGLVideo;
@property(retain, nonatomic) id circularReferenceToSelf; // @synthesize circularReferenceToSelf=_circularReferenceToSelf;
@property(nonatomic) long long bindingState; // @synthesize bindingState=_bindingState;
@property(readonly, nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(readonly, nonatomic) long long status; // @synthesize status=_status;
@property(nonatomic) unsigned long long framesPerSecond; // @synthesize framesPerSecond=_framesPerSecond;
@property(copy, nonatomic) NSString *debugName; // @synthesize debugName=_debugName;
@property(copy, nonatomic) NSString *error; // @synthesize error=_error;
@property(nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
- (void).cxx_destruct;
- (id)allVideoTargets;
- (void)removeVideoTarget:(id)arg1;
- (void)addVideoTarget:(id)arg1;
- (void)updateState;
- (void)stop;
- (void)start;
- (_Bool)isAvailableToStartStream;
- (void)setStatus:(long long)arg1;
- (_Bool)needsRotationCompensation;
@property(readonly, nonatomic, getter=isVideoCallHint) _Bool videoCallHint;
@property(readonly, nonatomic) long long videoState;
@property(readonly, nonatomic, getter=isAvailableForRendering) _Bool availableForRendering;
@property(readonly, nonatomic) _Bool available;
@property(readonly, nonatomic) _Bool hasVideoFrames;
- (void)openGLVideo:(id)arg1 didReceiveFrameAtTimestamp:(double)arg2;
- (void)openGLVideoDidFail:(id)arg1;
- (void)openGLVideoDidDectivate:(id)arg1;
- (void)openGLVideoDidActivate:(id)arg1;
- (void)openGLVideo:(id)arg1 releaseBinding:(void *)arg2;
- (void)openGLVideo:(id)arg1 createBindingWithType:(unsigned int)arg2 event:(void *)arg3;
- (void)feedbackForTarget:(id)arg1 sourceSize:(struct CGSize)arg2 regionOfInterest:(struct CGRect)arg3 renderedSize:(struct CGSize)arg4 screenSize:(struct CGSize)arg5 maxFps:(unsigned long long)arg6;
- (id)renderBuffer;
- (id)sharegroup;
- (unsigned long long)renderingAPI;
- (void)invalidate;
- (void)dealloc;
- (void)initializeObject;
- (void)initializeALEObjectWithObjectId:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

