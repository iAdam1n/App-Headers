//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SKPAddContactPickerControllerDelegate.h"
#import "SKPTimelineSearchViewDelegate.h"
#import "SKPViewModelArrayControllerDelegate.h"
#import "UIGestureRecognizerDelegate.h"

@class MKTableView, NSMutableArray, NSPredicate, NSString, SKPArrayController, SKPConversation, SKPConversationSearch, SKPTimelineSearchView, SKPTimelineTableViewCell, SKPViewModelArrayController, UILongPressGestureRecognizer;

@interface SKPTimelineSearchViewController : UIViewController <SKPViewModelArrayControllerDelegate, SKPTimelineSearchViewDelegate, SKPAddContactPickerControllerDelegate, UIGestureRecognizerDelegate>
{
    _Bool _needsReload;
    _Bool _showSpinner;
    SKPArrayController *_conversationsController;
    SKPArrayController *_contactsController;
    SKPViewModelArrayController *_historyController;
    SKPTimelineTableViewCell *_prototypeCell;
    CDUnknownBlockType _dismissBlock;
    long long _state;
    NSMutableArray *_indexPathsToReload;
    NSMutableArray *_indexPathsToInsert;
    NSMutableArray *_indexPathsToRemove;
    NSMutableArray *_indexPathsToMoveFrom;
    NSMutableArray *_indexPathsToMoveTo;
    NSPredicate *_predicateForDisplayName;
    NSPredicate *_predicateForSkypeName;
    NSString *_contactAndConversationSearchText;
    NSString *_searchText;
    SKPArrayController *_messageSearchController;
    SKPConversationSearch *_messageSearch;
    SKPConversation *_lastSelectedConversation;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
}

+ (id)accessibilityTextForContact:(id)arg1;
+ (id)messageCellAvatarURLKeyPath;
+ (id)messageCellBodyKeyPath;
+ (id)messageCellDisplayNameKeyPath;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
@property(retain, nonatomic) SKPConversation *lastSelectedConversation; // @synthesize lastSelectedConversation=_lastSelectedConversation;
@property(retain, nonatomic) SKPConversationSearch *messageSearch; // @synthesize messageSearch=_messageSearch;
@property(retain, nonatomic) SKPArrayController *messageSearchController; // @synthesize messageSearchController=_messageSearchController;
@property(retain, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(retain, nonatomic) NSString *contactAndConversationSearchText; // @synthesize contactAndConversationSearchText=_contactAndConversationSearchText;
@property(nonatomic) _Bool showSpinner; // @synthesize showSpinner=_showSpinner;
@property(retain, nonatomic) NSPredicate *predicateForSkypeName; // @synthesize predicateForSkypeName=_predicateForSkypeName;
@property(retain, nonatomic) NSPredicate *predicateForDisplayName; // @synthesize predicateForDisplayName=_predicateForDisplayName;
@property(retain, nonatomic) NSMutableArray *indexPathsToMoveTo; // @synthesize indexPathsToMoveTo=_indexPathsToMoveTo;
@property(retain, nonatomic) NSMutableArray *indexPathsToMoveFrom; // @synthesize indexPathsToMoveFrom=_indexPathsToMoveFrom;
@property(retain, nonatomic) NSMutableArray *indexPathsToRemove; // @synthesize indexPathsToRemove=_indexPathsToRemove;
@property(retain, nonatomic) NSMutableArray *indexPathsToInsert; // @synthesize indexPathsToInsert=_indexPathsToInsert;
@property(retain, nonatomic) NSMutableArray *indexPathsToReload; // @synthesize indexPathsToReload=_indexPathsToReload;
@property(nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(copy, nonatomic) CDUnknownBlockType dismissBlock; // @synthesize dismissBlock=_dismissBlock;
- (void).cxx_destruct;
- (void)updateState;
- (void)controllerDidChangeAllContent:(id)arg1;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didMoveSectionAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)controller:(id)arg1 didInsertSectionsAtIndexes:(id)arg2;
- (void)controller:(id)arg1 didDeleteSectionsAtIndexes:(id)arg2;
- (void)controller:(id)arg1 didMoveObjectAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (void)controller:(id)arg1 didInsertObjectsAtIndexPaths:(id)arg2;
- (void)controller:(id)arg1 didDeleteObjectsAtIndexPaths:(id)arg2;
- (void)controller:(id)arg1 didUpdateObjectAtIndexPath:(id)arg2 updateType:(long long)arg3;
- (void)controllerWillChangeContent:(id)arg1;
- (id)absoluteIndexPaths:(id)arg1 forController:(id)arg2;
- (id)absoluteIndexPath:(id)arg1 forController:(id)arg2;
- (id)indexPaths:(id)arg1 translatedToSection:(unsigned long long)arg2;
- (id)translateIndexPath:(id)arg1 toSection:(unsigned long long)arg2;
- (id)messageSearchWithText:(id)arg1;
- (id)messagePlaceholderImage:(id)arg1;
- (id)captionForContact:(id)arg1;
- (id)contactPlaceholderImage;
- (void)configureContactCell:(id)arg1 keyPath:(id)arg2;
- (void)prepareContactCell:(id)arg1;
- (void)configureMessageCell:(id)arg1 keyPath:(id)arg2;
- (void)prepareMessageCell:(id)arg1;
- (void)configureConversationCell:(id)arg1 keyPath:(id)arg2;
- (void)prepareConversationCell:(id)arg1;
- (void)configureHistoryCell:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)presentChatWithConversationObjectId:(unsigned long long)arg1 conversationIdentity:(id)arg2 messageObjectId:(unsigned long long)arg3 messageGUID:(id)arg4;
- (void)presentChatWithContact:(id)arg1;
- (void)addContactPickerController:(id)arg1 callConversation:(id)arg2;
- (void)addContactPickerController:(id)arg1 didSelectContact:(id)arg2;
- (void)addContactPickerControllerDidCancel:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)timelineSearchViewDidDismiss:(id)arg1;
- (void)setSearchTextAsynch:(id)arg1;
- (void)setSearchTextSynch:(id)arg1;
@property(readonly, nonatomic, getter=isHistoryAvailable) _Bool historyAvailable;
- (id)contactPredicateWithSearchText:(id)arg1;
@property(readonly, nonatomic) SKPTimelineTableViewCell *prototypeCell; // @synthesize prototypeCell=_prototypeCell;
- (id)conversationsPredicateForSearchText:(id)arg1;
@property(readonly, nonatomic) NSString *conversationsControllerKeyPath;
@property(readonly, nonatomic) id conversationsControllerObject;
@property(readonly, nonatomic) SKPArrayController *conversationsController; // @synthesize conversationsController=_conversationsController;
@property(readonly, nonatomic) NSString *contactsControllerKeyPath;
@property(readonly, nonatomic) id contactsControllerObject;
@property(readonly, nonatomic) SKPArrayController *contactsController; // @synthesize contactsController=_contactsController;
@property(readonly, nonatomic) SKPViewModelArrayController *historyController; // @synthesize historyController=_historyController;
@property(readonly, nonatomic) MKTableView *historyTableView;
@property(readonly, nonatomic) MKTableView *resultsTableView;
- (_Bool)accessibilityPerformEscape;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateInsets;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (void)loadView;
- (void)handleLongTapGesture:(id)arg1;
@property(readonly, nonatomic) SKPTimelineSearchView *searchView;
- (void)dealloc;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

