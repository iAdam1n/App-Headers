//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKReactiveTableViewCell.h"

@class CADisplayLink, MKSwipeButtonsView, MKSwipeTableInputOverlayView, MKSwipeTableViewCellStylesheet, NSArray, NSDictionary, NSMutableSet, UIColor, UIImageView, UIPanGestureRecognizer, UITableView, UITapGestureRecognizer, UIView;

@interface MKSwipeTableViewCell : MKReactiveTableViewCell
{
    _Bool _allowSwipeRightToLeft;
    _Bool _allowSwipeLeftToRight;
    _Bool _triggerStateChanges;
    id <MKSwipeTableViewCellDelegate> _delegate;
    UIView *_swipeContentView;
    long long _swipeState;
    UIColor *_swipeBackgroundColor;
    double _swipeOffset;
    NSDictionary *_dataSource;
    UIView *_leftOverlayView;
    UIView *_rightOverlayView;
    MKSwipeTableViewCellStylesheet *_stylesheet;
    CADisplayLink *_displayLink;
    CDUnknownBlockType _animationCompletion;
    UIView *_swipeOverlay;
    UIImageView *_swipeView;
    MKSwipeButtonsView *_leftView;
    MKSwipeButtonsView *_rightView;
    MKSwipeButtonsView *_activeExpansion;
    MKSwipeTableInputOverlayView *_tableInputOverlay;
    UITableView *_cachedParentTable;
    NSMutableSet *_previusHiddenViews;
    UITapGestureRecognizer *_tapRecognizer;
    UIPanGestureRecognizer *_panRecognizer;
    double _panStartOffset;
    double _targetOffset;
    double _firstDirectionOffset;
    double _directionFallbackOffset;
    struct CGPoint _panStartPoint;
    struct MKSwipeAnimationData _animationData;
}

@property(nonatomic) double directionFallbackOffset; // @synthesize directionFallbackOffset=_directionFallbackOffset;
@property(nonatomic) double firstDirectionOffset; // @synthesize firstDirectionOffset=_firstDirectionOffset;
@property(nonatomic) double targetOffset; // @synthesize targetOffset=_targetOffset;
@property(nonatomic) double panStartOffset; // @synthesize panStartOffset=_panStartOffset;
@property(nonatomic) struct CGPoint panStartPoint; // @synthesize panStartPoint=_panStartPoint;
@property(retain, nonatomic) UIPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *tapRecognizer; // @synthesize tapRecognizer=_tapRecognizer;
@property(nonatomic) _Bool triggerStateChanges; // @synthesize triggerStateChanges=_triggerStateChanges;
@property(retain, nonatomic) NSMutableSet *previusHiddenViews; // @synthesize previusHiddenViews=_previusHiddenViews;
@property(nonatomic) __weak UITableView *cachedParentTable; // @synthesize cachedParentTable=_cachedParentTable;
@property(retain, nonatomic) MKSwipeTableInputOverlayView *tableInputOverlay; // @synthesize tableInputOverlay=_tableInputOverlay;
@property(nonatomic) __weak MKSwipeButtonsView *activeExpansion; // @synthesize activeExpansion=_activeExpansion;
@property(nonatomic) _Bool allowSwipeLeftToRight; // @synthesize allowSwipeLeftToRight=_allowSwipeLeftToRight;
@property(nonatomic) _Bool allowSwipeRightToLeft; // @synthesize allowSwipeRightToLeft=_allowSwipeRightToLeft;
@property(retain, nonatomic) MKSwipeButtonsView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) MKSwipeButtonsView *leftView; // @synthesize leftView=_leftView;
@property(retain, nonatomic) UIImageView *swipeView; // @synthesize swipeView=_swipeView;
@property(retain, nonatomic) UIView *swipeOverlay; // @synthesize swipeOverlay=_swipeOverlay;
@property(copy, nonatomic) CDUnknownBlockType animationCompletion; // @synthesize animationCompletion=_animationCompletion;
@property(nonatomic) struct MKSwipeAnimationData animationData; // @synthesize animationData=_animationData;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) MKSwipeTableViewCellStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(retain, nonatomic) UIView *rightOverlayView; // @synthesize rightOverlayView=_rightOverlayView;
@property(retain, nonatomic) UIView *leftOverlayView; // @synthesize leftOverlayView=_leftOverlayView;
@property(retain, nonatomic) NSDictionary *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) double swipeOffset; // @synthesize swipeOffset=_swipeOffset;
@property(retain, nonatomic) UIColor *swipeBackgroundColor; // @synthesize swipeBackgroundColor=_swipeBackgroundColor;
@property(nonatomic) long long swipeState; // @synthesize swipeState=_swipeState;
@property(retain, nonatomic) UIView *swipeContentView; // @synthesize swipeContentView=_swipeContentView;
@property(nonatomic) __weak id <MKSwipeTableViewCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isSwipeGestureActive;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)panHandler:(id)arg1;
- (void)tapHandler:(id)arg1;
- (void)cancelPanGesture;
- (void)animationTick:(id)arg1;
- (void)updateSwipe:(double)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setEditing:(_Bool)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)prepareForReuse;
- (void)willMoveToSuperview:(id)arg1;
@property(readonly, nonatomic) NSArray *rightItems;
@property(readonly, nonatomic) NSArray *leftItems;
- (void)expandSwipe:(long long)arg1 animated:(_Bool)arg2;
- (void)setSwipeOffset:(double)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showSwipe:(long long)arg1 animated:(_Bool)arg2;
- (void)hideSwipeAnimated:(_Bool)arg1;
- (void)refreshItems;
- (void)refreshContentView;
- (_Bool)shouldAllowSwipeRightToLeft;
- (_Bool)shouldAllowSwipeLeftToRight;
- (void)updateState:(long long)arg1;
- (void)showSwipeOverlayIfNeeded:(_Bool)arg1;
- (void)hideAccesoryViews:(_Bool)arg1;
- (void)createSwipeViewIfNeeded;
- (void)fetchButtonsIfNeeded;
- (_Bool)performCustomAccessibilityAction:(id)arg1;
- (id)accessibilityCustomActions;
- (_Bool)delegateCanSwipe;
- (id)parentTable;
- (void)layoutSubviews;
- (void)cleanUp;
- (void)initViews;
- (void)dealloc;
- (void)mk_commonInit;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)initWithCoder:(id)arg1;

@end

