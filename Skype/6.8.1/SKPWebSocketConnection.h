//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSStreamDelegate.h"
#import "SKPIDispatcher.h"

@class NSInputStream, NSObject<SKPWebSocketConnectionDelegate>, NSOutputStream, NSString, NSURLRequest, SKPDispatcher, SKPWSHTTPResponse, SKPWebSocketMessage;

@interface SKPWebSocketConnection : NSObject <NSStreamDelegate, SKPIDispatcher>
{
    _Bool _started;
    _Bool _receivedPong;
    NSURLRequest *_request;
    NSInputStream *_is;
    NSOutputStream *_os;
    long long _connectionState;
    NSObject<SKPWebSocketConnectionDelegate> *_delegate;
    id <SKPITCPStreamFactory> _streamFactory;
    SKPDispatcher *_dispatcher;
    SKPWebSocketMessage *_currentMessage;
    SKPWSHTTPResponse *_currentHandshakeResponse;
    CDUnknownBlockType _pingCompletionBlock;
}

+ (id)generateNonce;
+ (id)webSocketMutableRequestWithURL:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType pingCompletionBlock; // @synthesize pingCompletionBlock=_pingCompletionBlock;
@property(nonatomic) _Bool receivedPong; // @synthesize receivedPong=_receivedPong;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(retain, nonatomic) SKPWSHTTPResponse *currentHandshakeResponse; // @synthesize currentHandshakeResponse=_currentHandshakeResponse;
@property(retain, nonatomic) SKPWebSocketMessage *currentMessage; // @synthesize currentMessage=_currentMessage;
@property(retain, nonatomic) SKPDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) id <SKPITCPStreamFactory> streamFactory; // @synthesize streamFactory=_streamFactory;
@property(nonatomic) __weak NSObject<SKPWebSocketConnectionDelegate> *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long connectionState; // @synthesize connectionState=_connectionState;
@property(retain, nonatomic) NSOutputStream *os; // @synthesize os=_os;
@property(retain, nonatomic) NSInputStream *is; // @synthesize is=_is;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)dispatchBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2;
- (void)dispatchUIOperationWithBlock:(CDUnknownBlockType)arg1;
- (void)dispatchNetworkOperationWithBlock:(CDUnknownBlockType)arg1;
- (void)resetNetworkOperations;
- (void)cancelAllNetworkOperations;
- (void)sendFrameWithHeader:(unsigned char)arg1 message:(id)arg2;
- (void)sendPong:(id)arg1;
- (void)sendPing:(id)arg1;
- (void)sendPingWithTimeout:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)handleBytesAvailable:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)dispatchIncomingTextMessage:(id)arg1;
- (void)dispatchIncomingWebSocketMessage:(id)arg1;
- (void)processRawIncomingWebSocketData:(id)arg1;
- (void)processRawIncomingHTTPData:(id)arg1;
- (_Bool)validateHandshakeResponse:(id)arg1;
- (unsigned long long)detectEncodingForData:(id)arg1;
- (void)processInStreamData:(id)arg1;
- (id)dataForRequest:(id)arg1;
- (void)setupAndScheduleStreams;
- (void)sendUpgradeRequest;
- (void)openStreams;
- (void)scheduleStreams;
- (void)setupStreams;
- (void)failConnection:(id)arg1;
- (void)closeAndCleanUp;
- (void)close;
- (void)send:(id)arg1;
- (void)start;
- (void)tearDownSockets;
- (id)initWithDelegate:(id)arg1 injectStreamFactory:(id)arg2 injectDispatcher:(id)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

