//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKGlobalStylesheet.h"

@class UIColor;

@interface MKSwipeTableViewCellStylesheet : MKGlobalStylesheet
{
}

- (double)animationDurationExpansionRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)animationDurationExpansionRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double animationDurationExpansionRightToLeft;
- (double)animationDurationExpansionLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)animationDurationExpansionLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double animationDurationExpansionLeftToRight;
- (double)thresholdExpansionRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)thresholdExpansionRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double thresholdExpansionRightToLeft;
- (double)thresholdExpansionLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)thresholdExpansionLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double thresholdExpansionLeftToRight;
- (_Bool)shouldExpandIfOverlayRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)shouldExpandIfOverlayRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool shouldExpandIfOverlayRightToLeft;
- (_Bool)shouldExpandIfOverlayLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)shouldExpandIfOverlayLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool shouldExpandIfOverlayLeftToRight;
- (_Bool)fillOnTriggerRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)fillOnTriggerRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool fillOnTriggerRightToLeft;
- (_Bool)fillOnTriggerLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)fillOnTriggerLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool fillOnTriggerLeftToRight;
- (long long)buttonIndexRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (long long)buttonIndexRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) long long buttonIndexRightToLeft;
- (long long)buttonIndexLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (long long)buttonIndexLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) long long buttonIndexLeftToRight;
- (double)animationDurationRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)animationDurationRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double animationDurationRightToLeft;
- (double)animationDurationLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)animationDurationLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double animationDurationLeftToRight;
- (double)offsetRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)offsetRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double offsetRightToLeft;
- (double)offsetLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)offsetLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double offsetLeftToRight;
- (double)thresholdRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)thresholdRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double thresholdRightToLeft;
- (double)thresholdLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)thresholdLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double thresholdLeftToRight;
- (long long)transitionRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (long long)transitionRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) long long transitionRightToLeft;
- (long long)transitionLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (long long)transitionLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) long long transitionLeftToRight;
- (double)overlayViewWidthRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)overlayViewWidthRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double overlayViewWidthRightToLeft;
- (double)overlayViewWidthLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)overlayViewWidthLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double overlayViewWidthLeftToRight;
- (double)iconSizePercentOfHeightRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconSizePercentOfHeightRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconSizePercentOfHeightRightToLeft;
- (double)iconSizePercentOfHeightLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconSizePercentOfHeightLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconSizePercentOfHeightLeftToRight;
- (double)preferredButtonWidthRightToLeftForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)preferredButtonWidthRightToLeftForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double preferredButtonWidthRightToLeft;
- (double)preferredButtonWidthLeftToRightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)preferredButtonWidthLeftToRightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double preferredButtonWidthLeftToRight;
- (id)swipeBackgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)swipeBackgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *swipeBackgroundColor;

@end

