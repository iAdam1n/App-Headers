//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SKPALEMappedObject.h"

#import "SKPOpenGLVideo.h"
#import "SKPOpenGLVideoSourceInterfaceDelegate.h"
#import "SKPPreviewVideo.h"
#import "SKPPreviewVideoCameraSwitchDelegate.h"

@class NSMutableDictionary, NSPointerArray, NSString, SKPFPSCalculator, SKPOpenGLVideoSourceInterface, SKPPreviewVideoCameraSwitch;

@interface SKPP2PPreviewVideo : SKPALEMappedObject <SKPPreviewVideoCameraSwitchDelegate, SKPOpenGLVideoSourceInterfaceDelegate, SKPPreviewVideo, SKPOpenGLVideo>
{
    _Bool _running;
    long long _errorCode;
    NSString *_debugName;
    SKPOpenGLVideoSourceInterface *_openGLVideo;
    long long _status;
    NSString *_error;
    NSPointerArray *_videoTargets;
    long long _videoBindingState;
    long long _cameraBindingState;
    SKPFPSCalculator *_fpsCalculator;
    unsigned long long _framesPerSecond;
    long long _preferredCamera;
    long long _camera;
    SKPPreviewVideoCameraSwitch *_cameraSwitch;
    NSMutableDictionary *_registeredVideoStartRequestsByUUID;
}

+ (id)keyPathsForValuesAffectingAvailable;
+ (id)keyPathsForValuesAffectingVideoState;
+ (id)propertyMapping;
+ (Class)associatedALEClass;
@property(readonly, nonatomic) NSMutableDictionary *registeredVideoStartRequestsByUUID; // @synthesize registeredVideoStartRequestsByUUID=_registeredVideoStartRequestsByUUID;
@property(retain, nonatomic) SKPPreviewVideoCameraSwitch *cameraSwitch; // @synthesize cameraSwitch=_cameraSwitch;
@property(nonatomic) long long camera; // @synthesize camera=_camera;
@property(nonatomic) long long preferredCamera; // @synthesize preferredCamera=_preferredCamera;
@property(nonatomic) unsigned long long framesPerSecond; // @synthesize framesPerSecond=_framesPerSecond;
@property(readonly, nonatomic) SKPFPSCalculator *fpsCalculator; // @synthesize fpsCalculator=_fpsCalculator;
@property(nonatomic) long long cameraBindingState; // @synthesize cameraBindingState=_cameraBindingState;
@property(nonatomic) long long videoBindingState; // @synthesize videoBindingState=_videoBindingState;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(readonly, nonatomic) NSPointerArray *videoTargets; // @synthesize videoTargets=_videoTargets;
@property(copy, nonatomic) NSString *error; // @synthesize error=_error;
@property(readonly, nonatomic) long long status; // @synthesize status=_status;
@property(readonly, nonatomic) SKPOpenGLVideoSourceInterface *openGLVideo; // @synthesize openGLVideo=_openGLVideo;
@property(copy, nonatomic) NSString *debugName; // @synthesize debugName=_debugName;
@property(nonatomic) long long errorCode; // @synthesize errorCode=_errorCode;
- (void).cxx_destruct;
- (id)allVideoTargets;
- (void)removeVideoTarget:(id)arg1;
- (void)addVideoTarget:(id)arg1;
- (void)cameraSwitchDidUpdateCamera:(id)arg1;
- (void)cameraSwitchDidUnbind:(id)arg1;
- (void)cameraSwitchDidBind:(id)arg1;
- (void)unregisterVideoStartRequest:(id)arg1;
- (id)newRegisteredVideoStartRequest;
- (void)stop;
- (id)requestStart;
- (void)destroySource;
- (void)createSource;
- (void)updateCamera;
- (void)selectCamera:(long long)arg1;
- (void)setStatus:(long long)arg1;
@property(readonly, nonatomic) _Bool available;
@property(readonly, nonatomic) long long videoState;
- (void)updateState;
- (void)openGLVideo:(id)arg1 didReceiveFrameAtTimestamp:(double)arg2;
- (void)openGLVideoDidFail:(id)arg1;
- (void)openGLVideoDidDectivate:(id)arg1;
- (void)openGLVideoDidActivate:(id)arg1;
- (void)openGLVideo:(id)arg1 releaseBinding:(void *)arg2;
- (void)openGLVideo:(id)arg1 createBindingWithType:(unsigned int)arg2 event:(void *)arg3;
- (void)feedbackForTarget:(id)arg1 sourceSize:(struct CGSize)arg2 regionOfInterest:(struct CGRect)arg3 renderedSize:(struct CGSize)arg4 screenSize:(struct CGSize)arg5 maxFps:(unsigned long long)arg6;
- (id)renderBuffer;
- (id)sharegroup;
- (unsigned long long)renderingAPI;
- (void)initializeObject;
- (void)initializeALEObjectWithObjectId:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

