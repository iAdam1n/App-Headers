//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKSearchBarStylesheet.h"

@class UIColor, UIFont;

@interface MKBlueSearchBarStylesheet : MKSearchBarStylesheet
{
}

- (id)cancelButtonTextColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)cancelButtonTextColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *cancelButtonTextColor;
- (id)textColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)textColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *textColor;
- (double)borderWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)borderWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double borderWidth;
- (id)borderColorActiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)borderColorActiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *borderColorActive;
- (double)textBackgroundLeftInsetForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)textBackgroundLeftInsetForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double textBackgroundLeftInset;
- (id)placeholderColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)placeholderColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *placeholderColor;
- (id)backgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundColor;
- (id)clearButtonColorHighlightedForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)clearButtonColorHighlightedForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *clearButtonColorHighlighted;
- (id)clearButtonColorDefaultForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)clearButtonColorDefaultForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *clearButtonColorDefault;
- (id)searchIconColorDefaultForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)searchIconColorDefaultForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *searchIconColorDefault;
- (id)innerBackgroundColorInactiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)innerBackgroundColorInactiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *innerBackgroundColorInactive;
- (id)innerBackgroundColorActiveForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)innerBackgroundColorActiveForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *innerBackgroundColorActive;
- (id)innerBackgroundColorDefaultForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)innerBackgroundColorDefaultForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *innerBackgroundColorDefault;
- (id)caretBackgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)caretBackgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *caretBackgroundColor;
- (double)cornerRadiusForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)cornerRadiusForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double cornerRadius;
- (double)heightTextFieldForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightTextFieldForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double heightTextField;
- (id)fontForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)fontForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIFont *font;
- (double)heightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)heightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double height;
- (double)iconSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)iconSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double iconSize;
- (double)textVerticalInsetForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)textVerticalInsetForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double textVerticalInset;

@end

