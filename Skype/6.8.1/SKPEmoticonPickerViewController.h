//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SKPEmoticonPickerToolbarDelegate.h"
#import "SKPExpressionCollectionControllerDelegate.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"

@class NSArray, NSIndexPath, NSString, SKPActivityToken, SKPEmoticonPickerToolbarViewController, SKPMojiPreviewViewController, SKPOverlayController, UICollectionView, UIView;

@interface SKPEmoticonPickerViewController : NSObject <SKPEmoticonPickerToolbarDelegate, SKPExpressionCollectionControllerDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
{
    _Bool _mediaDocumentAllowed;
    id <SKPEmoticonPickerDelegate> _delegate;
    UIView *_view;
    NSArray *_viewControllers;
    long long _selectedViewControllerIndex;
    SKPEmoticonPickerToolbarViewController *_toolbar;
    UIView *_topDelimiterLineView;
    UICollectionView *_collectionView;
    SKPOverlayController *_overlayController;
    SKPMojiPreviewViewController *_previewViewController;
    SKPActivityToken *_previewActivityToken;
    NSIndexPath *_selectedCellIndexPath;
}

@property(retain, nonatomic) NSIndexPath *selectedCellIndexPath; // @synthesize selectedCellIndexPath=_selectedCellIndexPath;
@property(retain, nonatomic) SKPActivityToken *previewActivityToken; // @synthesize previewActivityToken=_previewActivityToken;
@property(retain, nonatomic) SKPMojiPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(retain, nonatomic) SKPOverlayController *overlayController; // @synthesize overlayController=_overlayController;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIView *topDelimiterLineView; // @synthesize topDelimiterLineView=_topDelimiterLineView;
@property(retain, nonatomic) SKPEmoticonPickerToolbarViewController *toolbar; // @synthesize toolbar=_toolbar;
@property(nonatomic) long long selectedViewControllerIndex; // @synthesize selectedViewControllerIndex=_selectedViewControllerIndex;
@property(retain, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
@property(nonatomic) __weak id <SKPEmoticonPickerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool mediaDocumentAllowed; // @synthesize mediaDocumentAllowed=_mediaDocumentAllowed;
- (void).cxx_destruct;
- (void)selectTabWithIndex:(long long)arg1;
- (void)willResignActive;
- (void)expressionCollectionController:(id)arg1 didSelectItem:(id)arg2 withCellIndexPath:(id)arg3;
- (void)picker:(id)arg1 didSelectItemAtIndex:(unsigned long long)arg2;
- (void)didSelectSmileyEmoticon:(id)arg1;
- (void)didSelectMoji:(id)arg1;
- (void)reportStartMojiPreviewStatistics;
- (void)replaceMojiInPreviewByMoji:(id)arg1;
- (void)showPreviewWithMoji:(id)arg1;
- (id)nameForSectionAtIndex:(long long)arg1;
- (void)reportStatisticsMojiEvent:(unsigned long long)arg1 sentFromSource:(id)arg2;
- (void)dismissPreview:(_Bool)arg1;
- (void)dismissPreviewIfPresented;
- (void)viewDidLayoutSubviews;
- (void)didTapSearch;
- (void)didTapBackspace;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)showTabAtIndex:(long long)arg1 explicitlySelected:(_Bool)arg2;
- (void)stopObservingExpressionPickerManager;
- (void)didChangePackContent:(id)arg1;
- (void)startObservingExpressionPickerManager;
- (void)updatePacks;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)updateCollectionViewFrame;
- (void)dealloc;
- (id)initWithMediaDocumentAllowed:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

