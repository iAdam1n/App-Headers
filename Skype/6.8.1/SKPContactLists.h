//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SKPLazyPropertyContainer.h"

#import "SKPTreeDescribing.h"

@class NSString, SKPContactGroup;

@interface SKPContactLists : SKPLazyPropertyContainer <SKPTreeDescribing>
{
    _Bool _observingAllContacts;
    SKPContactGroup *_waitingMyAuthorizationContacts;
    SKPContactGroup *_pendingAuthorizationContacts;
    SKPContactGroup *_autoBuddiesContacts;
    SKPContactGroup *_shortCircuitContacts;
    id <SKPContactGroup> _allContacts;
}

+ (id)lazyLoadedPropertiesKeypaths;
@property(nonatomic, getter=isObservingAllContacts) _Bool observingAllContacts; // @synthesize observingAllContacts=_observingAllContacts;
@property(retain, nonatomic) id <SKPContactGroup> allContacts; // @synthesize allContacts=_allContacts;
@property(retain, nonatomic) SKPContactGroup *shortCircuitContacts; // @synthesize shortCircuitContacts=_shortCircuitContacts;
@property(retain, nonatomic) SKPContactGroup *autoBuddiesContacts; // @synthesize autoBuddiesContacts=_autoBuddiesContacts;
@property(retain, nonatomic) SKPContactGroup *pendingAuthorizationContacts; // @synthesize pendingAuthorizationContacts=_pendingAuthorizationContacts;
@property(retain, nonatomic) SKPContactGroup *waitingMyAuthorizationContacts; // @synthesize waitingMyAuthorizationContacts=_waitingMyAuthorizationContacts;
- (void).cxx_destruct;
- (_Bool)flushLazyProperty:(id)arg1;
- (id)fetchOperationForLazyProperty:(id)arg1 fetchQueueIdentifier:(id *)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)invalidate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

