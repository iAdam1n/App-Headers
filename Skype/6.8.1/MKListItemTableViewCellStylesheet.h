//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "MKSwipeTableViewCellStylesheet.h"

@class UIColor;

@interface MKListItemTableViewCellStylesheet : MKSwipeTableViewCellStylesheet
{
}

- (id)checkmarkSelectedBorderColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)checkmarkSelectedBorderColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *checkmarkSelectedBorderColor;
- (id)checkmarkUnselectedBorderColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)checkmarkUnselectedBorderColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *checkmarkUnselectedBorderColor;
- (id)checkmarkSelectedBackgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)checkmarkSelectedBackgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *checkmarkSelectedBackgroundColor;
- (id)checkmarkIconColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)checkmarkIconColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *checkmarkIconColor;
- (double)checkmarkDisappearingAnimationDurationForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)checkmarkDisappearingAnimationDurationForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double checkmarkDisappearingAnimationDuration;
- (double)checkmarkAppearingAnimationDurationForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)checkmarkAppearingAnimationDurationForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double checkmarkAppearingAnimationDuration;
- (_Bool)shouldShowSeparatorLineForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)shouldShowSeparatorLineForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowSeparatorLine;
- (double)checkmarkPaddingForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)checkmarkPaddingForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double checkmarkPadding;
- (double)checkmarkSizeForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)checkmarkSizeForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double checkmarkSize;
- (double)checkmarkBorderWidthForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)checkmarkBorderWidthForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double checkmarkBorderWidth;
- (double)marginCheckmarkContentForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)marginCheckmarkContentForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double marginCheckmarkContent;
- (id)separatorLineColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)separatorLineColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *separatorLineColor;
- (double)separatorLineHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)separatorLineHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double separatorLineHeight;
- (id)backgroundSelectedColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundSelectedColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundSelectedColor;
- (id)backgroundColorForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (id)backgroundColorForTraitCollection:(id)arg1;
@property(readonly, nonatomic) UIColor *backgroundColor;
- (_Bool)shouldPreventHighlightedStateForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (_Bool)shouldPreventHighlightedStateForTraitCollection:(id)arg1;
@property(readonly, nonatomic) _Bool shouldPreventHighlightedState;
- (double)contentHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)contentHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double contentHeight;
- (double)rightMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)rightMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double rightMargin;
- (double)leftMarginForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)leftMarginForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double leftMargin;
- (double)defaultHeightForTraitCollection:(id)arg1 withSize:(struct CGSize)arg2;
- (double)defaultHeightForTraitCollection:(id)arg1;
@property(readonly, nonatomic) double defaultHeight;

@end

