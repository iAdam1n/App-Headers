//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UINavigationBar.h"

@class MKActionSheet, MKAdaptiveNavigationBarStylesheet, MKDelegateProxy, MKTitleNavigationView, MKTopBannerNavigationBar, MKTraitCollection, NSArray, NSAttributedString, NSString, UIColor, UIImageView, UINavigationController;

@interface MKAdaptiveNavigationBar : UINavigationBar
{
    _Bool _shouldShowPresenceStatus;
    _Bool _shouldAlignLeft;
    _Bool _shouldKeepCaptionInCompactEnvironment;
    _Bool _dropdownExpanded;
    _Bool _shouldShowTopBanner;
    _Bool _hasCheckedBackButton;
    _Bool _hasBackButton;
    _Bool _navBarStylingLocked;
    MKAdaptiveNavigationBarStylesheet *_stylesheet;
    UIColor *_titleColor;
    UIColor *_titleActionColor;
    UIColor *_captionColor;
    UIColor *_highlightedColor;
    UIColor *_bgColor;
    MKActionSheet *_currentlyVisibleOptionsActionSheet;
    double _rightMarginOffset;
    unsigned long long _navBarStyling;
    MKTopBannerNavigationBar *_topBanner;
    MKTitleNavigationView *_customTitleView;
    UIImageView *_hairlineImageView;
    MKTraitCollection *_currentTraitCollection;
    UINavigationController *_navigationController;
    MKDelegateProxy *_navigationControllerDelegateProxy;
    UIColor *_backBarIconColor;
    NSString *_accessibilityHintForDropDownExpanded;
    NSString *_accessibilityHintForDropDownCollapsed;
    NSAttributedString *_attributedTitle;
    NSString *_caption;
    NSArray *_rightBarButtonItems;
    NSArray *_leftBarButtonItems;
    long long _status;
    CDUnknownBlockType _titleActionBlock;
    struct CGSize _amendedSize;
}

+ (id)buttonForRightItems;
+ (id)buttonForLeftItems;
+ (void)applyAppearanceProxyOnBackBarButtonItem:(id)arg1;
+ (void)applyAppearanceProxyOnBarButtonItem:(id)arg1;
+ (id)rightBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2 backgroundIcon:(id)arg3 foregroundIcon:(id)arg4 foregroundIconColor:(id)arg5 accessibilityLabel:(id)arg6;
+ (id)rightBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2 icon:(id)arg3 accessibilityLabel:(id)arg4;
+ (id)leftBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2 backgroundIcon:(id)arg3 foregroundIcon:(id)arg4 foregroundIconColor:(id)arg5 accessibilityLabel:(id)arg6;
+ (id)leftBarButtonItemWithTarget:(id)arg1 action:(SEL)arg2 icon:(id)arg3 accessibilityLabel:(id)arg4;
+ (Class)titleLabelClass;
@property(copy, nonatomic) CDUnknownBlockType titleActionBlock; // @synthesize titleActionBlock=_titleActionBlock;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(copy, nonatomic) NSArray *leftBarButtonItems; // @synthesize leftBarButtonItems=_leftBarButtonItems;
@property(copy, nonatomic) NSArray *rightBarButtonItems; // @synthesize rightBarButtonItems=_rightBarButtonItems;
@property(retain, nonatomic) NSString *caption; // @synthesize caption=_caption;
@property(retain, nonatomic) NSAttributedString *attributedTitle; // @synthesize attributedTitle=_attributedTitle;
@property(retain, nonatomic) NSString *accessibilityHintForDropDownCollapsed; // @synthesize accessibilityHintForDropDownCollapsed=_accessibilityHintForDropDownCollapsed;
@property(retain, nonatomic) NSString *accessibilityHintForDropDownExpanded; // @synthesize accessibilityHintForDropDownExpanded=_accessibilityHintForDropDownExpanded;
@property(retain, nonatomic) UIColor *backBarIconColor; // @synthesize backBarIconColor=_backBarIconColor;
@property(nonatomic, getter=isNavBarStylingLocked) _Bool navBarStylingLocked; // @synthesize navBarStylingLocked=_navBarStylingLocked;
@property(retain, nonatomic) MKDelegateProxy *navigationControllerDelegateProxy; // @synthesize navigationControllerDelegateProxy=_navigationControllerDelegateProxy;
@property(nonatomic) __weak UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(retain, nonatomic) MKTraitCollection *currentTraitCollection; // @synthesize currentTraitCollection=_currentTraitCollection;
@property(nonatomic) _Bool hasBackButton; // @synthesize hasBackButton=_hasBackButton;
@property(nonatomic) _Bool hasCheckedBackButton; // @synthesize hasCheckedBackButton=_hasCheckedBackButton;
@property(nonatomic) struct CGSize amendedSize; // @synthesize amendedSize=_amendedSize;
@property(retain, nonatomic) UIImageView *hairlineImageView; // @synthesize hairlineImageView=_hairlineImageView;
@property(retain, nonatomic) MKTitleNavigationView *customTitleView; // @synthesize customTitleView=_customTitleView;
@property(retain, nonatomic) MKTopBannerNavigationBar *topBanner; // @synthesize topBanner=_topBanner;
@property(nonatomic) _Bool shouldShowTopBanner; // @synthesize shouldShowTopBanner=_shouldShowTopBanner;
@property(nonatomic, getter=isDropdownExpanded) _Bool dropdownExpanded; // @synthesize dropdownExpanded=_dropdownExpanded;
@property(nonatomic) unsigned long long navBarStyling; // @synthesize navBarStyling=_navBarStyling;
@property(nonatomic) _Bool shouldKeepCaptionInCompactEnvironment; // @synthesize shouldKeepCaptionInCompactEnvironment=_shouldKeepCaptionInCompactEnvironment;
@property(nonatomic) double rightMarginOffset; // @synthesize rightMarginOffset=_rightMarginOffset;
@property(nonatomic) _Bool shouldAlignLeft; // @synthesize shouldAlignLeft=_shouldAlignLeft;
@property(nonatomic) _Bool shouldShowPresenceStatus; // @synthesize shouldShowPresenceStatus=_shouldShowPresenceStatus;
@property(nonatomic) __weak MKActionSheet *currentlyVisibleOptionsActionSheet; // @synthesize currentlyVisibleOptionsActionSheet=_currentlyVisibleOptionsActionSheet;
@property(retain, nonatomic) UIColor *bgColor; // @synthesize bgColor=_bgColor;
@property(retain, nonatomic) UIColor *highlightedColor; // @synthesize highlightedColor=_highlightedColor;
@property(retain, nonatomic) UIColor *captionColor; // @synthesize captionColor=_captionColor;
@property(retain, nonatomic) UIColor *titleActionColor; // @synthesize titleActionColor=_titleActionColor;
@property(retain, nonatomic) UIColor *titleColor; // @synthesize titleColor=_titleColor;
@property(retain, nonatomic) MKAdaptiveNavigationBarStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *accessibilityTitleValue;
@property(retain, nonatomic) NSString *accessibilityTitleHint;
@property(retain, nonatomic) NSString *accessibilityCaptionLabel;
@property(retain, nonatomic) NSString *accessibilityTitleLabel;
- (void)onTransitionEnd:(id)arg1;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)bindNavigationItemToBarIfNeeded:(id)arg1 forceLayout:(_Bool)arg2;
- (void)didNavigationItemChange:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)findHairlineImageViewUnder:(id)arg1;
- (void)flushNavigationBarIfNecessary;
- (void)restoreNavigationBarItemIfNecessary;
- (void)deepCleanup;
- (void)updateAppearanceItemsForceUpdate:(_Bool)arg1 ignoreLockAppearance:(_Bool)arg2;
- (void)updateAppearanceBackButtonItemIgnoringAppeareanceLock:(_Bool)arg1;
- (void)updateBarStyle;
- (void)updateAppearanceBarButtonItemsIgnoringAppeareanceLock:(_Bool)arg1;
- (id)prepareLeftBarButtonItemsWithItems:(id)arg1;
- (id)prepareRightBarButtonItemsWithItems:(id)arg1;
- (void)applyAppearanceProxy;
- (void)updateTextContainer;
- (_Bool)setCaption:(id)arg1 needsLayout:(_Bool)arg2;
- (_Bool)setAttributedTitle:(id)arg1 needsLayout:(_Bool)arg2;
- (_Bool)setRightBarButtonItems:(id)arg1 needsLayout:(_Bool)arg2;
- (_Bool)setLeftBarButtonItems:(id)arg1 needsLayout:(_Bool)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)sizeForBarButtonItem;
- (id)previousNavigationItem;
- (id)currentNavigationItem;
- (double)statusBarHeight;
- (void)applyAppearanceProxyOnBarButtonItem:(id)arg1 font:(id)arg2 unreadState:(_Bool)arg3;
- (void)applyNavigationBarStyling:(unsigned long long)arg1 lock:(_Bool)arg2;
- (void)setDelegate:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)invalidateAppearenceProxy;
- (void)traitCollectionDidChange:(id)arg1;
- (void)layoutBarButtonItemsIfNeeded;
- (void)applySizeClassesIfNeeded;
- (void)layoutCustomTitleView;
- (void)layoutTopBannerInNeeded;
- (void)checkBackButtonIfExist;
- (void)layoutSubviews;
- (void)dealloc;
- (void)mk_commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

