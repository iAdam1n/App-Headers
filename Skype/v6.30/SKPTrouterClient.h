/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:38 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/SKPTrouterConnectionDelegate.h>

@protocol SKPITrouterConnection, SKPITCPStreamFactory;
@class NSDate, SKPDispatcher, SKPTrouterRouter, SKPPushNotificationRegistrar, SKPPushNotificationHandler, SKPReachability, NSString;

@interface SKPTrouterClient : NSObject <SKPTrouterConnectionDelegate> {

	BOOL _isObserving;
	unsigned long long _keepAliveInterval;
	double _connectionRenewalMargin;
	id<SKPITrouterConnection> _mainConnection;
	id<SKPITrouterConnection> _renewalConnection;
	NSDate* _connectionRenewalTime;
	id<SKPITCPStreamFactory> _streamFactory;
	SKPDispatcher* _dispatcher;
	SKPTrouterRouter* _router;
	SKPPushNotificationRegistrar* _pushNotificationRegistrar;
	SKPPushNotificationHandler* _pushNotificationHandler;
	SKPReachability* _reachability;

}

@property (assign,nonatomic) BOOL isObserving;                                                      //@synthesize isObserving=_isObserving - In the implementation block
@property (nonatomic,retain) id<SKPITrouterConnection> mainConnection;                              //@synthesize mainConnection=_mainConnection - In the implementation block
@property (nonatomic,retain) id<SKPITrouterConnection> renewalConnection;                           //@synthesize renewalConnection=_renewalConnection - In the implementation block
@property (retain) NSDate * connectionRenewalTime;                                                  //@synthesize connectionRenewalTime=_connectionRenewalTime - In the implementation block
@property (nonatomic,retain) id<SKPITCPStreamFactory> streamFactory;                                //@synthesize streamFactory=_streamFactory - In the implementation block
@property (nonatomic,retain) SKPDispatcher * dispatcher;                                            //@synthesize dispatcher=_dispatcher - In the implementation block
@property (nonatomic,retain) SKPTrouterRouter * router;                                             //@synthesize router=_router - In the implementation block
@property (nonatomic,retain) SKPPushNotificationRegistrar * pushNotificationRegistrar;              //@synthesize pushNotificationRegistrar=_pushNotificationRegistrar - In the implementation block
@property (nonatomic,retain) SKPPushNotificationHandler * pushNotificationHandler;                  //@synthesize pushNotificationHandler=_pushNotificationHandler - In the implementation block
@property (retain) SKPReachability * reachability;                                                  //@synthesize reachability=_reachability - In the implementation block
@property (assign) unsigned long long keepAliveInterval;                                            //@synthesize keepAliveInterval=_keepAliveInterval - In the implementation block
@property (assign) double connectionRenewalMargin;                                                  //@synthesize connectionRenewalMargin=_connectionRenewalMargin - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)trouterGenericHeaders;
-(SKPPushNotificationRegistrar *)pushNotificationRegistrar;
-(SKPPushNotificationHandler *)pushNotificationHandler;
-(void)setConnectionRenewalMargin:(double)arg1 ;
-(void)setStreamFactory:(id<SKPITCPStreamFactory>)arg1 ;
-(void)setPushNotificationRegistrar:(SKPPushNotificationRegistrar *)arg1 ;
-(void)setPushNotificationHandler:(SKPPushNotificationHandler *)arg1 ;
-(id<SKPITrouterConnection>)renewalConnection;
-(BOOL)shouldRenew;
-(void)renewConnection;
-(BOOL)isCurrentlyRenewingConnection;
-(void)pingMainConnection;
-(void)setRenewalConnection:(id<SKPITrouterConnection>)arg1 ;
-(NSDate *)connectionRenewalTime;
-(id<SKPITCPStreamFactory>)streamFactory;
-(id)newRenewalConnection;
-(void)updateRenewalTime;
-(double)connectionRenewalMargin;
-(void)setConnectionRenewalTime:(NSDate *)arg1 ;
-(void)renewConnectionIfNeeded;
-(void)trouterConnection:(id)arg1 didReceivePayload:(id)arg2 ;
-(void)trouterConnectionRequiresSkypeTokenWithBlock:(/*^block*/id)arg1 ;
-(void)trouterConnectionDidReceiveServerSideKeepAlive:(id)arg1 ;
-(long long)trouterConnectionRequiresNetworkStatus:(id)arg1 ;
-(void)trouterConnectionWasEstablished:(id)arg1 ;
-(id)initWithRouter:(id)arg1 injectStreamFactory:(id)arg2 ;
-(void)connectToTrouterAndFetchSkypeTokenIfNeeded;
-(id)initWithDefaultDependencies;
-(void)dealloc;
-(void)invalidate;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)close;
-(BOOL)isObserving;
-(void)keepAlive;
-(unsigned long long)keepAliveInterval;
-(void)setKeepAliveInterval:(unsigned long long)arg1 ;
-(void)setMainConnection:(id<SKPITrouterConnection>)arg1 ;
-(id<SKPITrouterConnection>)mainConnection;
-(SKPTrouterRouter *)router;
-(void)setRouter:(SKPTrouterRouter *)arg1 ;
-(void)setIsObserving:(BOOL)arg1 ;
-(id)newConnection;
-(id)currentDate;
-(void)setReachability:(SKPReachability *)arg1 ;
-(SKPReachability *)reachability;
-(SKPDispatcher *)dispatcher;
-(void)setDispatcher:(SKPDispatcher *)arg1 ;
@end

