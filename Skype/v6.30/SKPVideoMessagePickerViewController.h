/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:39 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/Skype-Structs.h>
#import <Skype/SKPViewController.h>
#import <Skype/SKPVideoMessageForwardDelegate.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <Skype/SKPVideoRecordingDelegate.h>

@protocol SKPVideoMessagePickerViewControllerDelegate;
@class MKButton, SKPRecordButton, UILabel, MPMoviePlayerController, NSString, SKPVideoFilterPickerView, UITapGestureRecognizer, SKPVideoMessageHolidayView, NSDate, SKPTransformView, UIView, SKPVideoRecording, NSURL, NSTimer, SKPActivityToken, UIButton;

@interface SKPVideoMessagePickerViewController : SKPViewController <SKPVideoMessageForwardDelegate, UINavigationControllerDelegate, SKPVideoRecordingDelegate> {

	MKButton* _cancelButton;
	MKButton* _switchCameraButton;
	SKPRecordButton* _recordButton;
	UILabel* _timerLabel;
	MKButton* _discardButton;
	MKButton* _sendButton;
	MKButton* _previewButton;
	MPMoviePlayerController* _moviePlayer;
	MKButton* _filterButton;
	BOOL _filtersEnabled;
	BOOL _showContactPicker;
	BOOL _interrupted;
	BOOL _recording;
	BOOL _usingFrontCamera;
	BOOL _shouldHaveCameraCaptureRegistered;
	NSString* _defaultFilter;
	double _maxRecordingTime;
	id<SKPVideoMessagePickerViewControllerDelegate> _delegate;
	NSString* _messagingContext;
	long long _interfaceOrientationOnStart;
	SKPVideoFilterPickerView* _videoFilterPickerView;
	UITapGestureRecognizer* _tapMoviePlayerViewGestureRecognizer;
	SKPVideoMessageHolidayView* _videoMessageHolidayView;
	long long _startingInterfaceOrientation;
	NSDate* _startTimeForRecording;
	SKPTransformView* _switchCameraContainer;
	UIView* _switchCameraWrapper;
	long long _controlOrientation;
	UIView* _videoContainer;
	SKPTransformView* _mainButtonContainer;
	UIView* _mainButtonWrapper;
	SKPVideoRecording* _videoRecording;
	NSURL* _currentVideoFileURL;
	NSURL* _currentThumbnailFileURL;
	double _timeRecorded;
	NSTimer* _tickingTimer;
	SKPActivityToken* _cameraCaptureActivity;
	/*^block*/id _fetchAuxiliaryObjectBlock;

}

@property (nonatomic,readonly) MKButton * cancelButton; 
@property (nonatomic,readonly) MKButton * filterButton; 
@property (nonatomic,readonly) MKButton * switchCameraButton; 
@property (nonatomic,readonly) SKPRecordButton * recordButton; 
@property (nonatomic,readonly) UILabel * timerLabel; 
@property (nonatomic,readonly) MKButton * discardButton; 
@property (nonatomic,readonly) MKButton * sendButton; 
@property (nonatomic,readonly) UIButton * previewButton; 
@property (nonatomic,readonly) MPMoviePlayerController * moviePlayer; 
@property (assign,nonatomic) long long interfaceOrientationOnStart;                                        //@synthesize interfaceOrientationOnStart=_interfaceOrientationOnStart - In the implementation block
@property (assign,nonatomic) BOOL filtersEnabled;                                                          //@synthesize filtersEnabled=_filtersEnabled - In the implementation block
@property (assign,nonatomic) BOOL showContactPicker;                                                       //@synthesize showContactPicker=_showContactPicker - In the implementation block
@property (nonatomic,retain) SKPVideoFilterPickerView * videoFilterPickerView;                             //@synthesize videoFilterPickerView=_videoFilterPickerView - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * tapMoviePlayerViewGestureRecognizer;                 //@synthesize tapMoviePlayerViewGestureRecognizer=_tapMoviePlayerViewGestureRecognizer - In the implementation block
@property (nonatomic,retain) SKPVideoMessageHolidayView * videoMessageHolidayView;                         //@synthesize videoMessageHolidayView=_videoMessageHolidayView - In the implementation block
@property (assign,nonatomic) long long startingInterfaceOrientation;                                       //@synthesize startingInterfaceOrientation=_startingInterfaceOrientation - In the implementation block
@property (nonatomic,retain) NSDate * startTimeForRecording;                                               //@synthesize startTimeForRecording=_startTimeForRecording - In the implementation block
@property (assign,nonatomic) BOOL interrupted;                                                             //@synthesize interrupted=_interrupted - In the implementation block
@property (assign,getter=isRecording,nonatomic) BOOL recording;                                            //@synthesize recording=_recording - In the implementation block
@property (assign,getter=isUsingFrontCamera,nonatomic) BOOL usingFrontCamera;                              //@synthesize usingFrontCamera=_usingFrontCamera - In the implementation block
@property (nonatomic,retain) SKPTransformView * switchCameraContainer;                                     //@synthesize switchCameraContainer=_switchCameraContainer - In the implementation block
@property (nonatomic,retain) UIView * switchCameraWrapper;                                                 //@synthesize switchCameraWrapper=_switchCameraWrapper - In the implementation block
@property (assign,nonatomic) long long controlOrientation;                                                 //@synthesize controlOrientation=_controlOrientation - In the implementation block
@property (nonatomic,retain) UIView * videoContainer;                                                      //@synthesize videoContainer=_videoContainer - In the implementation block
@property (nonatomic,retain) SKPTransformView * mainButtonContainer;                                       //@synthesize mainButtonContainer=_mainButtonContainer - In the implementation block
@property (nonatomic,retain) UIView * mainButtonWrapper;                                                   //@synthesize mainButtonWrapper=_mainButtonWrapper - In the implementation block
@property (nonatomic,retain) SKPVideoRecording * videoRecording;                                           //@synthesize videoRecording=_videoRecording - In the implementation block
@property (nonatomic,retain) NSURL * currentVideoFileURL;                                                  //@synthesize currentVideoFileURL=_currentVideoFileURL - In the implementation block
@property (nonatomic,retain) NSURL * currentThumbnailFileURL;                                              //@synthesize currentThumbnailFileURL=_currentThumbnailFileURL - In the implementation block
@property (assign,nonatomic) double timeRecorded;                                                          //@synthesize timeRecorded=_timeRecorded - In the implementation block
@property (nonatomic,retain) NSTimer * tickingTimer;                                                       //@synthesize tickingTimer=_tickingTimer - In the implementation block
@property (nonatomic,retain) SKPActivityToken * cameraCaptureActivity;                                     //@synthesize cameraCaptureActivity=_cameraCaptureActivity - In the implementation block
@property (assign,nonatomic) BOOL shouldHaveCameraCaptureRegistered;                                       //@synthesize shouldHaveCameraCaptureRegistered=_shouldHaveCameraCaptureRegistered - In the implementation block
@property (nonatomic,copy) id fetchAuxiliaryObjectBlock;                                                   //@synthesize fetchAuxiliaryObjectBlock=_fetchAuxiliaryObjectBlock - In the implementation block
@property (nonatomic,copy) NSString * defaultFilter;                                                       //@synthesize defaultFilter=_defaultFilter - In the implementation block
@property (assign,nonatomic) double maxRecordingTime;                                                      //@synthesize maxRecordingTime=_maxRecordingTime - In the implementation block
@property (assign,nonatomic,__weak) id<SKPVideoMessagePickerViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) NSString * messagingContext;                                                    //@synthesize messagingContext=_messagingContext - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)postAsyncVideoToConversation:(id)arg1 videoPath:(id)arg2 thumbnailPath:(id)arg3 ;
+(void)showAlertForProblemSendingVideo;
-(id)initWithFetchAuxiliaryObjectBlock:(/*^block*/id)arg1 ;
-(void)setMessagingContext:(NSString *)arg1 ;
-(void)postVideo:(id)arg1 ;
-(void)videoMessageForwardViewControllerCancelTapped:(id)arg1 ;
-(void)videoMessageForwardViewControllerDoneTapped:(id)arg1 ;
-(void)setTapMoviePlayerViewGestureRecognizer:(UITapGestureRecognizer *)arg1 ;
-(UITapGestureRecognizer *)tapMoviePlayerViewGestureRecognizer;
-(void)switchCamera:(id)arg1 ;
-(double)maxRecordingTime;
-(void)setMaxRecordingTime:(double)arg1 ;
-(NSString *)messagingContext;
-(id)fetchAuxiliaryObjectBlock;
-(void)setFetchAuxiliaryObjectBlock:(id)arg1 ;
-(void)setShowContactPicker:(BOOL)arg1 ;
-(MKButton *)switchCameraButton;
-(void)setShouldHaveCameraCaptureRegistered:(BOOL)arg1 ;
-(SKPVideoRecording *)videoRecording;
-(NSTimer *)tickingTimer;
-(void)setTickingTimer:(NSTimer *)arg1 ;
-(SKPActivityToken *)cameraCaptureActivity;
-(void)setCameraCaptureActivity:(SKPActivityToken *)arg1 ;
-(NSURL *)currentVideoFileURL;
-(void)sendRecordedVideo:(id)arg1 ;
-(void)cancelRecordedVideo:(id)arg1 ;
-(SKPRecordButton *)recordButton;
-(SKPVideoFilterPickerView *)videoFilterPickerView;
-(NSString *)defaultFilter;
-(UIView *)videoContainer;
-(UIButton *)previewButton;
-(void)setCurrentVideoFileURL:(NSURL *)arg1 ;
-(void)setCurrentThumbnailFileURL:(NSURL *)arg1 ;
-(void)didRotateDevice:(id)arg1 ;
-(void)updateButtonForPlay;
-(SKPTransformView *)mainButtonContainer;
-(void)animateInPreviewButtons;
-(MKButton *)discardButton;
-(UILabel *)timerLabel;
-(void)updateUIAndTimerWhenRecordingIsFinished;
-(void)setTimeRecorded:(double)arg1 ;
-(void)animateInRecordButtons;
-(UIView *)mainButtonWrapper;
-(UIView *)switchCameraWrapper;
-(id)rotatableControls;
-(void)rotateControl:(id)arg1 toOrientation:(long long)arg2 ;
-(void)rotateLargeView:(id)arg1 toOrientation:(long long)arg2 ;
-(SKPVideoMessageHolidayView *)videoMessageHolidayView;
-(void)rotateTimerLabelViewToInterfaceOrientation:(long long)arg1 ;
-(long long)controlOrientation;
-(void)counterRotateWithAngle:(double)arg1 ;
-(void)setInterfaceOrientationOnStart:(long long)arg1 ;
-(long long)interfaceOrientationOnStart;
-(void)setControlOrientation:(long long)arg1 ;
-(BOOL)supportsMultitasking;
-(void)rotateControlsToInterfaceOrientation:(long long)arg1 ;
-(void)setupVideoMessageCaptureView;
-(void)setStartingInterfaceOrientation:(long long)arg1 ;
-(void)setVideoContainer:(UIView *)arg1 ;
-(void)moviePlayerPlaybackStateChanged:(id)arg1 ;
-(void)previewRecordedVideo:(id)arg1 ;
-(long long)startingInterfaceOrientation;
-(double)counterRotationAngleForInterfaceOrientation:(long long)arg1 ;
-(void)createCapturerWithVideoContainer:(id)arg1 ;
-(void)bailOutWithoutCreatingCapturer;
-(void)setVideoRecording:(SKPVideoRecording *)arg1 ;
-(void)showVideoFilterViewWithFrame:(CGRect)arg1 ;
-(void)showVideoMessageHolidayView:(CGRect)arg1 ;
-(void)setUpRecordUI;
-(void)setupRecordButtons;
-(id)buttonPopAppearAnimation;
-(BOOL)filtersEnabled;
-(void)setVideoFilterPickerView:(SKPVideoFilterPickerView *)arg1 ;
-(BOOL)showContactPicker;
-(void)setVideoMessageHolidayView:(SKPVideoMessageHolidayView *)arg1 ;
-(void)hideDuringHolidayView:(BOOL)arg1 ;
-(NSDate *)startTimeForRecording;
-(double)timeRecorded;
-(id)flipRotationKeyPath;
-(SKPTransformView *)switchCameraContainer;
-(void)showTimer;
-(void)setStartTimeForRecording:(NSDate *)arg1 ;
-(NSURL *)currentThumbnailFileURL;
-(void)onSendToContactsTapped;
-(void)onShareTapped;
-(id)videoFileWithReadableName;
-(void)didFinishActivity:(id)arg1 completed:(BOOL)arg2 ;
-(void)changeCancelButtonActionToResetForNewRecording;
-(void)resetForNewRecording:(id)arg1 ;
-(void)reportSentVideoMessageTelemetryForConversation:(id)arg1 ;
-(void)updateButtonForPause;
-(void)playPauseVideo;
-(void)changeCancelButtonActionToDismiss;
-(void)didResetForNewRecording;
-(void)cancelRecordedVideoCleanup;
-(void)discardCurrentVideo;
-(void)videoRecordingDidBeginInterruption:(id)arg1 ;
-(void)videoRecordingDidEndInterruption:(id)arg1 ;
-(void)videoRecordingDidStartShowingVideo:(id)arg1 ;
-(void)videoRecordingDidStartRecording:(id)arg1 ;
-(void)videoRecording:(id)arg1 didFinishRecordingVideoWithFileURL:(id)arg2 thumbnailURL:(id)arg3 ;
-(void)videoRecording:(id)arg1 didFindNumberOfPossibleCameras:(unsigned long long)arg2 ;
-(void)onFilterButtonTapped:(id)arg1 ;
-(void)setDefaultFilter:(NSString *)arg1 ;
-(void)setFiltersEnabled:(BOOL)arg1 ;
-(void)setSwitchCameraContainer:(SKPTransformView *)arg1 ;
-(void)setSwitchCameraWrapper:(UIView *)arg1 ;
-(void)setMainButtonContainer:(SKPTransformView *)arg1 ;
-(void)setMainButtonWrapper:(UIView *)arg1 ;
-(BOOL)shouldHaveCameraCaptureRegistered;
-(id)init;
-(void)setDelegate:(id<SKPVideoMessagePickerViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<SKPVideoMessagePickerViewControllerDelegate>)delegate;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(BOOL)prefersStatusBarHidden;
-(unsigned long long)supportedInterfaceOrientations;
-(BOOL)shouldAutorotate;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)viewDidLoad;
-(MKButton *)cancelButton;
-(BOOL)accessibilityPerformEscape;
-(BOOL)accessibilityPerformMagicTap;
-(BOOL)isUsingFrontCamera;
-(void)setUsingFrontCamera:(BOOL)arg1 ;
-(void)tick:(id)arg1 ;
-(MPMoviePlayerController *)moviePlayer;
-(void)stopVideo;
-(void)pauseVideo;
-(void)playVideo;
-(void)applicationDidEnterBackgroundNotification:(id)arg1 ;
-(MKButton *)sendButton;
-(BOOL)isRecording;
-(void)stopRecording;
-(void)startRecording;
-(BOOL)interrupted;
-(void)setInterrupted:(BOOL)arg1 ;
-(void)setRecording:(BOOL)arg1 ;
-(void)dismiss:(id)arg1 ;
-(void)toggleRecording:(id)arg1 ;
-(MKButton *)filterButton;
@end

