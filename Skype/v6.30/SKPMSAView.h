/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:38 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/Skype-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIWebViewDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>

@protocol SKPMSAViewDelegate;
@class SKPNetworkActivityIndicatorToggle, UIWebView, WKWebView, SKPProgressHud, NSString;

@interface SKPMSAView : UIView <UIWebViewDelegate, WKNavigationDelegate> {

	BOOL _progressIndicatorVisible;
	BOOL _useWebKit;
	id<SKPMSAViewDelegate> _delegate;
	SKPNetworkActivityIndicatorToggle* _networkActivityIndicatorToggle;
	UIWebView* _uiWebView;
	WKWebView* _wkWebView;
	SKPProgressHud* _progressHud;
	unsigned long long _style;

}

@property (nonatomic,retain) UIWebView * uiWebView;                                                             //@synthesize uiWebView=_uiWebView - In the implementation block
@property (nonatomic,retain) WKWebView * wkWebView;                                                             //@synthesize wkWebView=_wkWebView - In the implementation block
@property (nonatomic,retain) SKPProgressHud * progressHud;                                                      //@synthesize progressHud=_progressHud - In the implementation block
@property (assign,nonatomic) BOOL useWebKit;                                                                    //@synthesize useWebKit=_useWebKit - In the implementation block
@property (assign,nonatomic) unsigned long long style;                                                          //@synthesize style=_style - In the implementation block
@property (nonatomic,readonly) SKPNetworkActivityIndicatorToggle * networkActivityIndicatorToggle;              //@synthesize networkActivityIndicatorToggle=_networkActivityIndicatorToggle - In the implementation block
@property (assign,nonatomic,__weak) id<SKPMSAViewDelegate> delegate;                                            //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL progressIndicatorVisible;                                                     //@synthesize progressIndicatorVisible=_progressIndicatorVisible - In the implementation block
@property (getter=isLoading,nonatomic,readonly) BOOL loading; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setupAppearance;
-(void)setUseWebKit:(BOOL)arg1 ;
-(void)setupWebView;
-(id)initWithFrame:(CGRect)arg1 style:(unsigned long long)arg2 useWebKit:(BOOL)arg3 ;
-(UIWebView *)uiWebView;
-(WKWebView *)wkWebView;
-(BOOL)useWebKit;
-(void)setWkWebView:(WKWebView *)arg1 ;
-(void)setUiWebView:(UIWebView *)arg1 ;
-(BOOL)msaViewShouldStartLoadWithRequest:(id)arg1 ;
-(void)msaViewDidStartLoadWithURL:(id)arg1 ;
-(void)msaViewDidFinishLoadWithURL:(id)arg1 ;
-(void)msaViewDidFailLoadURL:(id)arg1 withError:(id)arg2 ;
-(SKPNetworkActivityIndicatorToggle *)networkActivityIndicatorToggle;
-(void)setProgressHud:(SKPProgressHud *)arg1 ;
-(SKPProgressHud *)progressHud;
-(void)evaluateJavascript:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(BOOL)progressIndicatorVisible;
-(void)setDelegate:(id<SKPMSAViewDelegate>)arg1 ;
-(void)dealloc;
-(id<SKPMSAViewDelegate>)delegate;
-(unsigned long long)style;
-(void)setStyle:(unsigned long long)arg1 ;
-(id)initWithFrame:(CGRect)arg1 style:(unsigned long long)arg2 ;
-(void)loadRequest:(id)arg1 ;
-(BOOL)isLoading;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)stopLoading;
-(BOOL)goBack;
-(void)setProgressIndicatorVisible:(BOOL)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
@end

