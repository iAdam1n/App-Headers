/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:38 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/SKPLazyPropertyContainer.h>
#import <Skype/SKPTreeDescribing.h>
#import <Skype/ALESkyLibProtocol.h>

@class NSMutableSet, NSArray, NSMutableArray, SKPArrayFilter, NSOperationQueue, NSString;

@interface SKPConversationLists : SKPLazyPropertyContainer <SKPTreeDescribing, ALESkyLibProtocol> {

	NSMutableSet* _keysOfListsNeedingUpdate;
	BOOL _isObserving;
	NSArray* _unreadConversations;
	unsigned long long _numberOfUnreadConversations;
	NSMutableSet* _knownInboxConversationIDs;
	NSMutableArray* _mutableInboxConversations;
	NSMutableSet* _knownLiveConversationIDs;
	NSMutableArray* _mutableLiveConversations;
	NSMutableSet* _knownFavouriteConversationIDs;
	NSMutableArray* _mutableFavouriteConversations;
	SKPArrayFilter* _unreadConversationsFilter;
	NSOperationQueue* _skylibDispatchQueue;

}

@property (nonatomic,retain) NSMutableSet * knownInboxConversationIDs;                    //@synthesize knownInboxConversationIDs=_knownInboxConversationIDs - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableInboxConversations;                  //@synthesize mutableInboxConversations=_mutableInboxConversations - In the implementation block
@property (nonatomic,retain) NSMutableSet * knownLiveConversationIDs;                     //@synthesize knownLiveConversationIDs=_knownLiveConversationIDs - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableLiveConversations;                   //@synthesize mutableLiveConversations=_mutableLiveConversations - In the implementation block
@property (nonatomic,retain) NSMutableSet * knownFavouriteConversationIDs;                //@synthesize knownFavouriteConversationIDs=_knownFavouriteConversationIDs - In the implementation block
@property (nonatomic,retain) NSMutableArray * mutableFavouriteConversations;              //@synthesize mutableFavouriteConversations=_mutableFavouriteConversations - In the implementation block
@property (assign,nonatomic) unsigned long long numberOfUnreadConversations;              //@synthesize numberOfUnreadConversations=_numberOfUnreadConversations - In the implementation block
@property (nonatomic,retain) NSArray * unreadConversations;                               //@synthesize unreadConversations=_unreadConversations - In the implementation block
@property (nonatomic,retain) SKPArrayFilter * unreadConversationsFilter;                  //@synthesize unreadConversationsFilter=_unreadConversationsFilter - In the implementation block
@property (nonatomic,retain) NSOperationQueue * skylibDispatchQueue;                      //@synthesize skylibDispatchQueue=_skylibDispatchQueue - In the implementation block
@property (assign,nonatomic) BOOL isObserving;                                            //@synthesize isObserving=_isObserving - In the implementation block
@property (nonatomic,readonly) NSArray * inboxConversations; 
@property (nonatomic,readonly) NSArray * liveConversations; 
@property (nonatomic,readonly) NSArray * favouriteConversations; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)lazyLoadedPropertiesKeypaths;
+(id)keyPathsForValuesAffectingInboxConversations;
-(void)OnConversationListChange:(id)arg1 andConversationobjectid:(unsigned)arg2 andType:(int)arg3 andAdded:(BOOL)arg4 ;
-(id)fetchOperationForLazyProperty:(id)arg1 fetchQueueIdentifier:(id*)arg2 ;
-(BOOL)flushLazyProperty:(id)arg1 ;
-(NSArray *)unreadConversations;
-(id)callbackQueueIdentifier;
-(void)setSkylibDispatchQueue:(NSOperationQueue *)arg1 ;
-(NSArray *)inboxConversations;
-(void)markConversationsAsRead:(id)arg1 ;
-(void)removeConversations:(id)arg1 ;
-(void)hideConversations:(id)arg1 ;
-(NSOperationQueue *)skylibDispatchQueue;
-(NSMutableSet *)knownInboxConversationIDs;
-(NSMutableSet *)knownLiveConversationIDs;
-(NSMutableSet *)knownFavouriteConversationIDs;
-(void)setNeedsUpdateList:(id)arg1 ;
-(void)setInboxConversations:(NSArray *)arg1 ;
-(void)updateListIfNeeded:(id)arg1 ;
-(void)setLiveConversations:(NSArray *)arg1 ;
-(void)setUnreadConversationsFilter:(SKPArrayFilter *)arg1 ;
-(void)setFavouriteConversations:(NSArray *)arg1 ;
-(void)setUnreadConversations:(NSArray *)arg1 ;
-(void)setNumberOfUnreadConversations:(unsigned long long)arg1 ;
-(SKPArrayFilter *)unreadConversationsFilter;
-(id)objectIdSetFromConversations:(id)arg1 ;
-(NSMutableArray *)mutableLiveConversations;
-(NSMutableArray *)mutableInboxConversations;
-(NSMutableArray *)mutableFavouriteConversations;
-(void)markAllAsRead;
-(void)hideAll;
-(BOOL)hasLegacyGroupConversationNewerThan:(double)arg1 ;
-(NSArray *)liveConversations;
-(void)insertObject:(id)arg1 inLiveConversationsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromLiveConversationsAtIndex:(unsigned long long)arg1 ;
-(void)insertObject:(id)arg1 inInboxConversationsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromInboxConversationsAtIndex:(unsigned long long)arg1 ;
-(NSArray *)favouriteConversations;
-(void)insertObject:(id)arg1 inFavouriteConversationsAtIndex:(unsigned long long)arg2 ;
-(void)removeObjectFromFavouriteConversationsAtIndex:(unsigned long long)arg1 ;
-(unsigned long long)numberOfUnreadConversations;
-(void)setKnownInboxConversationIDs:(NSMutableSet *)arg1 ;
-(void)setMutableInboxConversations:(NSMutableArray *)arg1 ;
-(void)setKnownLiveConversationIDs:(NSMutableSet *)arg1 ;
-(void)setMutableLiveConversations:(NSMutableArray *)arg1 ;
-(void)setKnownFavouriteConversationIDs:(NSMutableSet *)arg1 ;
-(void)setMutableFavouriteConversations:(NSMutableArray *)arg1 ;
-(id)init;
-(void)dealloc;
-(void)invalidate;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)removeAll;
-(BOOL)isObserving;
-(void)setIsObserving:(BOOL)arg1 ;
@end

