/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:39 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class SKPAudioSession, NSMapTable, SKPActivityToken, NSOperationQueue, SKPMutableValue, AVAudioSession;

@interface SKPAudioSessionManager : NSObject {

	BOOL _audioRoutedViaSpeakerPhone;
	BOOL _audiolibraryIsInitialized;
	BOOL _shouldRegisterForAudioSessionInterrupt;
	BOOL _speakerPhoneRoutePreferred;
	long long _activeAudioOutput;
	long long _currentAudioSessionState;
	SKPAudioSession* _audioSessionWrapper;
	long long _applicationState;
	NSMapTable* _settingsByClientId;
	SKPActivityToken* _audioSessionInterruptActivity;
	NSOperationQueue* _queue;
	SKPMutableValue* _audioSessionManagerToken;

}

@property (assign,nonatomic) long long activeAudioOutput;                                   //@synthesize activeAudioOutput=_activeAudioOutput - In the implementation block
@property (assign,nonatomic) BOOL audioRoutedViaSpeakerPhone;                               //@synthesize audioRoutedViaSpeakerPhone=_audioRoutedViaSpeakerPhone - In the implementation block
@property (assign,nonatomic) long long currentAudioSessionState;                            //@synthesize currentAudioSessionState=_currentAudioSessionState - In the implementation block
@property (assign,nonatomic) BOOL audiolibraryIsInitialized;                                //@synthesize audiolibraryIsInitialized=_audiolibraryIsInitialized - In the implementation block
@property (nonatomic,retain) SKPAudioSession * audioSessionWrapper;                         //@synthesize audioSessionWrapper=_audioSessionWrapper - In the implementation block
@property (nonatomic,readonly) AVAudioSession * audioSession; 
@property (assign,nonatomic) BOOL shouldRegisterForAudioSessionInterrupt;                   //@synthesize shouldRegisterForAudioSessionInterrupt=_shouldRegisterForAudioSessionInterrupt - In the implementation block
@property (assign,nonatomic) long long applicationState;                                    //@synthesize applicationState=_applicationState - In the implementation block
@property (nonatomic,retain) NSMapTable * settingsByClientId;                               //@synthesize settingsByClientId=_settingsByClientId - In the implementation block
@property (nonatomic,retain) SKPActivityToken * audioSessionInterruptActivity;              //@synthesize audioSessionInterruptActivity=_audioSessionInterruptActivity - In the implementation block
@property (nonatomic,retain) NSOperationQueue * queue;                                      //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) SKPMutableValue * audioSessionManagerToken;                    //@synthesize audioSessionManagerToken=_audioSessionManagerToken - In the implementation block
@property (assign,nonatomic) BOOL speakerPhoneRoutePreferred;                               //@synthesize speakerPhoneRoutePreferred=_speakerPhoneRoutePreferred - In the implementation block
+(id)settingsFromMap:(id)arg1 ;
+(id)mergedSettingForSettings:(id)arg1 ;
+(unsigned long long)validOptions:(unsigned long long)arg1 usingCategory:(id)arg2 ;
+(id)clientsFromClientIdMap:(id)arg1 ;
+(id)errorWithCode:(long long)arg1 ;
-(long long)activeAudioOutput;
-(void)setPreferredSettings:(id)arg1 forClientId:(id)arg2 completion:(/*^block*/id)arg3 interruptionBeganBlock:(/*^block*/id)arg4 interruptionEndedBlock:(/*^block*/id)arg5 ;
-(void)unsetPreferredSettingsForClientId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)applicationDidBecomeActiveNotification:(id)arg1 ;
-(void)setActiveAudioOutput:(long long)arg1 ;
-(BOOL)audioRoutedViaSpeakerPhone;
-(BOOL)preferredSpeakerPhoneRoute:(BOOL)arg1 ;
-(void)applicationWillResignActiveNotification:(id)arg1 ;
-(id)logDescription;
-(void)setPreferredSettings:(id)arg1 forClientId:(id)arg2 timeout:(double)arg3 completion:(/*^block*/id)arg4 interruptionBeganBlock:(/*^block*/id)arg5 interruptionEndedBlock:(/*^block*/id)arg6 ;
-(void)unsetPreferredSettingsForClientId:(id)arg1 ;
-(NSMapTable *)settingsByClientId;
-(void)setSettingsByClientId:(NSMapTable *)arg1 ;
-(SKPMutableValue *)audioSessionManagerToken;
-(void)updateClientSettingsWithLabel:(id)arg1 ;
-(void)unregisterClientId:(id)arg1 label:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)registerClientId:(id)arg1 settings:(id)arg2 deadline:(id)arg3 label:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)setAudioSessionWrapper:(SKPAudioSession *)arg1 ;
-(void)audiolibStartInitializingNotification:(id)arg1 ;
-(void)audiolibDoneInitializingNotification:(id)arg1 ;
-(void)audiolibStartUninitializingNotification:(id)arg1 ;
-(void)audiolibDoneUninitializingNotification:(id)arg1 ;
-(long long)activeAudioOutputForCurrentAudioRoute;
-(SKPAudioSession *)audioSessionWrapper;
-(void)updateAudioSessionState:(long long)arg1 ;
-(void)setSpeakerPhoneRoutePreferred:(BOOL)arg1 ;
-(void)setAudioRoutedViaSpeakerPhone:(BOOL)arg1 ;
-(long long)audioSessionState;
-(BOOL)audioSessionWithSettingsIsInterrupted:(id)arg1 ;
-(BOOL)setAudioSessionCategory:(id)arg1 withOptions:(unsigned long long)arg2 withMode:(id)arg3 notifyClients:(id)arg4 label:(id)arg5 error:(id*)arg6 ;
-(BOOL)setAudioSessionCategory:(id)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3 ;
-(BOOL)setAudioSessionMode:(id)arg1 error:(id*)arg2 ;
-(BOOL)speakerPhoneRoutePreferred;
-(BOOL)updateAudioSessionWithSettings:(id)arg1 notifyClients:(id)arg2 label:(id)arg3 error:(id*)arg4 ;
-(BOOL)audiolibraryIsInitialized;
-(long long)currentAudioSessionState;
-(void)setCurrentAudioSessionState:(long long)arg1 ;
-(void)setShouldRegisterForAudioSessionInterrupt:(BOOL)arg1 ;
-(long long)outputForPortName:(id)arg1 ;
-(void)setAudiolibraryIsInitialized:(BOOL)arg1 ;
-(void)setInactiveStateIfNeeded;
-(BOOL)shouldRegisterForAudioSessionInterrupt;
-(SKPActivityToken *)audioSessionInterruptActivity;
-(void)setAudioSessionInterruptActivity:(SKPActivityToken *)arg1 ;
-(void)setAudioSessionManagerToken:(SKPMutableValue *)arg1 ;
-(id)init;
-(void)dealloc;
-(id)debugDescription;
-(long long)applicationState;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)addOperation:(id)arg1 ;
-(NSOperationQueue *)queue;
-(void)setQueue:(NSOperationQueue *)arg1 ;
-(AVAudioSession *)audioSession;
-(id)queueIdentifier;
-(void)setApplicationState:(long long)arg1 ;
-(void)applicationDidEnterBackgroundNotification:(id)arg1 ;
-(void)audioSessionInterruptionNotification:(id)arg1 ;
-(void)audioSessionRouteChangeNotification:(id)arg1 ;
-(BOOL)activateAudioSession;
@end

