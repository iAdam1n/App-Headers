/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:38 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/SKPDispatching.h>

@protocol OS_dispatch_group;
@class SKPNetworkActivityIndicatorToggle, NSOperationQueue, NSMutableDictionary, NSObject, NSString;

@interface SKPDispatcher : NSObject <SKPDispatching> {

	BOOL _valid;
	BOOL _delayMainThreadDispatchingEnabled;
	SKPNetworkActivityIndicatorToggle* _networkActivityIndicatorToggle;
	NSOperationQueue* _globalBackgroundQueue;
	NSOperationQueue* _globalCancellableUserActionsBackgroundQueue;
	NSMutableDictionary* _queues;
	NSMutableDictionary* _gcdQueues;
	NSObject*<OS_dispatch_group> _dispatchGroup;

}

@property (nonatomic,retain) NSOperationQueue * globalBackgroundQueue;                                                       //@synthesize globalBackgroundQueue=_globalBackgroundQueue - In the implementation block
@property (nonatomic,retain) NSOperationQueue * globalCancellableUserActionsBackgroundQueue;                                 //@synthesize globalCancellableUserActionsBackgroundQueue=_globalCancellableUserActionsBackgroundQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * queues;                                                                   //@synthesize queues=_queues - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * gcdQueues;                                                                //@synthesize gcdQueues=_gcdQueues - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_group> dispatchGroup;                                                     //@synthesize dispatchGroup=_dispatchGroup - In the implementation block
@property (assign,getter=isValid,nonatomic) BOOL valid;                                                                      //@synthesize valid=_valid - In the implementation block
@property (assign,getter=isDelayMainThreadDispatchingEnabled,nonatomic) BOOL delayMainThreadDispatchingEnabled;              //@synthesize delayMainThreadDispatchingEnabled=_delayMainThreadDispatchingEnabled - In the implementation block
@property (nonatomic,readonly) SKPNetworkActivityIndicatorToggle * networkActivityIndicatorToggle;                           //@synthesize networkActivityIndicatorToggle=_networkActivityIndicatorToggle - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(BOOL)dispatchBlockOnBackgroundQueue:(/*^block*/id)arg1 ;
-(BOOL)dispatchBlockOnMainThreadQueue:(/*^block*/id)arg1 modes:(id)arg2 ;
-(BOOL)cancelPreviousPerformRequestsOnReceiver:(id)arg1 ;
-(BOOL)dispatchBlockOnMainThreadQueue:(/*^block*/id)arg1 ;
-(BOOL)dispatchBlockOnMainThreadQueue:(/*^block*/id)arg1 afterDelay:(double)arg2 ;
-(BOOL)onReceiver:(id)arg1 performSelector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4 cancelPrevious:(BOOL)arg5 ;
-(BOOL)onReceiver:(id)arg1 performSelector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4 ;
-(BOOL)dispatchBlockOnMainThreadQueueInNextRunLoop:(/*^block*/id)arg1 ;
-(BOOL)dispatchOperation:(id)arg1 onQueueWithIdentifier:(id)arg2 ;
-(BOOL)cancelPreviousPerformRequestsOnReceiver:(id)arg1 selector:(SEL)arg2 object:(id)arg3 ;
-(SKPNetworkActivityIndicatorToggle *)networkActivityIndicatorToggle;
-(id)serialGCDQueueWithIdentifier:(id)arg1 ;
-(id)newOperationQueueWithIdentifier:(id)arg1 ;
-(void)removeQueueWithIdentifier:(id)arg1 ;
-(BOOL)dispatchBlockSynchronouslyOnMainThread:(/*^block*/id)arg1 ;
-(BOOL)dispatchOperationOnBackgroundQueue:(id)arg1 ;
-(void)waitUntilOperationFinished:(id)arg1 ;
-(BOOL)isDelayMainThreadDispatchingEnabled;
-(BOOL)dispatchBlock:(/*^block*/id)arg1 onQueueWithIdentifier:(id)arg2 ;
-(id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5 mode:(id)arg6 ;
-(void)drainAndThenDispatchBlockOnMainThreadQueue:(/*^block*/id)arg1 ;
-(BOOL)dispatchOnce:(long long*)arg1 block:(/*^block*/id)arg2 ;
-(BOOL)dispatchBlockOnBackgroundQueue:(/*^block*/id)arg1 afterDelay:(double)arg2 ;
-(void)cancelAllOperationsAndWaitWithTimeout:(double)arg1 ;
-(BOOL)onReceiver:(id)arg1 performSelector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4 inModes:(id)arg5 ;
-(BOOL)dispatchOperationOnCancellableUserActionsBackgroundQueue:(id)arg1 ;
-(BOOL)dispatchBlockOnCancellableUserActionsBackgroundQueue:(/*^block*/id)arg1 ;
-(void)setDelayMainThreadDispatchingEnabled:(BOOL)arg1 ;
-(void)setGlobalBackgroundQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)globalBackgroundQueue;
-(void)setGlobalCancellableUserActionsBackgroundQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)globalCancellableUserActionsBackgroundQueue;
-(void)setQueues:(NSMutableDictionary *)arg1 ;
-(void)setGcdQueues:(NSMutableDictionary *)arg1 ;
-(BOOL)dispatchBlockOnMainThreadQueue:(/*^block*/id)arg1 waitUntilDone:(BOOL)arg2 modes:(id)arg3 ;
-(NSMutableDictionary *)queues;
-(NSMutableDictionary *)gcdQueues;
-(void)removeGCDQueueWithIdentifier:(id)arg1 ;
-(BOOL)dispatchBlock:(/*^block*/id)arg1 onGCDQueueWithIdentifier:(id)arg2 ;
-(id)predicateObserverTriggerWithObject:(id)arg1 trackedKeyPathsAndPredicates:(id)arg2 timeout:(double)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)operationQueueWithIdentifierIfExisting:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(BOOL)isValid;
-(id)scheduledTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)executeBlock:(/*^block*/id)arg1 ;
-(void)sleepForTimeInterval:(double)arg1 ;
-(void)setDispatchGroup:(NSObject*<OS_dispatch_group>)arg1 ;
-(void)setValid:(BOOL)arg1 ;
-(NSObject*<OS_dispatch_group>)dispatchGroup;
@end

