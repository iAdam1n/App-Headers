/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:39 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/SKPViewController.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>
#import <UIKit/UIWebViewDelegate.h>

@class UIView, SKPNetworkActivityIndicatorToggle, NSURLRequest, NSString, MKDropdownBar, UIBarButtonItem, MKActivityIndicatorView, NSDate, NSURL;

@interface SKPInAppBrowserViewController : SKPViewController <WKNavigationDelegate, UIWebViewDelegate> {

	BOOL _rootPageNeedsAuthetication;
	BOOL _forcePageWidthToViewWidth;
	BOOL _forwardButtonEnabled;
	BOOL _allowAutorotation;
	BOOL _loadImmediately;
	BOOL _browsingOptionsAvailable;
	BOOL _overrideBrowserTitle;
	BOOL _observeApplicationState;
	BOOL _webViewLoadingAborted;
	UIView* _webView;
	SKPNetworkActivityIndicatorToggle* _networkActivityIndicatorToggle;
	NSURLRequest* _urlRequest;
	NSString* _browserTitle;
	NSString* _browserSubtitle;
	MKDropdownBar* _dropdownBar;
	UIBarButtonItem* _goBackItem;
	UIBarButtonItem* _goForwardItem;
	MKActivityIndicatorView* _activityIndicator;
	NSDate* _browseStartDate;

}

@property (nonatomic,retain) NSString * browserTitle;                                                           //@synthesize browserTitle=_browserTitle - In the implementation block
@property (nonatomic,retain) NSString * browserSubtitle;                                                        //@synthesize browserSubtitle=_browserSubtitle - In the implementation block
@property (nonatomic,retain) MKDropdownBar * dropdownBar;                                                       //@synthesize dropdownBar=_dropdownBar - In the implementation block
@property (assign,nonatomic) BOOL loadImmediately;                                                              //@synthesize loadImmediately=_loadImmediately - In the implementation block
@property (assign,nonatomic) BOOL browsingOptionsAvailable;                                                     //@synthesize browsingOptionsAvailable=_browsingOptionsAvailable - In the implementation block
@property (assign,nonatomic) BOOL overrideBrowserTitle;                                                         //@synthesize overrideBrowserTitle=_overrideBrowserTitle - In the implementation block
@property (nonatomic,retain) UIBarButtonItem * goBackItem;                                                      //@synthesize goBackItem=_goBackItem - In the implementation block
@property (nonatomic,retain) UIBarButtonItem * goForwardItem;                                                   //@synthesize goForwardItem=_goForwardItem - In the implementation block
@property (nonatomic,readonly) UIView * webView;                                                                //@synthesize webView=_webView - In the implementation block
@property (nonatomic,retain) MKActivityIndicatorView * activityIndicator;                                       //@synthesize activityIndicator=_activityIndicator - In the implementation block
@property (nonatomic,retain) NSDate * browseStartDate;                                                          //@synthesize browseStartDate=_browseStartDate - In the implementation block
@property (assign,nonatomic) BOOL observeApplicationState;                                                      //@synthesize observeApplicationState=_observeApplicationState - In the implementation block
@property (assign,nonatomic) BOOL webViewLoadingAborted;                                                        //@synthesize webViewLoadingAborted=_webViewLoadingAborted - In the implementation block
@property (nonatomic,readonly) NSURL * currentURL; 
@property (nonatomic,readonly) SKPNetworkActivityIndicatorToggle * networkActivityIndicatorToggle;              //@synthesize networkActivityIndicatorToggle=_networkActivityIndicatorToggle - In the implementation block
@property (nonatomic,retain) NSURLRequest * urlRequest;                                                         //@synthesize urlRequest=_urlRequest - In the implementation block
@property (assign,nonatomic) BOOL rootPageNeedsAuthetication;                                                   //@synthesize rootPageNeedsAuthetication=_rootPageNeedsAuthetication - In the implementation block
@property (assign,nonatomic) BOOL forcePageWidthToViewWidth;                                                    //@synthesize forcePageWidthToViewWidth=_forcePageWidthToViewWidth - In the implementation block
@property (assign,nonatomic) BOOL forwardButtonEnabled;                                                         //@synthesize forwardButtonEnabled=_forwardButtonEnabled - In the implementation block
@property (assign,nonatomic) BOOL allowAutorotation;                                                            //@synthesize allowAutorotation=_allowAutorotation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)createInAppBrowserViewController:(id)arg1 withTitle:(id)arg2 delegate:(id)arg3 ;
-(void)onCancel:(id)arg1 ;
-(id)initWitRequest:(id)arg1 title:(id)arg2 loadImmediately:(BOOL)arg3 ;
-(SEL)selectorForDropdownOptionIdentifier:(long long)arg1 ;
-(SKPNetworkActivityIndicatorToggle *)networkActivityIndicatorToggle;
-(void)setupNavigationBar;
-(void)didChangePreviewing:(BOOL)arg1 ;
-(id)initWithRequest:(id)arg1 browsingOptionsAvailable:(BOOL)arg2 ;
-(void)setAllowAutorotation:(BOOL)arg1 ;
-(void)setForwardButtonEnabled:(BOOL)arg1 ;
-(void)setForcePageWidthToViewWidth:(BOOL)arg1 ;
-(void)loadWebPage;
-(void)showErrorAlertView:(id)arg1 ;
-(void)setBrowserTitle:(NSString *)arg1 ;
-(void)setLoadImmediately:(BOOL)arg1 ;
-(void)setOverrideBrowserTitle:(BOOL)arg1 ;
-(void)setWebViewLoadingAborted:(BOOL)arg1 ;
-(void)setObserveApplicationState:(BOOL)arg1 ;
-(void)setBrowsingOptionsAvailable:(BOOL)arg1 ;
-(BOOL)webKitWebViewAvailable;
-(BOOL)loadImmediately;
-(void)recordBrowsingStartTime;
-(void)updateTextHeader;
-(BOOL)browsingOptionsAvailable;
-(void)onShare:(id)arg1 ;
-(BOOL)forwardButtonEnabled;
-(void)setGoBackItem:(UIBarButtonItem *)arg1 ;
-(UIBarButtonItem *)goBackItem;
-(void)setGoForwardItem:(UIBarButtonItem *)arg1 ;
-(UIBarButtonItem *)goForwardItem;
-(void)openInSafari:(id)arg1 ;
-(void)sendToReadingList:(id)arg1 ;
-(void)setDropdownBar:(MKDropdownBar *)arg1 ;
-(MKDropdownBar *)dropdownBar;
-(NSURL *)currentURL;
-(NSString *)browserTitle;
-(NSString *)browserSubtitle;
-(void)updateViewPort;
-(void)viewDidStartLoad;
-(void)setProgressHudVisible:(BOOL)arg1 ;
-(void)viewDidFailLoadWithError:(id)arg1 ;
-(void)viewDidFinishLoad;
-(void)updateNavigationControls;
-(void)updateBrowserTitle;
-(BOOL)viewShouldStartLoadWithRequest:(id)arg1 navigationType:(long long)arg2 ;
-(BOOL)forcePageWidthToViewWidth;
-(BOOL)overrideBrowserTitle;
-(void)setBrowserSubtitle:(NSString *)arg1 ;
-(BOOL)rootPageNeedsAuthetication;
-(BOOL)webViewLoadingAborted;
-(void)reloadWebPage;
-(void)setBrowseStartDate:(NSDate *)arg1 ;
-(void)setRootPageNeedsAuthetication:(BOOL)arg1 ;
-(BOOL)allowAutorotation;
-(NSDate *)browseStartDate;
-(BOOL)observeApplicationState;
-(void)setupActivityIndicator;
-(void)dealloc;
-(BOOL)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)loadView;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidLoad;
-(void)didRotateFromInterfaceOrientation:(long long)arg1 ;
-(id)previewActionItems;
-(void)copy:(id)arg1 ;
-(UIView *)webView;
-(void)goBack:(id)arg1 ;
-(void)goForward:(id)arg1 ;
-(void)webView:(id)arg1 didFailLoadWithError:(id)arg2 ;
-(BOOL)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3 ;
-(void)webViewDidStartLoad:(id)arg1 ;
-(void)webViewDidFinishLoad:(id)arg1 ;
-(void)cleanup;
-(MKActivityIndicatorView *)activityIndicator;
-(void)setActivityIndicator:(MKActivityIndicatorView *)arg1 ;
-(NSURLRequest *)urlRequest;
-(void)setUrlRequest:(NSURLRequest *)arg1 ;
-(void)dismissController;
-(void)applicationStateDidChange:(id)arg1 ;
-(void)setupActions;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
@end

