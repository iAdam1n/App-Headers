/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:39 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/SKPBaseCall.h>
#import <Skype/SKPTreeDescribing.h>
#import <Skype/SKPArraySubscriberDelegate.h>

@class SKPVideoStageController, NSArray, NSString, SKPParticipant, SKPConversation, NSDate, NSTimer, SKPArraySubscriber, SKPPredicateObservationTrigger;

@interface SKPCall : SKPBaseCall <SKPTreeDescribing, SKPArraySubscriberDelegate> {

	BOOL _ringingForMe;
	BOOL _videoONDuringCall;
	BOOL _outgoingCallStartedWithVideo;
	BOOL _pstnDuringCall;
	BOOL _redirectedToVoiceMail;
	BOOL _suppressCallEndedDuration;
	BOOL _attachOutboundVideoToLiveConversation;
	SKPVideoStageController* _videoStageController;
	NSArray* _participantsPendingVideoStatus;
	NSString* _unescapedConversationDisplayName;
	SKPParticipant* _currentUser;
	SKPConversation* _conversation;
	NSDate* _liveStartDate;
	long long _localLiveStatus;
	NSString* _hostIdentity;
	NSTimer* _liveDurationTimer;
	long long _liveDurationTimePassed;
	NSTimer* _technicalCallInformationTimer;
	long long _technicalCallInformationTimePassed;
	long long _videoAcceptanceStatusInCurrentCall;
	SKPArraySubscriber* _otherConsumersSubscriber;
	SKPPredicateObservationTrigger* _videoCallHintFetcher;
	NSString* _latestConversationIdentityForLocalLiveStatus;
	NSDate* _outboundCallStartTimestamp;

}

@property (nonatomic,retain) SKPVideoStageController * videoStageController;                                       //@synthesize videoStageController=_videoStageController - In the implementation block
@property (nonatomic,copy) NSArray * participantsPendingVideoStatus;                                               //@synthesize participantsPendingVideoStatus=_participantsPendingVideoStatus - In the implementation block
@property (nonatomic,copy) NSString * unescapedConversationDisplayName;                                            //@synthesize unescapedConversationDisplayName=_unescapedConversationDisplayName - In the implementation block
@property (assign,getter=isRingingForMe,nonatomic) BOOL ringingForMe;                                              //@synthesize ringingForMe=_ringingForMe - In the implementation block
@property (nonatomic,readonly) BOOL canStartVideo; 
@property (nonatomic,retain) NSDate * liveStartDate;                                                               //@synthesize liveStartDate=_liveStartDate - In the implementation block
@property (nonatomic,readonly) NSString * localLiveStatusString; 
@property (assign,nonatomic) long long localLiveStatus;                                                            //@synthesize localLiveStatus=_localLiveStatus - In the implementation block
@property (assign,nonatomic) BOOL suppressCallEndedDuration;                                                       //@synthesize suppressCallEndedDuration=_suppressCallEndedDuration - In the implementation block
@property (nonatomic,copy) NSString * hostIdentity;                                                                //@synthesize hostIdentity=_hostIdentity - In the implementation block
@property (nonatomic,retain) NSTimer * liveDurationTimer;                                                          //@synthesize liveDurationTimer=_liveDurationTimer - In the implementation block
@property (assign,nonatomic) long long liveDurationTimePassed;                                                     //@synthesize liveDurationTimePassed=_liveDurationTimePassed - In the implementation block
@property (nonatomic,retain) NSTimer * technicalCallInformationTimer;                                              //@synthesize technicalCallInformationTimer=_technicalCallInformationTimer - In the implementation block
@property (assign,nonatomic) long long technicalCallInformationTimePassed;                                         //@synthesize technicalCallInformationTimePassed=_technicalCallInformationTimePassed - In the implementation block
@property (nonatomic,retain) SKPParticipant * currentUser;                                                         //@synthesize currentUser=_currentUser - In the implementation block
@property (nonatomic,readonly) BOOL shouldStartOutboundVideo; 
@property (nonatomic,readonly) BOOL shouldAttachOutboundVideo; 
@property (assign,nonatomic) BOOL attachOutboundVideoToLiveConversation;                                           //@synthesize attachOutboundVideoToLiveConversation=_attachOutboundVideoToLiveConversation - In the implementation block
@property (assign,nonatomic) long long videoAcceptanceStatusInCurrentCall;                                         //@synthesize videoAcceptanceStatusInCurrentCall=_videoAcceptanceStatusInCurrentCall - In the implementation block
@property (nonatomic,retain) SKPArraySubscriber * otherConsumersSubscriber;                                        //@synthesize otherConsumersSubscriber=_otherConsumersSubscriber - In the implementation block
@property (nonatomic,retain) SKPPredicateObservationTrigger * videoCallHintFetcher;                                //@synthesize videoCallHintFetcher=_videoCallHintFetcher - In the implementation block
@property (nonatomic,retain) NSString * latestConversationIdentityForLocalLiveStatus;                              //@synthesize latestConversationIdentityForLocalLiveStatus=_latestConversationIdentityForLocalLiveStatus - In the implementation block
@property (assign,getter=isVideoONDuringCall,nonatomic) BOOL videoONDuringCall;                                    //@synthesize videoONDuringCall=_videoONDuringCall - In the implementation block
@property (assign,getter=isPSTNDuringCall,nonatomic) BOOL pstnDuringCall;                                          //@synthesize pstnDuringCall=_pstnDuringCall - In the implementation block
@property (assign,getter=isRedirectedToVoiceMail,nonatomic) BOOL redirectedToVoiceMail;                            //@synthesize redirectedToVoiceMail=_redirectedToVoiceMail - In the implementation block
@property (nonatomic,retain) NSDate * outboundCallStartTimestamp;                                                  //@synthesize outboundCallStartTimestamp=_outboundCallStartTimestamp - In the implementation block
@property (assign,getter=isOutgoingCallStartedWithVideo,nonatomic) BOOL outgoingCallStartedWithVideo;              //@synthesize outgoingCallStartedWithVideo=_outgoingCallStartedWithVideo - In the implementation block
@property (nonatomic,retain) SKPConversation * conversation;                                                       //@synthesize conversation=_conversation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)lazyLoadedPropertiesKeypaths;
+(id)keyPathsForValuesAffectingTechnicalCallInformation;
+(id)keyPathsForValuesAffectingReceivingVideo;
+(id)keyPathsForValuesAffectingHostless;
+(id)keyPathsForValuesAffectingParticipantNames;
+(BOOL)automaticallyNotifiesObserversOfConversation;
+(id)keyPathsForValuesAffectingTestCall;
+(id)keyPathsForValuesAffectingLiveStatus;
+(id)keyPathsForValuesAffectingConferenceParticipationStatus;
+(id)keyPathsForValuesAffectingSimpleCallState;
+(id)keyPathsForValuesAffectingHeldLocally;
+(id)keyPathsForValuesAffectingHeldRemotely;
+(id)keyPathsForValuesAffectingConnecting;
+(id)keyPathsForValuesAffectingInCall;
+(id)keyPathsForValuesAffectingCurrentUserInProgress;
+(id)keyPathsForValuesAffectingShouldStartPreviewVideo;
+(id)keyPathsForValuesAffectingCanUpdateActiveVideoCamera;
+(id)keyPathsForValuesAffectingSendingVideo;
+(id)keyPathsForValuesAffectingVideo;
+(id)keyPathsForValuesAffectingShouldStartVideo;
+(id)keyPathsForValuesAffectingConversationIdentity;
+(id)keyPathsForValuesAffectingCapabilities;
+(id)keyPathsForValuesAffectingLiveDuration;
+(id)keyPathsForValuesAffectingCanAddConsumers;
+(id)keyPathsForValuesAffectingCurrentUserHosting;
+(id)conversationKeypaths;
+(id)currentUserParticipantKeypaths;
+(id)keyPathsForValuesAffectingInboundVideoAvailable;
+(id)keyPathsForValuesAffectingOtherConsumersAreLiveOrRinging;
+(id)keyPathsForValuesAffectingPSTNNumber;
+(id)keyPathsForValuesAffectingUnescapedDisplayName;
+(id)keyPathsForValuesAffectingHumanReadableShortLiveDisplayName;
+(id)keyPathsForValuesAffectingHumanReadableExtendedDisplayName;
+(id)keyPathsForValuesAffectingHumanReadableCallInfo;
+(id)keyPathsForValuesAffectingHumanReadableExtendedCallInfo;
+(id)keyPathsForValuesAffectingHumanReadableShortCallInfo;
+(id)keyPathsForValuesAffectingCanStartVideo;
+(id)keyPathsForValuesAffectingShouldStartOutboundVideo;
+(id)keyPathsForValuesAffectingShouldAttachOutboundVideo;
+(id)keyPathsForValuesAffectingVideoCallHint;
+(id)keyPathsForValuesAffectingDisplayName;
-(id)conversationIdentity;
-(id)unescapedDisplayName;
-(id)treeNodeChildObjectValueForKey:(id)arg1 ;
-(id)fetchOperationForLazyProperty:(id)arg1 fetchQueueIdentifier:(id*)arg2 ;
-(id)PSTNNumber;
-(BOOL)flushLazyProperty:(id)arg1 ;
-(void)arraySubscriber:(id)arg1 updatedKeyPath:(id)arg2 ofObject:(id)arg3 withChange:(id)arg4 ;
-(void)setUserWantsToStartVideo:(BOOL)arg1 ;
-(BOOL)shouldStartPreviewVideo;
-(void)setPreviewVideoState:(long long)arg1 ;
-(void)startVideo:(BOOL)arg1 ;
-(double)callEndedDuration;
-(BOOL)isRingingForMe;
-(BOOL)isCurrentUserInProgress;
-(void)startTechnicalCallInformationTimer;
-(void)stopTechnicalCallInformationTimer;
-(BOOL)isReceivingVideo;
-(void)answerWithVideo:(BOOL)arg1 answeringMethod:(long long)arg2 setupTimeout:(double)arg3 ;
-(void)endWithReason:(long long)arg1 ;
-(BOOL)isVideoCallHint;
-(BOOL)isCallForConversationWithIdentity:(id)arg1 guid:(id)arg2 ;
-(BOOL)startCallWithIdentities:(id)arg1 withVideo:(BOOL)arg2 ;
-(void)answerWithVideo:(BOOL)arg1 answeringMethod:(long long)arg2 ;
-(BOOL)joinLiveSession;
-(void)holdLiveSessionWithError:(id)arg1 ;
-(void)holdLiveSessionFinalWithError:(id)arg1 ;
-(BOOL)resumeLiveSession;
-(void)rejectWithError:(id)arg1 andReason:(long long)arg2 ;
-(BOOL)shouldShowCallQualityFeedback;
-(BOOL)shouldShowRetryCall;
-(void)fetchVideoCallHintWithCompletionBlock:(/*^block*/id)arg1 ;
-(BOOL)otherConsumersAreLiveOrRinging;
-(BOOL)isTestCall;
-(BOOL)isHeldLocally;
-(BOOL)isHeldRemotely;
-(long long)simpleCallState;
-(id)canAddConsumers;
-(BOOL)addConsumers:(id)arg1 error:(id*)arg2 ;
-(BOOL)inboundVideoAvailable;
-(void)setRingingForMe:(BOOL)arg1 ;
-(double)liveDuration;
-(id)callEndedDurationString;
-(id)liveStatus;
-(id)conferenceParticipationStatus;
-(id)technicalCallInformation;
-(BOOL)isCurrentUserHosting;
-(BOOL)isHostless;
-(BOOL)canUpdateActiveVideoCamera;
-(BOOL)shouldStartVideo;
-(id)participantNames;
-(void)muteCall:(BOOL)arg1 ;
-(void)muteCallFinal:(BOOL)arg1 ;
-(void)selectVideoCamera:(long long)arg1 ;
-(void)acceptInboundVideo:(BOOL)arg1 forParticipant:(id)arg2 ;
-(void)acceptInboundVideos:(BOOL)arg1 ;
-(void)playAndSendTone:(long long)arg1 ;
-(void)playAndSendToneFinal:(long long)arg1 ;
-(void)stopPlayAndSendTone:(long long)arg1 ;
-(id)humanReadableExtendedDisplayName;
-(id)humanReadableCallInfo;
-(id)humanReadableExtendedCallInfo;
-(id)humanReadableShortCallInfo;
-(id)humanReadableShortLiveDisplayName;
-(void)setCurrentUserLastLeaveReason:(long long)arg1 ;
-(void)setOutboundVideoErrorCode:(long long)arg1 ;
-(NSArray *)participantsPendingVideoStatus;
-(SKPVideoStageController *)videoStageController;
-(void)setOutboundVideo:(id)arg1 ;
-(void)setParticipantLastLeaveReason:(long long)arg1 ;
-(void)setVideoStageController:(SKPVideoStageController *)arg1 ;
-(void)setParticipantsPendingVideoStatus:(NSArray *)arg1 ;
-(BOOL)isVideoONDuringCall;
-(BOOL)isPSTNDuringCall;
-(NSTimer *)liveDurationTimer;
-(long long)localLiveStatus;
-(NSString *)hostIdentity;
-(void)setLocalLiveStatus:(long long)arg1 ;
-(void)setHostIdentity:(NSString *)arg1 ;
-(void)setLiveDurationTimer:(NSTimer *)arg1 ;
-(id)initWithVideo:(BOOL)arg1 pstn:(BOOL)arg2 userTargetState:(long long)arg3 initiationSource:(long long)arg4 useCallKit:(BOOL)arg5 ;
-(void)setPstnDuringCall:(BOOL)arg1 ;
-(void)setRedirectedToVoiceMail:(BOOL)arg1 ;
-(void)setSuppressCallEndedDuration:(BOOL)arg1 ;
-(SKPPredicateObservationTrigger *)videoCallHintFetcher;
-(void)setVideoCallHintFetcher:(SKPPredicateObservationTrigger *)arg1 ;
-(void)setUnescapedConversationDisplayName:(NSString *)arg1 ;
-(BOOL)shouldAttachOutboundVideo;
-(void)updateOutboundVideoState;
-(void)setLiveStartDate:(NSDate *)arg1 ;
-(void)setVideoONDuringCall:(BOOL)arg1 ;
-(void)setAttachOutboundVideoToLiveConversation:(BOOL)arg1 ;
-(void)stopLiveDurationTimer;
-(SKPArraySubscriber *)otherConsumersSubscriber;
-(void)setOtherConsumersSubscriber:(SKPArraySubscriber *)arg1 ;
-(long long)videoAcceptanceStatusInCurrentCall;
-(NSDate *)liveStartDate;
-(NSString *)unescapedConversationDisplayName;
-(id)fetchOutboundVideoOperation;
-(NSString *)latestConversationIdentityForLocalLiveStatus;
-(void)setLatestConversationIdentityForLocalLiveStatus:(NSString *)arg1 ;
-(void)startLiveDurationTimer;
-(BOOL)suppressCallEndedDuration;
-(long long)liveDurationTimePassed;
-(void)setLiveDurationTimePassed:(long long)arg1 ;
-(void)liveDurationTimerFired;
-(NSString *)localLiveStatusString;
-(id)localLiveStatusStringForConference;
-(long long)technicalCallInformationTimePassed;
-(void)setTechnicalCallInformationTimePassed:(long long)arg1 ;
-(NSTimer *)technicalCallInformationTimer;
-(void)technicalCallInformationTimerFired;
-(void)setTechnicalCallInformationTimer:(NSTimer *)arg1 ;
-(BOOL)canStartVideo;
-(BOOL)shouldStartOutboundVideo;
-(BOOL)attachOutboundVideoToLiveConversation;
-(void)setOutboundCallStartTimestamp:(NSDate *)arg1 ;
-(void)setOutgoingCallStartedWithVideo:(BOOL)arg1 ;
-(void)setVideoAcceptanceStatusInCurrentCall:(long long)arg1 ;
-(BOOL)isRedirectedToVoiceMail;
-(NSDate *)outboundCallStartTimestamp;
-(BOOL)isOutgoingCallStartedWithVideo;
-(void)setCallState:(long long)arg1 ;
-(BOOL)isInCall;
-(id)init;
-(void)invalidate;
-(void)reset;
-(void)resume;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)commonInit;
-(id)displayName;
-(BOOL)isVideo;
-(void)setCurrentUser:(SKPParticipant *)arg1 ;
-(void)updateWithCall:(id)arg1 ;
-(BOOL)isSendingVideo;
-(SKPParticipant *)currentUser;
-(unsigned long long)modelType;
-(BOOL)isConnecting;
-(SKPConversation *)conversation;
-(void)setConversation:(SKPConversation *)arg1 ;
-(unsigned long long)capabilities;
@end

