/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:39 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Skype/Skype-Structs.h>
#import <Skype/SKPALEMappedObject.h>
#import <Skype/SKPOpenGLVideoSourceInterfaceDelegate.h>
#import <Skype/SKPOpenGLVideo.h>

@class NSString, SKPOpenGLVideoSourceInterface, NSMutableDictionary, SKPFPSCalculator;

@interface SKPInboundVideo : SKPALEMappedObject <SKPOpenGLVideoSourceInterfaceDelegate, SKPOpenGLVideo> {

	BOOL _running;
	NSString* _debugName;
	unsigned long long _framesPerSecond;
	long long _status;
	long long _mediaType;
	long long _bindingState;
	id _circularReferenceToSelf;
	SKPOpenGLVideoSourceInterface* _openGLVideo;
	long long _errorCode;
	NSMutableDictionary* _videoTargetsByIdentifier;
	SKPFPSCalculator* _fpsCalculator;

}

@property (assign,nonatomic) long long bindingState;                                                   //@synthesize bindingState=_bindingState - In the implementation block
@property (nonatomic,retain) id circularReferenceToSelf;                                               //@synthesize circularReferenceToSelf=_circularReferenceToSelf - In the implementation block
@property (nonatomic,readonly) SKPOpenGLVideoSourceInterface * openGLVideo;                            //@synthesize openGLVideo=_openGLVideo - In the implementation block
@property (assign,nonatomic) long long errorCode;                                                      //@synthesize errorCode=_errorCode - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * videoTargetsByIdentifier;                         //@synthesize videoTargetsByIdentifier=_videoTargetsByIdentifier - In the implementation block
@property (assign,nonatomic) BOOL running;                                                             //@synthesize running=_running - In the implementation block
@property (nonatomic,readonly) SKPFPSCalculator * fpsCalculator;                                       //@synthesize fpsCalculator=_fpsCalculator - In the implementation block
@property (assign,nonatomic) unsigned long long framesPerSecond;                                       //@synthesize framesPerSecond=_framesPerSecond - In the implementation block
@property (nonatomic,copy) NSString * debugName;                                                       //@synthesize debugName=_debugName - In the implementation block
@property (getter=isVideoCallHint,nonatomic,readonly) BOOL videoCallHint; 
@property (nonatomic,readonly) long long videoState; 
@property (nonatomic,readonly) long long status;                                                       //@synthesize status=_status - In the implementation block
@property (nonatomic,readonly) long long mediaType;                                                    //@synthesize mediaType=_mediaType - In the implementation block
@property (nonatomic,readonly) BOOL available; 
@property (nonatomic,readonly) BOOL hasVideoFrames; 
@property (getter=isAvailableForRendering,nonatomic,readonly) BOOL availableForRendering; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)keyPathsForValuesAffectingHasVideoFrames;
+(id)transformValue:(id)arg1 forKeyPath:(id)arg2 wasTransformed:(BOOL*)arg3 ;
+(Class)associatedALEClass;
+(id)keyPathsForValuesAffectingAvailable;
+(id)keyPathsForValuesAffectingVideoState;
+(id)keyPathsForValuesAffectingVideoCallHint;
+(id)keyPathsForValuesAffectingAvailableForRendering;
+(id)keyPathsForValuesAffectingAvailableToStartStream;
+(id)propertyMapping;
-(void)initializeALEObjectWithObjectId:(unsigned long long)arg1 ;
-(void)setVideoTarget:(id)arg1 forIdentifier:(id)arg2 ;
-(void)unsetVideoTarget:(id)arg1 forIdentifier:(id)arg2 ;
-(id)renderBufferForTarget:(id)arg1 ;
-(long long)videoState;
-(BOOL)isVideoCallHint;
-(BOOL)hasVideoFrames;
-(void)initializeObject;
-(void)skylibWillTerminateNotification:(id)arg1 ;
-(void)setCircularReferenceToSelf:(id)arg1 ;
-(id)circularReferenceToSelf;
-(BOOL)isAvailableForRendering;
-(void)openGLVideo:(id)arg1 createBindingWithType:(unsigned)arg2 event:(void*)arg3 ;
-(void)openGLVideo:(id)arg1 releaseBinding:(void*)arg2 ;
-(void)openGLVideoDidActivate:(id)arg1 ;
-(void)openGLVideoDidDectivate:(id)arg1 ;
-(void)openGLVideoDidFail:(id)arg1 ;
-(void)openGLVideo:(id)arg1 didReceiveFrameAtTimestamp:(double)arg2 ;
-(void)feedbackForTarget:(id)arg1 sourceSize:(CGSize)arg2 regionOfInterest:(CGRect)arg3 renderedSize:(CGSize)arg4 screenSize:(CGSize)arg5 maxFps:(unsigned long long)arg6 ;
-(long long)bindingState;
-(SKPOpenGLVideoSourceInterface *)openGLVideo;
-(NSMutableDictionary *)videoTargetsByIdentifier;
-(void)setBindingState:(long long)arg1 ;
-(SKPFPSCalculator *)fpsCalculator;
-(unsigned long long)totalTargetCount;
-(BOOL)needsRotationCompensation;
-(BOOL)isAvailableToStartStream;
-(void)dealloc;
-(void)invalidate;
-(void)stop;
-(void)start;
-(long long)status;
-(void)setStatus:(long long)arg1 ;
-(void)updateState;
-(void)setErrorCode:(long long)arg1 ;
-(long long)errorCode;
-(void)setFramesPerSecond:(unsigned long long)arg1 ;
-(unsigned long long)framesPerSecond;
-(BOOL)available;
-(long long)mediaType;
-(unsigned long long)renderingAPI;
-(BOOL)running;
-(void)setRunning:(BOOL)arg1 ;
-(id)sharegroup;
-(void)setDebugName:(NSString *)arg1 ;
-(NSString *)debugName;
@end

