/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 24, 2016 at 12:36:38 AM Greenwich Mean Time
* Operating System: Version 10.1.1 (Build 14B150)
* Image Source: /var/containers/Bundle/Application/91AA76A0-F2FF-4AAA-BCD2-7E5978B32B63/Skype.app/Skype
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSMutableArray, SKPMessageAnnouncement, SKPActivityToken;

@interface SKPMessageAnnouncer : NSObject {

	unsigned long long _state;
	NSMutableArray* _queue;
	SKPMessageAnnouncement* _currentlyReadingAnnouncement;
	SKPActivityToken* _activity;

}

@property (assign,nonatomic) unsigned long long state;                                           //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) NSMutableArray * queue;                                             //@synthesize queue=_queue - In the implementation block
@property (nonatomic,retain) SKPMessageAnnouncement * currentlyReadingAnnouncement;              //@synthesize currentlyReadingAnnouncement=_currentlyReadingAnnouncement - In the implementation block
@property (nonatomic,retain) SKPActivityToken * activity;                                        //@synthesize activity=_activity - In the implementation block
-(void)announcementDidFinish:(id)arg1 ;
-(void)voiceOverFocusChanged:(id)arg1 ;
-(void)enqueueMessage:(id)arg1 start:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)processAnnouncementsInQueue;
-(void)setCurrentlyReadingAnnouncement:(SKPMessageAnnouncement *)arg1 ;
-(void)pauseQueueAndResumeAfterDelay:(double)arg1 ;
-(id)popFirstItemInQueue;
-(void)makeAnnouncement:(id)arg1 ;
-(SKPMessageAnnouncement *)currentlyReadingAnnouncement;
-(id)init;
-(void)dealloc;
-(unsigned long long)state;
-(void)setState:(unsigned long long)arg1 ;
-(void)invalidate;
-(SKPActivityToken *)activity;
-(NSMutableArray *)queue;
-(void)setQueue:(NSMutableArray *)arg1 ;
-(void)setActivity:(SKPActivityToken *)arg1 ;
-(void)startObserving;
-(void)resumeQueue;
-(void)enqueueMessage:(id)arg1 ;
-(void)stopObserving;
@end

